{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudwatch": "1.153.1",
    "@aws-cdk/aws-iam": "1.153.1",
    "@aws-cdk/aws-kms": "1.153.1",
    "@aws-cdk/aws-logs": "1.153.1",
    "@aws-cdk/aws-s3": "1.153.1",
    "@aws-cdk/aws-s3-assets": "1.153.1",
    "@aws-cdk/aws-ssm": "1.153.1",
    "@aws-cdk/cloud-assembly-schema": "1.153.1",
    "@aws-cdk/core": "1.153.1",
    "@aws-cdk/cx-api": "1.153.1",
    "@aws-cdk/region-info": "1.153.1",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::EC2",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.57.0 (build f614666)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "ec2"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-ec2",
  "readme": {
    "markdown": "# Amazon EC2 Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n\nThe `@aws-cdk/aws-ec2` package contains primitives for setting up networking and\ninstances.\n\n```ts nofixture\nimport * as ec2 from '@aws-cdk/aws-ec2';\n```\n\n## VPC\n\nMost projects need a Virtual Private Cloud to provide security by means of\nnetwork partitioning. This is achieved by creating an instance of\n`Vpc`:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'VPC');\n```\n\nAll default constructs require EC2 instances to be launched inside a VPC, so\nyou should generally start by defining a VPC whenever you need to launch\ninstances for your project.\n\n### Subnet Types\n\nA VPC consists of one or more subnets that instances can be placed into. CDK\ndistinguishes three different subnet types:\n\n* **Public (`SubnetType.PUBLIC`)** - public subnets connect directly to the Internet using an\n  Internet Gateway. If you want your instances to have a public IP address\n  and be directly reachable from the Internet, you must place them in a\n  public subnet.\n* **Private with Internet Access (`SubnetType.PRIVATE_WITH_NAT`)** - instances in private subnets are not directly routable from the\n  Internet, and connect out to the Internet via a NAT gateway. By default, a\n  NAT gateway is created in every public subnet for maximum availability. Be\n  aware that you will be charged for NAT gateways.\n* **Isolated (`SubnetType.PRIVATE_ISOLATED`)** - isolated subnets do not route from or to the Internet, and\n  as such do not require NAT gateways. They can only connect to or be\n  connected to from other instances in the same VPC. A default VPC configuration\n  will not include isolated subnets,\n\nA default VPC configuration will create public and **private** subnets. However, if\n`natGateways:0` **and** `subnetConfiguration` is undefined, default VPC configuration\nwill create public and **isolated** subnets. See [*Advanced Subnet Configuration*](#advanced-subnet-configuration)\nbelow for information on how to change the default subnet configuration.\n\nConstructs using the VPC will \"launch instances\" (or more accurately, create\nElastic Network Interfaces) into one or more of the subnets. They all accept\na property called `subnetSelection` (sometimes called `vpcSubnets`) to allow\nyou to select in what subnet to place the ENIs, usually defaulting to\n*private* subnets if the property is omitted.\n\nIf you would like to save on the cost of NAT gateways, you can use\n*isolated* subnets instead of *private* subnets (as described in Advanced\n*Subnet Configuration*). If you need private instances to have\ninternet connectivity, another option is to reduce the number of NAT gateways\ncreated by setting the `natGateways` property to a lower value (the default\nis one NAT gateway per availability zone). Be aware that this may have\navailability implications for your application.\n\n[Read more about\nsubnets](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html).\n\n### Control over availability zones\n\nBy default, a VPC will spread over at most 3 Availability Zones available to\nit. To change the number of Availability Zones that the VPC will spread over,\nspecify the `maxAzs` property when defining it.\n\nThe number of Availability Zones that are available depends on the *region*\nand *account* of the Stack containing the VPC. If the [region and account are\nspecified](https://docs.aws.amazon.com/cdk/latest/guide/environments.html) on\nthe Stack, the CLI will [look up the existing Availability\nZones](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#using-regions-availability-zones-describe)\nand get an accurate count. If region and account are not specified, the stack\ncould be deployed anywhere and it will have to make a safe choice, limiting\nitself to 2 Availability Zones.\n\nTherefore, to get the VPC to spread over 3 or more availability zones, you\nmust specify the environment where the stack will be deployed.\n\nYou can gain full control over the availability zones selection strategy by overriding the Stack's [`get availabilityZones()`](https://github.com/aws/aws-cdk/blob/master/packages/@aws-cdk/core/lib/stack.ts) method:\n\n```text\n// This example is only available in TypeScript\n\nclass MyStack extends Stack {\n\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    // ...\n  }\n\n  get availabilityZones(): string[] {\n    return ['us-west-2a', 'us-west-2b'];\n  }\n\n}\n```\n\nNote that overriding the `get availabilityZones()` method will override the default behavior for all constructs defined within the Stack.\n\n### Choosing subnets for resources\n\nWhen creating resources that create Elastic Network Interfaces (such as\ndatabases or instances), there is an option to choose which subnets to place\nthem in. For example, a VPC endpoint by default is placed into a subnet in\nevery availability zone, but you can override which subnets to use. The property\nis typically called one of `subnets`, `vpcSubnets` or `subnetSelection`.\n\nThe example below will place the endpoint into two AZs (`us-east-1a` and `us-east-1c`),\nin Isolated subnets:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  subnets: {\n    subnetType: ec2.SubnetType.ISOLATED,\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});\n```\n\nYou can also specify specific subnet objects for granular control:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const subnet1: ec2.Subnet;\ndeclare const subnet2: ec2.Subnet;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  subnets: {\n    subnets: [subnet1, subnet2]\n  }\n});\n```\n\nWhich subnets are selected is evaluated as follows:\n\n* `subnets`: if specific subnet objects are supplied, these are selected, and no other\n  logic is used.\n* `subnetType`/`subnetGroupName`: otherwise, a set of subnets is selected by\n  supplying either type or name:\n  * `subnetType` will select all subnets of the given type.\n  * `subnetGroupName` should be used to distinguish between multiple groups of subnets of\n    the same type (for example, you may want to separate your application instances and your\n    RDS instances into two distinct groups of Isolated subnets).\n  * If neither are given, the first available subnet group of a given type that\n    exists in the VPC will be used, in this order: Private, then Isolated, then Public.\n    In short: by default ENIs will preferentially be placed in subnets not connected to\n    the Internet.\n* `availabilityZones`/`onePerAz`: finally, some availability-zone based filtering may be done.\n  This filtering by availability zones will only be possible if the VPC has been created or\n  looked up in a non-environment agnostic stack (so account and region have been set and\n  availability zones have been looked up).\n  * `availabilityZones`: only the specific subnets from the selected subnet groups that are\n    in the given availability zones will be returned.\n  * `onePerAz`: per availability zone, a maximum of one subnet will be returned (Useful for resource\n    types that do not allow creating two ENIs in the same availability zone).\n* `subnetFilters`: additional filtering on subnets using any number of user-provided filters which\n  extend `SubnetFilter`.  The following methods on the `SubnetFilter` class can be used to create\n  a filter:\n  * `byIds`: chooses subnets from a list of ids\n  * `availabilityZones`: chooses subnets in the provided list of availability zones\n  * `onePerAz`: chooses at most one subnet per availability zone\n  * `containsIpAddresses`: chooses a subnet which contains *any* of the listed ip addresses\n  * `byCidrMask`: chooses subnets that have the provided CIDR netmask\n\n### Using NAT instances\n\nBy default, the `Vpc` construct will create NAT *gateways* for you, which\nare managed by AWS. If you would prefer to use your own managed NAT\n*instances* instead, specify a different value for the `natGatewayProvider`\nproperty, as follows:\n\n```ts lit=test/integ.nat-instances.lit.ts\n    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });\n```\n\nThe construct will automatically search for the most recent NAT gateway AMI.\nIf you prefer to use a custom AMI, use `machineImage:\nMachineImage.genericLinux({ ... })` and configure the right AMI ID for the\nregions you want to deploy to.\n\nBy default, the NAT instances will route all traffic. To control what traffic\ngets routed, pass a custom value for `defaultAllowedTraffic` and access the\n`NatInstanceProvider.connections` member after having passed the NAT provider to\nthe VPC:\n\n```ts\ndeclare const instanceType: ec2.InstanceType;\n\nconst provider = ec2.NatProvider.instance({\n  instanceType,\n  defaultAllowedTraffic: ec2.NatTrafficDirection.OUTBOUND_ONLY,\n});\nnew ec2.Vpc(this, 'TheVPC', {\n  natGatewayProvider: provider,\n});\nprovider.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/8'), ec2.Port.tcp(80));\n```\n\n### Advanced Subnet Configuration\n\nIf the default VPC configuration (public and private subnets spanning the\nsize of the VPC) don't suffice for you, you can configure what subnets to\ncreate by specifying the `subnetConfiguration` property. It allows you\nto configure the number and size of all subnets. Specifying an advanced\nsubnet configuration could look like this:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n  // 'cidr' configures the IP range and size of the entire VPC.\n  // The IP space will be divided over the configured subnets.\n  cidr: '10.0.0.0/21',\n\n  // 'maxAzs' configures the maximum number of availability zones to use\n  maxAzs: 3,\n\n  // 'subnetConfiguration' specifies the \"subnet groups\" to create.\n  // Every subnet group will have a subnet for each AZ, so this\n  // configuration will create `3 groups × 3 AZs = 9` subnets.\n  subnetConfiguration: [\n    {\n      // 'subnetType' controls Internet access, as described above.\n      subnetType: ec2.SubnetType.PUBLIC,\n\n      // 'name' is used to name this particular subnet group. You will have to\n      // use the name for subnet selection if you have more than one subnet\n      // group of the same type.\n      name: 'Ingress',\n\n      // 'cidrMask' specifies the IP addresses in the range of of individual\n      // subnets in the group. Each of the subnets in this group will contain\n      // `2^(32 address bits - 24 subnet bits) - 2 reserved addresses = 254`\n      // usable IP addresses.\n      //\n      // If 'cidrMask' is left out the available address space is evenly\n      // divided across the remaining subnet groups.\n      cidrMask: 24,\n    },\n    {\n      cidrMask: 24,\n      name: 'Application',\n      subnetType: ec2.SubnetType.PRIVATE_WITH_NAT,\n    },\n    {\n      cidrMask: 28,\n      name: 'Database',\n      subnetType: ec2.SubnetType.PRIVATE_ISOLATED,\n\n      // 'reserved' can be used to reserve IP address space. No resources will\n      // be created for this subnet, but the IP range will be kept available for\n      // future creation of this subnet, or even for future subdivision.\n      reserved: true\n    }\n  ],\n});\n```\n\nThe example above is one possible configuration, but the user can use the\nconstructs above to implement many other network configurations.\n\nThe `Vpc` from the above configuration in a Region with three\navailability zones will be the following:\n\nSubnet Name       |Type      |IP Block      |AZ|Features\n------------------|----------|--------------|--|--------\nIngressSubnet1    |`PUBLIC`  |`10.0.0.0/24` |#1|NAT Gateway\nIngressSubnet2    |`PUBLIC`  |`10.0.1.0/24` |#2|NAT Gateway\nIngressSubnet3    |`PUBLIC`  |`10.0.2.0/24` |#3|NAT Gateway\nApplicationSubnet1|`PRIVATE` |`10.0.3.0/24` |#1|Route to NAT in IngressSubnet1\nApplicationSubnet2|`PRIVATE` |`10.0.4.0/24` |#2|Route to NAT in IngressSubnet2\nApplicationSubnet3|`PRIVATE` |`10.0.5.0/24` |#3|Route to NAT in IngressSubnet3\nDatabaseSubnet1   |`ISOLATED`|`10.0.6.0/28` |#1|Only routes within the VPC\nDatabaseSubnet2   |`ISOLATED`|`10.0.6.16/28`|#2|Only routes within the VPC\nDatabaseSubnet3   |`ISOLATED`|`10.0.6.32/28`|#3|Only routes within the VPC\n\n### Accessing the Internet Gateway\n\nIf you need access to the internet gateway, you can get its ID like so:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst igwId = vpc.internetGatewayId;\n```\n\nFor a VPC with only `ISOLATED` subnets, this value will be undefined.\n\nThis is only supported for VPCs created in the stack - currently you're\nunable to get the ID for imported VPCs. To do that you'd have to specifically\nlook up the Internet Gateway by name, which would require knowing the name\nbeforehand.\n\nThis can be useful for configuring routing using a combination of gateways:\nfor more information see [Routing](#routing) below.\n\n#### Routing\n\nIt's possible to add routes to any subnets using the `addRoute()` method. If for\nexample you want an isolated subnet to have a static route via the default\nInternet Gateway created for the public subnet - perhaps for routing a VPN\nconnection - you can do so like this:\n\n```ts\nconst vpc = new ec2.Vpc(this, \"VPC\", {\n  subnetConfiguration: [{\n      subnetType: ec2.SubnetType.PUBLIC,\n      name: 'Public',\n    },{\n      subnetType: ec2.SubnetType.ISOLATED,\n      name: 'Isolated',\n    }]\n});\n\n(vpc.isolatedSubnets[0] as ec2.Subnet).addRoute(\"StaticRoute\", {\n    routerId: vpc.internetGatewayId!,\n    routerType: ec2.RouterType.GATEWAY,\n    destinationCidrBlock: \"8.8.8.8/32\",\n})\n```\n\n*Note that we cast to `Subnet` here because the list of subnets only returns an\n`ISubnet`.*\n\n### Reserving subnet IP space\n\nThere are situations where the IP space for a subnet or number of subnets\nwill need to be reserved. This is useful in situations where subnets would\nneed to be added after the vpc is originally deployed, without causing IP\nrenumbering for existing subnets. The IP space for a subnet may be reserved\nby setting the `reserved` subnetConfiguration property to true, as shown\nbelow:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n  natGateways: 1,\n  subnetConfiguration: [\n    {\n      cidrMask: 26,\n      name: 'Public',\n      subnetType: ec2.SubnetType.PUBLIC,\n    },\n    {\n      cidrMask: 26,\n      name: 'Application1',\n      subnetType: ec2.SubnetType.PRIVATE_WITH_NAT,\n    },\n    {\n      cidrMask: 26,\n      name: 'Application2',\n      subnetType: ec2.SubnetType.PRIVATE_WITH_NAT,\n      reserved: true,   // <---- This subnet group is reserved\n    },\n    {\n      cidrMask: 27,\n      name: 'Database',\n      subnetType: ec2.SubnetType.ISOLATED,\n    }\n  ],\n});\n```\n\nIn the example above, the subnet for Application2 is not actually provisioned\nbut its IP space is still reserved. If in the future this subnet needs to be\nprovisioned, then the `reserved: true` property should be removed. Reserving\nparts of the IP space prevents the other subnets from getting renumbered.\n\n### Sharing VPCs between stacks\n\nIf you are creating multiple `Stack`s inside the same CDK application, you\ncan reuse a VPC defined in one Stack in another by simply passing the VPC\ninstance around:\n\n```ts lit=test/integ.share-vpcs.lit.ts\n/**\n * Stack1 creates the VPC\n */\nclass Stack1 extends cdk.Stack {\n  public readonly vpc: ec2.Vpc;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    this.vpc = new ec2.Vpc(this, 'VPC');\n  }\n}\n\ninterface Stack2Props extends cdk.StackProps {\n  vpc: ec2.IVpc;\n}\n\n/**\n * Stack2 consumes the VPC\n */\nclass Stack2 extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: Stack2Props) {\n    super(scope, id, props);\n\n    // Pass the VPC to a construct that needs it\n    new ConstructThatTakesAVpc(this, 'Construct', {\n      vpc: props.vpc,\n    });\n  }\n}\n\nconst stack1 = new Stack1(app, 'Stack1');\nconst stack2 = new Stack2(app, 'Stack2', {\n  vpc: stack1.vpc,\n});\n```\n\n### Importing an existing VPC\n\nIf your VPC is created outside your CDK app, you can use `Vpc.fromLookup()`.\nThe CDK CLI will search for the specified VPC in the the stack's region and\naccount, and import the subnet configuration. Looking up can be done by VPC\nID, but more flexibly by searching for a specific tag on the VPC.\n\nSubnet types will be determined from the `aws-cdk:subnet-type` tag on the\nsubnet if it exists, or the presence of a route to an Internet Gateway\notherwise. Subnet names will be determined from the `aws-cdk:subnet-name` tag\non the subnet if it exists, or will mirror the subnet type otherwise (i.e.\na public subnet will have the name `\"Public\"`).\n\nThe result of the `Vpc.fromLookup()` operation will be written to a file\ncalled `cdk.context.json`. You must commit this file to source control so\nthat the lookup values are available in non-privileged environments such\nas CI build steps, and to ensure your template builds are repeatable.\n\nHere's how `Vpc.fromLookup()` can be used:\n\n```ts lit=test/integ.import-default-vpc.lit.ts\nconst vpc = ec2.Vpc.fromLookup(stack, 'VPC', {\n  // This imports the default VPC but you can also\n  // specify a 'vpcName' or 'tags'.\n  isDefault: true,\n});\n```\n\n`Vpc.fromLookup` is the recommended way to import VPCs. If for whatever\nreason you do not want to use the context mechanism to look up a VPC at\nsynthesis time, you can also use `Vpc.fromVpcAttributes`. This has the\nfollowing limitations:\n\n* Every subnet group in the VPC must have a subnet in each availability zone\n  (for example, each AZ must have both a public and private subnet). Asymmetric\n  VPCs are not supported.\n* All VpcId, SubnetId, RouteTableId, ... parameters must either be known at\n  synthesis time, or they must come from deploy-time list parameters whose\n  deploy-time lengths are known at synthesis time.\n\nUsing `Vpc.fromVpcAttributes()` looks like this:\n\n```ts\nconst vpc = ec2.Vpc.fromVpcAttributes(this, 'VPC', {\n  vpcId: 'vpc-1234',\n  availabilityZones: ['us-east-1a', 'us-east-1b'],\n\n  // Either pass literals for all IDs\n  publicSubnetIds: ['s-12345', 's-67890'],\n\n  // OR: import a list of known length\n  privateSubnetIds: Fn.importListValue('PrivateSubnetIds', 2),\n\n  // OR: split an imported string to a list of known length\n  isolatedSubnetIds: Fn.split(',', ssm.StringParameter.valueForStringParameter(this, `MyParameter`), 2),\n});\n```\n\n## Allowing Connections\n\nIn AWS, all network traffic in and out of **Elastic Network Interfaces** (ENIs)\nis controlled by **Security Groups**. You can think of Security Groups as a\nfirewall with a set of rules. By default, Security Groups allow no incoming\n(ingress) traffic and all outgoing (egress) traffic. You can add ingress rules\nto them to allow incoming traffic streams. To exert fine-grained control over\negress traffic, set `allowAllOutbound: false` on the `SecurityGroup`, after\nwhich you can add egress traffic rules.\n\nYou can manipulate Security Groups directly:\n\n```ts fixture=with-vpc\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', {\n  vpc,\n  description: 'Allow ssh access to ec2 instances',\n  allowAllOutbound: true   // Can be set to false\n});\nmySecurityGroup.addIngressRule(ec2.Peer.anyIpv4(), ec2.Port.tcp(22), 'allow ssh access from the world');\n```\n\nAll constructs that create ENIs on your behalf (typically constructs that create\nEC2 instances or other VPC-connected resources) will all have security groups\nautomatically assigned. Those constructs have an attribute called\n**connections**, which is an object that makes it convenient to update the\nsecurity groups. If you want to allow connections between two constructs that\nhave security groups, you have to add an **Egress** rule to one Security Group,\nand an **Ingress** rule to the other. The connections object will automatically\ntake care of this for you:\n\n```ts\ndeclare const loadBalancer: elbv2.ApplicationLoadBalancer;\ndeclare const appFleet: autoscaling.AutoScalingGroup;\ndeclare const dbFleet: autoscaling.AutoScalingGroup;\n\n// Allow connections from anywhere\nloadBalancer.connections.allowFromAnyIpv4(ec2.Port.tcp(443), 'Allow inbound HTTPS');\n\n// The same, but an explicit IP address\nloadBalancer.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/32'), ec2.Port.tcp(443), 'Allow inbound HTTPS');\n\n// Allow connection between AutoScalingGroups\nappFleet.connections.allowTo(dbFleet, ec2.Port.tcp(443), 'App can call database');\n```\n\n### Connection Peers\n\nThere are various classes that implement the connection peer part:\n\n```ts\ndeclare const appFleet: autoscaling.AutoScalingGroup;\ndeclare const dbFleet: autoscaling.AutoScalingGroup;\n\n// Simple connection peers\nlet peer = ec2.Peer.ipv4('10.0.0.0/16');\npeer = ec2.Peer.anyIpv4();\npeer = ec2.Peer.ipv6('::0/0');\npeer = ec2.Peer.anyIpv6();\npeer = ec2.Peer.prefixList('pl-12345');\nappFleet.connections.allowTo(peer, ec2.Port.tcp(443), 'Allow outbound HTTPS');\n```\n\nAny object that has a security group can itself be used as a connection peer:\n\n```ts\ndeclare const fleet1: autoscaling.AutoScalingGroup;\ndeclare const fleet2: autoscaling.AutoScalingGroup;\ndeclare const appFleet: autoscaling.AutoScalingGroup;\n\n// These automatically create appropriate ingress and egress rules in both security groups\nfleet1.connections.allowTo(fleet2, ec2.Port.tcp(80), 'Allow between fleets');\n\nappFleet.connections.allowFromAnyIpv4(ec2.Port.tcp(80), 'Allow from load balancer');\n```\n\n### Port Ranges\n\nThe connections that are allowed are specified by port ranges. A number of classes provide\nthe connection specifier:\n\n```ts\nec2.Port.tcp(80)\nec2.Port.tcpRange(60000, 65535)\nec2.Port.allTcp()\nec2.Port.allTraffic()\n```\n\n> NOTE: This set is not complete yet; for example, there is no library support for ICMP at the moment.\n> However, you can write your own classes to implement those.\n\n### Default Ports\n\nSome Constructs have default ports associated with them. For example, the\nlistener of a load balancer does (it's the public port), or instances of an\nRDS database (it's the port the database is accepting connections on).\n\nIf the object you're calling the peering method on has a default port associated with it, you can call\n`allowDefaultPortFrom()` and omit the port specifier. If the argument has an associated default port, call\n`allowDefaultPortTo()`.\n\nFor example:\n\n```ts\ndeclare const listener: elbv2.ApplicationListener;\ndeclare const appFleet: autoscaling.AutoScalingGroup;\ndeclare const rdsDatabase: rds.DatabaseCluster;\n\n// Port implicit in listener\nlistener.connections.allowDefaultPortFromAnyIpv4('Allow public');\n\n// Port implicit in peer\nappFleet.connections.allowDefaultPortTo(rdsDatabase, 'Fleet can access database');\n```\n\n### Security group rules\n\nBy default, security group wills be added inline to the security group in the output cloud formation\ntemplate, if applicable.  This includes any static rules by ip address and port range.  This\noptimization helps to minimize the size of the template.\n\nIn some environments this is not desirable, for example if your security group access is controlled\nvia tags. You can disable inline rules per security group or globally via the context key\n`@aws-cdk/aws-ec2.securityGroupDisableInlineRules`.\n\n```ts fixture=with-vpc\nconst mySecurityGroupWithoutInlineRules = new ec2.SecurityGroup(this, 'SecurityGroup', {\n  vpc,\n  description: 'Allow ssh access to ec2 instances',\n  allowAllOutbound: true,\n  disableInlineRules: true\n});\n//This will add the rule as an external cloud formation construct\nmySecurityGroupWithoutInlineRules.addIngressRule(ec2.Peer.anyIpv4(), ec2.Port.tcp(22), 'allow ssh access from the world');\n```\n\n### Importing an existing security group\n\nIf you know the ID and the configuration of the security group to import, you can use `SecurityGroup.fromSecurityGroupId`:\n\n```ts\nconst sg = ec2.SecurityGroup.fromSecurityGroupId(this, 'SecurityGroupImport', 'sg-1234', {\n  allowAllOutbound: true,\n});\n```\n\nAlternatively, use lookup methods to import security groups if you do not know the ID or the configuration details. Method `SecurityGroup.fromLookupByName` looks up a security group if the secruity group ID is unknown.\n\n```ts fixture=with-vpc\nconst sg = ec2.SecurityGroup.fromLookupByName(this, 'SecurityGroupLookup', 'security-group-name', vpc);\n```\n\nIf the security group ID is known and configuration details are unknown, use method `SecurityGroup.fromLookupById` instead. This method will lookup property `allowAllOutbound` from the current configuration of the security group.\n\n```ts\nconst sg = ec2.SecurityGroup.fromLookupById(this, 'SecurityGroupLookup', 'sg-1234');\n```\n\nThe result of `SecurityGroup.fromLookupByName` and `SecurityGroup.fromLookupById` operations will be written to a file called `cdk.context.json`. You must commit this file to source control so that the lookup values are available in non-privileged environments such as CI build steps, and to ensure your template builds are repeatable.\n\n### Cross Stack Connections\n\nIf you are attempting to add a connection from a peer in one stack to a peer in a different stack, sometimes it is necessary to ensure that you are making the connection in\na specific stack in order to avoid a cyclic reference. If there are no other dependencies between stacks then it will not matter in which stack you make\nthe connection, but if there are existing dependencies (i.e. stack1 already depends on stack2), then it is important to make the connection in the dependent stack (i.e. stack1).\n\nWhenever you make a `connections` function call, the ingress and egress security group rules will be added to the stack that the calling object exists in.\nSo if you are doing something like `peer1.connections.allowFrom(peer2)`, then the security group rules (both ingress and egress) will be created in `peer1`'s Stack.\n\nAs an example, if we wanted to allow a connection from a security group in one stack (egress) to a security group in a different stack (ingress),\nwe would make the connection like:\n\n**If Stack1 depends on Stack2**\n\n```ts fixture=with-vpc\n// Stack 1\ndeclare const stack1: Stack;\ndeclare const stack2: Stack;\n\nconst sg1 = new ec2.SecurityGroup(stack1, 'SG1', {\n  allowAllOutbound: false, // if this is `true` then no egress rule will be created\n  vpc,\n});\n\n// Stack 2\nconst sg2 = new ec2.SecurityGroup(stack2, 'SG2', {\n  allowAllOutbound: false, // if this is `true` then no egress rule will be created\n  vpc,\n});\n\n\n// `connections.allowTo` on `sg1` since we want the\n// rules to be created in Stack1\nsg1.connections.allowTo(sg2, ec2.Port.tcp(3333));\n```\n\nIn this case both the Ingress Rule for `sg2` and the Egress Rule for `sg1` will both be created\nin `Stack 1` which avoids the cyclic reference.\n\n\n**If Stack2 depends on Stack1**\n\n```ts fixture=with-vpc\n// Stack 1\ndeclare const stack1: Stack;\ndeclare const stack2: Stack;\n\nconst sg1 = new ec2.SecurityGroup(stack1, 'SG1', {\n  allowAllOutbound: false, // if this is `true` then no egress rule will be created\n  vpc,\n});\n\n// Stack 2\nconst sg2 = new ec2.SecurityGroup(stack2, 'SG2', {\n  allowAllOutbound: false, // if this is `true` then no egress rule will be created\n  vpc,\n});\n\n\n// `connections.allowFrom` on `sg2` since we want the\n// rules to be created in Stack2\nsg2.connections.allowFrom(sg1, ec2.Port.tcp(3333));\n```\n\nIn this case both the Ingress Rule for `sg2` and the Egress Rule for `sg1` will both be created\nin `Stack 2` which avoids the cyclic reference.\n\n## Machine Images (AMIs)\n\nAMIs control the OS that gets launched when you start your EC2 instance. The EC2\nlibrary contains constructs to select the AMI you want to use.\n\nDepending on the type of AMI, you select it a different way. Here are some\nexamples of things you might want to use:\n\n```ts lit=test/example.images.lit.ts\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n```\n\n> NOTE: The AMIs selected by `MachineImage.lookup()` will be cached in\n> `cdk.context.json`, so that your AutoScalingGroup instances aren't replaced while\n> you are making unrelated changes to your CDK app.\n>\n> To query for the latest AMI again, remove the relevant cache entry from\n> `cdk.context.json`, or use the `cdk context` command. For more information, see\n> [Runtime Context](https://docs.aws.amazon.com/cdk/latest/guide/context.html) in the CDK\n> developer guide.\n>\n> `MachineImage.genericLinux()`, `MachineImage.genericWindows()` will use `CfnMapping` in\n> an agnostic stack.\n\n## Special VPC configurations\n\n### VPN connections to a VPC\n\nCreate your VPC with VPN connections by specifying the `vpnConnections` props (keys are construct `id`s):\n\n```ts\nconst vpc = new ec2.Vpc(this, 'MyVpc', {\n  vpnConnections: {\n    dynamic: { // Dynamic routing (BGP)\n      ip: '1.2.3.4'\n    },\n    static: { // Static routing\n      ip: '4.5.6.7',\n      staticRoutes: [\n        '192.168.10.0/24',\n        '192.168.20.0/24'\n      ]\n    }\n  }\n});\n```\n\nTo create a VPC that can accept VPN connections, set `vpnGateway` to `true`:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'MyVpc', {\n  vpnGateway: true\n});\n```\n\nVPN connections can then be added:\n\n```ts fixture=with-vpc\nvpc.addVpnConnection('Dynamic', {\n  ip: '1.2.3.4'\n});\n```\n\nBy default, routes will be propagated on the route tables associated with the private subnets. If no\nprivate subnets exist, isolated subnets are used. If no isolated subnets exist, public subnets are\nused. Use the `Vpc` property `vpnRoutePropagation` to customize this behavior.\n\nVPN connections expose [metrics (cloudwatch.Metric)](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-cloudwatch/README.md) across all tunnels in the account/region and per connection:\n\n```ts fixture=with-vpc\n// Across all tunnels in the account/region\nconst allDataOut = ec2.VpnConnection.metricAllTunnelDataOut();\n\n// For a specific vpn connection\nconst vpnConnection = vpc.addVpnConnection('Dynamic', {\n  ip: '1.2.3.4'\n});\nconst state = vpnConnection.metricTunnelState();\n```\n\n### VPC endpoints\n\nA VPC endpoint enables you to privately connect your VPC to supported AWS services and VPC endpoint services powered by PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances in your VPC do not require public IP addresses to communicate with resources in the service. Traffic between your VPC and the other service does not leave the Amazon network.\n\nEndpoints are virtual devices. They are horizontally scaled, redundant, and highly available VPC components that allow communication between instances in your VPC and services without imposing availability risks or bandwidth constraints on your network traffic.\n\n```ts lit=test/integ.vpc-endpoint.lit.ts\n    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });\n```\n\nBy default, CDK will place a VPC endpoint in one subnet per AZ. If you wish to override the AZs CDK places the VPC endpoint in,\nuse the `subnets` parameter as follows:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  subnets: {\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});\n```\n\nPer the [AWS documentation](https://aws.amazon.com/premiumsupport/knowledge-center/interface-endpoint-availability-zone/), not all\nVPC endpoint services are available in all AZs. If you specify the parameter `lookupSupportedAzs`, CDK attempts to discover which\nAZs an endpoint service is available in, and will ensure the VPC endpoint is not placed in a subnet that doesn't match those AZs.\nThese AZs will be stored in cdk.context.json.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  lookupSupportedAzs: true\n});\n```\n\nPre-defined AWS services are defined in the [InterfaceVpcEndpointAwsService](lib/vpc-endpoint.ts) class, and can be used to\ncreate VPC endpoints without having to configure name, ports, etc. For example, a Keyspaces endpoint can be created for\nuse in your VPC:\n\n``` ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: ec2.InterfaceVpcEndpointAwsService.KEYSPACES,\n});\n```\n\n#### Security groups for interface VPC endpoints\n\nBy default, interface VPC endpoints create a new security group and traffic is **not**\nautomatically allowed from the VPC CIDR.\n\nUse the `connections` object to allow traffic to flow to the endpoint:\n\n```ts\ndeclare const myEndpoint: ec2.InterfaceVpcEndpoint;\n\nmyEndpoint.connections.allowDefaultPortFromAnyIpv4();\n```\n\nAlternatively, existing security groups can be used by specifying the `securityGroups` prop.\n\n### VPC endpoint services\n\nA VPC endpoint service enables you to expose a Network Load Balancer(s) as a provider service to consumers, who connect to your service over a VPC endpoint. You can restrict access to your service via allowed principals (anything that extends ArnPrincipal), and require that new connections be manually accepted.\n\n```ts\ndeclare const networkLoadBalancer1: elbv2.NetworkLoadBalancer;\ndeclare const networkLoadBalancer2: elbv2.NetworkLoadBalancer;\n\nnew ec2.VpcEndpointService(this, 'EndpointService', {\n  vpcEndpointServiceLoadBalancers: [networkLoadBalancer1, networkLoadBalancer2],\n  acceptanceRequired: true,\n  allowedPrincipals: [new iam.ArnPrincipal('arn:aws:iam::123456789012:root')]\n});\n```\n\nEndpoint services support private DNS, which makes it easier for clients to connect to your service by automatically setting up DNS in their VPC.\nYou can enable private DNS on an endpoint service like so:\n\n```ts\nimport { HostedZone, VpcEndpointServiceDomainName } from '@aws-cdk/aws-route53';\ndeclare const zone: HostedZone;\ndeclare const vpces: ec2.VpcEndpointService;\n\nnew VpcEndpointServiceDomainName(this, 'EndpointDomain', {\n  endpointService: vpces,\n  domainName: 'my-stuff.aws-cdk.dev',\n  publicHostedZone: zone,\n});\n```\n\nNote: The domain name must be owned (registered through Route53) by the account the endpoint service is in, or delegated to the account.\nThe VpcEndpointServiceDomainName will handle the AWS side of domain verification, the process for which can be found\n[here](https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-dns-validation.html)\n\n### Client VPN endpoint\n\nAWS Client VPN is a managed client-based VPN service that enables you to securely access your AWS\nresources and resources in your on-premises network. With Client VPN, you can access your resources\nfrom any location using an OpenVPN-based VPN client.\n\nUse the `addClientVpnEndpoint()` method to add a client VPN endpoint to a VPC:\n\n```ts fixture=client-vpn\nvpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  // Mutual authentication\n  clientCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/client-certificate-id',\n  // User-based authentication\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n});\n```\n\nThe endpoint must use at least one [authentication method](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/client-authentication.html):\n\n* Mutual authentication with a client certificate\n* User-based authentication (directory or federated)\n\nIf user-based authentication is used, the [self-service portal URL](https://docs.aws.amazon.com/vpn/latest/clientvpn-user/self-service-portal.html)\nis made available via a CloudFormation output.\n\nBy default, a new security group is created, and logging is enabled. Moreover, a rule to\nauthorize all users to the VPC CIDR is created.\n\nTo customize authorization rules, set the `authorizeAllUsersToVpcCidr` prop to `false`\nand use `addAuthorizationRule()`:\n\n```ts fixture=client-vpn\nconst endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});\n```\n\nUse `addRoute()` to configure network routes:\n\n```ts fixture=client-vpn\nconst endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n});\n\n// Client-to-client access\nendpoint.addRoute('Route', {\n  cidr: '10.100.0.0/16',\n  target: ec2.ClientVpnRouteTarget.local(),\n});\n```\n\nUse the `connections` object of the endpoint to allow traffic to other security groups.\n\n## Instances\n\nYou can use the `Instance` class to start up a single EC2 instance. For production setups, we recommend\nyou use an `AutoScalingGroup` from the `aws-autoscaling` module instead, as AutoScalingGroups will take\ncare of restarting your instance if it ever fails.\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\n\n// AWS Linux\nnew ec2.Instance(this, 'Instance1', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage(),\n});\n\n// AWS Linux 2\nnew ec2.Instance(this, 'Instance2', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n  }),\n});\n\n// AWS Linux 2 with kernel 5.x\nnew ec2.Instance(this, 'Instance3', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n    kernel: ec2.AmazonLinuxKernel.KERNEL5_X,\n  }),\n});\n\n// AWS Linux 2022\nnew ec2.Instance(this, 'Instance4', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2022,\n  }),\n});\n```\n\n### Configuring Instances using CloudFormation Init (cfn-init)\n\nCloudFormation Init allows you to configure your instances by writing files to them, installing software\npackages, starting services and running arbitrary commands. By default, if any of the instance setup\ncommands throw an error; the deployment will fail and roll back to the previously known good state.\nThe following documentation also applies to `AutoScalingGroup`s.\n\nFor the full set of capabilities of this system, see the documentation for\n[`AWS::CloudFormation::Init`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html).\nHere is an example of applying some configuration to an instance:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});\n```\n\nYou can have services restarted after the init process has made changes to the system.\nTo do that, instantiate an `InitServiceRestartHandle` and pass it to the config elements\nthat need to trigger the restart and the service itself. For example, the following\nconfig writes a config file for nginx, extracts an archive to the root directory, and then\nrestarts nginx so that it picks up the new config and files:\n\n```ts\ndeclare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);\n```\n\n### Bastion Hosts\n\nA bastion host functions as an instance used to access servers and resources in a VPC without open up the complete VPC on a network level.\nYou can use bastion hosts using a standard SSH connection targeting port 22 on the host. As an alternative, you can connect the SSH connection\nfeature of AWS Systems Manager Session Manager, which does not need an opened security group. (https://aws.amazon.com/about-aws/whats-new/2019/07/session-manager-launches-tunneling-support-for-ssh-and-scp/)\n\nA default bastion host for use via SSM can be configured like:\n\n```ts fixture=with-vpc\nconst host = new ec2.BastionHostLinux(this, 'BastionHost', { vpc });\n```\n\nIf you want to connect from the internet using SSH, you need to place the host into a public subnet. You can then configure allowed source hosts.\n\n```ts fixture=with-vpc\nconst host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  subnetSelection: { subnetType: ec2.SubnetType.PUBLIC },\n});\nhost.allowSshAccessFrom(ec2.Peer.ipv4('1.2.3.4/32'));\n```\n\nAs there are no SSH public keys deployed on this machine, you need to use [EC2 Instance Connect](https://aws.amazon.com/de/blogs/compute/new-using-amazon-ec2-instance-connect-for-ssh-access-to-your-ec2-instances/)\nwith the command `aws ec2-instance-connect send-ssh-public-key` to provide your SSH public key.\n\nEBS volume for the bastion host can be encrypted like:\n\n```ts fixture=with-vpc\nconst host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});\n```\n\n### Block Devices\n\nTo add EBS block device mappings, specify the `blockDevices` property. The following example sets the EBS-backed\nroot device (`/dev/sda1`) size to 50 GiB, and adds another EBS-backed device mapped to `/dev/sdm` that is 100 GiB in\nsize:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  blockDevices: [\n    {\n      deviceName: '/dev/sda1',\n      volume: ec2.BlockDeviceVolume.ebs(50),\n    },\n    {\n      deviceName: '/dev/sdm',\n      volume: ec2.BlockDeviceVolume.ebs(100),\n    },\n  ],\n});\n\n```\n\nIt is also possible to encrypt the block devices. In this example we will create an customer managed key encrypted EBS-backed root device:\n\n```ts\nimport { Key } from '@aws-cdk/aws-kms';\n\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nconst kmsKey = new Key(this, 'KmsKey')\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  blockDevices: [\n    {\n      deviceName: '/dev/sda1',\n      volume: ec2.BlockDeviceVolume.ebs(50, {\n        encrypted: true,\n        kmsKey: kmsKey,\n      }),\n    },\n  ],\n});\n\n```\n\n### Volumes\n\nWhereas a `BlockDeviceVolume` is an EBS volume that is created and destroyed as part of the creation and destruction of a specific instance. A `Volume` is for when you want an EBS volume separate from any particular instance. A `Volume` is an EBS block device that can be attached to, or detached from, any instance at any time. Some types of `Volume`s can also be attached to multiple instances at the same time to allow you to have shared storage between those instances.\n\nA notable restriction is that a Volume can only be attached to instances in the same availability zone as the Volume itself.\n\nThe following demonstrates how to create a 500 GiB encrypted Volume in the `us-west-2a` availability zone, and give a role the ability to attach that Volume to a specific instance:\n\n```ts\ndeclare const instance: ec2.Instance;\ndeclare const role: iam.Role;\n\nconst volume = new ec2.Volume(this, 'Volume', {\n  availabilityZone: 'us-west-2a',\n  size: Size.gibibytes(500),\n  encrypted: true,\n});\n\nvolume.grantAttachVolume(role, [instance]);\n```\n\n#### Instances Attaching Volumes to Themselves\n\nIf you need to grant an instance the ability to attach/detach an EBS volume to/from itself, then using `grantAttachVolume` and `grantDetachVolume` as outlined above\nwill lead to an unresolvable circular reference between the instance role and the instance. In this case, use `grantAttachVolumeByResourceTag` and `grantDetachVolumeByResourceTag` as follows:\n\n```ts\ndeclare const instance: ec2.Instance;\ndeclare const volume: ec2.Volume;\n\nconst attachGrant = volume.grantAttachVolumeByResourceTag(instance.grantPrincipal, [instance]);\nconst detachGrant = volume.grantDetachVolumeByResourceTag(instance.grantPrincipal, [instance]);\n```\n\n#### Attaching Volumes\n\nThe Amazon EC2 documentation for\n[Linux Instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html) and\n[Windows Instances](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-volumes.html) contains information on how\nto attach and detach your Volumes to/from instances, and how to format them for use.\n\nThe following is a sample skeleton of EC2 UserData that can be used to attach a Volume to the Linux instance that it is running on:\n\n```ts\ndeclare const instance: ec2.Instance;\ndeclare const volume: ec2.Volume;\n\nvolume.grantAttachVolumeByResourceTag(instance.grantPrincipal, [instance]);\nconst targetDevice = '/dev/xvdz';\ninstance.userData.addCommands(\n  // Retrieve token for accessing EC2 instance metadata (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html)\n  `TOKEN=$(curl -SsfX PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")`,\n  // Retrieve the instance Id of the current EC2 instance\n  `INSTANCE_ID=$(curl -SsfH \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/instance-id)`,\n  // Attach the volume to /dev/xvdz\n  `aws --region ${Stack.of(this).region} ec2 attach-volume --volume-id ${volume.volumeId} --instance-id $INSTANCE_ID --device ${targetDevice}`,\n  // Wait until the volume has attached\n  `while ! test -e ${targetDevice}; do sleep 1; done`\n  // The volume will now be mounted. You may have to add additional code to format the volume if it has not been prepared.\n);\n```\n\n#### Tagging Volumes\n\nYou can configure [tag propagation on volume creation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-propagatetagstovolumeoncreation).\n\n```ts\n  declare const vpc: ec2.Vpc;\n  declare const instanceType: ec2.InstanceType;\n  declare const machineImage: ec2.IMachineImage;\n\n  new ec2.Instance(this, 'Instance', {\n    vpc,\n    machineImage,\n    instanceType,\n    propagateTagsToVolumeOnCreation: true,\n  });\n```\n\n### Configuring Instance Metadata Service (IMDS)\n\n#### Toggling IMDSv1\n\nYou can configure [EC2 Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) options to either\nallow both IMDSv1 and IMDSv2 or enforce IMDSv2 when interacting with the IMDS.\n\nTo do this for a single `Instance`, you can use the `requireImdsv2` property.\nThe example below demonstrates IMDSv2 being required on a single `Instance`:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  requireImdsv2: true,\n});\n```\n\nYou can also use the either the `InstanceRequireImdsv2Aspect` for EC2 instances or the `LaunchTemplateRequireImdsv2Aspect` for EC2 launch templates\nto apply the operation to multiple instances or launch templates, respectively.\n\nThe following example demonstrates how to use the `InstanceRequireImdsv2Aspect` to require IMDSv2 for all EC2 instances in a stack:\n\n```ts\nconst aspect = new ec2.InstanceRequireImdsv2Aspect();\nAspects.of(this).add(aspect);\n```\n\n## VPC Flow Logs\n\nVPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data can be published to Amazon CloudWatch Logs and Amazon S3. After you've created a flow log, you can retrieve and view its data in the chosen destination. (<https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html>).\n\nBy default, a flow log will be created with CloudWatch Logs as the destination.\n\nYou can create a flow log like this:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc)\n})\n```\n\nOr you can add a Flow Log to a VPC by using the addFlowLog method like this:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'Vpc');\n\nvpc.addFlowLog('FlowLog');\n```\n\nYou can also add multiple flow logs with different destinations.\n\n```ts\nconst vpc = new ec2.Vpc(this, 'Vpc');\n\nvpc.addFlowLog('FlowLogS3', {\n  destination: ec2.FlowLogDestination.toS3()\n});\n\nvpc.addFlowLog('FlowLogCloudWatch', {\n  trafficType: ec2.FlowLogTrafficType.REJECT\n});\n```\n\nBy default, the CDK will create the necessary resources for the destination. For the CloudWatch Logs destination\nit will create a CloudWatch Logs Log Group as well as the IAM role with the necessary permissions to publish to\nthe log group. In the case of an S3 destination, it will create the S3 bucket.\n\nIf you want to customize any of the destination resources you can provide your own as part of the `destination`.\n\n*CloudWatch Logs*\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});\n```\n\n*S3*\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst bucket = new s3.Bucket(this, 'MyCustomBucket');\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toS3(bucket)\n});\n\nnew ec2.FlowLog(this, 'FlowLogWithKeyPrefix', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toS3(bucket, 'prefix/')\n});\n```\n\n## User Data\n\nUser data enables you to run a script when your instances start up.  In order to configure these scripts you can add commands directly to the script\n or you can use the UserData's convenience functions to aid in the creation of your script.\n\nA user data could be configured to run a script found in an asset through the following:\n\n```ts\nimport { Asset } from '@aws-cdk/aws-s3-assets';\n\ndeclare const instance: ec2.Instance;\n\nconst asset = new Asset(this, 'Asset', {\n  path: './configure.sh'\n});\n\nconst localPath = instance.userData.addS3DownloadCommand({\n  bucket:asset.bucket,\n  bucketKey:asset.s3ObjectKey,\n  region: 'us-east-1', // Optional\n});\ninstance.userData.addExecuteFileCommand({\n  filePath:localPath,\n  arguments: '--verbose -y'\n});\nasset.grantRead(instance.role);\n```\n\n### Multipart user data\n\nIn addition, to above the `MultipartUserData` can be used to change instance startup behavior. Multipart user data are composed\nfrom separate parts forming archive. The most common parts are scripts executed during instance set-up. However, there are other\nkinds, too.\n\nThe advantage of multipart archive is in flexibility when it's needed to add additional parts or to use specialized parts to\nfine tune instance startup. Some services (like AWS Batch) support only `MultipartUserData`.\n\nThe parts can be executed at different moment of instance start-up and can serve a different purpose. This is controlled by `contentType` property.\nFor common scripts, `text/x-shellscript; charset=\"utf-8\"` can be used as content type.\n\nIn order to create archive the `MultipartUserData` has to be instantiated. Than, user can add parts to multipart archive using `addPart`. The `MultipartBody` contains methods supporting creation of body parts.\n\nIf the very custom part is required, it can be created using `MultipartUserData.fromRawBody`, in this case full control over content type,\ntransfer encoding, and body properties is given to the user.\n\nBelow is an example for creating multipart user data with single body part responsible for installing `awscli` and configuring maximum size\nof storage used by Docker containers:\n\n```ts\nconst bootHookConf = ec2.UserData.forLinux();\nbootHookConf.addCommands('cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=40G\"\\' >> /etc/sysconfig/docker');\n\nconst setupCommands = ec2.UserData.forLinux();\nsetupCommands.addCommands('sudo yum install awscli && echo Packages installed らと > /var/tmp/setup');\n\nconst multipartUserData = new ec2.MultipartUserData();\n// The docker has to be configured at early stage, so content type is overridden to boothook\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHookConf, 'text/cloud-boothook; charset=\"us-ascii\"'));\n// Execute the rest of setup\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(setupCommands));\n\nnew ec2.LaunchTemplate(this, '', {\n  userData: multipartUserData,\n  blockDevices: [\n    // Block device configuration rest\n  ]\n});\n```\n\nFor more information see\n[Specifying Multiple User Data Blocks Using a MIME Multi Part Archive](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#multi-part_user_data)\n\n#### Using add*Command on MultipartUserData\n\nTo use the `add*Command` methods, that are inherited from the `UserData` interface, on `MultipartUserData` you must add a part\nto the `MultipartUserData` and designate it as the reciever for these methods. This is accomplished by using the `addUserDataPart()`\nmethod on `MultipartUserData` with the `makeDefault` argument set to `true`:\n\n```ts\nconst multipartUserData = new ec2.MultipartUserData();\nconst commandsUserData = ec2.UserData.forLinux();\nmultipartUserData.addUserDataPart(commandsUserData, ec2.MultipartBody.SHELL_SCRIPT, true);\n\n// Adding commands to the multipartUserData adds them to commandsUserData, and vice-versa.\nmultipartUserData.addCommands('touch /root/multi.txt');\ncommandsUserData.addCommands('touch /root/userdata.txt');\n```\n\nWhen used on an EC2 instance, the above `multipartUserData` will create both `multi.txt` and `userdata.txt` in `/root`.\n\n## Importing existing subnet\n\nTo import an existing Subnet, call `Subnet.fromSubnetAttributes()` or\n`Subnet.fromSubnetId()`. Only if you supply the subnet's Availability Zone\nand Route Table Ids when calling `Subnet.fromSubnetAttributes()` will you be\nable to use the CDK features that use these values (such as selecting one\nsubnet per AZ).\n\nImporting an existing subnet looks like this:\n\n```ts\n// Supply all properties\nconst subnet1 = ec2.Subnet.fromSubnetAttributes(this, 'SubnetFromAttributes', {\n  subnetId: 's-1234',\n  availabilityZone: 'pub-az-4465',\n  routeTableId: 'rt-145'\n});\n\n// Supply only subnet id\nconst subnet2 = ec2.Subnet.fromSubnetId(this, 'SubnetFromId', 's-1234');\n```\n\n## Launch Templates\n\nA Launch Template is a standardized template that contains the configuration information to launch an instance.\nThey can be used when launching instances on their own, through Amazon EC2 Auto Scaling, EC2 Fleet, and Spot Fleet.\nLaunch templates enable you to store launch parameters so that you do not have to specify them every time you launch\nan instance. For information on Launch Templates please see the\n[official documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html).\n\nThe following demonstrates how to create a launch template with an Amazon Machine Image, and security group.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst template = new ec2.LaunchTemplate(this, 'LaunchTemplate', {\n  machineImage: ec2.MachineImage.latestAmazonLinux(),\n  securityGroup: new ec2.SecurityGroup(this, 'LaunchTemplateSG', {\n    vpc: vpc,\n  }),\n});\n```\n\n## Detailed Monitoring\n\nThe following demonstrates how to enable [Detailed Monitoring](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html) for an EC2 instance. Keep in mind that Detailed Monitoring results in [additional charges](http://aws.amazon.com/cloudwatch/pricing/).\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\n\nnew ec2.Instance(this, 'Instance1', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage(),\n  detailedMonitoring: true,\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-ec2",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.EC2",
      "packageId": "Amazon.CDK.AWS.EC2"
    },
    "java": {
      "maven": {
        "artifactId": "ec2",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.ec2"
    },
    "js": {
      "npm": "@aws-cdk/aws-ec2"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-ec2",
      "module": "aws_cdk.aws_ec2"
    }
  },
  "types": {
    "@aws-cdk/aws-ec2.AclCidr": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Either an IPv4 or an IPv6 CIDR.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst aclCidr = ec2.AclCidr.anyIpv4();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.AclCidr",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 6
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The CIDR containing all IPv4 addresses (i.e., 0.0.0.0/0)."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 19
          },
          "name": "anyIpv4",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidr"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The CIDR containing all IPv6 addresses (i.e., ::/0)."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 35
          },
          "name": "anyIpv6",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidr"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An IP network range in CIDR notation (for example, 172.16.0.0/24)."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 10
          },
          "name": "ipv4",
          "parameters": [
            {
              "name": "ipv4Cidr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidr"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An IPv6 network range in CIDR notation (for example, 2001:db8::/48)."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 26
          },
          "name": "ipv6",
          "parameters": [
            {
              "name": "ipv6Cidr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidr"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 39
          },
          "name": "toCidrConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclCidrConfig"
            }
          }
        }
      ],
      "name": "AclCidr",
      "symbolId": "lib/network-acl-types:AclCidr"
    },
    "@aws-cdk/aws-ec2.AclCidrConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Acl Configuration for CIDR.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst aclCidrConfig: ec2.AclCidrConfig = {\n  cidrBlock: 'cidrBlock',\n  ipv6CidrBlock: 'ipv6CidrBlock',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.AclCidrConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 57
      },
      "name": "AclCidrConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Ipv4 CIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 61
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Ipv6 CIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 66
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl-types:AclCidrConfig"
    },
    "@aws-cdk/aws-ec2.AclIcmp": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create Icmp.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst aclIcmp: ec2.AclIcmp = {\n  code: 123,\n  type: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.AclIcmp",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 215
      },
      "name": "AclIcmp",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use -1 to specify all ICMP\ncodes for the given ICMP type. Requirement is conditional: Required if you\nspecify 1 (ICMP) for the protocol parameter.",
            "stability": "stable",
            "summary": "The Internet Control Message Protocol (ICMP) code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 227
          },
          "name": "code",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use -1 to specify all ICMP types.\nConditional requirement: Required if you specify 1 (ICMP) for the CreateNetworkAclEntry protocol parameter.",
            "stability": "stable",
            "summary": "The Internet Control Message Protocol (ICMP) type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 220
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/network-acl-types:AclIcmp"
    },
    "@aws-cdk/aws-ec2.AclPortRange": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create PortRange.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst aclPortRange: ec2.AclPortRange = {\n  from: 123,\n  to: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.AclPortRange",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 235
      },
      "name": "AclPortRange",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Required if you specify 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "stability": "stable",
            "summary": "The first port in the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 239
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Required if you specify 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "stability": "stable",
            "summary": "The last port in the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 244
          },
          "name": "to",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/network-acl-types:AclPortRange"
    },
    "@aws-cdk/aws-ec2.AclTraffic": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The traffic that is configured using a Network ACL entry.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst aclTraffic = ec2.AclTraffic.allTraffic();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.AclTraffic",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 74
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to all traffic."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 78
          },
          "name": "allTraffic",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to ICMP traffic of given type and code."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 87
          },
          "name": "icmp",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AclIcmp"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Requires an IPv6 CIDR block.",
            "stability": "stable",
            "summary": "Apply the ACL entry to ICMPv6 traffic of given type and code."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 99
          },
          "name": "icmpv6",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AclIcmp"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to TCP traffic on a given port."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 109
          },
          "name": "tcpPort",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to TCP traffic on a given port range."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 122
          },
          "name": "tcpPortRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to UDP traffic on a given port."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 135
          },
          "name": "udpPort",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply the ACL entry to UDP traffic on a given port range."
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 148
          },
          "name": "udpPortRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTraffic"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 158
          },
          "name": "toTrafficConfig",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AclTrafficConfig"
            }
          }
        }
      ],
      "name": "AclTraffic",
      "symbolId": "lib/network-acl-types:AclTraffic"
    },
    "@aws-cdk/aws-ec2.AclTrafficConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Acl Configuration for traffic.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst aclTrafficConfig: ec2.AclTrafficConfig = {\n  protocol: 123,\n\n  // the properties below are optional\n  icmp: {\n    code: 123,\n    type: 123,\n  },\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.AclTrafficConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl-types.ts",
        "line": 176
      },
      "name": "AclTrafficConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "17",
            "remarks": "A value of \"-1\" means all protocols.\n\nIf you specify \"-1\" or a protocol number other than \"6\" (TCP), \"17\" (UDP),\nor \"1\" (ICMP), traffic on all ports is allowed, regardless of any ports or\nICMP types or codes that you specify.\n\nIf you specify protocol \"58\" (ICMPv6) and specify an IPv4 CIDR\nblock, traffic for all ICMP types and codes allowed, regardless of any that\nyou specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv6 CIDR\nblock, you must specify an ICMP type and code.",
            "stability": "stable",
            "summary": "The protocol number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 207
          },
          "name": "protocol",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Required if specifying 1 (ICMP) for the protocol parameter.",
            "stability": "stable",
            "summary": "The Internet Control Message Protocol (ICMP) code and type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 182
          },
          "name": "icmp",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AclIcmp"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter",
            "stability": "stable",
            "summary": "The range of port numbers for the UDP/TCP protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl-types.ts",
            "line": 189
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AclPortRange"
          }
        }
      ],
      "symbolId": "lib/network-acl-types:AclTrafficConfig"
    },
    "@aws-cdk/aws-ec2.Action": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "What action to apply to traffic matching the ACL."
      },
      "fqn": "@aws-cdk/aws-ec2.Action",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 149
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow the traffic."
          },
          "name": "ALLOW"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Deny the traffic."
          },
          "name": "DENY"
        }
      ],
      "name": "Action",
      "symbolId": "lib/network-acl:Action"
    },
    "@aws-cdk/aws-ec2.AddRouteOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = new ec2.Vpc(this, \"VPC\", {\n  subnetConfiguration: [{\n      subnetType: ec2.SubnetType.PUBLIC,\n      name: 'Public',\n    },{\n      subnetType: ec2.SubnetType.ISOLATED,\n      name: 'Isolated',\n    }]\n});\n\n(vpc.isolatedSubnets[0] as ec2.Subnet).addRoute(\"StaticRoute\", {\n    routerId: vpc.internetGatewayId!,\n    routerType: ec2.RouterType.GATEWAY,\n    destinationCidrBlock: \"8.8.8.8/32\",\n})",
        "stability": "stable",
        "summary": "Options for adding a new route to a subnet."
      },
      "fqn": "@aws-cdk/aws-ec2.AddRouteOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1772
      },
      "name": "AddRouteOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be an instance ID, gateway ID, etc, depending on the router type.",
            "stability": "stable",
            "summary": "The ID of the router."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1797
          },
          "name": "routerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What type of router to route this traffic to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1790
          },
          "name": "routerType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.RouterType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'0.0.0.0/0'",
            "stability": "stable",
            "summary": "IPv4 range this route applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1778
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Uses IPv6",
            "stability": "stable",
            "summary": "IPv6 range this route applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1785
          },
          "name": "destinationIpv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If true, this route will be added before any AWS resources that depend\non internet connectivity in the VPC will be created.",
            "stability": "stable",
            "summary": "Whether this route will enable internet connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1807
          },
          "name": "enablesInternetConnectivity",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc:AddRouteOptions"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxCpuType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "CPU type."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxCpuType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 282
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "arm64 CPU type."
          },
          "name": "ARM_64"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "x86_64 CPU type."
          },
          "name": "X86_64"
        }
      ],
      "name": "AmazonLinuxCpuType",
      "symbolId": "lib/machine-image:AmazonLinuxCpuType"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxEdition": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "Amazon Linux edition."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxEdition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 473
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard edition."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Minimal edition."
          },
          "name": "MINIMAL"
        }
      ],
      "name": "AmazonLinuxEdition",
      "symbolId": "lib/machine-image:AmazonLinuxEdition"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxGeneration": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "What generation of Amazon Linux to use."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxGeneration",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 443
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Amazon Linux."
          },
          "name": "AMAZON_LINUX"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Amazon Linux 2."
          },
          "name": "AMAZON_LINUX_2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Amazon Linux 2022."
          },
          "name": "AMAZON_LINUX_2022"
        }
      ],
      "name": "AmazonLinuxGeneration",
      "symbolId": "lib/machine-image:AmazonLinuxGeneration"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.GenericSSMParameterImage",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.\n\nThe AMI ID is selected using the values published to the SSM parameter store.",
        "stability": "stable",
        "summary": "Selects the latest version of Amazon Linux."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 419
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 379
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the SSM parameter name that will contain the Amazon Linux image with the given attributes."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 383
          },
          "name": "ssmParameterName",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 428
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.GenericSSMParameterImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "AmazonLinuxImage",
      "symbolId": "lib/machine-image:AmazonLinuxImage"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const sg = ec2.SecurityGroup.fromSecurityGroupId(this, 'FsxSecurityGroup', '{SECURITY-GROUP-ID}');\nconst fs = fsx.LustreFileSystem.fromLustreFileSystemAttributes(this, 'FsxLustreFileSystem', {\n  dnsName: '{FILE-SYSTEM-DNS-NAME}',\n  fileSystemId: '{FILE-SYSTEM-ID}',\n  securityGroup: sg,\n});\n\nconst vpc = ec2.Vpc.fromVpcAttributes(this, 'Vpc', {\n  availabilityZones: ['us-west-2a', 'us-west-2b'],\n  publicSubnetIds: ['{US-WEST-2A-SUBNET-ID}', '{US-WEST-2B-SUBNET-ID}'],\n  vpcId: '{VPC-ID}',\n});\n\nconst inst = new ec2.Instance(this, 'inst', {\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.LARGE),\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n  }),\n  vpc,\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n});\n\nfs.connections.allowDefaultPortFrom(inst);",
        "stability": "stable",
        "summary": "Amazon Linux image properties."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 297
      },
      "name": "AmazonLinuxImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "By default, the newest image is used on each deployment. This will cause\ninstances to be replaced whenever a new version is released, and may cause\ndowntime if there aren't enough running instances in the AutoScalingGroup\nto reschedule the tasks on.\n\nIf set to true, the AMI ID will be cached in `cdk.context.json` and the\nsame value will be used on future runs. Your instances will not be replaced\nbut your AMI version will grow old over time. To refresh the AMI lookup,\nyou will have to evict the value from the cache using the `cdk context`\ncommand. See https://docs.aws.amazon.com/cdk/latest/guide/context.html for\nmore information.\n\nCan not be set to `true` in environment-agnostic stacks.",
            "stability": "stable",
            "summary": "Whether the AMI ID is cached to be stable between deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 366
          },
          "name": "cachedInContext",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "X86_64",
            "stability": "stable",
            "summary": "CPU Type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 345
          },
          "name": "cpuType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxCpuType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Standard",
            "stability": "stable",
            "summary": "What edition of Amazon Linux to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 310
          },
          "name": "edition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxEdition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AmazonLinux",
            "stability": "stable",
            "summary": "What generation of Amazon Linux to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 303
          },
          "name": "generation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxGeneration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "-",
            "stability": "stable",
            "summary": "What kernel version of Amazon Linux to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 317
          },
          "name": "kernel",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxKernel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GeneralPurpose",
            "stability": "stable",
            "summary": "What storage backed image to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 331
          },
          "name": "storage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxStorage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Empty UserData for Linux machines",
            "stability": "stable",
            "summary": "Initial user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 338
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HVM",
            "stability": "stable",
            "summary": "Virtualization type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 324
          },
          "name": "virtualization",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxVirt"
          }
        }
      ],
      "symbolId": "lib/machine-image:AmazonLinuxImageProps"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxKernel": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\n\n// AWS Linux\nnew ec2.Instance(this, 'Instance1', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage(),\n});\n\n// AWS Linux 2\nnew ec2.Instance(this, 'Instance2', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n  }),\n});\n\n// AWS Linux 2 with kernel 5.x\nnew ec2.Instance(this, 'Instance3', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n    kernel: ec2.AmazonLinuxKernel.KERNEL5_X,\n  }),\n});\n\n// AWS Linux 2022\nnew ec2.Instance(this, 'Instance4', {\n  vpc,\n  instanceType,\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2022,\n  }),\n});",
        "stability": "stable",
        "summary": "Amazon Linux Kernel."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxKernel",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 463
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard edition."
          },
          "name": "KERNEL5_X"
        }
      ],
      "name": "AmazonLinuxKernel",
      "symbolId": "lib/machine-image:AmazonLinuxKernel"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxStorage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxStorage",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 500
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "EBS-backed storage."
          },
          "name": "EBS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "S3-backed storage."
          },
          "name": "S3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose-based storage (recommended)."
          },
          "name": "GENERAL_PURPOSE"
        }
      ],
      "name": "AmazonLinuxStorage",
      "symbolId": "lib/machine-image:AmazonLinuxStorage"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxVirt": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "Virtualization type for Amazon Linux."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxVirt",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 488
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HVM virtualization (recommended)."
          },
          "name": "HVM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PV virtualization."
          },
          "name": "PV"
        }
      ],
      "name": "AmazonLinuxVirt",
      "symbolId": "lib/machine-image:AmazonLinuxVirt"
    },
    "@aws-cdk/aws-ec2.ApplyCloudFormationInitOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "stability": "stable",
        "summary": "Options for applying CloudFormation init to an instance or instance group."
      },
      "fqn": "@aws-cdk/aws-ec2.ApplyCloudFormationInitOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 530
      },
      "name": "ApplyCloudFormationInitOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "['default']",
            "stability": "stable",
            "summary": "ConfigSet to activate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 536
          },
          "name": "configSets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If `true` (the default), a hash of the config will be embedded into the\nUserData, so that if the config changes, the UserData changes.\n\n- If the EC2 instance is instance-store backed or\n   `userDataCausesReplacement` is set, this will cause the instance to be\n   replaced and the new configuration to be applied.\n- If the instance is EBS-backed and `userDataCausesReplacement` is not\n   set, the change of UserData will make the instance restart but not be\n   replaced, and the configuration will not be applied automatically.\n\nIf `false`, no hash will be embedded, and if the CloudFormation Init\nconfig changes nothing will happen to the running instance. If a\nconfig update introduces errors, you will not notice until after the\nCloudFormation deployment successfully finishes and the next instance\nfails to launch.",
            "stability": "stable",
            "summary": "Force instance replacement by embedding a config fingerprint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 566
          },
          "name": "embedFingerprint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "You can use this to prevent CloudFormation from rolling back when\ninstances fail to start up, to help in debugging.",
            "stability": "stable",
            "summary": "Don't fail the instance creation when cfn-init fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 591
          },
          "name": "ignoreFailures",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the IAM instance profile attached to the EC2 instance",
            "stability": "stable",
            "summary": "Include --role argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 610
          },
          "name": "includeRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the cloudformation endpoint in the deployed region\ne.g. https://cloudformation.us-east-1.amazonaws.com",
            "stability": "stable",
            "summary": "Include --url argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 601
          },
          "name": "includeUrl",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "By default, the output of running cfn-init is written to a log file\non the instance. Set this to `true` to print it to the System Log\n(visible from the EC2 Console), `false` to not print it.\n\n(Be aware that the system log is refreshed at certain points in\ntime of the instance life cycle, and successful execution may\nnot always show up).",
            "stability": "stable",
            "summary": "Print the results of running cfn-init to the Instance System Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 581
          },
          "name": "printLog",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "stability": "stable",
            "summary": "Timeout waiting for the configuration to be applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 543
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/instance:ApplyCloudFormationInitOptions"
    },
    "@aws-cdk/aws-ec2.AttachInitOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for attaching a CloudFormationInit to a resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const cfnResource: cdk.CfnResource;\ndeclare const role: iam.Role;\ndeclare const userData: ec2.UserData;\nconst attachInitOptions: ec2.AttachInitOptions = {\n  instanceRole: role,\n  platform: ec2.OperatingSystemType.LINUX,\n  userData: userData,\n\n  // the properties below are optional\n  configSets: ['configSets'],\n  embedFingerprint: false,\n  ignoreFailures: false,\n  includeRole: false,\n  includeUrl: false,\n  printLog: false,\n  signalResource: cfnResource,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.AttachInitOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init.ts",
        "line": 360
      },
      "name": "AttachInitOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Instance role of the consuming instance or fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 364
          },
          "name": "instanceRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "OS Platform the init config will be used for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 388
          },
          "name": "platform",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "UserData to add commands to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 393
          },
          "name": "userData",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "['default']",
            "stability": "stable",
            "summary": "ConfigSet to activate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 400
          },
          "name": "configSets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If `true` (the default), a hash of the config will be embedded into the\nUserData, so that if the config changes, the UserData changes and\nthe instance will be replaced.\n\nIf `false`, no such hash will be embedded, and if the CloudFormation Init\nconfig changes nothing will happen to the running instance.",
            "stability": "stable",
            "summary": "Whether to embed a hash into the userData."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 414
          },
          "name": "embedFingerprint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "You can use this to prevent CloudFormation from rolling back when\ninstances fail to start up, to help in debugging.",
            "stability": "stable",
            "summary": "Don't fail the instance creation when cfn-init fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 439
          },
          "name": "ignoreFailures",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the IAM instance profile attached to the EC2 instance",
            "stability": "stable",
            "summary": "Include --role argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 383
          },
          "name": "includeRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the cloudformation endpoint in the deployed region\ne.g. https://cloudformation.us-east-1.amazonaws.com",
            "stability": "stable",
            "summary": "Include --url argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 374
          },
          "name": "includeUrl",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "By default, the output of running cfn-init is written to a log file\non the instance. Set this to `true` to print it to the System Log\n(visible from the EC2 Console), `false` to not print it.\n\n(Be aware that the system log is refreshed at certain points in\ntime of the instance life cycle, and successful execution may\nnot always show up).",
            "stability": "stable",
            "summary": "Print the results of running cfn-init to the Instance System Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 429
          },
          "name": "printLog",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- if this property is undefined cfn-signal signals the attached resource",
            "remarks": "You can use this to support signaling LaunchTemplate while attaching AutoScalingGroup",
            "stability": "stable",
            "summary": "When provided, signals this resource instead of the attached resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 448
          },
          "name": "signalResource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.CfnResource"
          }
        }
      ],
      "symbolId": "lib/cfn-init:AttachInitOptions"
    },
    "@aws-cdk/aws-ec2.BastionHostLinux": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=with-vpc infused",
          "resource": "AWS::EC2::Instance"
        },
        "example": "const host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});",
        "remarks": "The recommended way to connect to the bastion host is by using AWS Systems Manager Session Manager.\n\nThe operating system is Amazon Linux 2 with the latest SSM agent installed\n\nYou can also configure this bastion host to allow connections via SSH",
        "stability": "stable",
        "summary": "This creates a linux bastion host you can use to connect to other instances or services in your VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.BastionHostLinux",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/bastion-host.ts",
          "line": 173
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.BastionHostLinuxProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInstance"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bastion-host.ts",
        "line": 120
      },
      "methods": [
        {
          "docs": {
            "remarks": "Necessary if you want to connect to the instance using ssh. If not\ncalled, you should use SSM Session Manager to connect to the instance.",
            "stability": "stable",
            "summary": "Allow SSH access from the given peer or peers."
          },
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 237
          },
          "name": "allowSshAccessFrom",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "BastionHostLinux",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 126
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 136
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The underlying instance resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 141
          },
          "name": "instance",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Instance"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The availability zone the instance was launched in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 151
          },
          "name": "instanceAvailabilityZone",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The instance's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 146
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 156
          },
          "name": "instancePrivateDnsName",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private IP for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 161
          },
          "name": "instancePrivateIp",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public name).",
            "stability": "stable",
            "summary": "Publicly-routable DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 166
          },
          "name": "instancePublicDnsName",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public IP).",
            "stability": "stable",
            "summary": "Publicly-routable IP  address for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 171
          },
          "name": "instancePublicIp",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role assumed by the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 131
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The stack in which this resource is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 121
          },
          "name": "stack",
          "overrides": "@aws-cdk/core.Resource",
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        }
      ],
      "symbolId": "lib/bastion-host:BastionHostLinux"
    },
    "@aws-cdk/aws-ec2.BastionHostLinuxProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=with-vpc infused"
        },
        "example": "const host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});",
        "stability": "stable",
        "summary": "Properties of the bastion host."
      },
      "fqn": "@aws-cdk/aws-ec2.BastionHostLinuxProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bastion-host.ts",
        "line": 20
      },
      "name": "BastionHostLinuxProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC to launch the instance in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 32
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Random zone.",
            "stability": "stable",
            "summary": "In which AZ to place the instance within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 27
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Uses the block device mapping of the AMI",
            "remarks": "Each instance that is launched has an associated root device volume,\neither an Amazon EBS volume or an instance store volume.\nYou can use block device mappings to specify additional EBS volumes or\ninstance store volumes to attach to an instance when it is launched.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
            "stability": "stable",
            "summary": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 83
          },
          "name": "blockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.BlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no CloudFormation init",
            "stability": "stable",
            "summary": "Apply the given CloudFormation Init configuration to the instance at startup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 90
          },
          "name": "init",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "remarks": "Describes the configsets to use and the timeout to wait",
            "stability": "stable",
            "summary": "Use the given options for applying CloudFormation Init."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 99
          },
          "name": "initOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ApplyCloudFormationInitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'BastionHost'",
            "stability": "stable",
            "summary": "The name of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 39
          },
          "name": "instanceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'t3.nano'",
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 61
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- An Amazon Linux 2 image which is kept up-to-date automatically (the instance\nmay be replaced on every deployment) and already has SSM Agent installed.",
            "stability": "stable",
            "summary": "The machine image to use, assumed to have SSM Agent preinstalled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 69
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether IMDSv2 should be required on this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 106
          },
          "name": "requireImdsv2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- create new security group with no inbound and all outbound traffic allowed",
            "stability": "stable",
            "summary": "Security Group to assign to this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 55
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- private subnets of the supplied VPC",
            "remarks": "Set this to PUBLIC if you need to connect to this instance via the internet and cannot use SSM.\nYou have to allow port 22 manually by using the connections field",
            "stability": "stable",
            "summary": "Select the subnets to run the bastion host in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bastion-host.ts",
            "line": 48
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/bastion-host:BastionHostLinuxProps"
    },
    "@aws-cdk/aws-ec2.BlockDevice": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const blockDeviceVolume: ec2.BlockDeviceVolume;\nconst blockDevice: ec2.BlockDevice = {\n  deviceName: 'deviceName',\n  volume: blockDeviceVolume,\n\n  // the properties below are optional\n  mappingEnabled: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.BlockDevice",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 18
      },
      "name": "BlockDevice",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, a value like `/dev/sdh`, `xvdh`.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html",
            "stability": "stable",
            "summary": "The device name exposed to the EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 26
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, a value like `BlockDeviceVolume.ebs(15)`, `BlockDeviceVolume.ephemeral(0)`.",
            "stability": "stable",
            "summary": "Defines the block device volume, to be either an Amazon EBS volume or an ephemeral instance store volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 33
          },
          "name": "volume",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - device mapping is left untouched",
            "remarks": "If set to false for the root device, the instance might fail the Amazon EC2 health check.\nAmazon EC2 Auto Scaling launches a replacement instance if the instance fails the health check.",
            "stability": "stable",
            "summary": "If false, the device mapping will be suppressed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 42
          },
          "name": "mappingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/volume:BlockDevice"
    },
    "@aws-cdk/aws-ec2.BlockDeviceVolume": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  blockDevices: [\n    {\n      deviceName: '/dev/sda1',\n      volume: ec2.BlockDeviceVolume.ebs(50),\n    },\n    {\n      deviceName: '/dev/sdm',\n      volume: ec2.BlockDeviceVolume.ebs(100),\n    },\n  ],\n});",
        "stability": "stable",
        "summary": "Describes a block device mapping for an EC2 instance or Auto Scaling group."
      },
      "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/volume.ts",
          "line": 173
        },
        "parameters": [
          {
            "docs": {
              "summary": "EBS device info."
            },
            "name": "ebsDevice",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.EbsDeviceProps"
            }
          },
          {
            "docs": {
              "summary": "Virtual device name."
            },
            "name": "virtualName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 134
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new Elastic Block Storage device."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 141
          },
          "name": "ebs",
          "parameters": [
            {
              "docs": {
                "summary": "The volume size, in Gibibytes (GiB)."
              },
              "name": "volumeSize",
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "summary": "additional device options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.EbsDeviceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new Elastic Block Storage device from an existing snapshot."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 151
          },
          "name": "ebsFromSnapshot",
          "parameters": [
            {
              "docs": {
                "summary": "The snapshot ID of the volume to use."
              },
              "name": "snapshotId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "additional device options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.EbsDeviceSnapshotOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The name will be in the form ephemeral{volumeIndex}.",
            "stability": "stable",
            "summary": "Creates a virtual, ephemeral device."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 161
          },
          "name": "ephemeral",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be equal or greater than 0",
                "summary": "the volume index."
              },
              "name": "volumeIndex",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.BlockDeviceVolume"
            }
          },
          "static": true
        }
      ],
      "name": "BlockDeviceVolume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "EBS device info."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 173
          },
          "name": "ebsDevice",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.EbsDeviceProps"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Virtual device name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 173
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:BlockDeviceVolume"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CapacityReservation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a new Capacity Reservation with the specified attributes. For more information, see [Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::CapacityReservation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnCapacityReservation = new ec2.CfnCapacityReservation(this, 'MyCfnCapacityReservation', {\n  availabilityZone: 'availabilityZone',\n  instanceCount: 123,\n  instancePlatform: 'instancePlatform',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  ebsOptimized: false,\n  endDate: 'endDate',\n  endDateType: 'endDateType',\n  ephemeralStorage: false,\n  instanceMatchCriteria: 'instanceMatchCriteria',\n  outPostArn: 'outPostArn',\n  placementGroupArn: 'placementGroupArn',\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  tenancy: 'tenancy',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::CapacityReservation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 395
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 225
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 428
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 451
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCapacityReservation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 229
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "remarks": "For example: `us-east-1a` .",
            "stability": "external",
            "summary": "Returns the Availability Zone in which the capacity is reserved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 254
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailableInstanceCount"
            },
            "remarks": "For example: `9` .",
            "stability": "external",
            "summary": "Returns the remaining capacity, which indicates the number of instances that can be launched in the Capacity Reservation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 260
          },
          "name": "attrAvailableInstanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "InstanceType"
            },
            "remarks": "For example: `m4.large` .",
            "stability": "external",
            "summary": "Returns the type of instance for which the capacity is reserved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 266
          },
          "name": "attrInstanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Tenancy"
            },
            "remarks": "For example: `dedicated` .",
            "stability": "external",
            "summary": "Returns the tenancy of the Capacity Reservation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 272
          },
          "name": "attrTenancy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TotalInstanceCount"
            },
            "remarks": "For example: `15` .",
            "stability": "external",
            "summary": "Returns the total number of instances for which the Capacity Reservation reserves capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 278
          },
          "name": "attrTotalInstanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 433
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone in which to create the Capacity Reservation."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 285
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount"
            },
            "remarks": "Valid range: 1 - 1000",
            "stability": "external",
            "summary": "The number of instances for which to reserve capacity."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 294
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform"
            },
            "stability": "external",
            "summary": "The type of operating system for which to reserve capacity."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 301
          },
          "name": "instancePlatform",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype"
            },
            "remarks": "For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The instance type for which to reserve capacity."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 308
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized"
            },
            "remarks": "This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.",
            "stability": "external",
            "summary": "Indicates whether the Capacity Reservation supports EBS-optimized instances."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 315
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate"
            },
            "remarks": "When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to `expired` when it reaches its end date and time.\n\nYou must provide an `EndDate` value if `EndDateType` is `limited` . Omit `EndDate` if `EndDateType` is `unlimited` .\n\nIf the `EndDateType` is `limited` , the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.",
            "stability": "external",
            "summary": "The date and time at which the Capacity Reservation expires."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 326
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype"
            },
            "remarks": "A Capacity Reservation can have one of the following end types:\n\n- `unlimited` - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an `EndDate` if the `EndDateType` is `unlimited` .\n- `limited` - The Capacity Reservation expires automatically at a specified date and time. You must provide an `EndDate` value if the `EndDateType` value is `limited` .",
            "stability": "external",
            "summary": "Indicates the way in which the Capacity Reservation ends."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 336
          },
          "name": "endDateType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage"
            },
            "stability": "external",
            "summary": "Indicates whether the Capacity Reservation supports instances with temporary, block-level storage."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 343
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria"
            },
            "remarks": "- `open` - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.\n- `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.\n\nDefault: `open`",
            "stability": "external",
            "summary": "Indicates the type of instance launches that the Capacity Reservation accepts. The options include:."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 355
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-outpostarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 362
          },
          "name": "outPostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-placementgrouparn"
            },
            "remarks": "For more information, see [Capacity Reservations for cluster placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 369
          },
          "name": "placementGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications"
            },
            "stability": "external",
            "summary": "The tags to apply to the Capacity Reservation during launch."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 376
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy"
            },
            "remarks": "- `default` - The Capacity Reservation is created on hardware that is shared with other AWS accounts .\n- `dedicated` - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account .",
            "stability": "external",
            "summary": "Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 386
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservation"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .",
        "stability": "external",
        "summary": "An array of key-value pairs to apply to this resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst tagSpecificationProperty: ec2.CfnCapacityReservation.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 467
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnCapacityReservation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html#cfn-ec2-capacityreservation-tagspecification-resourcetype"
            },
            "remarks": "Specify `capacity-reservation` .",
            "stability": "external",
            "summary": "The type of resource to tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 473
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservation-tagspecification.html#cfn-ec2-capacityreservation-tagspecification-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 479
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservation.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationFleet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CapacityReservationFleet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a new Capacity Reservation Fleet with the specified attributes. For more information, see [Capacity Reservation Fleets](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-fleets.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::CapacityReservationFleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnCapacityReservationFleet = new ec2.CfnCapacityReservationFleet(this, 'MyCfnCapacityReservationFleet', /* all optional props */ {\n  allocationStrategy: 'allocationStrategy',\n  endDate: 'endDate',\n  instanceMatchCriteria: 'instanceMatchCriteria',\n  instanceTypeSpecifications: [{\n    availabilityZone: 'availabilityZone',\n    availabilityZoneId: 'availabilityZoneId',\n    ebsOptimized: false,\n    instancePlatform: 'instancePlatform',\n    instanceType: 'instanceType',\n    priority: 123,\n    weight: 123,\n  }],\n  noRemoveEndDate: false,\n  removeEndDate: false,\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  tenancy: 'tenancy',\n  totalTargetCapacity: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::CapacityReservationFleet`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 806
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 696
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 827
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 846
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCapacityReservationFleet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 700
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CapacityReservationFleetId"
            },
            "stability": "external",
            "summary": "The ID of the Capacity Reservation Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 725
          },
          "name": "attrCapacityReservationFleetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 832
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-allocationstrategy"
            },
            "remarks": "Currently, only the `prioritized` allocation strategy is supported. For more information, see [Allocation strategy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy) in the Amazon EC2 User Guide.\n\nValid values: `prioritized`",
            "stability": "external",
            "summary": "The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 734
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-enddate"
            },
            "remarks": "When the Capacity Reservation Fleet expires, its state changes to `expired` and all of the Capacity Reservations in the Fleet expire.\n\nThe Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify `5/31/2019` , `13:30:55` , the Capacity Reservation Fleet is guaranteed to expire between `13:30:55` and `14:30:55` on `5/31/2019` .",
            "stability": "external",
            "summary": "The date and time at which the Capacity Reservation Fleet expires."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 743
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancematchcriteria"
            },
            "remarks": "All Capacity Reservations in the Fleet inherit this instance matching criteria.\n\nCurrently, Capacity Reservation Fleets support `open` instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.",
            "stability": "external",
            "summary": "Indicates the type of instance launches that the Capacity Reservation Fleet accepts."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 752
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancetypespecifications"
            },
            "stability": "external",
            "summary": "Information about the instance types for which to reserve the capacity."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 759
          },
          "name": "instanceTypeSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-noremoveenddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.NoRemoveEndDate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 766
          },
          "name": "noRemoveEndDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-removeenddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.RemoveEndDate`."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 773
          },
          "name": "removeEndDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tagspecifications"
            },
            "remarks": "The tags are automatically assigned to the Capacity Reservations in the Fleet.",
            "stability": "external",
            "summary": "The tags to assign to the Capacity Reservation Fleet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 780
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tenancy"
            },
            "remarks": "All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:\n\n- `default` - The Capacity Reservation Fleet is created on hardware that is shared with other AWS accounts .\n- `dedicated` - The Capacity Reservations are created on single-tenant hardware that is dedicated to a single AWS account .",
            "stability": "external",
            "summary": "Indicates the tenancy of the Capacity Reservation Fleet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 790
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-totaltargetcapacity"
            },
            "remarks": "This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the Amazon EC2 User Guide.",
            "stability": "external",
            "summary": "The total number of capacity units to be reserved by the Capacity Reservation Fleet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 797
          },
          "name": "totalTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationFleet"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`InstanceTypeSpecification` is a property of the [AWS::EC2::CapacityReservationFleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html) resource.",
        "stability": "external",
        "summary": "Specifies information about an instance type to use in a Capacity Reservation Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceTypeSpecificationProperty: ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty = {\n  availabilityZone: 'availabilityZone',\n  availabilityZoneId: 'availabilityZoneId',\n  ebsOptimized: false,\n  instancePlatform: 'instancePlatform',\n  instanceType: 'instanceType',\n  priority: 123,\n  weight: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 862
      },
      "name": "InstanceTypeSpecificationProperty",
      "namespace": "CfnCapacityReservationFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-availabilityzone"
            },
            "remarks": "A Capacity Reservation Fleet can't span Availability Zones. All instance type specifications that you specify for the Fleet must use the same Availability Zone.",
            "stability": "external",
            "summary": "The Availability Zone in which the Capacity Reservation Fleet reserves the capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 868
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-availabilityzoneid"
            },
            "remarks": "A Capacity Reservation Fleet can't span Availability Zones. All instance type specifications that you specify for the Fleet must use the same Availability Zone.",
            "stability": "external",
            "summary": "The ID of the Availability Zone in which the Capacity Reservation Fleet reserves the capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 874
          },
          "name": "availabilityZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-ebsoptimized"
            },
            "remarks": "This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using EBS-optimized instance types.",
            "stability": "external",
            "summary": "Indicates whether the Capacity Reservation Fleet supports EBS-optimized instances types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 880
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-instanceplatform"
            },
            "stability": "external",
            "summary": "The type of operating system for which the Capacity Reservation Fleet reserves capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 886
          },
          "name": "instancePlatform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-instancetype"
            },
            "stability": "external",
            "summary": "The instance type for which the Capacity Reservation Fleet reserves capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 892
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-priority"
            },
            "remarks": "This value is used to determine which of the instance types specified for the Fleet should be prioritized for use. A lower value indicates a high priority. For more information, see [Instance type priority](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#instance-priority) in the Amazon EC2 User Guide.",
            "stability": "external",
            "summary": "The priority to assign to the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 898
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-instancetypespecification.html#cfn-ec2-capacityreservationfleet-instancetypespecification-weight"
            },
            "remarks": "This value, together with the total target capacity that you specify for the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the Amazon EC2 User Guide.\n\nValid Range: Minimum value of `0.001` . Maximum value of `99.999` .",
            "stability": "external",
            "summary": "The number of capacity units provided by the specified instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 906
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationFleet.InstanceTypeSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The tags to apply to a resource when the resource is being created.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst tagSpecificationProperty: ec2.CfnCapacityReservationFleet.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 985
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnCapacityReservationFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html#cfn-ec2-capacityreservationfleet-tagspecification-resourcetype"
            },
            "remarks": "To tag a resource after it has been created, see [CreateTags](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html) .",
            "stability": "external",
            "summary": "The type of resource to tag on creation. Specify `capacity-reservation-fleet` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 993
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-capacityreservationfleet-tagspecification.html#cfn-ec2-capacityreservationfleet-tagspecification-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 999
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationFleet.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationFleetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCapacityReservationFleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnCapacityReservationFleetProps: ec2.CfnCapacityReservationFleetProps = {\n  allocationStrategy: 'allocationStrategy',\n  endDate: 'endDate',\n  instanceMatchCriteria: 'instanceMatchCriteria',\n  instanceTypeSpecifications: [{\n    availabilityZone: 'availabilityZone',\n    availabilityZoneId: 'availabilityZoneId',\n    ebsOptimized: false,\n    instancePlatform: 'instancePlatform',\n    instanceType: 'instanceType',\n    priority: 123,\n    weight: 123,\n  }],\n  noRemoveEndDate: false,\n  removeEndDate: false,\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  tenancy: 'tenancy',\n  totalTargetCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 542
      },
      "name": "CfnCapacityReservationFleetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-allocationstrategy"
            },
            "remarks": "Currently, only the `prioritized` allocation strategy is supported. For more information, see [Allocation strategy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy) in the Amazon EC2 User Guide.\n\nValid values: `prioritized`",
            "stability": "external",
            "summary": "The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 551
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-enddate"
            },
            "remarks": "When the Capacity Reservation Fleet expires, its state changes to `expired` and all of the Capacity Reservations in the Fleet expire.\n\nThe Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify `5/31/2019` , `13:30:55` , the Capacity Reservation Fleet is guaranteed to expire between `13:30:55` and `14:30:55` on `5/31/2019` .",
            "stability": "external",
            "summary": "The date and time at which the Capacity Reservation Fleet expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 560
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancematchcriteria"
            },
            "remarks": "All Capacity Reservations in the Fleet inherit this instance matching criteria.\n\nCurrently, Capacity Reservation Fleets support `open` instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.",
            "stability": "external",
            "summary": "Indicates the type of instance launches that the Capacity Reservation Fleet accepts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 569
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancetypespecifications"
            },
            "stability": "external",
            "summary": "Information about the instance types for which to reserve the capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 576
          },
          "name": "instanceTypeSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.InstanceTypeSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-noremoveenddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.NoRemoveEndDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 583
          },
          "name": "noRemoveEndDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-removeenddate"
            },
            "stability": "external",
            "summary": "`AWS::EC2::CapacityReservationFleet.RemoveEndDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 590
          },
          "name": "removeEndDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tagspecifications"
            },
            "remarks": "The tags are automatically assigned to the Capacity Reservations in the Fleet.",
            "stability": "external",
            "summary": "The tags to assign to the Capacity Reservation Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 597
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationFleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tenancy"
            },
            "remarks": "All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:\n\n- `default` - The Capacity Reservation Fleet is created on hardware that is shared with other AWS accounts .\n- `dedicated` - The Capacity Reservations are created on single-tenant hardware that is dedicated to a single AWS account .",
            "stability": "external",
            "summary": "Indicates the tenancy of the Capacity Reservation Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 607
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-totaltargetcapacity"
            },
            "remarks": "This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the Amazon EC2 User Guide.",
            "stability": "external",
            "summary": "The total number of capacity units to be reserved by the Capacity Reservation Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 614
          },
          "name": "totalTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationFleetProps"
    },
    "@aws-cdk/aws-ec2.CfnCapacityReservationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCapacityReservation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnCapacityReservationProps: ec2.CfnCapacityReservationProps = {\n  availabilityZone: 'availabilityZone',\n  instanceCount: 123,\n  instancePlatform: 'instancePlatform',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  ebsOptimized: false,\n  endDate: 'endDate',\n  endDateType: 'endDateType',\n  ephemeralStorage: false,\n  instanceMatchCriteria: 'instanceMatchCriteria',\n  outPostArn: 'outPostArn',\n  placementGroupArn: 'placementGroupArn',\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  tenancy: 'tenancy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19
      },
      "name": "CfnCapacityReservationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone in which to create the Capacity Reservation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount"
            },
            "remarks": "Valid range: 1 - 1000",
            "stability": "external",
            "summary": "The number of instances for which to reserve capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 35
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform"
            },
            "stability": "external",
            "summary": "The type of operating system for which to reserve capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 42
          },
          "name": "instancePlatform",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype"
            },
            "remarks": "For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The instance type for which to reserve capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 49
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized"
            },
            "remarks": "This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.",
            "stability": "external",
            "summary": "Indicates whether the Capacity Reservation supports EBS-optimized instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 56
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate"
            },
            "remarks": "When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to `expired` when it reaches its end date and time.\n\nYou must provide an `EndDate` value if `EndDateType` is `limited` . Omit `EndDate` if `EndDateType` is `unlimited` .\n\nIf the `EndDateType` is `limited` , the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.",
            "stability": "external",
            "summary": "The date and time at which the Capacity Reservation expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 67
          },
          "name": "endDate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype"
            },
            "remarks": "A Capacity Reservation can have one of the following end types:\n\n- `unlimited` - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an `EndDate` if the `EndDateType` is `unlimited` .\n- `limited` - The Capacity Reservation expires automatically at a specified date and time. You must provide an `EndDate` value if the `EndDateType` value is `limited` .",
            "stability": "external",
            "summary": "Indicates the way in which the Capacity Reservation ends."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 77
          },
          "name": "endDateType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage"
            },
            "stability": "external",
            "summary": "Indicates whether the Capacity Reservation supports instances with temporary, block-level storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 84
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria"
            },
            "remarks": "- `open` - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.\n- `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.\n\nDefault: `open`",
            "stability": "external",
            "summary": "Indicates the type of instance launches that the Capacity Reservation accepts. The options include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 96
          },
          "name": "instanceMatchCriteria",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-outpostarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 103
          },
          "name": "outPostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-placementgrouparn"
            },
            "remarks": "For more information, see [Capacity Reservations for cluster placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 110
          },
          "name": "placementGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications"
            },
            "stability": "external",
            "summary": "The tags to apply to the Capacity Reservation during launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 117
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnCapacityReservation.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy"
            },
            "remarks": "- `default` - The Capacity Reservation is created on hardware that is shared with other AWS accounts .\n- `dedicated` - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account .",
            "stability": "external",
            "summary": "Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 127
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCapacityReservationProps"
    },
    "@aws-cdk/aws-ec2.CfnCarrierGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CarrierGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a carrier gateway. For more information about carrier gateways, see [Carrier gateways](https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#wavelength-carrier-gateway) in the *AWS Wavelength Developer Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::CarrierGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnCarrierGateway = new ec2.CfnCarrierGateway(this, 'MyCfnCarrierGateway', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCarrierGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::CarrierGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 1202
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCarrierGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1138
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1219
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1231
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCarrierGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1142
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CarrierGatewayId"
            },
            "stability": "external",
            "summary": "The ID of the carrier gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1167
          },
          "name": "attrCarrierGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OwnerId"
            },
            "stability": "external",
            "summary": "The AWS account ID of the owner of the carrier gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1173
          },
          "name": "attrOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external",
            "summary": "The state of the carrier gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1179
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1224
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-tags"
            },
            "stability": "external",
            "summary": "The tags assigned to the carrier gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1193
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC associated with the carrier gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1186
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCarrierGateway"
    },
    "@aws-cdk/aws-ec2.CfnCarrierGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCarrierGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnCarrierGatewayProps: ec2.CfnCarrierGatewayProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCarrierGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1062
      },
      "name": "CfnCarrierGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC associated with the carrier gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1069
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-tags"
            },
            "stability": "external",
            "summary": "The tags assigned to the carrier gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1076
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCarrierGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnAuthorizationRule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies an ingress authorization rule to add to a Client VPN endpoint. Ingress authorization rules act as firewall rules that grant access to networks. You must configure ingress authorization rules to enable clients to access resources in AWS or on-premises networks.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnAuthorizationRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnClientVpnAuthorizationRule = new ec2.CfnClientVpnAuthorizationRule(this, 'MyCfnClientVpnAuthorizationRule', {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  targetNetworkCidr: 'targetNetworkCidr',\n\n  // the properties below are optional\n  accessGroupId: 'accessGroupId',\n  authorizeAllGroups: false,\n  description: 'description',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::ClientVpnAuthorizationRule`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 1418
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1351
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1436
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1451
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnAuthorizationRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1355
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1441
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "The ID of the Client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1381
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr"
            },
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR notation, of the network for which access is being authorized."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1388
          },
          "name": "targetNetworkCidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid"
            },
            "remarks": "Required if `AuthorizeAllGroups` is `false` or not specified.",
            "stability": "external",
            "summary": "The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1395
          },
          "name": "accessGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups"
            },
            "remarks": "Specify `true` to grant all clients who successfully establish a VPN connection access to the network. Must be set to `true` if `AccessGroupId` is not specified.",
            "stability": "external",
            "summary": "Indicates whether to grant access to all clients."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1402
          },
          "name": "authorizeAllGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description"
            },
            "stability": "external",
            "summary": "A brief description of the authorization rule."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1409
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnAuthorizationRule"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnClientVpnAuthorizationRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnClientVpnAuthorizationRuleProps: ec2.CfnClientVpnAuthorizationRuleProps = {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  targetNetworkCidr: 'targetNetworkCidr',\n\n  // the properties below are optional\n  accessGroupId: 'accessGroupId',\n  authorizeAllGroups: false,\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnAuthorizationRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1244
      },
      "name": "CfnClientVpnAuthorizationRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "The ID of the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1251
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr"
            },
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR notation, of the network for which access is being authorized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1258
          },
          "name": "targetNetworkCidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid"
            },
            "remarks": "Required if `AuthorizeAllGroups` is `false` or not specified.",
            "stability": "external",
            "summary": "The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1265
          },
          "name": "accessGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups"
            },
            "remarks": "Specify `true` to grant all clients who successfully establish a VPN connection access to the network. Must be set to `true` if `AccessGroupId` is not specified.",
            "stability": "external",
            "summary": "Indicates whether to grant access to all clients."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1272
          },
          "name": "authorizeAllGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description"
            },
            "stability": "external",
            "summary": "A brief description of the authorization rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1279
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnAuthorizationRuleProps"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnEndpoint",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a Client VPN endpoint. A Client VPN endpoint is the resource you create and configure to enable and manage client VPN sessions. It is the destination endpoint at which all client VPN sessions are terminated.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnClientVpnEndpoint = new ec2.CfnClientVpnEndpoint(this, 'MyCfnClientVpnEndpoint', {\n  authenticationOptions: [{\n    type: 'type',\n\n    // the properties below are optional\n    activeDirectory: {\n      directoryId: 'directoryId',\n    },\n    federatedAuthentication: {\n      samlProviderArn: 'samlProviderArn',\n\n      // the properties below are optional\n      selfServiceSamlProviderArn: 'selfServiceSamlProviderArn',\n    },\n    mutualAuthentication: {\n      clientRootCertificateChainArn: 'clientRootCertificateChainArn',\n    },\n  }],\n  clientCidrBlock: 'clientCidrBlock',\n  connectionLogOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    cloudwatchLogGroup: 'cloudwatchLogGroup',\n    cloudwatchLogStream: 'cloudwatchLogStream',\n  },\n  serverCertificateArn: 'serverCertificateArn',\n\n  // the properties below are optional\n  clientConnectOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    lambdaFunctionArn: 'lambdaFunctionArn',\n  },\n  clientLoginBannerOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    bannerText: 'bannerText',\n  },\n  description: 'description',\n  dnsServers: ['dnsServers'],\n  securityGroupIds: ['securityGroupIds'],\n  selfServicePortal: 'selfServicePortal',\n  sessionTimeoutHours: 123,\n  splitTunnel: false,\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  transportProtocol: 'transportProtocol',\n  vpcId: 'vpcId',\n  vpnPort: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::ClientVpnEndpoint`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 1873
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1706
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1904
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1930
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnEndpoint",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1710
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1909
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions"
            },
            "stability": "external",
            "summary": "Information about the authentication method to be used to authenticate clients."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1736
          },
          "name": "authenticationOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock"
            },
            "remarks": "The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR notation, from which to assign client IP addresses."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1743
          },
          "name": "clientCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions"
            },
            "remarks": "If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:\n\n- Client connection requests\n- Client connection results (successful and unsuccessful)\n- Reasons for unsuccessful client connection requests\n- Client connection termination time",
            "stability": "external",
            "summary": "Information about the client connection logging options."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1757
          },
          "name": "connectionLogOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn"
            },
            "remarks": "For more information, see the [AWS Certificate Manager User Guide](https://docs.aws.amazon.com/acm/latest/userguide/) .",
            "stability": "external",
            "summary": "The ARN of the server certificate."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1764
          },
          "name": "serverCertificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientconnectoptions"
            },
            "stability": "external",
            "summary": "The options for managing connection authorization for new client connections."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1771
          },
          "name": "clientConnectOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions"
            },
            "stability": "external",
            "summary": "Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1778
          },
          "name": "clientLoginBannerOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description"
            },
            "stability": "external",
            "summary": "A brief description of the Client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1785
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers"
            },
            "remarks": "A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.",
            "stability": "external",
            "summary": "Information about the DNS servers to be used for DNS resolution."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1792
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-securitygroupids"
            },
            "remarks": "You must also specify the ID of the VPC that contains the security groups.",
            "stability": "external",
            "summary": "The IDs of one or more security groups to apply to the target network."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1799
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-selfserviceportal"
            },
            "remarks": "Default Value: `enabled`",
            "stability": "external",
            "summary": "Specify whether to enable the self-service portal for the Client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1808
          },
          "name": "selfServicePortal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-sessiontimeouthours"
            },
            "remarks": "Valid values: `8 | 10 | 12 | 24`\n\nDefault value: `24`",
            "stability": "external",
            "summary": "The maximum VPN session duration time in hours."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1819
          },
          "name": "sessionTimeoutHours",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-splittunnel"
            },
            "remarks": "By default, split-tunnel on a VPN endpoint is disabled.\n\nFor information about split-tunnel VPN endpoints, see [Split-tunnel AWS Client VPN endpoint](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html) in the *AWS Client VPN Administrator Guide* .",
            "stability": "external",
            "summary": "Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1830
          },
          "name": "splitTunnel",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications"
            },
            "stability": "external",
            "summary": "The tags to apply to the Client VPN endpoint during creation."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1837
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol"
            },
            "remarks": "Default value: `udp`",
            "stability": "external",
            "summary": "The transport protocol to be used by the VPN session."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1846
          },
          "name": "transportProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpcid"
            },
            "remarks": "If no security group IDs are specified in the request, the default security group for the VPC is applied.",
            "stability": "external",
            "summary": "The ID of the VPC to associate with the Client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1853
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpnport"
            },
            "remarks": "Valid Values: `443` | `1194`\n\nDefault Value: `443`",
            "stability": "external",
            "summary": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1864
          },
          "name": "vpnPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-certificateauthenticationrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about the client certificate to be used for authentication.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst certificateAuthenticationRequestProperty: ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty = {\n  clientRootCertificateChainArn: 'clientRootCertificateChainArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1944
      },
      "name": "CertificateAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-certificateauthenticationrequest.html#cfn-ec2-clientvpnendpoint-certificateauthenticationrequest-clientrootcertificatechainarn"
            },
            "remarks": "The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM).",
            "stability": "external",
            "summary": "The ARN of the client certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1950
          },
          "name": "clientRootCertificateChainArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Authentication](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/authentication-authrization.html#client-authentication) in the *AWS Client VPN Administrator Guide* .",
        "stability": "external",
        "summary": "Describes the authentication method to be used by a Client VPN endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst clientAuthenticationRequestProperty: ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  activeDirectory: {\n    directoryId: 'directoryId',\n  },\n  federatedAuthentication: {\n    samlProviderArn: 'samlProviderArn',\n\n    // the properties below are optional\n    selfServiceSamlProviderArn: 'selfServiceSamlProviderArn',\n  },\n  mutualAuthentication: {\n    clientRootCertificateChainArn: 'clientRootCertificateChainArn',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2012
      },
      "name": "ClientAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-type"
            },
            "stability": "external",
            "summary": "The type of client authentication to be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2036
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-activedirectory"
            },
            "remarks": "You must provide this information if *Type* is `directory-service-authentication` .",
            "stability": "external",
            "summary": "Information about the Active Directory to be used, if applicable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2018
          },
          "name": "activeDirectory",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-federatedauthentication"
            },
            "stability": "external",
            "summary": "Information about the IAM SAML identity provider, if applicable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2024
          },
          "name": "federatedAuthentication",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html#cfn-ec2-clientvpnendpoint-clientauthenticationrequest-mutualauthentication"
            },
            "remarks": "You must provide this information if *Type* is `certificate-authentication` .",
            "stability": "external",
            "summary": "Information about the authentication certificates to be used, if applicable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2030
          },
          "name": "mutualAuthentication",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.CertificateAuthenticationRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.ClientAuthenticationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The default is `false` (not enabled).",
        "stability": "external",
        "summary": "Indicates whether client connect options are enabled.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst clientConnectOptionsProperty: ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  lambdaFunctionArn: 'lambdaFunctionArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2107
      },
      "name": "ClientConnectOptionsProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html#cfn-ec2-clientvpnendpoint-clientconnectoptions-enabled"
            },
            "remarks": "The default is `false` (not enabled).",
            "stability": "external",
            "summary": "Indicates whether client connect options are enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2113
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html#cfn-ec2-clientvpnendpoint-clientconnectoptions-lambdafunctionarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the AWS Lambda function used for connection authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2119
          },
          "name": "lambdaFunctionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.ClientConnectOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst clientLoginBannerOptionsProperty: ec2.CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  bannerText: 'bannerText',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2184
      },
      "name": "ClientLoginBannerOptionsProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions-enabled"
            },
            "remarks": "Valid values: `true | false`\n\nDefault value: `false`",
            "stability": "external",
            "summary": "Enable or disable a customizable text banner that will be displayed on AWS provided clients when a VPN session is established."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2200
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions-bannertext"
            },
            "remarks": "UTF-8 encoded characters only. Maximum of 1400 characters.",
            "stability": "external",
            "summary": "Customizable text that will be displayed in a banner on AWS provided clients when a VPN session is established."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2190
          },
          "name": "bannerText",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the client connection logging options for the Client VPN endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst connectionLogOptionsProperty: ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty = {\n  enabled: false,\n\n  // the properties below are optional\n  cloudwatchLogGroup: 'cloudwatchLogGroup',\n  cloudwatchLogStream: 'cloudwatchLogStream',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2265
      },
      "name": "ConnectionLogOptionsProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-enabled"
            },
            "stability": "external",
            "summary": "Indicates whether connection logging is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2283
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-cloudwatchloggroup"
            },
            "remarks": "Required if connection logging is enabled.",
            "stability": "external",
            "summary": "The name of the CloudWatch Logs log group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2271
          },
          "name": "cloudwatchLogGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-connectionlogoptions.html#cfn-ec2-clientvpnendpoint-connectionlogoptions-cloudwatchlogstream"
            },
            "stability": "external",
            "summary": "The name of the CloudWatch Logs log stream to which the connection data is published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2277
          },
          "name": "cloudwatchLogStream",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.ConnectionLogOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-directoryserviceauthenticationrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the Active Directory to be used for client authentication.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst directoryServiceAuthenticationRequestProperty: ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty = {\n  directoryId: 'directoryId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2351
      },
      "name": "DirectoryServiceAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-directoryserviceauthenticationrequest.html#cfn-ec2-clientvpnendpoint-directoryserviceauthenticationrequest-directoryid"
            },
            "stability": "external",
            "summary": "The ID of the Active Directory to be used for authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2357
          },
          "name": "directoryId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.DirectoryServiceAuthenticationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The IAM SAML identity provider used for federated authentication.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst federatedAuthenticationRequestProperty: ec2.CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty = {\n  samlProviderArn: 'samlProviderArn',\n\n  // the properties below are optional\n  selfServiceSamlProviderArn: 'selfServiceSamlProviderArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2419
      },
      "name": "FederatedAuthenticationRequestProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html#cfn-ec2-clientvpnendpoint-federatedauthenticationrequest-samlproviderarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM SAML identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2425
          },
          "name": "samlProviderArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html#cfn-ec2-clientvpnendpoint-federatedauthenticationrequest-selfservicesamlproviderarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM SAML identity provider for the self-service portal."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2431
          },
          "name": "selfServiceSamlProviderArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.FederatedAuthenticationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The tags to apply to a resource when the resource is being created.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst tagSpecificationProperty: ec2.CfnClientVpnEndpoint.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2496
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html#cfn-ec2-clientvpnendpoint-tagspecification-resourcetype"
            },
            "stability": "external",
            "summary": "The type of resource to tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2502
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-tagspecification.html#cfn-ec2-clientvpnendpoint-tagspecification-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2508
          },
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpoint.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnClientVpnEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnClientVpnEndpointProps: ec2.CfnClientVpnEndpointProps = {\n  authenticationOptions: [{\n    type: 'type',\n\n    // the properties below are optional\n    activeDirectory: {\n      directoryId: 'directoryId',\n    },\n    federatedAuthentication: {\n      samlProviderArn: 'samlProviderArn',\n\n      // the properties below are optional\n      selfServiceSamlProviderArn: 'selfServiceSamlProviderArn',\n    },\n    mutualAuthentication: {\n      clientRootCertificateChainArn: 'clientRootCertificateChainArn',\n    },\n  }],\n  clientCidrBlock: 'clientCidrBlock',\n  connectionLogOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    cloudwatchLogGroup: 'cloudwatchLogGroup',\n    cloudwatchLogStream: 'cloudwatchLogStream',\n  },\n  serverCertificateArn: 'serverCertificateArn',\n\n  // the properties below are optional\n  clientConnectOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    lambdaFunctionArn: 'lambdaFunctionArn',\n  },\n  clientLoginBannerOptions: {\n    enabled: false,\n\n    // the properties below are optional\n    bannerText: 'bannerText',\n  },\n  description: 'description',\n  dnsServers: ['dnsServers'],\n  securityGroupIds: ['securityGroupIds'],\n  selfServicePortal: 'selfServicePortal',\n  sessionTimeoutHours: 123,\n  splitTunnel: false,\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  transportProtocol: 'transportProtocol',\n  vpcId: 'vpcId',\n  vpnPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 1464
      },
      "name": "CfnClientVpnEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions"
            },
            "stability": "external",
            "summary": "Information about the authentication method to be used to authenticate clients."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1471
          },
          "name": "authenticationOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientAuthenticationRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock"
            },
            "remarks": "The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR notation, from which to assign client IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1478
          },
          "name": "clientCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions"
            },
            "remarks": "If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:\n\n- Client connection requests\n- Client connection results (successful and unsuccessful)\n- Reasons for unsuccessful client connection requests\n- Client connection termination time",
            "stability": "external",
            "summary": "Information about the client connection logging options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1492
          },
          "name": "connectionLogOptions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ConnectionLogOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn"
            },
            "remarks": "For more information, see the [AWS Certificate Manager User Guide](https://docs.aws.amazon.com/acm/latest/userguide/) .",
            "stability": "external",
            "summary": "The ARN of the server certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1499
          },
          "name": "serverCertificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientconnectoptions"
            },
            "stability": "external",
            "summary": "The options for managing connection authorization for new client connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1506
          },
          "name": "clientConnectOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientConnectOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions"
            },
            "stability": "external",
            "summary": "Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1513
          },
          "name": "clientLoginBannerOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.ClientLoginBannerOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description"
            },
            "stability": "external",
            "summary": "A brief description of the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1520
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers"
            },
            "remarks": "A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.",
            "stability": "external",
            "summary": "Information about the DNS servers to be used for DNS resolution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1527
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-securitygroupids"
            },
            "remarks": "You must also specify the ID of the VPC that contains the security groups.",
            "stability": "external",
            "summary": "The IDs of one or more security groups to apply to the target network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1534
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-selfserviceportal"
            },
            "remarks": "Default Value: `enabled`",
            "stability": "external",
            "summary": "Specify whether to enable the self-service portal for the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1543
          },
          "name": "selfServicePortal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-sessiontimeouthours"
            },
            "remarks": "Valid values: `8 | 10 | 12 | 24`\n\nDefault value: `24`",
            "stability": "external",
            "summary": "The maximum VPN session duration time in hours."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1554
          },
          "name": "sessionTimeoutHours",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-splittunnel"
            },
            "remarks": "By default, split-tunnel on a VPN endpoint is disabled.\n\nFor information about split-tunnel VPN endpoints, see [Split-tunnel AWS Client VPN endpoint](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html) in the *AWS Client VPN Administrator Guide* .",
            "stability": "external",
            "summary": "Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1565
          },
          "name": "splitTunnel",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications"
            },
            "stability": "external",
            "summary": "The tags to apply to the Client VPN endpoint during creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1572
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnClientVpnEndpoint.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol"
            },
            "remarks": "Default value: `udp`",
            "stability": "external",
            "summary": "The transport protocol to be used by the VPN session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1581
          },
          "name": "transportProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpcid"
            },
            "remarks": "If no security group IDs are specified in the request, the default security group for the VPC is applied.",
            "stability": "external",
            "summary": "The ID of the VPC to associate with the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1588
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpnport"
            },
            "remarks": "Valid Values: `443` | `1194`\n\nDefault Value: `443`",
            "stability": "external",
            "summary": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 1599
          },
          "name": "vpnPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnEndpointProps"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnRoute",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a network route to add to a Client VPN endpoint. Each Client VPN endpoint has a route table that describes the available destination network routes. Each route in the route table specifies the path for traffic to specific resources or networks.\n\nA target network association must be created before you can specify a route. If you're setting up all the components of a Client VPN endpoint at the same time, you must use the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the `AWS::EC2::ClientVpnTargetNetworkAssociation` resource.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnClientVpnRoute = new ec2.CfnClientVpnRoute(this, 'MyCfnClientVpnRoute', {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  destinationCidrBlock: 'destinationCidrBlock',\n  targetVpcSubnetId: 'targetVpcSubnetId',\n\n  // the properties below are optional\n  description: 'description',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::ClientVpnRoute`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 2747
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2680
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2765
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2779
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2684
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2770
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "The ID of the Client VPN endpoint to which to add the route."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2710
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock"
            },
            "remarks": "- To add a route for Internet access, enter `0.0.0.0/0`\n- To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range\n- To add a route for an on-premises network, enter the AWS Site-to-Site VPN connection's IPv4 CIDR range\n- To add a route for the local network, enter the client CIDR range",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR notation, of the route destination. For example:."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2722
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid"
            },
            "remarks": "The specified subnet must be an existing target network of the Client VPN endpoint.\n\nAlternatively, if you're adding a route for the local network, specify `local` .",
            "stability": "external",
            "summary": "The ID of the subnet through which you want to route traffic."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2731
          },
          "name": "targetVpcSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description"
            },
            "stability": "external",
            "summary": "A brief description of the route."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2738
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnRoute"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnClientVpnRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnClientVpnRouteProps: ec2.CfnClientVpnRouteProps = {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  destinationCidrBlock: 'destinationCidrBlock',\n  targetVpcSubnetId: 'targetVpcSubnetId',\n\n  // the properties below are optional\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2573
      },
      "name": "CfnClientVpnRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "The ID of the Client VPN endpoint to which to add the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2580
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock"
            },
            "remarks": "- To add a route for Internet access, enter `0.0.0.0/0`\n- To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range\n- To add a route for an on-premises network, enter the AWS Site-to-Site VPN connection's IPv4 CIDR range\n- To add a route for the local network, enter the client CIDR range",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR notation, of the route destination. For example:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2592
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid"
            },
            "remarks": "The specified subnet must be an existing target network of the Client VPN endpoint.\n\nAlternatively, if you're adding a route for the local network, specify `local` .",
            "stability": "external",
            "summary": "The ID of the subnet through which you want to route traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2601
          },
          "name": "targetVpcSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description"
            },
            "stability": "external",
            "summary": "A brief description of the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2608
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::ClientVpnTargetNetworkAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a target network to associate with a Client VPN endpoint. A target network is a subnet in a VPC. You can associate multiple subnets from the same VPC with a Client VPN endpoint. You can associate only one subnet in each Availability Zone. We recommend that you associate at least two subnets to provide Availability Zone redundancy.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::ClientVpnTargetNetworkAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnClientVpnTargetNetworkAssociation = new ec2.CfnClientVpnTargetNetworkAssociation(this, 'MyCfnClientVpnTargetNetworkAssociation', {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  subnetId: 'subnetId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::ClientVpnTargetNetworkAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 2915
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2869
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2930
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2942
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnClientVpnTargetNetworkAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2873
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2935
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "The ID of the Client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2899
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet to associate with the Client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2906
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnTargetNetworkAssociation"
    },
    "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnClientVpnTargetNetworkAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnClientVpnTargetNetworkAssociationProps: ec2.CfnClientVpnTargetNetworkAssociationProps = {\n  clientVpnEndpointId: 'clientVpnEndpointId',\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnClientVpnTargetNetworkAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2792
      },
      "name": "CfnClientVpnTargetNetworkAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid"
            },
            "stability": "external",
            "summary": "The ID of the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2799
          },
          "name": "clientVpnEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet to associate with the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2806
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnClientVpnTargetNetworkAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnCustomerGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::CustomerGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a customer gateway.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::CustomerGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnCustomerGateway = new ec2.CfnCustomerGateway(this, 'MyCfnCustomerGateway', {\n  bgpAsn: 123,\n  ipAddress: 'ipAddress',\n  type: 'type',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCustomerGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::CustomerGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 3117
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnCustomerGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3055
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3135
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3149
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCustomerGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3059
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3140
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags"
            },
            "stability": "external",
            "summary": "One or more tags for the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3108
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn"
            },
            "remarks": "Default: 65000",
            "stability": "external",
            "summary": "For devices that support BGP, the customer gateway's BGP ASN."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3087
          },
          "name": "bgpAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress"
            },
            "remarks": "The address must be static.",
            "stability": "external",
            "summary": "The Internet-routable IP address for the customer gateway's outside interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3094
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type"
            },
            "stability": "external",
            "summary": "The type of VPN connection that this customer gateway supports ( `ipsec.1` )."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3101
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCustomerGateway"
    },
    "@aws-cdk/aws-ec2.CfnCustomerGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCustomerGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnCustomerGatewayProps: ec2.CfnCustomerGatewayProps = {\n  bgpAsn: 123,\n  ipAddress: 'ipAddress',\n  type: 'type',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnCustomerGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 2955
      },
      "name": "CfnCustomerGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn"
            },
            "remarks": "Default: 65000",
            "stability": "external",
            "summary": "For devices that support BGP, the customer gateway's BGP ASN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2964
          },
          "name": "bgpAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress"
            },
            "remarks": "The address must be static.",
            "stability": "external",
            "summary": "The Internet-routable IP address for the customer gateway's outside interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2971
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type"
            },
            "stability": "external",
            "summary": "The type of VPN connection that this customer gateway supports ( `ipsec.1` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2978
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags"
            },
            "stability": "external",
            "summary": "One or more tags for the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 2985
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnCustomerGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnDHCPOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::DHCPOptions",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a set of DHCP options for your VPC.\n\nYou must specify at least one of the following properties: `DomainNameServers` , `NetbiosNameServers` , `NtpServers` . If you specify `NetbiosNameServers` , you must specify `NetbiosNodeType` .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::DHCPOptions`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnDHCPOptions = new ec2.CfnDHCPOptions(this, 'MyCfnDHCPOptions', /* all optional props */ {\n  domainName: 'domainName',\n  domainNameServers: ['domainNameServers'],\n  netbiosNameServers: ['netbiosNameServers'],\n  netbiosNodeType: 123,\n  ntpServers: ['ntpServers'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptions",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::DHCPOptions`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 3359
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptionsProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3279
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3377
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3393
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDHCPOptions",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3283
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DhcpOptionsId"
            },
            "stability": "external",
            "summary": "The ID of the DHCP options set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3308
          },
          "name": "attrDhcpOptionsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3382
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the DHCP options set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3350
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname"
            },
            "remarks": "If you're using AmazonProvidedDNS in `us-east-1` , specify `ec2.internal` . If you're using AmazonProvidedDNS in another Region, specify *region* . `compute.internal` (for example, `ap-northeast-1.compute.internal` ). Otherwise, specify a domain name (for example, *MyCompany.com* ).",
            "stability": "external",
            "summary": "This value is used to complete unqualified DNS hostnames."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3315
          },
          "name": "domainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers"
            },
            "remarks": "The default is `AmazonProvidedDNS` . To have your instance receive a custom DNS hostname as specified in `DomainName` , you must set this property to a custom DNS server.",
            "stability": "external",
            "summary": "The IPv4 addresses of up to four domain name servers, or `AmazonProvidedDNS` ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3322
          },
          "name": "domainNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers"
            },
            "stability": "external",
            "summary": "The IPv4 addresses of up to four NetBIOS name servers."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3329
          },
          "name": "netbiosNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype"
            },
            "remarks": "We recommend that you specify 2 (broadcast and multicast are not currently supported).",
            "stability": "external",
            "summary": "The NetBIOS node type (1, 2, 4, or 8)."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3336
          },
          "name": "netbiosNodeType",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers"
            },
            "stability": "external",
            "summary": "The IPv4 addresses of up to four Network Time Protocol (NTP) servers."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3343
          },
          "name": "ntpServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnDHCPOptions"
    },
    "@aws-cdk/aws-ec2.CfnDHCPOptionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnDHCPOptions`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnDHCPOptionsProps: ec2.CfnDHCPOptionsProps = {\n  domainName: 'domainName',\n  domainNameServers: ['domainNameServers'],\n  netbiosNameServers: ['netbiosNameServers'],\n  netbiosNodeType: 123,\n  ntpServers: ['ntpServers'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnDHCPOptionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3162
      },
      "name": "CfnDHCPOptionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname"
            },
            "remarks": "If you're using AmazonProvidedDNS in `us-east-1` , specify `ec2.internal` . If you're using AmazonProvidedDNS in another Region, specify *region* . `compute.internal` (for example, `ap-northeast-1.compute.internal` ). Otherwise, specify a domain name (for example, *MyCompany.com* ).",
            "stability": "external",
            "summary": "This value is used to complete unqualified DNS hostnames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3169
          },
          "name": "domainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers"
            },
            "remarks": "The default is `AmazonProvidedDNS` . To have your instance receive a custom DNS hostname as specified in `DomainName` , you must set this property to a custom DNS server.",
            "stability": "external",
            "summary": "The IPv4 addresses of up to four domain name servers, or `AmazonProvidedDNS` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3176
          },
          "name": "domainNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers"
            },
            "stability": "external",
            "summary": "The IPv4 addresses of up to four NetBIOS name servers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3183
          },
          "name": "netbiosNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype"
            },
            "remarks": "We recommend that you specify 2 (broadcast and multicast are not currently supported).",
            "stability": "external",
            "summary": "The NetBIOS node type (1, 2, 4, or 8)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3190
          },
          "name": "netbiosNodeType",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers"
            },
            "stability": "external",
            "summary": "The IPv4 addresses of up to four Network Time Protocol (NTP) servers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3197
          },
          "name": "ntpServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the DHCP options set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3204
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnDHCPOptionsProps"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EC2Fleet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies the configuration information to launch a fleet--or group--of instances. An EC2 Fleet can launch multiple instance types across multiple Availability Zones, using the On-Demand Instance, Reserved Instance, and Spot Instance purchasing models together. Using EC2 Fleet, you can define separate On-Demand and Spot capacity targets, specify the instance types that work best for your applications, and specify how Amazon EC2 should distribute your fleet capacity within each purchasing model. For more information, see [Launching an EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet.html) in the *Amazon EC2 User Guide for Linux Instances* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EC2Fleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnEC2Fleet = new ec2.CfnEC2Fleet(this, 'MyCfnEC2Fleet', {\n  launchTemplateConfigs: [{\n    launchTemplateSpecification: {\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n      version: 'version',\n    },\n    overrides: [{\n      availabilityZone: 'availabilityZone',\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      maxPrice: 'maxPrice',\n      placement: {\n        affinity: 'affinity',\n        availabilityZone: 'availabilityZone',\n        groupName: 'groupName',\n        hostId: 'hostId',\n        hostResourceGroupArn: 'hostResourceGroupArn',\n        partitionNumber: 123,\n        spreadDomain: 'spreadDomain',\n        tenancy: 'tenancy',\n      },\n      priority: 123,\n      subnetId: 'subnetId',\n      weightedCapacity: 123,\n    }],\n  }],\n  targetCapacitySpecification: {\n    totalTargetCapacity: 123,\n\n    // the properties below are optional\n    defaultTargetCapacityType: 'defaultTargetCapacityType',\n    onDemandTargetCapacity: 123,\n    spotTargetCapacity: 123,\n    targetCapacityUnitType: 'targetCapacityUnitType',\n  },\n\n  // the properties below are optional\n  context: 'context',\n  excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n  onDemandOptions: {\n    allocationStrategy: 'allocationStrategy',\n    capacityReservationOptions: {\n      usageStrategy: 'usageStrategy',\n    },\n    maxTotalPrice: 'maxTotalPrice',\n    minTargetCapacity: 123,\n    singleAvailabilityZone: false,\n    singleInstanceType: false,\n  },\n  replaceUnhealthyInstances: false,\n  spotOptions: {\n    allocationStrategy: 'allocationStrategy',\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    instancePoolsToUseCount: 123,\n    maintenanceStrategies: {\n      capacityRebalance: {\n        replacementStrategy: 'replacementStrategy',\n        terminationDelay: 123,\n      },\n    },\n    maxTotalPrice: 'maxTotalPrice',\n    minTargetCapacity: 123,\n    singleAvailabilityZone: false,\n    singleInstanceType: false,\n  },\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  terminateInstancesWithExpiration: false,\n  type: 'type',\n  validFrom: 'validFrom',\n  validUntil: 'validUntil',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EC2Fleet`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 3725
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEC2FleetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3593
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3751
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3773
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEC2Fleet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3597
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FleetId"
            },
            "stability": "external",
            "summary": "The ID of the EC2 Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3622
          },
          "name": "attrFleetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3756
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs"
            },
            "stability": "external",
            "summary": "The configuration for the EC2 Fleet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3629
          },
          "name": "launchTemplateConfigs",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification"
            },
            "stability": "external",
            "summary": "The number of units to request."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3636
          },
          "name": "targetCapacitySpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-context"
            },
            "stability": "external",
            "summary": "Reserved."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3643
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy"
            },
            "stability": "external",
            "summary": "Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3650
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions"
            },
            "stability": "external",
            "summary": "Describes the configuration of On-Demand Instances in an EC2 Fleet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3657
          },
          "name": "onDemandOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances"
            },
            "remarks": "Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "Indicates whether EC2 Fleet should replace unhealthy Spot Instances."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3664
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions"
            },
            "stability": "external",
            "summary": "Describes the configuration of Spot Instances in an EC2 Fleet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3671
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications"
            },
            "remarks": "If the fleet type is `instant` , specify a resource type of `fleet` to tag the fleet or `instance` to tag the instances at launch.\n\nIf the fleet type is `maintain` or `request` , specify a resource type of `fleet` to tag the fleet. You cannot specify a resource type of `instance` . To tag instances at launch, specify the tags in a [launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template) .",
            "stability": "external",
            "summary": "The key-value pair for tagging the EC2 Fleet request on creation. For more information, see [Tagging your resources](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources) ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3682
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration"
            },
            "stability": "external",
            "summary": "Indicates whether running instances should be terminated when the EC2 Fleet expires."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3689
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type"
            },
            "remarks": "- `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.\n- `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.\n- `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.\n\nFor more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The fleet type. The default value is `maintain` ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3702
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom"
            },
            "remarks": "The default is to start fulfilling the request immediately.",
            "stability": "external",
            "summary": "The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z)."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3709
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil"
            },
            "remarks": "At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.",
            "stability": "external",
            "summary": "The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z)."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3716
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorCountRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To exclude accelerator-enabled instance types, set `Max` to `0` .",
        "stability": "external",
        "summary": "The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst acceleratorCountRequestProperty: ec2.CfnEC2Fleet.AcceleratorCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3787
      },
      "name": "AcceleratorCountRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html#cfn-ec2-ec2fleet-acceleratorcountrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter. To exclude accelerator-enabled instance types, set `Max` to `0` .",
            "stability": "external",
            "summary": "The maximum number of accelerators."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3793
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratorcountrequest.html#cfn-ec2-ec2fleet-acceleratorcountrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum number of accelerators."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3799
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.AcceleratorCountRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of total accelerator memory, in MiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst acceleratorTotalMemoryMiBRequestProperty: ec2.CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3863
      },
      "name": "AcceleratorTotalMemoryMiBRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html#cfn-ec2-ec2fleet-acceleratortotalmemorymibrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3869
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-acceleratortotalmemorymibrequest.html#cfn-ec2-ec2fleet-acceleratortotalmemorymibrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3875
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst baselineEbsBandwidthMbpsRequestProperty: ec2.CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3939
      },
      "name": "BaselineEbsBandwidthMbpsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-ec2fleet-baselineebsbandwidthmbpsrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum baseline bandwidth, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3945
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-ec2fleet-baselineebsbandwidthmbpsrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum baseline bandwidth, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3951
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityRebalanceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Capacity rebalancing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-capacity-rebalance.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "The Spot Instance replacement strategy to use when Amazon EC2 emits a rebalance notification signal that your Spot Instance is at an elevated risk of being interrupted.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst capacityRebalanceProperty: ec2.CfnEC2Fleet.CapacityRebalanceProperty = {\n  replacementStrategy: 'replacementStrategy',\n  terminationDelay: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityRebalanceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4015
      },
      "name": "CapacityRebalanceProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html#cfn-ec2-ec2fleet-capacityrebalance-replacementstrategy"
            },
            "remarks": "`launch` - EC2 Fleet launches a replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet. EC2 Fleet does not terminate the instances that receive a rebalance notification. You can terminate the old instances, or you can leave them running. You are charged for all instances while they are running.\n\n`launch-before-terminate` - EC2 Fleet launches a replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet, and then, after a delay that you specify (in `TerminationDelay` ), terminates the instances that received a rebalance notification.",
            "stability": "external",
            "summary": "The replacement strategy to use. Only available for fleets of type `maintain` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4025
          },
          "name": "replacementStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityrebalance.html#cfn-ec2-ec2fleet-capacityrebalance-terminationdelay"
            },
            "remarks": "Required when `ReplacementStrategy` is set to `launch-before-terminate` .\n\nNot valid when `ReplacementStrategy` is set to `launch` .\n\nValid values: Minimum value of `120` seconds. Maximum value of `7200` seconds.",
            "stability": "external",
            "summary": "The amount of time (in seconds) that Amazon EC2 waits before terminating the old Spot Instance after launching a new replacement Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4037
          },
          "name": "terminationDelay",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.CapacityRebalanceProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityReservationOptionsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityreservationoptionsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> This strategy can only be used if the EC2 Fleet is of type `instant` .\n\nFor more information about Capacity Reservations, see [On-Demand Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html) in the *Amazon EC2 User Guide* . For examples of using Capacity Reservations in an EC2 Fleet, see [EC2 Fleet example configurations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst capacityReservationOptionsRequestProperty: ec2.CfnEC2Fleet.CapacityReservationOptionsRequestProperty = {\n  usageStrategy: 'usageStrategy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityReservationOptionsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4105
      },
      "name": "CapacityReservationOptionsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-capacityreservationoptionsrequest.html#cfn-ec2-ec2fleet-capacityreservationoptionsrequest-usagestrategy"
            },
            "remarks": "If you specify `use-capacity-reservations-first` , the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy ( `lowest-price` or `prioritized` ) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy ( `lowest-price` or `prioritized` ).\n\nIf you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.",
            "stability": "external",
            "summary": "Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4115
          },
          "name": "usageStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.CapacityReservationOptionsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`FleetLaunchTemplateConfigRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.",
        "stability": "external",
        "summary": "Specifies a launch template and overrides for an EC2 Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst fleetLaunchTemplateConfigRequestProperty: ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty = {\n  launchTemplateSpecification: {\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n    version: 'version',\n  },\n  overrides: [{\n    availabilityZone: 'availabilityZone',\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    maxPrice: 'maxPrice',\n    placement: {\n      affinity: 'affinity',\n      availabilityZone: 'availabilityZone',\n      groupName: 'groupName',\n      hostId: 'hostId',\n      hostResourceGroupArn: 'hostResourceGroupArn',\n      partitionNumber: 123,\n      spreadDomain: 'spreadDomain',\n      tenancy: 'tenancy',\n    },\n    priority: 123,\n    subnetId: 'subnetId',\n    weightedCapacity: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4178
      },
      "name": "FleetLaunchTemplateConfigRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-launchtemplatespecification"
            },
            "remarks": "You must specify either the launch template ID or launch template name in the request.",
            "stability": "external",
            "summary": "The launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4184
          },
          "name": "launchTemplateSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-overrides"
            },
            "remarks": "For fleets of type `request` and `maintain` , a maximum of 300 items is allowed across all launch templates.",
            "stability": "external",
            "summary": "Any parameters that you specify override the same parameters in the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4192
          },
          "name": "overrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`FleetLaunchTemplateOverridesRequest` is a property of the [FleetLaunchTemplateConfigRequest](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html) property type.",
        "stability": "external",
        "summary": "Specifies overrides for a launch template for an EC2 Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst fleetLaunchTemplateOverridesRequestProperty: ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty = {\n  availabilityZone: 'availabilityZone',\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  maxPrice: 'maxPrice',\n  placement: {\n    affinity: 'affinity',\n    availabilityZone: 'availabilityZone',\n    groupName: 'groupName',\n    hostId: 'hostId',\n    hostResourceGroupArn: 'hostResourceGroupArn',\n    partitionNumber: 123,\n    spreadDomain: 'spreadDomain',\n    tenancy: 'tenancy',\n  },\n  priority: 123,\n  subnetId: 'subnetId',\n  weightedCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4258
      },
      "name": "FleetLaunchTemplateOverridesRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone in which to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4264
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancerequirements"
            },
            "remarks": "When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.\n\n> If you specify `InstanceRequirements` , you can't specify `InstanceTypes` .",
            "stability": "external",
            "summary": "The attributes for the instance types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4272
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.InstanceRequirementsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancetype"
            },
            "remarks": "> If you specify `InstanceTypes` , you can't specify `InstanceRequirements` .",
            "stability": "external",
            "summary": "The instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4280
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-maxprice"
            },
            "stability": "external",
            "summary": "The maximum price per unit hour that you are willing to pay for a Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4286
          },
          "name": "maxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-placement"
            },
            "stability": "external",
            "summary": "The location where the instance launched, if applicable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4292
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.PlacementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-priority"
            },
            "remarks": "If the On-Demand `AllocationStrategy` is set to `prioritized` , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.\n\nIf the Spot `AllocationStrategy` is set to `capacity-optimized-prioritized` , EC2 Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.\n\nValid values are whole numbers starting at `0` . The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.",
            "stability": "external",
            "summary": "The priority for the launch template override. The highest priority is launched first."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4304
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-subnetid"
            },
            "remarks": "Separate multiple subnet IDs using commas (for example, `subnet-1234abcdeexample1, subnet-0987cdef6example2` ). A request of type `instant` can have only one subnet ID.",
            "stability": "external",
            "summary": "The IDs of the subnets in which to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4310
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-weightedcapacity"
            },
            "stability": "external",
            "summary": "The number of units provided by the specified instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4316
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify either the launch template ID or launch template name in the request.\n\n`FleetLaunchTemplateSpecificationRequest` is a property of the [FleetLaunchTemplateConfigRequest](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html) property type.",
        "stability": "external",
        "summary": "Specifies the launch template to use for an EC2 Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst fleetLaunchTemplateSpecificationRequestProperty: ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty = {\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n  version: 'version',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4400
      },
      "name": "FleetLaunchTemplateSpecificationRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplateid"
            },
            "remarks": "If you specify the template ID, you can't specify the template name.",
            "stability": "external",
            "summary": "The ID of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4406
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplatename"
            },
            "remarks": "If you specify the template name, you can't specify the template ID.",
            "stability": "external",
            "summary": "The name of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4412
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-version"
            },
            "remarks": "If the value is `$Latest` , Amazon EC2 uses the latest version of the launch template.\n\nIf the value is `$Default` , Amazon EC2 uses the default version of the launch template.",
            "stability": "external",
            "summary": "The launch template version number, `$Latest` , or `$Default` . You must specify a value, otherwise the request fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4422
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.InstanceRequirementsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.\n\nWhen you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.\n\n> You must specify `VCpuCount` and `MemoryMiB` . All other parameters are optional. Any unspecified optional parameter is set to its default.\n\nFor more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html) , [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html) , and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "The attributes for the instance types.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceRequirementsRequestProperty: ec2.CfnEC2Fleet.InstanceRequirementsRequestProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.InstanceRequirementsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4495
      },
      "name": "InstanceRequirementsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratorcount"
            },
            "remarks": "To exclude accelerator-enabled instance types, set `Max` to `0` .\n\nDefault: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4505
          },
          "name": "acceleratorCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratormanufacturers"
            },
            "remarks": "- For instance types with NVIDIA devices, specify `nvidia` .\n- For instance types with AMD devices, specify `amd` .\n- For instance types with AWS devices, specify `amazon-web-services` .\n- For instance types with Xilinx devices, specify `xilinx` .\n\nDefault: Any manufacturer",
            "stability": "external",
            "summary": "Indicates whether instance types must have accelerators by specific manufacturers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4518
          },
          "name": "acceleratorManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratornames"
            },
            "remarks": "- For instance types with NVIDIA A100 GPUs, specify `a100` .\n- For instance types with NVIDIA V100 GPUs, specify `v100` .\n- For instance types with NVIDIA K80 GPUs, specify `k80` .\n- For instance types with NVIDIA T4 GPUs, specify `t4` .\n- For instance types with NVIDIA M60 GPUs, specify `m60` .\n- For instance types with AMD Radeon Pro V520 GPUs, specify `radeon-pro-v520` .\n- For instance types with Xilinx VU9P FPGAs, specify `vu9p` .\n\nDefault: Any accelerator",
            "stability": "external",
            "summary": "The accelerators that must be on the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4534
          },
          "name": "acceleratorNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratortotalmemorymib"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of total accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4542
          },
          "name": "acceleratorTotalMemoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.AcceleratorTotalMemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-acceleratortypes"
            },
            "remarks": "- To include instance types with GPU hardware, specify `gpu` .\n- To include instance types with FPGA hardware, specify `fpga` .\n- To include instance types with inference hardware, specify `inference` .\n\nDefault: Any accelerator type",
            "stability": "external",
            "summary": "The accelerator types that must be on the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4554
          },
          "name": "acceleratorTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-baremetal"
            },
            "remarks": "- To include bare metal instance types, specify `included` .\n- To require only bare metal instance types, specify `required` .\n- To exclude bare metal instance types, specify `excluded` .\n\nDefault: `excluded`",
            "stability": "external",
            "summary": "Indicates whether bare metal instance types must be included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4566
          },
          "name": "bareMetal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-baselineebsbandwidthmbps"
            },
            "remarks": "For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n\nDefault: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4574
          },
          "name": "baselineEbsBandwidthMbps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.BaselineEbsBandwidthMbpsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-burstableperformance"
            },
            "remarks": "For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) .\n\n- To include burstable performance instance types, specify `included` .\n- To require only burstable performance instance types, specify `required` .\n- To exclude burstable performance instance types, specify `excluded` .\n\nDefault: `excluded`",
            "stability": "external",
            "summary": "Indicates whether burstable performance T instance types are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4586
          },
          "name": "burstablePerformance",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-cpumanufacturers"
            },
            "remarks": "- For instance types with Intel CPUs, specify `intel` .\n- For instance types with AMD CPUs, specify `amd` .\n- For instance types with AWS CPUs, specify `amazon-web-services` .\n\n> Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.\n\nDefault: Any manufacturer",
            "stability": "external",
            "summary": "The CPU manufacturers to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4600
          },
          "name": "cpuManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-excludedinstancetypes"
            },
            "remarks": "You can use strings with one or more wild cards, represented by an asterisk ( `*` ), to exclude an instance family, type, size, or generation. The following are examples: `m5.8xlarge` , `c5*.*` , `m5a.*` , `r*` , `*3*` .\n\nFor example, if you specify `c5*` ,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*` , Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.\n\nDefault: No excluded instance types",
            "stability": "external",
            "summary": "The instance types to exclude."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4610
          },
          "name": "excludedInstanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-instancegenerations"
            },
            "remarks": "The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n\nFor current generation instance types, specify `current` .\n\nFor previous generation instance types, specify `previous` .\n\nDefault: Current and previous generation instance types",
            "stability": "external",
            "summary": "Indicates whether current or previous generation instance types are included."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4622
          },
          "name": "instanceGenerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-localstorage"
            },
            "remarks": "For more information, [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide* .\n\n- To include instance types with instance store volumes, specify `included` .\n- To require only instance types with instance store volumes, specify `required` .\n- To exclude instance types with instance store volumes, specify `excluded` .\n\nDefault: `included`",
            "stability": "external",
            "summary": "Indicates whether instance types with instance store volumes are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4634
          },
          "name": "localStorage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-localstoragetypes"
            },
            "remarks": "- For instance types with hard disk drive (HDD) storage, specify `hdd` .\n- For instance types with solid state drive (SDD) storage, specify `sdd` .\n\nDefault: `hdd` and `sdd`",
            "stability": "external",
            "summary": "The type of local storage that is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4645
          },
          "name": "localStorageTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-memorygibpervcpu"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4653
          },
          "name": "memoryGiBPerVCpu",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-memorymib"
            },
            "stability": "external",
            "summary": "The minimum and maximum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4659
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-networkinterfacecount"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4667
          },
          "name": "networkInterfaceCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.NetworkInterfaceCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-ondemandmaxpricepercentageoverlowestprice"
            },
            "remarks": "This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n\nThe parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n\nTo turn off price protection, specify a high value, such as `999999` .\n\nThis parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n\n> If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n\nDefault: `20`",
            "stability": "external",
            "summary": "The price protection threshold for On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4683
          },
          "name": "onDemandMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-requirehibernatesupport"
            },
            "remarks": "This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) .\n\nDefault: `false`",
            "stability": "external",
            "summary": "Indicates whether instance types must support hibernation for On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4693
          },
          "name": "requireHibernateSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-spotmaxpricepercentageoverlowestprice"
            },
            "remarks": "This is the maximum you’ll pay for an Spot Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n\nThe parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n\nTo turn off price protection, specify a high value, such as `999999` .\n\nThis parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n\n> If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n\nDefault: `100`",
            "stability": "external",
            "summary": "The price protection threshold for Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4709
          },
          "name": "spotMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-totallocalstoragegb"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4717
          },
          "name": "totalLocalStorageGb",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TotalLocalStorageGBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-instancerequirementsrequest.html#cfn-ec2-ec2fleet-instancerequirementsrequest-vcpucount"
            },
            "stability": "external",
            "summary": "The minimum and maximum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4723
          },
          "name": "vCpuCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.VCpuCountRangeRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.InstanceRequirementsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.MaintenanceStrategiesProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-maintenancestrategies.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst maintenanceStrategiesProperty: ec2.CfnEC2Fleet.MaintenanceStrategiesProperty = {\n  capacityRebalance: {\n    replacementStrategy: 'replacementStrategy',\n    terminationDelay: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MaintenanceStrategiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4844
      },
      "name": "MaintenanceStrategiesProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-maintenancestrategies.html#cfn-ec2-ec2fleet-maintenancestrategies-capacityrebalance"
            },
            "stability": "external",
            "summary": "The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4850
          },
          "name": "capacityRebalance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityRebalanceProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.MaintenanceStrategiesProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of memory per vCPU, in GiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst memoryGiBPerVCpuRequestProperty: ec2.CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4911
      },
      "name": "MemoryGiBPerVCpuRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html#cfn-ec2-ec2fleet-memorygibpervcpurequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4917
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorygibpervcpurequest.html#cfn-ec2-ec2fleet-memorygibpervcpurequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4923
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.MemoryGiBPerVCpuRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of memory, in MiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst memoryMiBRequestProperty: ec2.CfnEC2Fleet.MemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 4987
      },
      "name": "MemoryMiBRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html#cfn-ec2-ec2fleet-memorymibrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4993
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-memorymibrequest.html#cfn-ec2-ec2fleet-memorymibrequest-min"
            },
            "remarks": "To specify no minimum limit, specify `0` .",
            "stability": "external",
            "summary": "The minimum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 4999
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.MemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.NetworkInterfaceCountRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum number of network interfaces.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst networkInterfaceCountRequestProperty: ec2.CfnEC2Fleet.NetworkInterfaceCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.NetworkInterfaceCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5063
      },
      "name": "NetworkInterfaceCountRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html#cfn-ec2-ec2fleet-networkinterfacecountrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5069
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-networkinterfacecountrequest.html#cfn-ec2-ec2fleet-networkinterfacecountrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5075
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.NetworkInterfaceCountRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`OnDemandOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.",
        "stability": "external",
        "summary": "Specifies the allocation strategy of On-Demand Instances in an EC2 Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst onDemandOptionsRequestProperty: ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty = {\n  allocationStrategy: 'allocationStrategy',\n  capacityReservationOptions: {\n    usageStrategy: 'usageStrategy',\n  },\n  maxTotalPrice: 'maxTotalPrice',\n  minTargetCapacity: 123,\n  singleAvailabilityZone: false,\n  singleInstanceType: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5141
      },
      "name": "OnDemandOptionsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-allocationstrategy"
            },
            "remarks": "`lowest-price` - EC2 Fleet uses price to determine the order, launching the lowest price first.\n\n`prioritized` - EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first.\n\nDefault: `lowest-price`",
            "stability": "external",
            "summary": "The strategy that determines the order of the launch template overrides to use in fulfilling On-Demand capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5153
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-capacityreservationoptions"
            },
            "remarks": "Supported only for fleets of type `instant` .",
            "stability": "external",
            "summary": "The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5161
          },
          "name": "capacityReservationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.CapacityReservationOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-maxtotalprice"
            },
            "stability": "external",
            "summary": "The maximum amount per hour for On-Demand Instances that you're willing to pay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5167
          },
          "name": "maxTotalPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-mintargetcapacity"
            },
            "remarks": "If the minimum target capacity is not reached, the fleet launches no instances.\n\nSupported only for fleets of type `instant` .\n\nAt least one of the following must be specified: `SingleAvailabilityZone` | `SingleInstanceType`",
            "stability": "external",
            "summary": "The minimum target capacity for On-Demand Instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5177
          },
          "name": "minTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-singleavailabilityzone"
            },
            "remarks": "Supported only for fleets of type `instant` .",
            "stability": "external",
            "summary": "Indicates that the fleet launches all On-Demand Instances into a single Availability Zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5185
          },
          "name": "singleAvailabilityZone",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-singleinstancetype"
            },
            "remarks": "Supported only for fleets of type `instant` .",
            "stability": "external",
            "summary": "Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5193
          },
          "name": "singleInstanceType",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.OnDemandOptionsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.PlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the placement of an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst placementProperty: ec2.CfnEC2Fleet.PlacementProperty = {\n  affinity: 'affinity',\n  availabilityZone: 'availabilityZone',\n  groupName: 'groupName',\n  hostId: 'hostId',\n  hostResourceGroupArn: 'hostResourceGroupArn',\n  partitionNumber: 123,\n  spreadDomain: 'spreadDomain',\n  tenancy: 'tenancy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.PlacementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5269
      },
      "name": "PlacementProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-affinity"
            },
            "remarks": "This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .",
            "stability": "external",
            "summary": "The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the [ImportInstance](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5277
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-availabilityzone"
            },
            "remarks": "If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\n\nThis parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .",
            "stability": "external",
            "summary": "The Availability Zone of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5287
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-groupname"
            },
            "stability": "external",
            "summary": "The name of the placement group the instance is in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5293
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-hostid"
            },
            "remarks": "This parameter is not supported for the [ImportInstance](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command.\n\nThis parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .",
            "stability": "external",
            "summary": "The ID of the Dedicated Host on which the instance resides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5301
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-hostresourcegrouparn"
            },
            "remarks": "If you specify a host resource group ARN, omit the *Tenancy* parameter or set it to `host` .\n\nThis parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .",
            "stability": "external",
            "summary": "The ARN of the host resource group in which to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5309
          },
          "name": "hostResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-partitionnumber"
            },
            "remarks": "Valid only if the placement group strategy is set to `partition` .\n\nThis parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .",
            "stability": "external",
            "summary": "The number of the partition that the instance is in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5317
          },
          "name": "partitionNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-spreaddomain"
            },
            "remarks": "This parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .",
            "stability": "external",
            "summary": "Reserved for future use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5325
          },
          "name": "spreadDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-placement.html#cfn-ec2-ec2fleet-placement-tenancy"
            },
            "remarks": "An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the [ImportInstance](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command.\n\nThis parameter is not supported by [CreateFleet](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet) .\n\nT3 instances that use the `unlimited` CPU credit option do not support `host` tenancy.",
            "stability": "external",
            "summary": "The tenancy of the instance (if the instance is running in a VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5335
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.PlacementProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`SpotOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.",
        "stability": "external",
        "summary": "Specifies the configuration of Spot Instances for an EC2 Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotOptionsRequestProperty: ec2.CfnEC2Fleet.SpotOptionsRequestProperty = {\n  allocationStrategy: 'allocationStrategy',\n  instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n  instancePoolsToUseCount: 123,\n  maintenanceStrategies: {\n    capacityRebalance: {\n      replacementStrategy: 'replacementStrategy',\n      terminationDelay: 123,\n    },\n  },\n  maxTotalPrice: 'maxTotalPrice',\n  minTargetCapacity: 123,\n  singleAvailabilityZone: false,\n  singleInstanceType: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5419
      },
      "name": "SpotOptionsRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-allocationstrategy"
            },
            "remarks": "If the allocation strategy is `lowestPrice` , EC2 Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.\n\nIf the allocation strategy is `diversified` , EC2 Fleet launches instances from all the Spot Instance pools that you specify.\n\nIf the allocation strategy is `capacityOptimized` , EC2 Fleet launches instances from Spot Instance pools that are optimally chosen based on the available Spot Instance capacity.\n\n*Allowed Values* : `lowestPrice` | `diversified` | `capacityOptimized` | `capacityOptimizedPrioritized`",
            "stability": "external",
            "summary": "Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5433
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instanceinterruptionbehavior"
            },
            "remarks": "Default: `terminate`",
            "stability": "external",
            "summary": "The behavior when a Spot Instance is interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5441
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instancepoolstousecount"
            },
            "remarks": "Supported only when Spot `AllocationStrategy` is set to `lowest-price` . EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.\n\nNote that EC2 Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, EC2 Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.",
            "stability": "external",
            "summary": "The number of Spot pools across which to allocate your target Spot capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5449
          },
          "name": "instancePoolsToUseCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-maintenancestrategies"
            },
            "stability": "external",
            "summary": "The strategies for managing your Spot Instances that are at an elevated risk of being interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5455
          },
          "name": "maintenanceStrategies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.MaintenanceStrategiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-maxtotalprice"
            },
            "stability": "external",
            "summary": "The maximum amount per hour for Spot Instances that you're willing to pay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5461
          },
          "name": "maxTotalPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-mintargetcapacity"
            },
            "remarks": "If the minimum target capacity is not reached, the fleet launches no instances.\n\nSupported only for fleets of type `instant` .\n\nAt least one of the following must be specified: `SingleAvailabilityZone` | `SingleInstanceType`",
            "stability": "external",
            "summary": "The minimum target capacity for Spot Instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5471
          },
          "name": "minTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-singleavailabilityzone"
            },
            "remarks": "Supported only for fleets of type `instant` .",
            "stability": "external",
            "summary": "Indicates that the fleet launches all Spot Instances into a single Availability Zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5479
          },
          "name": "singleAvailabilityZone",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-singleinstancetype"
            },
            "remarks": "Supported only for fleets of type `instant` .",
            "stability": "external",
            "summary": "Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5487
          },
          "name": "singleInstanceType",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.SpotOptionsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`TagSpecification` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.",
        "stability": "external",
        "summary": "Specifies the tags to apply to a resource when the resource is being created for an EC2 Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst tagSpecificationProperty: ec2.CfnEC2Fleet.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5571
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-resourcetype"
            },
            "remarks": "`ResourceType` must be `fleet` .",
            "stability": "external",
            "summary": "The type of resource to tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5577
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5583
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of `0` and add capacity later.\n\n`TargetCapacitySpecificationRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.",
        "stability": "external",
        "summary": "Specifies the number of units to request for an EC2 Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst targetCapacitySpecificationRequestProperty: ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty = {\n  totalTargetCapacity: 123,\n\n  // the properties below are optional\n  defaultTargetCapacityType: 'defaultTargetCapacityType',\n  onDemandTargetCapacity: 123,\n  spotTargetCapacity: 123,\n  targetCapacityUnitType: 'targetCapacityUnitType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5649
      },
      "name": "TargetCapacitySpecificationRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-totaltargetcapacity"
            },
            "stability": "external",
            "summary": "The number of units to request, filled using `DefaultTargetCapacityType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5681
          },
          "name": "totalTargetCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-defaulttargetcapacitytype"
            },
            "stability": "external",
            "summary": "The default `TotalTargetCapacity` , which is either `Spot` or `On-Demand` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5655
          },
          "name": "defaultTargetCapacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-ondemandtargetcapacity"
            },
            "stability": "external",
            "summary": "The number of On-Demand units to request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5661
          },
          "name": "onDemandTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-spottargetcapacity"
            },
            "stability": "external",
            "summary": "The number of Spot units to request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5667
          },
          "name": "spotTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-targetcapacityunittype"
            },
            "remarks": "Default: `units` (translates to number of instances)",
            "stability": "external",
            "summary": "The unit for the target capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5675
          },
          "name": "targetCapacityUnitType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.TargetCapacitySpecificationRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.TotalLocalStorageGBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of total local storage, in GB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst totalLocalStorageGBRequestProperty: ec2.CfnEC2Fleet.TotalLocalStorageGBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TotalLocalStorageGBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5755
      },
      "name": "TotalLocalStorageGBRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html#cfn-ec2-ec2fleet-totallocalstoragegbrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5761
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-totallocalstoragegbrequest.html#cfn-ec2-ec2fleet-totallocalstoragegbrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5767
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.TotalLocalStorageGBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2Fleet.VCpuCountRangeRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum number of vCPUs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst vCpuCountRangeRequestProperty: ec2.CfnEC2Fleet.VCpuCountRangeRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.VCpuCountRangeRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5831
      },
      "name": "VCpuCountRangeRequestProperty",
      "namespace": "CfnEC2Fleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html#cfn-ec2-ec2fleet-vcpucountrangerequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5837
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-vcpucountrangerequest.html#cfn-ec2-ec2fleet-vcpucountrangerequest-min"
            },
            "remarks": "To specify no minimum limit, specify `0` .",
            "stability": "external",
            "summary": "The minimum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5843
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2Fleet.VCpuCountRangeRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnEC2FleetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEC2Fleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnEC2FleetProps: ec2.CfnEC2FleetProps = {\n  launchTemplateConfigs: [{\n    launchTemplateSpecification: {\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n      version: 'version',\n    },\n    overrides: [{\n      availabilityZone: 'availabilityZone',\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      maxPrice: 'maxPrice',\n      placement: {\n        affinity: 'affinity',\n        availabilityZone: 'availabilityZone',\n        groupName: 'groupName',\n        hostId: 'hostId',\n        hostResourceGroupArn: 'hostResourceGroupArn',\n        partitionNumber: 123,\n        spreadDomain: 'spreadDomain',\n        tenancy: 'tenancy',\n      },\n      priority: 123,\n      subnetId: 'subnetId',\n      weightedCapacity: 123,\n    }],\n  }],\n  targetCapacitySpecification: {\n    totalTargetCapacity: 123,\n\n    // the properties below are optional\n    defaultTargetCapacityType: 'defaultTargetCapacityType',\n    onDemandTargetCapacity: 123,\n    spotTargetCapacity: 123,\n    targetCapacityUnitType: 'targetCapacityUnitType',\n  },\n\n  // the properties below are optional\n  context: 'context',\n  excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n  onDemandOptions: {\n    allocationStrategy: 'allocationStrategy',\n    capacityReservationOptions: {\n      usageStrategy: 'usageStrategy',\n    },\n    maxTotalPrice: 'maxTotalPrice',\n    minTargetCapacity: 123,\n    singleAvailabilityZone: false,\n    singleInstanceType: false,\n  },\n  replaceUnhealthyInstances: false,\n  spotOptions: {\n    allocationStrategy: 'allocationStrategy',\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    instancePoolsToUseCount: 123,\n    maintenanceStrategies: {\n      capacityRebalance: {\n        replacementStrategy: 'replacementStrategy',\n        terminationDelay: 123,\n      },\n    },\n    maxTotalPrice: 'maxTotalPrice',\n    minTargetCapacity: 123,\n    singleAvailabilityZone: false,\n    singleInstanceType: false,\n  },\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  terminateInstancesWithExpiration: false,\n  type: 'type',\n  validFrom: 'validFrom',\n  validUntil: 'validUntil',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEC2FleetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 3406
      },
      "name": "CfnEC2FleetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs"
            },
            "stability": "external",
            "summary": "The configuration for the EC2 Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3413
          },
          "name": "launchTemplateConfigs",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification"
            },
            "stability": "external",
            "summary": "The number of units to request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3420
          },
          "name": "targetCapacitySpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-context"
            },
            "stability": "external",
            "summary": "Reserved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3427
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy"
            },
            "stability": "external",
            "summary": "Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3434
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions"
            },
            "stability": "external",
            "summary": "Describes the configuration of On-Demand Instances in an EC2 Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3441
          },
          "name": "onDemandOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances"
            },
            "remarks": "Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "Indicates whether EC2 Fleet should replace unhealthy Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3448
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions"
            },
            "stability": "external",
            "summary": "Describes the configuration of Spot Instances in an EC2 Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3455
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications"
            },
            "remarks": "If the fleet type is `instant` , specify a resource type of `fleet` to tag the fleet or `instance` to tag the instances at launch.\n\nIf the fleet type is `maintain` or `request` , specify a resource type of `fleet` to tag the fleet. You cannot specify a resource type of `instance` . To tag instances at launch, specify the tags in a [launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template) .",
            "stability": "external",
            "summary": "The key-value pair for tagging the EC2 Fleet request on creation. For more information, see [Tagging your resources](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3466
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration"
            },
            "stability": "external",
            "summary": "Indicates whether running instances should be terminated when the EC2 Fleet expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3473
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type"
            },
            "remarks": "- `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.\n- `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.\n- `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.\n\nFor more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The fleet type. The default value is `maintain` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3486
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom"
            },
            "remarks": "The default is to start fulfilling the request immediately.",
            "stability": "external",
            "summary": "The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3493
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil"
            },
            "remarks": "At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.",
            "stability": "external",
            "summary": "The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 3500
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEC2FleetProps"
    },
    "@aws-cdk/aws-ec2.CfnEIP": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EIP",
          "exampleMetadata": "infused",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html"
        },
        "example": "declare const instance: ec2.Instance;\n\nconst elasticIp = new ec2.CfnEIP(this, 'EIP', {\n  domain: 'vpc',\n  instanceId: instance.instanceId,\n});\n\ndeclare const myZone: route53.HostedZone;\nnew route53.ARecord(this, 'ARecord', {\n  zone: myZone,\n  target: route53.RecordTarget.fromIpAddresses(elasticIp.ref),\n});",
        "remarks": "Specifies an Elastic IP (EIP) address and can, optionally, associate it with an Amazon EC2 instance.\n\nYou can allocate an Elastic IP address from an address pool owned by AWS or from an address pool created from a public IPv4 address range that you have brought to AWS for use with your AWS resources using bring your own IP addresses (BYOIP). For more information, see [Bring Your Own IP Addresses (BYOIP)](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html) in the *Amazon EC2 User Guide* .\n\n[EC2-VPC] If you release an Elastic IP address, you might be able to recover it. You cannot recover an Elastic IP address that you released after it is allocated to another AWS account. You cannot recover an Elastic IP address for EC2-Classic. To attempt to recover an Elastic IP address that you released, specify it in this operation.\n\nAn Elastic IP address is for use either in the EC2-Classic platform or in a VPC. By default, you can allocate 5 Elastic IP addresses for EC2-Classic per Region and 5 Elastic IP addresses for EC2-VPC per Region.\n\nFor more information, see [Elastic IP Addresses](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EIP`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIP",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EIP`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 6099
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEIPProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6021
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6115
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6129
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEIP",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6025
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AllocationId"
            },
            "remarks": "This is returned only for VPC elastic IP addresses. For example, `eipalloc-5723d13e` .",
            "stability": "external",
            "summary": "The ID that AWS assigns to represent the allocation of the address for use with Amazon VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6050
          },
          "name": "attrAllocationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6120
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-tags"
            },
            "remarks": "> Updates to the `Tags` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.",
            "stability": "external",
            "summary": "Any tags assigned to the Elastic IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6090
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain"
            },
            "remarks": "Default: If the Region supports EC2-Classic, the default is `standard` . Otherwise, the default is `vpc` .\n\nUse when allocating an address for use with a VPC if the Region supports EC2-Classic.\n\nIf you define an Elastic IP address and associate it with a VPC that is defined in the same template, you must declare a dependency on the VPC-gateway attachment by using the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) on this resource.",
            "stability": "external",
            "summary": "Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6063
          },
          "name": "domain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid"
            },
            "remarks": "> Updates to the `InstanceId` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.",
            "stability": "external",
            "summary": "The ID of the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6072
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool"
            },
            "remarks": "Use this parameter to let Amazon EC2 select an address from the address pool.\n\n> Updates to the `PublicIpv4Pool` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.",
            "stability": "external",
            "summary": "The ID of an address pool that you own."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6081
          },
          "name": "publicIpv4Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEIP"
    },
    "@aws-cdk/aws-ec2.CfnEIPAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EIPAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates an Elastic IP address with an instance or a network interface. Before you can use an Elastic IP address, you must allocate it to your account.\n\nAn Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see [Elastic IP Addresses](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) in the *Amazon EC2 User Guide* .\n\n[EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance. If you associate an Elastic IP address with an instance that has an existing Elastic IP address, the existing address is disassociated from the instance, but remains allocated to your account.\n\n[VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation. You cannot associate an Elastic IP address with an instance or network interface that has an existing Elastic IP address.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EIPAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnEIPAssociation = new ec2.CfnEIPAssociation(this, 'MyCfnEIPAssociation', /* all optional props */ {\n  allocationId: 'allocationId',\n  eip: 'eip',\n  instanceId: 'instanceId',\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddress: 'privateIpAddress',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EIPAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 6324
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6255
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6340
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6355
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEIPAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6259
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6345
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid"
            },
            "remarks": "This is required for EC2-VPC.",
            "stability": "external",
            "summary": "[EC2-VPC] The allocation ID."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6285
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip"
            },
            "remarks": "This is required for EC2-Classic.",
            "stability": "external",
            "summary": "[EC2-Classic] The Elastic IP address to associate with the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6292
          },
          "name": "eip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid"
            },
            "remarks": "The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.",
            "stability": "external",
            "summary": "The ID of the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6299
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid"
            },
            "remarks": "If the instance has more than one network interface, you must specify a network interface ID.\n\nFor EC2-VPC, you can specify either the instance ID or the network interface ID, but not both.",
            "stability": "external",
            "summary": "[EC2-VPC] The ID of the network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6308
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress"
            },
            "remarks": "If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.",
            "stability": "external",
            "summary": "[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6315
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEIPAssociation"
    },
    "@aws-cdk/aws-ec2.CfnEIPAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEIPAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnEIPAssociationProps: ec2.CfnEIPAssociationProps = {\n  allocationId: 'allocationId',\n  eip: 'eip',\n  instanceId: 'instanceId',\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddress: 'privateIpAddress',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6142
      },
      "name": "CfnEIPAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid"
            },
            "remarks": "This is required for EC2-VPC.",
            "stability": "external",
            "summary": "[EC2-VPC] The allocation ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6149
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip"
            },
            "remarks": "This is required for EC2-Classic.",
            "stability": "external",
            "summary": "[EC2-Classic] The Elastic IP address to associate with the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6156
          },
          "name": "eip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid"
            },
            "remarks": "The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.",
            "stability": "external",
            "summary": "The ID of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6163
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid"
            },
            "remarks": "If the instance has more than one network interface, you must specify a network interface ID.\n\nFor EC2-VPC, you can specify either the instance ID or the network interface ID, but not both.",
            "stability": "external",
            "summary": "[EC2-VPC] The ID of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6172
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress"
            },
            "remarks": "If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.",
            "stability": "external",
            "summary": "[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6179
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEIPAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnEIPProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html"
        },
        "example": "declare const instance: ec2.Instance;\n\nconst elasticIp = new ec2.CfnEIP(this, 'EIP', {\n  domain: 'vpc',\n  instanceId: instance.instanceId,\n});\n\ndeclare const myZone: route53.HostedZone;\nnew route53.ARecord(this, 'ARecord', {\n  zone: myZone,\n  target: route53.RecordTarget.fromIpAddresses(elasticIp.ref),\n});",
        "stability": "external",
        "summary": "Properties for defining a `CfnEIP`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEIPProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 5906
      },
      "name": "CfnEIPProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain"
            },
            "remarks": "Default: If the Region supports EC2-Classic, the default is `standard` . Otherwise, the default is `vpc` .\n\nUse when allocating an address for use with a VPC if the Region supports EC2-Classic.\n\nIf you define an Elastic IP address and associate it with a VPC that is defined in the same template, you must declare a dependency on the VPC-gateway attachment by using the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) on this resource.",
            "stability": "external",
            "summary": "Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5919
          },
          "name": "domain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid"
            },
            "remarks": "> Updates to the `InstanceId` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.",
            "stability": "external",
            "summary": "The ID of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5928
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool"
            },
            "remarks": "Use this parameter to let Amazon EC2 select an address from the address pool.\n\n> Updates to the `PublicIpv4Pool` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.",
            "stability": "external",
            "summary": "The ID of an address pool that you own."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5937
          },
          "name": "publicIpv4Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-tags"
            },
            "remarks": "> Updates to the `Tags` property may require *some interruptions* . Updates on an EIP reassociates the address on its associated resource.",
            "stability": "external",
            "summary": "Any tags assigned to the Elastic IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 5946
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEIPProps"
    },
    "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EgressOnlyInternetGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "[IPv6 only] Specifies an egress-only internet gateway for your VPC. An egress-only internet gateway is used to enable outbound communication over IPv6 from instances in your VPC to the internet, and prevents hosts outside of your VPC from initiating an IPv6 connection with your instance.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EgressOnlyInternetGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnEgressOnlyInternetGateway = new ec2.CfnEgressOnlyInternetGateway(this, 'MyCfnEgressOnlyInternetGateway', {\n  vpcId: 'vpcId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EgressOnlyInternetGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 6479
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6434
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6493
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6504
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEgressOnlyInternetGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6438
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the egress-only internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6463
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6498
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC for which to create the egress-only internet gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6470
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEgressOnlyInternetGateway"
    },
    "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEgressOnlyInternetGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnEgressOnlyInternetGatewayProps: ec2.CfnEgressOnlyInternetGatewayProps = {\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6368
      },
      "name": "CfnEgressOnlyInternetGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC for which to create the egress-only internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6375
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEgressOnlyInternetGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::EnclaveCertificateIamRoleAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates an AWS Identity and Access Management (IAM) role with an AWS Certificate Manager (ACM) certificate. This enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave. For more information, see [AWS Certificate Manager for Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html) in the *AWS Nitro Enclaves User Guide* .\n\nWhen the IAM role is associated with the ACM certificate, the certificate, certificate chain, and encrypted private key are placed in an Amazon S3 bucket that only the associated IAM role can access. The private key of the certificate is encrypted with an AWS managed key that has an attached attestation-based key policy.\n\nTo enable the IAM role to access the Amazon S3 object, you must grant it permission to call `s3:GetObject` on the Amazon S3 bucket returned by the command. To enable the IAM role to access the KMS key, you must grant it permission to call `kms:Decrypt` on the KMS key returned by the command. For more information, see [Grant the role permission to access the certificate and encryption key](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html#add-policy) in the *AWS Nitro Enclaves User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::EnclaveCertificateIamRoleAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnEnclaveCertificateIamRoleAssociation = new ec2.CfnEnclaveCertificateIamRoleAssociation(this, 'MyCfnEnclaveCertificateIamRoleAssociation', {\n  certificateArn: 'certificateArn',\n  roleArn: 'roleArn',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::EnclaveCertificateIamRoleAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 6662
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6598
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6680
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6692
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEnclaveCertificateIamRoleAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6602
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CertificateS3BucketName"
            },
            "stability": "external",
            "summary": "The name of the Amazon S3 bucket to which the certificate was uploaded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6627
          },
          "name": "attrCertificateS3BucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CertificateS3ObjectKey"
            },
            "remarks": "The object key is formatted as follows: `role_arn` / `certificate_arn` .",
            "stability": "external",
            "summary": "The Amazon S3 object key where the certificate, certificate chain, and encrypted private key bundle are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6633
          },
          "name": "attrCertificateS3ObjectKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EncryptionKmsKeyId"
            },
            "stability": "external",
            "summary": "The ID of the AWS KMS key used to encrypt the private key of the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6639
          },
          "name": "attrEncryptionKmsKeyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6685
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-certificatearn"
            },
            "stability": "external",
            "summary": "The ARN of the ACM certificate with which to associate the IAM role."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6646
          },
          "name": "certificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-rolearn"
            },
            "remarks": "You can associate up to 16 IAM roles with an ACM certificate.",
            "stability": "external",
            "summary": "The ARN of the IAM role to associate with the ACM certificate."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6653
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEnclaveCertificateIamRoleAssociation"
    },
    "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEnclaveCertificateIamRoleAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnEnclaveCertificateIamRoleAssociationProps: ec2.CfnEnclaveCertificateIamRoleAssociationProps = {\n  certificateArn: 'certificateArn',\n  roleArn: 'roleArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnEnclaveCertificateIamRoleAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6517
      },
      "name": "CfnEnclaveCertificateIamRoleAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-certificatearn"
            },
            "stability": "external",
            "summary": "The ARN of the ACM certificate with which to associate the IAM role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6524
          },
          "name": "certificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-rolearn"
            },
            "remarks": "You can associate up to 16 IAM roles with an ACM certificate.",
            "stability": "external",
            "summary": "The ARN of the IAM role to associate with the ACM certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6531
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnEnclaveCertificateIamRoleAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnFlowLog": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::FlowLog",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a VPC flow log that captures IP traffic for a specified network interface, subnet, or VPC. To view the log data, use Amazon CloudWatch Logs (CloudWatch Logs) to help troubleshoot connection issues. For example, you can use a flow log to investigate why certain traffic isn't reaching an instance, which can help you diagnose overly restrictive security group rules. For more information, see [VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html) in the *Amazon VPC User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::FlowLog`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const destinationOptions: any;\nconst cfnFlowLog = new ec2.CfnFlowLog(this, 'MyCfnFlowLog', {\n  resourceId: 'resourceId',\n  resourceType: 'resourceType',\n  trafficType: 'trafficType',\n\n  // the properties below are optional\n  deliverLogsPermissionArn: 'deliverLogsPermissionArn',\n  destinationOptions: destinationOptions,\n  logDestination: 'logDestination',\n  logDestinationType: 'logDestinationType',\n  logFormat: 'logFormat',\n  logGroupName: 'logGroupName',\n  maxAggregationInterval: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnFlowLog",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::FlowLog`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 7032
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnFlowLogProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6895
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7058
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7079
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFlowLog",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6899
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "remarks": "For example, `fl-123456abc123abc1` .",
            "stability": "external",
            "summary": "The ID of the flow log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6924
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7063
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the flow logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7023
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-destinationoptions"
            },
            "remarks": "- `FileFormat` - The format for the flow log ( `plain-text` | `parquet` ). The default is `plain-text` .\n- `HiveCompatiblePartitions` - Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3 ( `true` | `false` ). The default is `false` .\n- `PerHourPartition` - Indicates whether to partition the flow log per hour ( `true` | `false` ). The default is `false` .",
            "stability": "external",
            "summary": "The destination options. The following options are supported:."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6965
          },
          "name": "destinationOptions",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid"
            },
            "stability": "external",
            "summary": "The ID of the subnet, network interface, or VPC for which you want to create a flow log."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6931
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype"
            },
            "remarks": "For example, if you specified a VPC ID for the `ResourceId` property, specify `VPC` for this property.",
            "stability": "external",
            "summary": "The type of resource for which to create the flow log."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6938
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype"
            },
            "remarks": "You can log traffic that the resource accepts or rejects, or all traffic.",
            "stability": "external",
            "summary": "The type of traffic to log."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6945
          },
          "name": "trafficType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn"
            },
            "remarks": "If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .",
            "stability": "external",
            "summary": "The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6954
          },
          "name": "deliverLogsPermissionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination"
            },
            "remarks": "Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for `LogDestinationType` .\n\nIf `LogDestinationType` is not specified or `cloud-watch-logs` , specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish to a log group called `my-logs` , specify `arn:aws:logs:us-east-1:123456789012:log-group:my-logs` . Alternatively, use `LogGroupName` instead.\n\nIf LogDestinationType is `s3` , specify the ARN of the Amazon S3 bucket. You can also specify a subfolder in the bucket. To specify a subfolder in the bucket, use the following ARN format: `bucket_ARN/subfolder_name/` . For example, to specify a subfolder named `my-logs` in a bucket named `my-bucket` , use the following ARN: `arn:aws:s3:::my-bucket/my-logs/` . You cannot use `AWSLogs` as a subfolder name. This is a reserved term.",
            "stability": "external",
            "summary": "The destination to which the flow log data is to be published."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6976
          },
          "name": "logDestination",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype"
            },
            "remarks": "Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify `cloud-watch-logs` . To publish flow log data to Amazon S3, specify `s3` .\n\nIf you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .\n\nDefault: `cloud-watch-logs`",
            "stability": "external",
            "summary": "The type of destination to which the flow log data is to be published."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6987
          },
          "name": "logDestinationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logformat"
            },
            "remarks": "For a list of available fields, see [Flow Log Records](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records) . If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.\n\nSpecify the fields using the `${field-id}` format, separated by spaces.",
            "stability": "external",
            "summary": "The fields to include in the flow log record, in the order in which they should appear."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6996
          },
          "name": "logFormat",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname"
            },
            "remarks": "If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .",
            "stability": "external",
            "summary": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7005
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-maxaggregationinterval"
            },
            "remarks": "You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).\n\nWhen a network interface is attached to a [Nitro-based instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) , the aggregation interval is always 60 seconds or less, regardless of the value that you specify.\n\nDefault: 600",
            "stability": "external",
            "summary": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7016
          },
          "name": "maxAggregationInterval",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnFlowLog"
    },
    "@aws-cdk/aws-ec2.CfnFlowLogProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnFlowLog`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const destinationOptions: any;\nconst cfnFlowLogProps: ec2.CfnFlowLogProps = {\n  resourceId: 'resourceId',\n  resourceType: 'resourceType',\n  trafficType: 'trafficType',\n\n  // the properties below are optional\n  deliverLogsPermissionArn: 'deliverLogsPermissionArn',\n  destinationOptions: destinationOptions,\n  logDestination: 'logDestination',\n  logDestinationType: 'logDestinationType',\n  logFormat: 'logFormat',\n  logGroupName: 'logGroupName',\n  maxAggregationInterval: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnFlowLogProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 6705
      },
      "name": "CfnFlowLogProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid"
            },
            "stability": "external",
            "summary": "The ID of the subnet, network interface, or VPC for which you want to create a flow log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6712
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype"
            },
            "remarks": "For example, if you specified a VPC ID for the `ResourceId` property, specify `VPC` for this property.",
            "stability": "external",
            "summary": "The type of resource for which to create the flow log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6719
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype"
            },
            "remarks": "You can log traffic that the resource accepts or rejects, or all traffic.",
            "stability": "external",
            "summary": "The type of traffic to log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6726
          },
          "name": "trafficType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn"
            },
            "remarks": "If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .",
            "stability": "external",
            "summary": "The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6735
          },
          "name": "deliverLogsPermissionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-destinationoptions"
            },
            "remarks": "- `FileFormat` - The format for the flow log ( `plain-text` | `parquet` ). The default is `plain-text` .\n- `HiveCompatiblePartitions` - Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3 ( `true` | `false` ). The default is `false` .\n- `PerHourPartition` - Indicates whether to partition the flow log per hour ( `true` | `false` ). The default is `false` .",
            "stability": "external",
            "summary": "The destination options. The following options are supported:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6746
          },
          "name": "destinationOptions",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination"
            },
            "remarks": "Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for `LogDestinationType` .\n\nIf `LogDestinationType` is not specified or `cloud-watch-logs` , specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish to a log group called `my-logs` , specify `arn:aws:logs:us-east-1:123456789012:log-group:my-logs` . Alternatively, use `LogGroupName` instead.\n\nIf LogDestinationType is `s3` , specify the ARN of the Amazon S3 bucket. You can also specify a subfolder in the bucket. To specify a subfolder in the bucket, use the following ARN format: `bucket_ARN/subfolder_name/` . For example, to specify a subfolder named `my-logs` in a bucket named `my-bucket` , use the following ARN: `arn:aws:s3:::my-bucket/my-logs/` . You cannot use `AWSLogs` as a subfolder name. This is a reserved term.",
            "stability": "external",
            "summary": "The destination to which the flow log data is to be published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6757
          },
          "name": "logDestination",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype"
            },
            "remarks": "Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify `cloud-watch-logs` . To publish flow log data to Amazon S3, specify `s3` .\n\nIf you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .\n\nDefault: `cloud-watch-logs`",
            "stability": "external",
            "summary": "The type of destination to which the flow log data is to be published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6768
          },
          "name": "logDestinationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logformat"
            },
            "remarks": "For a list of available fields, see [Flow Log Records](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records) . If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.\n\nSpecify the fields using the `${field-id}` format, separated by spaces.",
            "stability": "external",
            "summary": "The fields to include in the flow log record, in the order in which they should appear."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6777
          },
          "name": "logFormat",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname"
            },
            "remarks": "If you specify `LogDestinationType` as `s3` , do not specify `DeliverLogsPermissionArn` or `LogGroupName` .",
            "stability": "external",
            "summary": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6786
          },
          "name": "logGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-maxaggregationinterval"
            },
            "remarks": "You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).\n\nWhen a network interface is attached to a [Nitro-based instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) , the aggregation interval is always 60 seconds or less, regardless of the value that you specify.\n\nDefault: 600",
            "stability": "external",
            "summary": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6797
          },
          "name": "maxAggregationInterval",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the flow logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 6804
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnFlowLogProps"
    },
    "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::GatewayRouteTableAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates a virtual private gateway or internet gateway with a route table. The gateway and route table must be in the same VPC. This association causes the incoming traffic to the gateway to be routed according to the routes in the route table.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::GatewayRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnGatewayRouteTableAssociation = new ec2.CfnGatewayRouteTableAssociation(this, 'MyCfnGatewayRouteTableAssociation', {\n  gatewayId: 'gatewayId',\n  routeTableId: 'routeTableId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::GatewayRouteTableAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 7221
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7169
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7237
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7249
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnGatewayRouteTableAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7173
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AssociationId"
            },
            "stability": "external",
            "summary": "The ID of the route table association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7198
          },
          "name": "attrAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7242
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-gatewayid"
            },
            "stability": "external",
            "summary": "The ID of the gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7205
          },
          "name": "gatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-routetableid"
            },
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7212
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnGatewayRouteTableAssociation"
    },
    "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnGatewayRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnGatewayRouteTableAssociationProps: ec2.CfnGatewayRouteTableAssociationProps = {\n  gatewayId: 'gatewayId',\n  routeTableId: 'routeTableId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnGatewayRouteTableAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7092
      },
      "name": "CfnGatewayRouteTableAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-gatewayid"
            },
            "stability": "external",
            "summary": "The ID of the gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7099
          },
          "name": "gatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-routetableid"
            },
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7106
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnGatewayRouteTableAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnHost": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Host",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Allocates a fully dedicated physical server for launching EC2 instances. Because the host is fully dedicated for your use, it can help you address compliance requirements and reduce costs by allowing you to use your existing server-bound software licenses. For more information, see [Dedicated Hosts](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html) in the *Amazon EC2 User Guide for Linux Instances* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Host`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnHost = new ec2.CfnHost(this, 'MyCfnHost', {\n  availabilityZone: 'availabilityZone',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  autoPlacement: 'autoPlacement',\n  hostRecovery: 'hostRecovery',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnHost",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Host`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 7433
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnHostProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7363
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7451
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7465
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHost",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7367
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "HostId"
            },
            "stability": "external",
            "summary": "The ID of the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7392
          },
          "name": "attrHostId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7456
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone in which to allocate the Dedicated Host."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7399
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype"
            },
            "remarks": "If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.",
            "stability": "external",
            "summary": "Specifies the instance type to be supported by the Dedicated Hosts."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7406
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement"
            },
            "remarks": "For more information, see [Understanding auto-placement and affinity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding) in the *Amazon EC2 User Guide* .\n\nDefault: `on`",
            "stability": "external",
            "summary": "Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7415
          },
          "name": "autoPlacement",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery"
            },
            "remarks": "Host recovery is disabled by default. For more information, see [Host recovery](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html) in the *Amazon EC2 User Guide* .\n\nDefault: `off`",
            "stability": "external",
            "summary": "Indicates whether to enable or disable host recovery for the Dedicated Host."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7424
          },
          "name": "hostRecovery",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnHost"
    },
    "@aws-cdk/aws-ec2.CfnHostProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnHost`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnHostProps: ec2.CfnHostProps = {\n  availabilityZone: 'availabilityZone',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  autoPlacement: 'autoPlacement',\n  hostRecovery: 'hostRecovery',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnHostProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7262
      },
      "name": "CfnHostProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone in which to allocate the Dedicated Host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7269
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype"
            },
            "remarks": "If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.",
            "stability": "external",
            "summary": "Specifies the instance type to be supported by the Dedicated Hosts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7276
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement"
            },
            "remarks": "For more information, see [Understanding auto-placement and affinity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding) in the *Amazon EC2 User Guide* .\n\nDefault: `on`",
            "stability": "external",
            "summary": "Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7285
          },
          "name": "autoPlacement",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery"
            },
            "remarks": "Host recovery is disabled by default. For more information, see [Host recovery](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html) in the *Amazon EC2 User Guide* .\n\nDefault: `off`",
            "stability": "external",
            "summary": "Indicates whether to enable or disable host recovery for the Dedicated Host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7294
          },
          "name": "hostRecovery",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnHostProps"
    },
    "@aws-cdk/aws-ec2.CfnIPAM": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::IPAM",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts throughout your AWS Organization. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::IPAM`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnIPAM = new ec2.CfnIPAM(this, 'MyCfnIPAM', /* all optional props */ {\n  description: 'description',\n  operatingRegions: [{\n    regionName: 'regionName',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAM",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::IPAM`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 7650
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnIPAMProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7565
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7669
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7682
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnIPAM",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7569
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN of the IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7594
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamId"
            },
            "stability": "external",
            "summary": "The ID of the IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7600
          },
          "name": "attrIpamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrivateDefaultScopeId"
            },
            "stability": "external",
            "summary": "The ID of the IPAM's default private scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7606
          },
          "name": "attrPrivateDefaultScopeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublicDefaultScopeId"
            },
            "stability": "external",
            "summary": "The ID of the IPAM's default public scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7612
          },
          "name": "attrPublicDefaultScopeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ScopeCount"
            },
            "remarks": "The scope quota is 5.",
            "stability": "external",
            "summary": "The number of scopes in the IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7618
          },
          "name": "attrScopeCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7674
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-tags"
            },
            "remarks": "Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.",
            "stability": "external",
            "summary": "The key/value combination of a tag assigned to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7641
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-description"
            },
            "stability": "external",
            "summary": "The description for the IPAM."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7625
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-operatingregions"
            },
            "remarks": "Operating Regions are AWS Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the AWS Regions you select as operating Regions.\n\nFor more information about operating Regions, see [Create an IPAM](https://docs.aws.amazon.com//vpc/latest/ipam/create-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The operating Regions for an IPAM."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7634
          },
          "name": "operatingRegions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnIPAM.IpamOperatingRegionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAM"
    },
    "@aws-cdk/aws-ec2.CfnIPAM.IpamOperatingRegionProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ipam-ipamoperatingregion.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Operating Regions are AWS Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the AWS Regions you select as operating Regions.\n\nFor more information about operating Regions, see [Create an IPAM](https://docs.aws.amazon.com//vpc/latest/ipam/create-ipam.html) in the *Amazon VPC IPAM User Guide* .",
        "stability": "external",
        "summary": "The operating Regions for an IPAM.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ipamOperatingRegionProperty: ec2.CfnIPAM.IpamOperatingRegionProperty = {\n  regionName: 'regionName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAM.IpamOperatingRegionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7698
      },
      "name": "IpamOperatingRegionProperty",
      "namespace": "CfnIPAM",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ipam-ipamoperatingregion.html#cfn-ec2-ipam-ipamoperatingregion-regionname"
            },
            "stability": "external",
            "summary": "The name of the operating Region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7704
          },
          "name": "regionName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAM.IpamOperatingRegionProperty"
    },
    "@aws-cdk/aws-ec2.CfnIPAMAllocation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::IPAMAllocation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "In IPAM, an allocation is a CIDR assignment from an IPAM pool to another resource or IPAM pool.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::IPAMAllocation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnIPAMAllocation = new ec2.CfnIPAMAllocation(this, 'MyCfnIPAMAllocation', {\n  ipamPoolId: 'ipamPoolId',\n\n  // the properties below are optional\n  cidr: 'cidr',\n  description: 'description',\n  netmaskLength: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAMAllocation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::IPAMAllocation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 7947
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnIPAMAllocationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7871
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7964
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7978
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnIPAMAllocation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7875
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamPoolAllocationId"
            },
            "stability": "external",
            "summary": "The ID of an allocation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7900
          },
          "name": "attrIpamPoolAllocationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7969
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-ipampoolid"
            },
            "stability": "external",
            "summary": "The ID of the IPAM pool from which you would like to allocate a CIDR."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7907
          },
          "name": "ipamPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-cidr"
            },
            "remarks": "- If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n- If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n\nPossible values: Any available IPv4 or IPv6 CIDR.",
            "stability": "external",
            "summary": "The CIDR you would like to allocate from the IPAM pool. Note the following:."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7919
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-description"
            },
            "stability": "external",
            "summary": "A description for the allocation."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7926
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-netmasklength"
            },
            "remarks": "- If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n- If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n\nPossible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "stability": "external",
            "summary": "The netmask length of the CIDR you would like to allocate from the IPAM pool. Note the following:."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7938
          },
          "name": "netmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAMAllocation"
    },
    "@aws-cdk/aws-ec2.CfnIPAMAllocationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnIPAMAllocation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnIPAMAllocationProps: ec2.CfnIPAMAllocationProps = {\n  ipamPoolId: 'ipamPoolId',\n\n  // the properties below are optional\n  cidr: 'cidr',\n  description: 'description',\n  netmaskLength: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAMAllocationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7765
      },
      "name": "CfnIPAMAllocationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-ipampoolid"
            },
            "stability": "external",
            "summary": "The ID of the IPAM pool from which you would like to allocate a CIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7772
          },
          "name": "ipamPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-cidr"
            },
            "remarks": "- If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n- If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n\nPossible values: Any available IPv4 or IPv6 CIDR.",
            "stability": "external",
            "summary": "The CIDR you would like to allocate from the IPAM pool. Note the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7784
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-description"
            },
            "stability": "external",
            "summary": "A description for the allocation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7791
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-netmasklength"
            },
            "remarks": "- If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n- If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n\nPossible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "stability": "external",
            "summary": "The netmask length of the CIDR you would like to allocate from the IPAM pool. Note the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7803
          },
          "name": "netmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAMAllocationProps"
    },
    "@aws-cdk/aws-ec2.CfnIPAMPool": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::IPAMPool",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "In IPAM, a pool is a collection of contiguous IP addresses CIDRs. Pools enable you to organize your IP addresses according to your routing and security needs. For example, if you have separate routing and security needs for development and production applications, you can create a pool for each.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::IPAMPool`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnIPAMPool = new ec2.CfnIPAMPool(this, 'MyCfnIPAMPool', {\n  addressFamily: 'addressFamily',\n  ipamScopeId: 'ipamScopeId',\n\n  // the properties below are optional\n  allocationDefaultNetmaskLength: 123,\n  allocationMaxNetmaskLength: 123,\n  allocationMinNetmaskLength: 123,\n  allocationResourceTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  autoImport: false,\n  description: 'description',\n  locale: 'locale',\n  provisionedCidrs: [{\n    cidr: 'cidr',\n  }],\n  publiclyAdvertisable: false,\n  sourceIpamPoolId: 'sourceIpamPoolId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAMPool",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::IPAMPool`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 8353
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnIPAMPoolProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8180
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8387
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8410
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnIPAMPool",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8184
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN of the IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8209
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamArn"
            },
            "stability": "external",
            "summary": "The ARN of the IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8215
          },
          "name": "attrIpamArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamPoolId"
            },
            "stability": "external",
            "summary": "The ID of the IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8221
          },
          "name": "attrIpamPoolId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamScopeArn"
            },
            "stability": "external",
            "summary": "The ARN of the scope of the IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8227
          },
          "name": "attrIpamScopeArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamScopeType"
            },
            "stability": "external",
            "summary": "The scope of the IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8233
          },
          "name": "attrIpamScopeType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PoolDepth"
            },
            "remarks": "The pool depth quota is 10.",
            "stability": "external",
            "summary": "The depth of pools in your IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8239
          },
          "name": "attrPoolDepth",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external",
            "summary": "The state of the IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8245
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StateMessage"
            },
            "stability": "external",
            "summary": "A message related to the failed creation of an IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8251
          },
          "name": "attrStateMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8392
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-tags"
            },
            "remarks": "Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.",
            "stability": "external",
            "summary": "The key/value combination of a tag assigned to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8344
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-addressfamily"
            },
            "stability": "external",
            "summary": "The address family of the pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8258
          },
          "name": "addressFamily",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-ipamscopeid"
            },
            "stability": "external",
            "summary": "The ID of the scope in which you would like to create the IPAM pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8265
          },
          "name": "ipamScopeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationdefaultnetmasklength"
            },
            "remarks": "If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.",
            "stability": "external",
            "summary": "The default netmask length for allocations added to this pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8272
          },
          "name": "allocationDefaultNetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationmaxnetmasklength"
            },
            "remarks": "The maximum netmask length must be greater than the minimum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "stability": "external",
            "summary": "The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8279
          },
          "name": "allocationMaxNetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationminnetmasklength"
            },
            "remarks": "The minimum netmask length must be less than the maximum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "stability": "external",
            "summary": "The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8286
          },
          "name": "allocationMinNetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationresourcetags"
            },
            "remarks": "Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.",
            "stability": "external",
            "summary": "Tags that are required for resources that use CIDRs from this IPAM pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8293
          },
          "name": "allocationResourceTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-autoimport"
            },
            "remarks": "The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\n\nA locale must be set on the pool for this feature to work.",
            "stability": "external",
            "summary": "If selected, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8302
          },
          "name": "autoImport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-description"
            },
            "stability": "external",
            "summary": "The description of the IPAM pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8309
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-locale"
            },
            "remarks": "In IPAM, the locale is the AWS Region where you want to make an IPAM pool available for allocations. Only resources in the same Region as the locale of the pool can get IP address allocations from the pool. You can only allocate a CIDR for a VPC, for example, from an IPAM pool that shares a locale with the VPC’s Region. Note that once you choose a Locale for a pool, you cannot modify it. If you choose an AWS Region for locale that has not been configured as an operating Region for the IPAM, you'll get an error.",
            "stability": "external",
            "summary": "The locale of the IPAM pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8316
          },
          "name": "locale",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-provisionedcidrs"
            },
            "stability": "external",
            "summary": "Information about the CIDRs provisioned to an IPAM pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8323
          },
          "name": "provisionedCidrs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnIPAMPool.ProvisionedCidrProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-publiclyadvertisable"
            },
            "remarks": "This option is not available for pools with AddressFamily set to `ipv4` .",
            "stability": "external",
            "summary": "Determines if a pool is publicly advertisable."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8330
          },
          "name": "publiclyAdvertisable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-sourceipampoolid"
            },
            "remarks": "You can use this option to create an IPAM pool within an existing source pool.",
            "stability": "external",
            "summary": "The ID of the source IPAM pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8337
          },
          "name": "sourceIpamPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAMPool"
    },
    "@aws-cdk/aws-ec2.CfnIPAMPool.ProvisionedCidrProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ipampool-provisionedcidr.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A CIDR is a representation of an IP address and its associated network mask (or netmask) and refers to a range of IP addresses. An IPv4 CIDR example is `10.24.34.0/23` . An IPv6 CIDR example is `2001:DB8::/32` .",
        "stability": "external",
        "summary": "The CIDR provisioned to the IPAM pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst provisionedCidrProperty: ec2.CfnIPAMPool.ProvisionedCidrProperty = {\n  cidr: 'cidr',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAMPool.ProvisionedCidrProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8424
      },
      "name": "ProvisionedCidrProperty",
      "namespace": "CfnIPAMPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ipampool-provisionedcidr.html#cfn-ec2-ipampool-provisionedcidr-cidr"
            },
            "remarks": "A CIDR is a representation of an IP address and its associated network mask (or netmask) and refers to a range of IP addresses. An IPv4 CIDR example is `10.24.34.0/23` . An IPv6 CIDR example is `2001:DB8::/32` .",
            "stability": "external",
            "summary": "The CIDR provisioned to the IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8430
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAMPool.ProvisionedCidrProperty"
    },
    "@aws-cdk/aws-ec2.CfnIPAMPoolProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnIPAMPool`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnIPAMPoolProps: ec2.CfnIPAMPoolProps = {\n  addressFamily: 'addressFamily',\n  ipamScopeId: 'ipamScopeId',\n\n  // the properties below are optional\n  allocationDefaultNetmaskLength: 123,\n  allocationMaxNetmaskLength: 123,\n  allocationMinNetmaskLength: 123,\n  allocationResourceTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  autoImport: false,\n  description: 'description',\n  locale: 'locale',\n  provisionedCidrs: [{\n    cidr: 'cidr',\n  }],\n  publiclyAdvertisable: false,\n  sourceIpamPoolId: 'sourceIpamPoolId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAMPoolProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7991
      },
      "name": "CfnIPAMPoolProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-addressfamily"
            },
            "stability": "external",
            "summary": "The address family of the pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7998
          },
          "name": "addressFamily",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-ipamscopeid"
            },
            "stability": "external",
            "summary": "The ID of the scope in which you would like to create the IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8005
          },
          "name": "ipamScopeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationdefaultnetmasklength"
            },
            "remarks": "If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.",
            "stability": "external",
            "summary": "The default netmask length for allocations added to this pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8012
          },
          "name": "allocationDefaultNetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationmaxnetmasklength"
            },
            "remarks": "The maximum netmask length must be greater than the minimum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "stability": "external",
            "summary": "The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8019
          },
          "name": "allocationMaxNetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationminnetmasklength"
            },
            "remarks": "The minimum netmask length must be less than the maximum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "stability": "external",
            "summary": "The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8026
          },
          "name": "allocationMinNetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationresourcetags"
            },
            "remarks": "Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.",
            "stability": "external",
            "summary": "Tags that are required for resources that use CIDRs from this IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8033
          },
          "name": "allocationResourceTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-autoimport"
            },
            "remarks": "The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\n\nA locale must be set on the pool for this feature to work.",
            "stability": "external",
            "summary": "If selected, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8042
          },
          "name": "autoImport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-description"
            },
            "stability": "external",
            "summary": "The description of the IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8049
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-locale"
            },
            "remarks": "In IPAM, the locale is the AWS Region where you want to make an IPAM pool available for allocations. Only resources in the same Region as the locale of the pool can get IP address allocations from the pool. You can only allocate a CIDR for a VPC, for example, from an IPAM pool that shares a locale with the VPC’s Region. Note that once you choose a Locale for a pool, you cannot modify it. If you choose an AWS Region for locale that has not been configured as an operating Region for the IPAM, you'll get an error.",
            "stability": "external",
            "summary": "The locale of the IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8056
          },
          "name": "locale",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-provisionedcidrs"
            },
            "stability": "external",
            "summary": "Information about the CIDRs provisioned to an IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8063
          },
          "name": "provisionedCidrs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnIPAMPool.ProvisionedCidrProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-publiclyadvertisable"
            },
            "remarks": "This option is not available for pools with AddressFamily set to `ipv4` .",
            "stability": "external",
            "summary": "Determines if a pool is publicly advertisable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8070
          },
          "name": "publiclyAdvertisable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-sourceipampoolid"
            },
            "remarks": "You can use this option to create an IPAM pool within an existing source pool.",
            "stability": "external",
            "summary": "The ID of the source IPAM pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8077
          },
          "name": "sourceIpamPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-tags"
            },
            "remarks": "Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.",
            "stability": "external",
            "summary": "The key/value combination of a tag assigned to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8084
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAMPoolProps"
    },
    "@aws-cdk/aws-ec2.CfnIPAMProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnIPAM`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnIPAMProps: ec2.CfnIPAMProps = {\n  description: 'description',\n  operatingRegions: [{\n    regionName: 'regionName',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAMProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 7478
      },
      "name": "CfnIPAMProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-description"
            },
            "stability": "external",
            "summary": "The description for the IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7485
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-operatingregions"
            },
            "remarks": "Operating Regions are AWS Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the AWS Regions you select as operating Regions.\n\nFor more information about operating Regions, see [Create an IPAM](https://docs.aws.amazon.com//vpc/latest/ipam/create-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The operating Regions for an IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7494
          },
          "name": "operatingRegions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnIPAM.IpamOperatingRegionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-tags"
            },
            "remarks": "Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.",
            "stability": "external",
            "summary": "The key/value combination of a tag assigned to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 7501
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAMProps"
    },
    "@aws-cdk/aws-ec2.CfnIPAMScope": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::IPAMScope",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.\n\nFor more information, see [How IPAM works](https://docs.aws.amazon.com//vpc/latest/ipam/how-it-works-ipam.html) in the *Amazon VPC IPAM User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::IPAMScope`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnIPAMScope = new ec2.CfnIPAMScope(this, 'MyCfnIPAMScope', {\n  ipamId: 'ipamId',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAMScope",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::IPAMScope`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 8668
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnIPAMScopeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8579
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8689
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8702
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnIPAMScope",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8583
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8608
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamArn"
            },
            "stability": "external",
            "summary": "The ARN of an IPAM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8614
          },
          "name": "attrIpamArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamScopeId"
            },
            "stability": "external",
            "summary": "The ID of an IPAM scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8620
          },
          "name": "attrIpamScopeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpamScopeType"
            },
            "stability": "external",
            "summary": "The type of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8626
          },
          "name": "attrIpamScopeType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IsDefault"
            },
            "stability": "external",
            "summary": "Defines if the scope is the default scope or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8632
          },
          "name": "attrIsDefault",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PoolCount"
            },
            "stability": "external",
            "summary": "The number of pools in a scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8638
          },
          "name": "attrPoolCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8694
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-tags"
            },
            "remarks": "Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.",
            "stability": "external",
            "summary": "The key/value combination of a tag assigned to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8659
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-ipamid"
            },
            "stability": "external",
            "summary": "The ID of the IPAM for which you're creating this scope."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8645
          },
          "name": "ipamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-description"
            },
            "stability": "external",
            "summary": "The description of the scope."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8652
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAMScope"
    },
    "@aws-cdk/aws-ec2.CfnIPAMScopeProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnIPAMScope`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnIPAMScopeProps: ec2.CfnIPAMScopeProps = {\n  ipamId: 'ipamId',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnIPAMScopeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8491
      },
      "name": "CfnIPAMScopeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-ipamid"
            },
            "stability": "external",
            "summary": "The ID of the IPAM for which you're creating this scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8498
          },
          "name": "ipamId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-description"
            },
            "stability": "external",
            "summary": "The description of the scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8505
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-tags"
            },
            "remarks": "Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA` , specify `tag:Owner` for the filter name and `TeamA` for the filter value.",
            "stability": "external",
            "summary": "The key/value combination of a tag assigned to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8512
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnIPAMScopeProps"
    },
    "@aws-cdk/aws-ec2.CfnInstance": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Instance",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies an EC2 instance.\n\nIf an Elastic IP address is attached to your instance, AWS CloudFormation reattaches the Elastic IP address after it updates the instance. For more information about updating stacks, see [AWS CloudFormation Stacks Updates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Instance`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnInstance = new ec2.CfnInstance(this, 'MyCfnInstance', /* all optional props */ {\n  additionalInfo: 'additionalInfo',\n  affinity: 'affinity',\n  availabilityZone: 'availabilityZone',\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      kmsKeyId: 'kmsKeyId',\n      snapshotId: 'snapshotId',\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: { },\n    virtualName: 'virtualName',\n  }],\n  cpuOptions: {\n    coreCount: 123,\n    threadsPerCore: 123,\n  },\n  creditSpecification: {\n    cpuCredits: 'cpuCredits',\n  },\n  disableApiTermination: false,\n  ebsOptimized: false,\n  elasticGpuSpecifications: [{\n    type: 'type',\n  }],\n  elasticInferenceAccelerators: [{\n    type: 'type',\n\n    // the properties below are optional\n    count: 123,\n  }],\n  enclaveOptions: {\n    enabled: false,\n  },\n  hibernationOptions: {\n    configured: false,\n  },\n  hostId: 'hostId',\n  hostResourceGroupArn: 'hostResourceGroupArn',\n  iamInstanceProfile: 'iamInstanceProfile',\n  imageId: 'imageId',\n  instanceInitiatedShutdownBehavior: 'instanceInitiatedShutdownBehavior',\n  instanceType: 'instanceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  licenseSpecifications: [{\n    licenseConfigurationArn: 'licenseConfigurationArn',\n  }],\n  monitoring: false,\n  networkInterfaces: [{\n    deviceIndex: 'deviceIndex',\n\n    // the properties below are optional\n    associatePublicIpAddress: false,\n    deleteOnTermination: false,\n    description: 'description',\n    groupSet: ['groupSet'],\n    ipv6AddressCount: 123,\n    ipv6Addresses: [{\n      ipv6Address: 'ipv6Address',\n    }],\n    networkInterfaceId: 'networkInterfaceId',\n    privateIpAddress: 'privateIpAddress',\n    privateIpAddresses: [{\n      primary: false,\n      privateIpAddress: 'privateIpAddress',\n    }],\n    secondaryPrivateIpAddressCount: 123,\n    subnetId: 'subnetId',\n  }],\n  placementGroupName: 'placementGroupName',\n  privateDnsNameOptions: {\n    enableResourceNameDnsAaaaRecord: false,\n    enableResourceNameDnsARecord: false,\n    hostnameType: 'hostnameType',\n  },\n  privateIpAddress: 'privateIpAddress',\n  propagateTagsToVolumeOnCreation: false,\n  ramdiskId: 'ramdiskId',\n  securityGroupIds: ['securityGroupIds'],\n  securityGroups: ['securityGroups'],\n  sourceDestCheck: false,\n  ssmAssociations: [{\n    documentName: 'documentName',\n\n    // the properties below are optional\n    associationParameters: [{\n      key: 'key',\n      value: ['value'],\n    }],\n  }],\n  subnetId: 'subnetId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  tenancy: 'tenancy',\n  userData: 'userData',\n  volumes: [{\n    device: 'device',\n    volumeId: 'volumeId',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Instance`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 9624
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9226
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9680
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9730
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInstance",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9230
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "remarks": "You can retrieve a list of all Availability Zones for a Region by using the [Fn::GetAZs](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getavailabilityzones.html) intrinsic function.",
            "stability": "external",
            "summary": "The Availability Zone where the specified instance is launched. For example: `us-east-1b` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9257
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrivateDnsName"
            },
            "remarks": "For example: `ip-10-24-34-0.ec2.internal` .",
            "stability": "external",
            "summary": "The private DNS name of the specified instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9263
          },
          "name": "attrPrivateDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrivateIp"
            },
            "remarks": "For example: `10.24.34.0` .",
            "stability": "external",
            "summary": "The private IP address of the specified instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9269
          },
          "name": "attrPrivateIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublicDnsName"
            },
            "remarks": "For example: `ec2-107-20-50-45.compute-1.amazonaws.com` .",
            "stability": "external",
            "summary": "The public DNS name of the specified instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9275
          },
          "name": "attrPublicDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PublicIp"
            },
            "remarks": "For example: `192.0.2.0` .",
            "stability": "external",
            "summary": "The public IP address of the specified instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9281
          },
          "name": "attrPublicIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9685
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags"
            },
            "remarks": "These tags are not applied to the EBS volumes, such as the root volume.",
            "stability": "external",
            "summary": "The tags to add to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9594
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo"
            },
            "remarks": "If you use it, the stack fails with this error: `Bad property set: [Testing this property] (Service: AmazonEC2; Status Code: 400; Error Code: InvalidParameterCombination; Request ID: 0XXXXXX-49c7-4b40-8bcc-76885dcXXXXX)` .",
            "stability": "external",
            "summary": "This property is reserved for internal use."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9288
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity"
            },
            "remarks": "If you want the instance to always restart on the same host on which it was launched, specify `host` . If you want the instance to restart on any available host, but try to launch onto the last host it ran on (on a best-effort basis), specify `default` .",
            "stability": "external",
            "summary": "Indicates whether the instance is associated with a dedicated host."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9295
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone"
            },
            "remarks": "If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\n\nThis parameter is not supported by [DescribeImageAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html) .",
            "stability": "external",
            "summary": "The Availability Zone of the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9306
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings"
            },
            "remarks": "By default, the block devices specified in the block device mapping for the AMI are used. You can override the AMI block device mapping using the instance block device mapping. For the root volume, you can override only the volume size, volume type, volume encryption settings, and the `DeleteOnTermination` setting.\n\n> After the instance is running, you can modify only the `DeleteOnTermination` parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "The block device mapping entries that defines the block devices to attach to the instance at launch."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9317
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-cpuoptions"
            },
            "remarks": "For more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The CPU options for the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9324
          },
          "name": "cpuOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CpuOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification"
            },
            "remarks": "Valid values are `standard` and `unlimited` . To change this attribute after launch, use [ModifyInstanceCreditSpecification](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html) . For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the *Amazon EC2 User Guide* .\n\nDefault: `standard` (T2 instances) or `unlimited` (T3/T3a instances)\n\nFor T3 instances with `host` tenancy, only `standard` is supported.",
            "stability": "external",
            "summary": "The credit option for CPU usage of the burstable performance instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9335
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination"
            },
            "remarks": "otherwise, you can. To change this attribute after launch, use [ModifyInstanceAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html) . Alternatively, if you set `InstanceInitiatedShutdownBehavior` to `terminate` , you can terminate the instance by running the shutdown command from the instance.\n\nDefault: `false`",
            "stability": "external",
            "summary": "If you set this parameter to `true` , you can't terminate the instance using the Amazon EC2 console, CLI, or API;"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9344
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized"
            },
            "remarks": "This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\n\nDefault: `false`",
            "stability": "external",
            "summary": "Indicates whether the instance is optimized for Amazon EBS I/O."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9353
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications"
            },
            "remarks": "An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see [Amazon EC2 Elastic GPUs](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "An elastic GPU to associate with the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9360
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators"
            },
            "remarks": "Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.\n\nYou cannot specify accelerators from different generations in the same request.",
            "stability": "external",
            "summary": "An elastic inference accelerator to associate with the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9369
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-enclaveoptions"
            },
            "stability": "external",
            "summary": "Indicates whether the instance is enabled for AWS Nitro Enclaves."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9376
          },
          "name": "enclaveOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.EnclaveOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hibernationoptions"
            },
            "remarks": "For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the *Amazon EC2 User Guide* .\n\nYou can't enable hibernation and AWS Nitro Enclaves on the same instance.",
            "stability": "external",
            "summary": "Indicates whether an instance is enabled for hibernation."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9385
          },
          "name": "hibernationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.HibernationOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid"
            },
            "remarks": "If you don't specify an ID, Amazon EC2 launches the instance onto any available, compatible dedicated host in your account. This type of launch is called an untargeted launch. Note that for untargeted launches, you must have a compatible, dedicated host available to successfully launch instances.",
            "stability": "external",
            "summary": "If you specify host for the `Affinity` property, the ID of a dedicated host that the instance is associated with."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9392
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostresourcegrouparn"
            },
            "remarks": "If you specify a host resource group ARN, omit the *Tenancy* parameter or set it to `host` .",
            "stability": "external",
            "summary": "The ARN of the host resource group in which to launch the instances."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9399
          },
          "name": "hostResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile"
            },
            "remarks": "To create a new IAM instance profile, use the [AWS::IAM::InstanceProfile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html) resource.",
            "stability": "external",
            "summary": "The name of an IAM instance profile."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9406
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid"
            },
            "remarks": "An AMI ID is required to launch an instance and must be specified here or in a launch template.",
            "stability": "external",
            "summary": "The ID of the AMI."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9413
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior"
            },
            "remarks": "Default: `stop`",
            "stability": "external",
            "summary": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9422
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype"
            },
            "remarks": "Default: `m1.small`",
            "stability": "external",
            "summary": "The instance type. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9431
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount"
            },
            "remarks": "Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\n\nYou cannot specify this option and the network interfaces option in the same request.",
            "stability": "external",
            "summary": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9440
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses"
            },
            "remarks": "You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.\n\nYou cannot specify this option and the network interfaces option in the same request.",
            "stability": "external",
            "summary": "[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9449
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid"
            },
            "remarks": "> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The ID of the kernel."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9458
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname"
            },
            "remarks": "> If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.",
            "stability": "external",
            "summary": "The name of the key pair. You can create a key pair using [CreateKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or [ImportKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html) ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9467
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate"
            },
            "remarks": "Any parameters that you specify in the AWS CloudFormation template override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.",
            "stability": "external",
            "summary": "The launch template to use to launch the instances."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9474
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications"
            },
            "stability": "external",
            "summary": "The license configurations."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9481
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring"
            },
            "stability": "external",
            "summary": "Specifies whether detailed monitoring is enabled for the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9488
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces"
            },
            "remarks": "> If you use this property to point to a network interface, you must terminate the original interface before attaching a new one to allow the update of the instance to succeed.\n>\n> If this resource has a public IP address and is also in a VPC that is defined in the same template, you must use the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the VPC-gateway attachment.",
            "stability": "external",
            "summary": "The network interfaces to associate with the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9499
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname"
            },
            "stability": "external",
            "summary": "The name of an existing placement group that you want to launch the instance into (cluster | partition | spread)."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9506
          },
          "name": "placementGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privatednsnameoptions"
            },
            "stability": "external",
            "summary": "The options for the instance hostname."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9513
          },
          "name": "privateDnsNameOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateDnsNameOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress"
            },
            "remarks": "Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request.\n\nYou cannot specify this option and the network interfaces option in the same request.\n\nIf you make an update to an instance that requires replacement, you must assign a new private IP address. During a replacement, AWS CloudFormation creates a new instance but doesn't delete the old instance until the stack has successfully updated. If the stack update fails, AWS CloudFormation uses the old instance to roll back the stack to the previous working state. The old and new instances cannot have the same private IP address.",
            "stability": "external",
            "summary": "[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9526
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-propagatetagstovolumeoncreation"
            },
            "remarks": "If you specify `true` and you assign tags to the instance, those tags are automatically assigned to all of the volumes that you attach to the instance at launch. If you specify `false` , those tags are not assigned to the attached volumes.",
            "stability": "external",
            "summary": "Indicates whether to assign the tags from the instance to all of the volumes attached to the instance at launch."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9533
          },
          "name": "propagateTagsToVolumeOnCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid"
            },
            "remarks": "Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.\n\n> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The ID of the RAM disk to select."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9542
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids"
            },
            "remarks": "If you specify a network interface, you must specify any security groups as part of the network interface.",
            "stability": "external",
            "summary": "The IDs of the security groups. You can create a security group using [CreateSecurityGroup](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html) ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9551
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups"
            },
            "remarks": "For a nondefault VPC, you must use security group IDs instead.\n\nYou cannot specify this option and the network interfaces option in the same request. The list can contain both the name of existing Amazon EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template.\n\nDefault: Amazon EC2 uses the default security group.",
            "stability": "external",
            "summary": "[EC2-Classic, default VPC] The names of the security groups."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9562
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck"
            },
            "remarks": "If the value is `true` , source/destination checks are enabled; otherwise, they are disabled. The default value is `true` . You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.",
            "stability": "external",
            "summary": "Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9569
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations"
            },
            "remarks": "> You can currently associate only one document with an instance.",
            "stability": "external",
            "summary": "The SSM [document](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html) and parameter values in AWS Systems Manager to associate with this instance. To use this property, you must specify an IAM instance profile role for the instance. For more information, see [Create an Instance Profile for Systems Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-configuring-access-role.html) in the *AWS Systems Manager User Guide* ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9578
          },
          "name": "ssmAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid"
            },
            "remarks": "If you specify a network interface, you must specify any subnets as part of the network interface.",
            "stability": "external",
            "summary": "[EC2-VPC] The ID of the subnet to launch the instance into."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9587
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy"
            },
            "remarks": "An instance with a tenancy of `dedicated` runs on single-tenant hardware.",
            "stability": "external",
            "summary": "The tenancy of the instance (if the instance is running in a VPC)."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9601
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata"
            },
            "remarks": "For more information, see [Run commands on your Linux instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) and [Run commands on your Windows instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html) . If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.",
            "stability": "external",
            "summary": "The user data script to make available to the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9608
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes"
            },
            "stability": "external",
            "summary": "The volumes to attach to the instance."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9615
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance"
    },
    "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`AssociationParameter` is a property of the [Amazon EC2 Instance SsmAssociation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html) property.",
        "stability": "external",
        "summary": "Specifies input parameter values for an SSM document in AWS Systems Manager .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst associationParameterProperty: ec2.CfnInstance.AssociationParameterProperty = {\n  key: 'key',\n  value: ['value'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9746
      },
      "name": "AssociationParameterProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-key"
            },
            "stability": "external",
            "summary": "The name of an input parameter that is in the associated SSM document."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9752
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-value"
            },
            "stability": "external",
            "summary": "The value of an input parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9758
          },
          "name": "value",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.AssociationParameterProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify exactly one of the following properties: `VirtualName` , `Ebs` , or `NoDevice` .\n\n`BlockDeviceMapping` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.\n\n> After the instance is running, you can modify only the `DeleteOnTermination` parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
        "stability": "external",
        "summary": "Specifies a block device mapping for an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst blockDeviceMappingProperty: ec2.CfnInstance.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    kmsKeyId: 'kmsKeyId',\n    snapshotId: 'snapshotId',\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: { },\n  virtualName: 'virtualName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9828
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-devicename"
            },
            "remarks": "> After the instance is running, this parameter is used to specify the device name of the block device mapping to update.",
            "stability": "external",
            "summary": "The device name (for example, `/dev/sdh` or `xvdh` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9836
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-ebs"
            },
            "remarks": "> After the instance is running, you can modify only the `DeleteOnTermination` parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt) .",
            "stability": "external",
            "summary": "Parameters used to automatically set up EBS volumes when the instance is launched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9844
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.EbsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-nodevice"
            },
            "remarks": "> After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "To omit the device from the block device mapping, specify an empty string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9852
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-virtualname"
            },
            "remarks": "The name must be in the form `ephemeral` *X* where *X* is a number starting from zero (0). For example, an instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1` . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\n\nNVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\n\n*Constraints* : For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n\n> After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "The virtual device name ( `ephemeral` N)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9864
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.BlockDeviceMappingProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.CpuOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "When you specify CPU options, you must specify both the number of CPU cores and threads per core.\n\nFor more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .",
        "stability": "external",
        "summary": "Specifies the CPU options for the instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cpuOptionsProperty: ec2.CfnInstance.CpuOptionsProperty = {\n  coreCount: 123,\n  threadsPerCore: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.CpuOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 9937
      },
      "name": "CpuOptionsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html#cfn-ec2-instance-cpuoptions-corecount"
            },
            "stability": "external",
            "summary": "The number of CPU cores for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9943
          },
          "name": "coreCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-cpuoptions.html#cfn-ec2-instance-cpuoptions-threadspercore"
            },
            "stability": "external",
            "summary": "The number of threads per CPU core."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9949
          },
          "name": "threadsPerCore",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.CpuOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`CreditSpecification` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies the credit option for CPU usage of a T2, T3, or T3a instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst creditSpecificationProperty: ec2.CfnInstance.CreditSpecificationProperty = {\n  cpuCredits: 'cpuCredits',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10015
      },
      "name": "CreditSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html#cfn-ec2-instance-creditspecification-cpucredits"
            },
            "remarks": "Valid values are `standard` and `unlimited` . `T3` instances launch as `unlimited` by default. `T2` instances launch as `standard` by default.",
            "stability": "external",
            "summary": "The credit option for CPU usage of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10021
          },
          "name": "cpuCredits",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.CreditSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.EbsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Ebs` is a property of the [Amazon EC2 BlockDeviceMapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html) property.\n\n> After the instance is running, you can modify only the `DeleteOnTermination` parameters for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
        "stability": "external",
        "summary": "Specifies a block device for an EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ebsProperty: ec2.CfnInstance.EbsProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  kmsKeyId: 'kmsKeyId',\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.EbsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10086
      },
      "name": "EbsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-deleteontermination"
            },
            "remarks": "For more information, see [Preserving Amazon EBS volumes on instance termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "Indicates whether the EBS volume is deleted on instance termination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10092
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-encrypted"
            },
            "remarks": "The effect of setting the encryption state to `true` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) in the *Amazon Elastic Compute Cloud User Guide* .\n\nEncrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) .\n\n> After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "Indicates whether the volume should be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10102
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-iops"
            },
            "remarks": "For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n\nThe following are the supported values for each volume type:\n\n- `gp3` : 3,000-16,000 IOPS\n- `io1` : 100-64,000 IOPS\n- `io2` : 100-64,000 IOPS\n\nFor `io1` and `io2` volumes, we guarantee 64,000 IOPS only for [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families guarantee performance up to 32,000 IOPS.\n\nThis parameter is required for `io1` and `io2` volumes. The default for `gp3` volumes is 3,000 IOPS. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.\n\n> After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "The number of I/O operations per second (IOPS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10120
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-instance-ebs-kmskeyid"
            },
            "remarks": "If `KmsKeyId` is specified, the encrypted state must be `true` . If the encrypted state is `true` but you do not specify `KmsKeyId` , your KMS key for EBS is used.\n\nYou can specify the KMS key using any of the following:\n\n- Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.\n- Key alias. For example, alias/ExampleAlias.\n- Key ARN. For example, arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab.\n- Alias ARN. For example, arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias.\n\n> After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "The identifier of the AWS KMS key to use for Amazon EBS encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10135
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-snapshotid"
            },
            "remarks": "If you specify both `SnapshotId` and `VolumeSize` , `VolumeSize` must be equal or greater than the size of the snapshot.\n\n> After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "The ID of the snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10145
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumesize"
            },
            "remarks": "You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n\nThe following are the supported volumes sizes for each volume type:\n\n- `gp2` and `gp3` :1-16,384\n- `io1` and `io2` : 4-16,384\n- `st1` and `sc1` : 125-16,384\n- `standard` : 1-1,024\n\n> After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "The size of the volume, in GiBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10160
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumetype"
            },
            "remarks": "For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide* . If the volume type is `io1` or `io2` , you must specify the IOPS that the volume supports.\n\n> After the instance is running, modifying this parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10168
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.EbsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "An Elastic GPU is a GPU resource that you can attach to your Amazon EC2 instance to accelerate the graphics performance of your applications. For more information, see [Amazon EC2 Elastic GPUs](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the *Amazon EC2 User Guide for Windows Instances* .\n\n`ElasticGpuSpecification` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies the type of Elastic GPU.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst elasticGpuSpecificationProperty: ec2.CfnInstance.ElasticGpuSpecificationProperty = {\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10249
      },
      "name": "ElasticGpuSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html#cfn-ec2-instance-elasticgpuspecification-type"
            },
            "remarks": "For more information about the values to specify for `Type` , see [Elastic Graphics Basics](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics) , specifically the Elastic Graphics accelerator column, in the *Amazon Elastic Compute Cloud User Guide for Windows Instances* .",
            "stability": "external",
            "summary": "The type of Elastic Graphics accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10255
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.ElasticGpuSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ElasticInferenceAccelerator` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies the Elastic Inference Accelerator for the instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst elasticInferenceAcceleratorProperty: ec2.CfnInstance.ElasticInferenceAcceleratorProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  count: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10319
      },
      "name": "ElasticInferenceAcceleratorProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-type"
            },
            "remarks": "The possible values are `eia1.medium` , `eia1.large` , `eia1.xlarge` , `eia2.medium` , `eia2.large` , and `eia2.xlarge` .",
            "stability": "external",
            "summary": "The type of elastic inference accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10331
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-count"
            },
            "stability": "external",
            "summary": "The number of elastic inference accelerators to attach to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10325
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.ElasticInferenceAcceleratorProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.EnclaveOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-enclaveoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Indicates whether the instance is enabled for AWS Nitro Enclaves.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst enclaveOptionsProperty: ec2.CfnInstance.EnclaveOptionsProperty = {\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.EnclaveOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10396
      },
      "name": "EnclaveOptionsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-enclaveoptions.html#cfn-ec2-instance-enclaveoptions-enabled"
            },
            "remarks": "otherwise, it is not enabled for AWS Nitro Enclaves.",
            "stability": "external",
            "summary": "If this parameter is set to `true` , the instance is enabled for AWS Nitro Enclaves;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10402
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.EnclaveOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.HibernationOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-hibernationoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`HibernationOptions` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies the hibernation options for the instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst hibernationOptionsProperty: ec2.CfnInstance.HibernationOptionsProperty = {\n  configured: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.HibernationOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10465
      },
      "name": "HibernationOptionsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-hibernationoptions.html#cfn-ec2-instance-hibernationoptions-configured"
            },
            "remarks": "Default: `false`",
            "stability": "external",
            "summary": "If you set this parameter to `true` , your instance is enabled for hibernation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10473
          },
          "name": "configured",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.HibernationOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`InstanceIpv6Address` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies the IPv6 address for the instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceIpv6AddressProperty: ec2.CfnInstance.InstanceIpv6AddressProperty = {\n  ipv6Address: 'ipv6Address',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10536
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html#cfn-ec2-instance-instanceipv6address-ipv6address"
            },
            "stability": "external",
            "summary": "The IPv6 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10542
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.InstanceIpv6AddressProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`LaunchTemplateSpecification` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies a launch template. You must specify either the launch template ID or launch template name.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateSpecificationProperty: ec2.CfnInstance.LaunchTemplateSpecificationProperty = {\n  version: 'version',\n\n  // the properties below are optional\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10606
      },
      "name": "LaunchTemplateSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-version"
            },
            "remarks": "AWS CloudFormation does not support specifying `$Latest` , or `$Default` for the template version number.",
            "stability": "external",
            "summary": "The version number of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10624
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplateid"
            },
            "stability": "external",
            "summary": "The ID of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10612
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplatename"
            },
            "stability": "external",
            "summary": "The name of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10618
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.LaunchTemplateSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`LicenseSpecification` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies the license configuration to use.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst licenseSpecificationProperty: ec2.CfnInstance.LicenseSpecificationProperty = {\n  licenseConfigurationArn: 'licenseConfigurationArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10694
      },
      "name": "LicenseSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html#cfn-ec2-instance-licensespecification-licenseconfigurationarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the license configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10700
          },
          "name": "licenseConfigurationArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.LicenseSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can create a network interface when launching an instance. For an example, see the [AWS::EC2::Instance examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#aws-properties-ec2-instance--examples--Automatically_assign_a_public_IP_address) .\n\nAlternatively, you can attach an existing network interface when launching an instance. For an example, see the [AWS::EC2:NetworkInterface examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#aws-resource-ec2-network-interface--examples--Basic_network_interface) .",
        "stability": "external",
        "summary": "Specifies a network interface that is to be attached to an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst networkInterfaceProperty: ec2.CfnInstance.NetworkInterfaceProperty = {\n  deviceIndex: 'deviceIndex',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  deleteOnTermination: false,\n  description: 'description',\n  groupSet: ['groupSet'],\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddress: 'privateIpAddress',\n  privateIpAddresses: [{\n    primary: false,\n    privateIpAddress: 'privateIpAddress',\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10766
      },
      "name": "NetworkInterfaceProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-deviceindex"
            },
            "remarks": "A primary network interface has a device index of 0.\n\nIf you create a network interface when launching an instance, you must specify the device index.",
            "stability": "external",
            "summary": "The position of the network interface in the attachment order."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10792
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-associatepubip"
            },
            "remarks": "Applies only if creating a network interface when launching an instance. The network interface must be the primary network interface. If launching into a default subnet, the default value is `true` .",
            "stability": "external",
            "summary": "Indicates whether to assign a public IPv4 address to an instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10772
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-delete"
            },
            "remarks": "Applies only if creating a network interface when launching an instance.",
            "stability": "external",
            "summary": "Indicates whether the network interface is deleted when the instance is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10778
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-description"
            },
            "remarks": "Applies only if creating a network interface when launching an instance.",
            "stability": "external",
            "summary": "The description of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10784
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-groupset"
            },
            "remarks": "Applies only if creating a network interface when launching an instance.",
            "stability": "external",
            "summary": "The IDs of the security groups for the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10798
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresscount"
            },
            "remarks": "Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.",
            "stability": "external",
            "summary": "A number of IPv6 addresses to assign to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10804
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresses"
            },
            "remarks": "You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.",
            "stability": "external",
            "summary": "One or more IPv6 addresses to assign to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10810
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-network-iface"
            },
            "stability": "external",
            "summary": "The ID of the network interface, when attaching an existing network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10816
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddress"
            },
            "remarks": "Applies only if creating a network interface when launching an instance.",
            "stability": "external",
            "summary": "The private IPv4 address of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10822
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddresses"
            },
            "remarks": "Only one private IPv4 address can be designated as primary.",
            "stability": "external",
            "summary": "One or more private IPv4 addresses to assign to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10828
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-secondprivateip"
            },
            "remarks": "You can't specify this option and specify more than one private IP address using the private IP addresses option.",
            "stability": "external",
            "summary": "The number of secondary private IPv4 addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10834
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-subnetid"
            },
            "remarks": "Applies only if creating a network interface when launching an instance.",
            "stability": "external",
            "summary": "The ID of the subnet associated with the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 10840
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.NetworkInterfaceProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-nodevice.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To suppress a device, specify an empty string.\n\n`NoDevice` is a property of the [Amazon EC2 BlockDeviceMapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html) property.",
        "stability": "external",
        "summary": "Suppresses the specified device included in the block device mapping of the AMI.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst noDeviceProperty: ec2.CfnInstance.NoDeviceProperty = { };"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10937
      },
      "name": "NoDeviceProperty",
      "namespace": "CfnInstance",
      "symbolId": "lib/ec2.generated:CfnInstance.NoDeviceProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.PrivateDnsNameOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-privatednsnameoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .",
        "stability": "external",
        "summary": "The type of hostnames to assign to instances in the subnet at launch.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateDnsNameOptionsProperty: ec2.CfnInstance.PrivateDnsNameOptionsProperty = {\n  enableResourceNameDnsAaaaRecord: false,\n  enableResourceNameDnsARecord: false,\n  hostnameType: 'hostnameType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateDnsNameOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 10995
      },
      "name": "PrivateDnsNameOptionsProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-privatednsnameoptions.html#cfn-ec2-instance-privatednsnameoptions-enableresourcenamednsaaaarecord"
            },
            "remarks": "For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11001
          },
          "name": "enableResourceNameDnsAaaaRecord",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-privatednsnameoptions.html#cfn-ec2-instance-privatednsnameoptions-enableresourcenamednsarecord"
            },
            "remarks": "For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11007
          },
          "name": "enableResourceNameDnsARecord",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-privatednsnameoptions.html#cfn-ec2-instance-privatednsnameoptions-hostnametype"
            },
            "remarks": "For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The type of hostnames to assign to instances in the subnet at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11013
          },
          "name": "hostnameType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.PrivateDnsNameOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`PrivateIpAddressSpecification` is a property of the [AWS::EC2::NetworkInterface](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html) resource.",
        "stability": "external",
        "summary": "Specifies a secondary private IPv4 address for a network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateIpAddressSpecificationProperty: ec2.CfnInstance.PrivateIpAddressSpecificationProperty = {\n  primary: false,\n  privateIpAddress: 'privateIpAddress',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11082
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary"
            },
            "remarks": "Only one IPv4 address can be designated as primary.",
            "stability": "external",
            "summary": "Indicates whether the private IPv4 address is the primary private IPv4 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11088
          },
          "name": "primary",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress"
            },
            "stability": "external",
            "summary": "The private IPv4 addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11094
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.PrivateIpAddressSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`SsmAssociations` is a property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies the SSM document and parameter values in AWS Systems Manager to associate with an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ssmAssociationProperty: ec2.CfnInstance.SsmAssociationProperty = {\n  documentName: 'documentName',\n\n  // the properties below are optional\n  associationParameters: [{\n    key: 'key',\n    value: ['value'],\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11162
      },
      "name": "SsmAssociationProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-documentname"
            },
            "stability": "external",
            "summary": "The name of an SSM document to associate with the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11174
          },
          "name": "documentName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-associationparameters"
            },
            "stability": "external",
            "summary": "The input parameter values to use with the associated SSM document."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11168
          },
          "name": "associationParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.SsmAssociationProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Volume` is an embedded property of the [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource.",
        "stability": "external",
        "summary": "Specifies a volume to attach to an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst volumeProperty: ec2.CfnInstance.VolumeProperty = {\n  device: 'device',\n  volumeId: 'volumeId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11241
      },
      "name": "VolumeProperty",
      "namespace": "CfnInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-device"
            },
            "stability": "external",
            "summary": "The device name (for example, `/dev/sdh` or `xvdh` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11247
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-volumeid"
            },
            "remarks": "The volume and instance must be within the same Availability Zone.",
            "stability": "external",
            "summary": "The ID of the EBS volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11253
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstance.VolumeProperty"
    },
    "@aws-cdk/aws-ec2.CfnInstanceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnInstance`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnInstanceProps: ec2.CfnInstanceProps = {\n  additionalInfo: 'additionalInfo',\n  affinity: 'affinity',\n  availabilityZone: 'availabilityZone',\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      kmsKeyId: 'kmsKeyId',\n      snapshotId: 'snapshotId',\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: { },\n    virtualName: 'virtualName',\n  }],\n  cpuOptions: {\n    coreCount: 123,\n    threadsPerCore: 123,\n  },\n  creditSpecification: {\n    cpuCredits: 'cpuCredits',\n  },\n  disableApiTermination: false,\n  ebsOptimized: false,\n  elasticGpuSpecifications: [{\n    type: 'type',\n  }],\n  elasticInferenceAccelerators: [{\n    type: 'type',\n\n    // the properties below are optional\n    count: 123,\n  }],\n  enclaveOptions: {\n    enabled: false,\n  },\n  hibernationOptions: {\n    configured: false,\n  },\n  hostId: 'hostId',\n  hostResourceGroupArn: 'hostResourceGroupArn',\n  iamInstanceProfile: 'iamInstanceProfile',\n  imageId: 'imageId',\n  instanceInitiatedShutdownBehavior: 'instanceInitiatedShutdownBehavior',\n  instanceType: 'instanceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  licenseSpecifications: [{\n    licenseConfigurationArn: 'licenseConfigurationArn',\n  }],\n  monitoring: false,\n  networkInterfaces: [{\n    deviceIndex: 'deviceIndex',\n\n    // the properties below are optional\n    associatePublicIpAddress: false,\n    deleteOnTermination: false,\n    description: 'description',\n    groupSet: ['groupSet'],\n    ipv6AddressCount: 123,\n    ipv6Addresses: [{\n      ipv6Address: 'ipv6Address',\n    }],\n    networkInterfaceId: 'networkInterfaceId',\n    privateIpAddress: 'privateIpAddress',\n    privateIpAddresses: [{\n      primary: false,\n      privateIpAddress: 'privateIpAddress',\n    }],\n    secondaryPrivateIpAddressCount: 123,\n    subnetId: 'subnetId',\n  }],\n  placementGroupName: 'placementGroupName',\n  privateDnsNameOptions: {\n    enableResourceNameDnsAaaaRecord: false,\n    enableResourceNameDnsARecord: false,\n    hostnameType: 'hostnameType',\n  },\n  privateIpAddress: 'privateIpAddress',\n  propagateTagsToVolumeOnCreation: false,\n  ramdiskId: 'ramdiskId',\n  securityGroupIds: ['securityGroupIds'],\n  securityGroups: ['securityGroups'],\n  sourceDestCheck: false,\n  ssmAssociations: [{\n    documentName: 'documentName',\n\n    // the properties below are optional\n    associationParameters: [{\n      key: 'key',\n      value: ['value'],\n    }],\n  }],\n  subnetId: 'subnetId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  tenancy: 'tenancy',\n  userData: 'userData',\n  volumes: [{\n    device: 'device',\n    volumeId: 'volumeId',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 8715
      },
      "name": "CfnInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo"
            },
            "remarks": "If you use it, the stack fails with this error: `Bad property set: [Testing this property] (Service: AmazonEC2; Status Code: 400; Error Code: InvalidParameterCombination; Request ID: 0XXXXXX-49c7-4b40-8bcc-76885dcXXXXX)` .",
            "stability": "external",
            "summary": "This property is reserved for internal use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8722
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity"
            },
            "remarks": "If you want the instance to always restart on the same host on which it was launched, specify `host` . If you want the instance to restart on any available host, but try to launch onto the last host it ran on (on a best-effort basis), specify `default` .",
            "stability": "external",
            "summary": "Indicates whether the instance is associated with a dedicated host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8729
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone"
            },
            "remarks": "If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\n\nThis parameter is not supported by [DescribeImageAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html) .",
            "stability": "external",
            "summary": "The Availability Zone of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8740
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings"
            },
            "remarks": "By default, the block devices specified in the block device mapping for the AMI are used. You can override the AMI block device mapping using the instance block device mapping. For the root volume, you can override only the volume size, volume type, volume encryption settings, and the `DeleteOnTermination` setting.\n\n> After the instance is running, you can modify only the `DeleteOnTermination` parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance [replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) .",
            "stability": "external",
            "summary": "The block device mapping entries that defines the block devices to attach to the instance at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8751
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-cpuoptions"
            },
            "remarks": "For more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The CPU options for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8758
          },
          "name": "cpuOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CpuOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification"
            },
            "remarks": "Valid values are `standard` and `unlimited` . To change this attribute after launch, use [ModifyInstanceCreditSpecification](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html) . For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the *Amazon EC2 User Guide* .\n\nDefault: `standard` (T2 instances) or `unlimited` (T3/T3a instances)\n\nFor T3 instances with `host` tenancy, only `standard` is supported.",
            "stability": "external",
            "summary": "The credit option for CPU usage of the burstable performance instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8769
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination"
            },
            "remarks": "otherwise, you can. To change this attribute after launch, use [ModifyInstanceAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html) . Alternatively, if you set `InstanceInitiatedShutdownBehavior` to `terminate` , you can terminate the instance by running the shutdown command from the instance.\n\nDefault: `false`",
            "stability": "external",
            "summary": "If you set this parameter to `true` , you can't terminate the instance using the Amazon EC2 console, CLI, or API;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8778
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized"
            },
            "remarks": "This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\n\nDefault: `false`",
            "stability": "external",
            "summary": "Indicates whether the instance is optimized for Amazon EBS I/O."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8787
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications"
            },
            "remarks": "An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see [Amazon EC2 Elastic GPUs](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "An elastic GPU to associate with the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8794
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators"
            },
            "remarks": "Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.\n\nYou cannot specify accelerators from different generations in the same request.",
            "stability": "external",
            "summary": "An elastic inference accelerator to associate with the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8803
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-enclaveoptions"
            },
            "stability": "external",
            "summary": "Indicates whether the instance is enabled for AWS Nitro Enclaves."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8810
          },
          "name": "enclaveOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.EnclaveOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hibernationoptions"
            },
            "remarks": "For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the *Amazon EC2 User Guide* .\n\nYou can't enable hibernation and AWS Nitro Enclaves on the same instance.",
            "stability": "external",
            "summary": "Indicates whether an instance is enabled for hibernation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8819
          },
          "name": "hibernationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.HibernationOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid"
            },
            "remarks": "If you don't specify an ID, Amazon EC2 launches the instance onto any available, compatible dedicated host in your account. This type of launch is called an untargeted launch. Note that for untargeted launches, you must have a compatible, dedicated host available to successfully launch instances.",
            "stability": "external",
            "summary": "If you specify host for the `Affinity` property, the ID of a dedicated host that the instance is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8826
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostresourcegrouparn"
            },
            "remarks": "If you specify a host resource group ARN, omit the *Tenancy* parameter or set it to `host` .",
            "stability": "external",
            "summary": "The ARN of the host resource group in which to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8833
          },
          "name": "hostResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile"
            },
            "remarks": "To create a new IAM instance profile, use the [AWS::IAM::InstanceProfile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html) resource.",
            "stability": "external",
            "summary": "The name of an IAM instance profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8840
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid"
            },
            "remarks": "An AMI ID is required to launch an instance and must be specified here or in a launch template.",
            "stability": "external",
            "summary": "The ID of the AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8847
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior"
            },
            "remarks": "Default: `stop`",
            "stability": "external",
            "summary": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8856
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype"
            },
            "remarks": "Default: `m1.small`",
            "stability": "external",
            "summary": "The instance type. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8865
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount"
            },
            "remarks": "Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\n\nYou cannot specify this option and the network interfaces option in the same request.",
            "stability": "external",
            "summary": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8874
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses"
            },
            "remarks": "You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.\n\nYou cannot specify this option and the network interfaces option in the same request.",
            "stability": "external",
            "summary": "[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8883
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid"
            },
            "remarks": "> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The ID of the kernel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8892
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname"
            },
            "remarks": "> If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.",
            "stability": "external",
            "summary": "The name of the key pair. You can create a key pair using [CreateKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or [ImportKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8901
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate"
            },
            "remarks": "Any parameters that you specify in the AWS CloudFormation template override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.",
            "stability": "external",
            "summary": "The launch template to use to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8908
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications"
            },
            "stability": "external",
            "summary": "The license configurations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8915
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring"
            },
            "stability": "external",
            "summary": "Specifies whether detailed monitoring is enabled for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8922
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces"
            },
            "remarks": "> If you use this property to point to a network interface, you must terminate the original interface before attaching a new one to allow the update of the instance to succeed.\n>\n> If this resource has a public IP address and is also in a VPC that is defined in the same template, you must use the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the VPC-gateway attachment.",
            "stability": "external",
            "summary": "The network interfaces to associate with the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8933
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname"
            },
            "stability": "external",
            "summary": "The name of an existing placement group that you want to launch the instance into (cluster | partition | spread)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8940
          },
          "name": "placementGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privatednsnameoptions"
            },
            "stability": "external",
            "summary": "The options for the instance hostname."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8947
          },
          "name": "privateDnsNameOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnInstance.PrivateDnsNameOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress"
            },
            "remarks": "Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request.\n\nYou cannot specify this option and the network interfaces option in the same request.\n\nIf you make an update to an instance that requires replacement, you must assign a new private IP address. During a replacement, AWS CloudFormation creates a new instance but doesn't delete the old instance until the stack has successfully updated. If the stack update fails, AWS CloudFormation uses the old instance to roll back the stack to the previous working state. The old and new instances cannot have the same private IP address.",
            "stability": "external",
            "summary": "[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8960
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-propagatetagstovolumeoncreation"
            },
            "remarks": "If you specify `true` and you assign tags to the instance, those tags are automatically assigned to all of the volumes that you attach to the instance at launch. If you specify `false` , those tags are not assigned to the attached volumes.",
            "stability": "external",
            "summary": "Indicates whether to assign the tags from the instance to all of the volumes attached to the instance at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8967
          },
          "name": "propagateTagsToVolumeOnCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid"
            },
            "remarks": "Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.\n\n> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The ID of the RAM disk to select."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8976
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids"
            },
            "remarks": "If you specify a network interface, you must specify any security groups as part of the network interface.",
            "stability": "external",
            "summary": "The IDs of the security groups. You can create a security group using [CreateSecurityGroup](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8985
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups"
            },
            "remarks": "For a nondefault VPC, you must use security group IDs instead.\n\nYou cannot specify this option and the network interfaces option in the same request. The list can contain both the name of existing Amazon EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template.\n\nDefault: Amazon EC2 uses the default security group.",
            "stability": "external",
            "summary": "[EC2-Classic, default VPC] The names of the security groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 8996
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck"
            },
            "remarks": "If the value is `true` , source/destination checks are enabled; otherwise, they are disabled. The default value is `true` . You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.",
            "stability": "external",
            "summary": "Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9003
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations"
            },
            "remarks": "> You can currently associate only one document with an instance.",
            "stability": "external",
            "summary": "The SSM [document](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html) and parameter values in AWS Systems Manager to associate with this instance. To use this property, you must specify an IAM instance profile role for the instance. For more information, see [Create an Instance Profile for Systems Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-configuring-access-role.html) in the *AWS Systems Manager User Guide* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9012
          },
          "name": "ssmAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid"
            },
            "remarks": "If you specify a network interface, you must specify any subnets as part of the network interface.",
            "stability": "external",
            "summary": "[EC2-VPC] The ID of the subnet to launch the instance into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9021
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags"
            },
            "remarks": "These tags are not applied to the EBS volumes, such as the root volume.",
            "stability": "external",
            "summary": "The tags to add to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9028
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy"
            },
            "remarks": "An instance with a tenancy of `dedicated` runs on single-tenant hardware.",
            "stability": "external",
            "summary": "The tenancy of the instance (if the instance is running in a VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9035
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata"
            },
            "remarks": "For more information, see [Run commands on your Linux instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) and [Run commands on your Windows instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html) . If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.",
            "stability": "external",
            "summary": "The user data script to make available to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9042
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes"
            },
            "stability": "external",
            "summary": "The volumes to attach to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 9049
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnInstance.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInstanceProps"
    },
    "@aws-cdk/aws-ec2.CfnInternetGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::InternetGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Allocates an internet gateway for use with a VPC. After creating the Internet gateway, you then attach it to a VPC.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::InternetGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnInternetGateway = new ec2.CfnInternetGateway(this, 'MyCfnInternetGateway', /* all optional props */ {\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInternetGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::InternetGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 11428
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnInternetGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11383
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11441
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11452
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInternetGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11387
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "InternetGatewayId"
            },
            "stability": "external",
            "summary": "The ID of the internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11412
          },
          "name": "attrInternetGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11446
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags"
            },
            "stability": "external",
            "summary": "Any tags to assign to the internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11419
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInternetGateway"
    },
    "@aws-cdk/aws-ec2.CfnInternetGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnInternetGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnInternetGatewayProps: ec2.CfnInternetGatewayProps = {\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnInternetGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11318
      },
      "name": "CfnInternetGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags"
            },
            "stability": "external",
            "summary": "Any tags to assign to the internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11325
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnInternetGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::LaunchTemplate",
          "exampleMetadata": "infused",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html"
        },
        "example": "declare const cluster: eks.Cluster;\n\nconst userData = `MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"==MYBOUNDARY==\"\n\n--==MYBOUNDARY==\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n\n#!/bin/bash\necho \"Running custom user data script\"\n\n--==MYBOUNDARY==--\\\\\n`;\nconst lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {\n  launchTemplateData: {\n    instanceType: 't3.small',\n    userData: Fn.base64(userData),\n  },\n});\n\ncluster.addNodegroupCapacity('extra-ng', {\n  launchTemplateSpec: {\n    id: lt.ref,\n    version: lt.attrLatestVersionNumber,\n  },\n});",
        "remarks": "Specifies a launch template for an Amazon EC2 instance. A launch template contains the parameters to launch an instance. For more information, see [Launch an instance from a launch template](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-launch-templates.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::LaunchTemplate`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::LaunchTemplate`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 11617
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11550
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11633
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11646
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLaunchTemplate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11554
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultVersionNumber"
            },
            "remarks": "The default version of a launch template cannot be specified in AWS CloudFormation . The default version can be set in the Amazon EC2 Console or by using the `modify-launch-template` AWS CLI command.",
            "stability": "external",
            "summary": "The default version of the launch template, such as 2."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11581
          },
          "name": "attrDefaultVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LatestVersionNumber"
            },
            "stability": "external",
            "summary": "The latest version of the launch template, such as `5` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11587
          },
          "name": "attrLatestVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11638
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata"
            },
            "stability": "external",
            "summary": "The information for the launch template."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11594
          },
          "name": "launchTemplateData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename"
            },
            "stability": "external",
            "summary": "A name for the launch template."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11601
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications"
            },
            "stability": "external",
            "summary": "The tags to apply to the launch template during creation."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11608
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorCountProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst acceleratorCountProperty: ec2.CfnLaunchTemplate.AcceleratorCountProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorCountProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11660
      },
      "name": "AcceleratorCountProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html#cfn-ec2-launchtemplate-acceleratorcount-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter. To exclude accelerator-enabled instance types, set `Max` to `0` .",
            "stability": "external",
            "summary": "The maximum number of accelerators."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11666
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratorcount.html#cfn-ec2-launchtemplate-acceleratorcount-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum number of accelerators."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11672
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.AcceleratorCountProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of total accelerator memory, in MiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst acceleratorTotalMemoryMiBProperty: ec2.CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11736
      },
      "name": "AcceleratorTotalMemoryMiBProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html#cfn-ec2-launchtemplate-acceleratortotalmemorymib-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11742
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-acceleratortotalmemorymib.html#cfn-ec2-launchtemplate-acceleratortotalmemorymib-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11748
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst baselineEbsBandwidthMbpsProperty: ec2.CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11812
      },
      "name": "BaselineEbsBandwidthMbpsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html#cfn-ec2-launchtemplate-baselineebsbandwidthmbps-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum baseline bandwidth, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11818
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-baselineebsbandwidthmbps.html#cfn-ec2-launchtemplate-baselineebsbandwidthmbps-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum baseline bandwidth, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11824
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`BlockDeviceMapping` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Information about a block device mapping for an Amazon EC2 launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst blockDeviceMappingProperty: ec2.CfnLaunchTemplate.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    kmsKeyId: 'kmsKeyId',\n    snapshotId: 'snapshotId',\n    throughput: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: 'noDevice',\n  virtualName: 'virtualName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11890
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-devicename"
            },
            "stability": "external",
            "summary": "The device name (for example, /dev/sdh or xvdh)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11896
          },
          "name": "deviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs"
            },
            "stability": "external",
            "summary": "Parameters used to automatically set up EBS volumes when the instance is launched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11902
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-nodevice"
            },
            "stability": "external",
            "summary": "To omit the device from the block device mapping, specify an empty string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11908
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-virtualname"
            },
            "remarks": "Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.",
            "stability": "external",
            "summary": "The virtual device name (ephemeralN)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11914
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.BlockDeviceMappingProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`CapacityReservationSpecification` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies an instance's Capacity Reservation targeting option. You can specify only one option at a time.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst capacityReservationSpecificationProperty: ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty = {\n  capacityReservationPreference: 'capacityReservationPreference',\n  capacityReservationTarget: {\n    capacityReservationId: 'capacityReservationId',\n    capacityReservationResourceGroupArn: 'capacityReservationResourceGroupArn',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11986
      },
      "name": "CapacityReservationSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationpreference"
            },
            "remarks": "- `open` - The instance can run in any `open` Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\n- `none` - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.",
            "stability": "external",
            "summary": "Indicates the instance's Capacity Reservation preferences. Possible preferences include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11995
          },
          "name": "capacityReservationPreference",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationtarget"
            },
            "stability": "external",
            "summary": "Information about the target Capacity Reservation or Capacity Reservation group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12001
          },
          "name": "capacityReservationTarget",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.CapacityReservationSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`CapacityReservationTarget` is a property of the [Amazon EC2 LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) property type.",
        "stability": "external",
        "summary": "Specifies a target Capacity Reservation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst capacityReservationTargetProperty: ec2.CfnLaunchTemplate.CapacityReservationTargetProperty = {\n  capacityReservationId: 'capacityReservationId',\n  capacityReservationResourceGroupArn: 'capacityReservationResourceGroupArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationTargetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12067
      },
      "name": "CapacityReservationTargetProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html#cfn-ec2-launchtemplate-capacityreservationtarget-capacityreservationid"
            },
            "stability": "external",
            "summary": "The ID of the Capacity Reservation in which to run the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12073
          },
          "name": "capacityReservationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html#cfn-ec2-launchtemplate-capacityreservationtarget-capacityreservationresourcegrouparn"
            },
            "stability": "external",
            "summary": "The ARN of the Capacity Reservation resource group in which to run the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12079
          },
          "name": "capacityReservationResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.CapacityReservationTargetProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .\n\n`CpuOptions` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies the CPU options for an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cpuOptionsProperty: ec2.CfnLaunchTemplate.CpuOptionsProperty = {\n  coreCount: 123,\n  threadsPerCore: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12145
      },
      "name": "CpuOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-corecount"
            },
            "stability": "external",
            "summary": "The number of CPU cores for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12151
          },
          "name": "coreCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-threadspercore"
            },
            "remarks": "To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.",
            "stability": "external",
            "summary": "The number of threads per CPU core."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12157
          },
          "name": "threadsPerCore",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.CpuOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`CreditSpecification` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies the credit option for CPU usage of a T2, T3, or T3a instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst creditSpecificationProperty: ec2.CfnLaunchTemplate.CreditSpecificationProperty = {\n  cpuCredits: 'cpuCredits',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12223
      },
      "name": "CreditSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification-cpucredits"
            },
            "remarks": "Valid values are `standard` and `unlimited` .",
            "stability": "external",
            "summary": "The credit option for CPU usage of a T2, T3, or T3a instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12229
          },
          "name": "cpuCredits",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.CreditSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Ebs` is a property of [AWS::EC2::LaunchTemplate BlockDeviceMapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html) .",
        "stability": "external",
        "summary": "Parameters for a block device for an EBS volume in an Amazon EC2 launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ebsProperty: ec2.CfnLaunchTemplate.EbsProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  kmsKeyId: 'kmsKeyId',\n  snapshotId: 'snapshotId',\n  throughput: 123,\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12292
      },
      "name": "EbsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-deleteontermination"
            },
            "stability": "external",
            "summary": "Indicates whether the EBS volume is deleted on instance termination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12298
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-encrypted"
            },
            "remarks": "Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can't specify an encryption value.",
            "stability": "external",
            "summary": "Indicates whether the EBS volume is encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12304
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-iops"
            },
            "remarks": "For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n\nThe following are the supported values for each volume type:\n\n- `gp3` : 3,000-16,000 IOPS\n- `io1` : 100-64,000 IOPS\n- `io2` : 100-64,000 IOPS\n\nFor `io1` and `io2` volumes, we guarantee 64,000 IOPS only for [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families guarantee performance up to 32,000 IOPS.\n\nThis parameter is supported for `io1` , `io2` , and `gp3` volumes only. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.",
            "stability": "external",
            "summary": "The number of I/O operations per second (IOPS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12320
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-kmskeyid"
            },
            "stability": "external",
            "summary": "The ARN of the symmetric AWS Key Management Service ( AWS KMS ) CMK used for encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12326
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-snapshotid"
            },
            "stability": "external",
            "summary": "The ID of the snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12332
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-throughput"
            },
            "remarks": "Valid Range: Minimum value of 125. Maximum value of 1000.",
            "stability": "external",
            "summary": "The throughput to provision for a `gp3` volume, with a maximum of 1,000 MiB/s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12340
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumesize"
            },
            "remarks": "You must specify either a snapshot ID or a volume size. The following are the supported volumes sizes for each volume type:\n\n- `gp2` and `gp3` : 1-16,384\n- `io1` and `io2` : 4-16,384\n- `st1` and `sc1` : 125-16,384\n- `standard` : 1-1,024",
            "stability": "external",
            "summary": "The size of the volume, in GiBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12351
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumetype"
            },
            "remarks": "For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12357
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.EbsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`ElasticGpuSpecification` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies a specification for an Elastic GPU for an Amazon EC2 launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst elasticGpuSpecificationProperty: ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty = {\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12441
      },
      "name": "ElasticGpuSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html#cfn-ec2-launchtemplate-elasticgpuspecification-type"
            },
            "remarks": "For more information about the values to specify for `Type` , see [Elastic Graphics Basics](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics) , specifically the Elastic Graphics accelerator column, in the *Amazon Elastic Compute Cloud User Guide for Windows Instances* .",
            "stability": "external",
            "summary": "The type of Elastic Graphics accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12447
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.ElasticGpuSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.EnclaveOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-enclaveoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Indicates whether the instance is enabled for AWS Nitro Enclaves.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst enclaveOptionsProperty: ec2.CfnLaunchTemplate.EnclaveOptionsProperty = {\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EnclaveOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12508
      },
      "name": "EnclaveOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-enclaveoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-enclaveoptions-enabled"
            },
            "remarks": "otherwise, it is not enabled for AWS Nitro Enclaves.",
            "stability": "external",
            "summary": "If this parameter is set to `true` , the instance is enabled for AWS Nitro Enclaves;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12514
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.EnclaveOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This parameter is valid only if the instance meets the [hibernation prerequisites](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites) . For more information, see [Hibernate Your Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the *Amazon EC2 User Guide* .\n\n`HibernationOptions` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies whether your instance is configured for hibernation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst hibernationOptionsProperty: ec2.CfnLaunchTemplate.HibernationOptionsProperty = {\n  configured: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12577
      },
      "name": "HibernationOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions-configured"
            },
            "remarks": "Default: `false`",
            "stability": "external",
            "summary": "If you set this parameter to `true` , the instance is enabled for hibernation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12585
          },
          "name": "configured",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.HibernationOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can use an IAM role to distribute your AWS credentials to your instances.\n\nIf you are creating the launch template for use with an Amazon EC2 Auto Scaling group, you can specify either the name or the ARN of the instance profile, but not both.\n\n`IamInstanceProfile` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies an IAM instance profile, which is a container for an IAM role for your instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst iamInstanceProfileProperty: ec2.CfnLaunchTemplate.IamInstanceProfileProperty = {\n  arn: 'arn',\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12650
      },
      "name": "IamInstanceProfileProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the instance profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12656
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-name"
            },
            "stability": "external",
            "summary": "The name of the instance profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12662
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.IamInstanceProfileProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`InstanceMarketOptions` is a property of the [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies the market (purchasing) option for an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceMarketOptionsProperty: ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty = {\n  marketType: 'marketType',\n  spotOptions: {\n    blockDurationMinutes: 123,\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    maxPrice: 'maxPrice',\n    spotInstanceType: 'spotInstanceType',\n    validUntil: 'validUntil',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12728
      },
      "name": "InstanceMarketOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-markettype"
            },
            "stability": "external",
            "summary": "The market type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12734
          },
          "name": "marketType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions"
            },
            "stability": "external",
            "summary": "The options for Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12740
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.InstanceMarketOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceRequirementsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.\n\nWhen you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.\n\n> You must specify `VCpuCount` and `MemoryMiB` . All other parameters are optional. Any unspecified optional parameter is set to its default.\n\nFor more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html) , [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html) , and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "The attributes for the instance types.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceRequirementsProperty: ec2.CfnLaunchTemplate.InstanceRequirementsProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceRequirementsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 12810
      },
      "name": "InstanceRequirementsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratorcount"
            },
            "remarks": "To exclude accelerator-enabled instance types, set `Max` to `0` .\n\nDefault: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12820
          },
          "name": "acceleratorCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorCountProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratormanufacturers"
            },
            "remarks": "- For instance types with NVIDIA devices, specify `nvidia` .\n- For instance types with AMD devices, specify `amd` .\n- For instance types with AWS devices, specify `amazon-web-services` .\n- For instance types with Xilinx devices, specify `xilinx` .\n\nDefault: Any manufacturer",
            "stability": "external",
            "summary": "Indicates whether instance types must have accelerators by specific manufacturers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12833
          },
          "name": "acceleratorManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratornames"
            },
            "remarks": "- For instance types with NVIDIA A100 GPUs, specify `a100` .\n- For instance types with NVIDIA V100 GPUs, specify `v100` .\n- For instance types with NVIDIA K80 GPUs, specify `k80` .\n- For instance types with NVIDIA T4 GPUs, specify `t4` .\n- For instance types with NVIDIA M60 GPUs, specify `m60` .\n- For instance types with AMD Radeon Pro V520 GPUs, specify `radeon-pro-v520` .\n- For instance types with Xilinx VU9P FPGAs, specify `vu9p` .\n\nDefault: Any accelerator",
            "stability": "external",
            "summary": "The accelerators that must be on the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12849
          },
          "name": "acceleratorNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratortotalmemorymib"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of total accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12857
          },
          "name": "acceleratorTotalMemoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.AcceleratorTotalMemoryMiBProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-acceleratortypes"
            },
            "remarks": "- For instance types with GPU accelerators, specify `gpu` .\n- For instance types with FPGA accelerators, specify `fpga` .\n- For instance types with inference accelerators, specify `inference` .\n\nDefault: Any accelerator type",
            "stability": "external",
            "summary": "The accelerator types that must be on the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12869
          },
          "name": "acceleratorTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-baremetal"
            },
            "remarks": "- To include bare metal instance types, specify `included` .\n- To require only bare metal instance types, specify `required` .\n- To exclude bare metal instance types, specify `excluded` .\n\nDefault: `excluded`",
            "stability": "external",
            "summary": "Indicates whether bare metal instance types must be included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12881
          },
          "name": "bareMetal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-baselineebsbandwidthmbps"
            },
            "remarks": "For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n\nDefault: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12889
          },
          "name": "baselineEbsBandwidthMbps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BaselineEbsBandwidthMbpsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-burstableperformance"
            },
            "remarks": "For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) .\n\n- To include burstable performance instance types, specify `included` .\n- To require only burstable performance instance types, specify `required` .\n- To exclude burstable performance instance types, specify `excluded` .\n\nDefault: `excluded`",
            "stability": "external",
            "summary": "Indicates whether burstable performance T instance types are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12901
          },
          "name": "burstablePerformance",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-cpumanufacturers"
            },
            "remarks": "- For instance types with Intel CPUs, specify `intel` .\n- For instance types with AMD CPUs, specify `amd` .\n- For instance types with AWS CPUs, specify `amazon-web-services` .\n\n> Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.\n\nDefault: Any manufacturer",
            "stability": "external",
            "summary": "The CPU manufacturers to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12915
          },
          "name": "cpuManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-excludedinstancetypes"
            },
            "remarks": "You can use strings with one or more wild cards, represented by an asterisk ( `*` ), to exclude an instance type, size, or generation. The following are examples: `m5.8xlarge` , `c5*.*` , `m5a.*` , `r*` , `*3*` .\n\nFor example, if you specify `c5*` ,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*` , Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.\n\nDefault: No excluded instance types",
            "stability": "external",
            "summary": "The instance types to exclude."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12925
          },
          "name": "excludedInstanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-instancegenerations"
            },
            "remarks": "The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n\nFor current generation instance types, specify `current` .\n\nFor previous generation instance types, specify `previous` .\n\nDefault: Current and previous generation instance types",
            "stability": "external",
            "summary": "Indicates whether current or previous generation instance types are included."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12937
          },
          "name": "instanceGenerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-localstorage"
            },
            "remarks": "For more information, [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide* .\n\n- To include instance types with instance store volumes, specify `included` .\n- To require only instance types with instance store volumes, specify `required` .\n- To exclude instance types with instance store volumes, specify `excluded` .\n\nDefault: `included`",
            "stability": "external",
            "summary": "Indicates whether instance types with instance store volumes are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12949
          },
          "name": "localStorage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-localstoragetypes"
            },
            "remarks": "- For instance types with hard disk drive (HDD) storage, specify `hdd` .\n- For instance types with solid state drive (SDD) storage, specify `sdd` .\n\nDefault: `hdd` and `sdd`",
            "stability": "external",
            "summary": "The type of local storage that is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12960
          },
          "name": "localStorageTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-memorygibpervcpu"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12968
          },
          "name": "memoryGiBPerVCpu",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryGiBPerVCpuProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-memorymib"
            },
            "stability": "external",
            "summary": "The minimum and maximum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12974
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryMiBProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-networkinterfacecount"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12982
          },
          "name": "networkInterfaceCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceCountProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-ondemandmaxpricepercentageoverlowestprice"
            },
            "remarks": "This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n\nThe parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n\nTo turn off price protection, specify a high value, such as `999999` .\n\nThis parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n\n> If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n\nDefault: `20`",
            "stability": "external",
            "summary": "The price protection threshold for On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 12998
          },
          "name": "onDemandMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-requirehibernatesupport"
            },
            "remarks": "This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) .\n\nDefault: `false`",
            "stability": "external",
            "summary": "Indicates whether instance types must support hibernation for On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13008
          },
          "name": "requireHibernateSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-spotmaxpricepercentageoverlowestprice"
            },
            "remarks": "This is the maximum you’ll pay for a Spot Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n\nThe parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n\nTo turn off price protection, specify a high value, such as `999999` .\n\nThis parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n\n> If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n\nDefault: `100`",
            "stability": "external",
            "summary": "The price protection threshold for Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13024
          },
          "name": "spotMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-totallocalstoragegb"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13032
          },
          "name": "totalLocalStorageGb",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TotalLocalStorageGBProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancerequirements.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements-vcpucount"
            },
            "stability": "external",
            "summary": "The minimum and maximum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13038
          },
          "name": "vCpuCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.VCpuCountProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.InstanceRequirementsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv4PrefixSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv4prefixspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Ipv4PrefixSpecification` is a property of [AWS::EC2::LaunchTemplate NetworkInterface](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html) .",
        "stability": "external",
        "summary": "Specifies an IPv4 prefix for a network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ipv4PrefixSpecificationProperty: ec2.CfnLaunchTemplate.Ipv4PrefixSpecificationProperty = {\n  ipv4Prefix: 'ipv4Prefix',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv4PrefixSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13161
      },
      "name": "Ipv4PrefixSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv4prefixspecification.html#cfn-ec2-launchtemplate-ipv4prefixspecification-ipv4prefix"
            },
            "remarks": "For information, see [Assigning prefixes to Amazon EC2 network interfaces](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The IPv4 prefix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13167
          },
          "name": "ipv4Prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.Ipv4PrefixSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Ipv6Add` is a property of [AWS::EC2::LaunchTemplate NetworkInterface](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html) .",
        "stability": "external",
        "summary": "Specifies an IPv6 address in an Amazon EC2 launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ipv6AddProperty: ec2.CfnLaunchTemplate.Ipv6AddProperty = {\n  ipv6Address: 'ipv6Address',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13230
      },
      "name": "Ipv6AddProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html#cfn-ec2-launchtemplate-ipv6add-ipv6address"
            },
            "remarks": "You can't use this option if you're specifying a number of IPv6 addresses.",
            "stability": "external",
            "summary": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13236
          },
          "name": "ipv6Address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.Ipv6AddProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6PrefixSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6prefixspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Ipv6PrefixSpecification` is a property of [AWS::EC2::LaunchTemplate NetworkInterface](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html) .",
        "stability": "external",
        "summary": "Specifies an IPv6 prefix for a network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ipv6PrefixSpecificationProperty: ec2.CfnLaunchTemplate.Ipv6PrefixSpecificationProperty = {\n  ipv6Prefix: 'ipv6Prefix',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6PrefixSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13299
      },
      "name": "Ipv6PrefixSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6prefixspecification.html#cfn-ec2-launchtemplate-ipv6prefixspecification-ipv6prefix"
            },
            "stability": "external",
            "summary": "The IPv6 prefix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13305
          },
          "name": "ipv6Prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.Ipv6PrefixSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> You must specify at least one parameter for the launch template data.",
        "stability": "external",
        "summary": "The information to include in the launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateDataProperty: ec2.CfnLaunchTemplate.LaunchTemplateDataProperty = {\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      kmsKeyId: 'kmsKeyId',\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: 'noDevice',\n    virtualName: 'virtualName',\n  }],\n  capacityReservationSpecification: {\n    capacityReservationPreference: 'capacityReservationPreference',\n    capacityReservationTarget: {\n      capacityReservationId: 'capacityReservationId',\n      capacityReservationResourceGroupArn: 'capacityReservationResourceGroupArn',\n    },\n  },\n  cpuOptions: {\n    coreCount: 123,\n    threadsPerCore: 123,\n  },\n  creditSpecification: {\n    cpuCredits: 'cpuCredits',\n  },\n  disableApiTermination: false,\n  ebsOptimized: false,\n  elasticGpuSpecifications: [{\n    type: 'type',\n  }],\n  elasticInferenceAccelerators: [{\n    count: 123,\n    type: 'type',\n  }],\n  enclaveOptions: {\n    enabled: false,\n  },\n  hibernationOptions: {\n    configured: false,\n  },\n  iamInstanceProfile: {\n    arn: 'arn',\n    name: 'name',\n  },\n  imageId: 'imageId',\n  instanceInitiatedShutdownBehavior: 'instanceInitiatedShutdownBehavior',\n  instanceMarketOptions: {\n    marketType: 'marketType',\n    spotOptions: {\n      blockDurationMinutes: 123,\n      instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n      maxPrice: 'maxPrice',\n      spotInstanceType: 'spotInstanceType',\n      validUntil: 'validUntil',\n    },\n  },\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  licenseSpecifications: [{\n    licenseConfigurationArn: 'licenseConfigurationArn',\n  }],\n  maintenanceOptions: {\n    autoRecovery: 'autoRecovery',\n  },\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpProtocolIpv6: 'httpProtocolIpv6',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n    instanceMetadataTags: 'instanceMetadataTags',\n  },\n  monitoring: {\n    enabled: false,\n  },\n  networkInterfaces: [{\n    associateCarrierIpAddress: false,\n    associatePublicIpAddress: false,\n    deleteOnTermination: false,\n    description: 'description',\n    deviceIndex: 123,\n    groups: ['groups'],\n    interfaceType: 'interfaceType',\n    ipv4PrefixCount: 123,\n    ipv4Prefixes: [{\n      ipv4Prefix: 'ipv4Prefix',\n    }],\n    ipv6AddressCount: 123,\n    ipv6Addresses: [{\n      ipv6Address: 'ipv6Address',\n    }],\n    ipv6PrefixCount: 123,\n    ipv6Prefixes: [{\n      ipv6Prefix: 'ipv6Prefix',\n    }],\n    networkCardIndex: 123,\n    networkInterfaceId: 'networkInterfaceId',\n    privateIpAddress: 'privateIpAddress',\n    privateIpAddresses: [{\n      primary: false,\n      privateIpAddress: 'privateIpAddress',\n    }],\n    secondaryPrivateIpAddressCount: 123,\n    subnetId: 'subnetId',\n  }],\n  placement: {\n    affinity: 'affinity',\n    availabilityZone: 'availabilityZone',\n    groupName: 'groupName',\n    hostId: 'hostId',\n    hostResourceGroupArn: 'hostResourceGroupArn',\n    partitionNumber: 123,\n    spreadDomain: 'spreadDomain',\n    tenancy: 'tenancy',\n  },\n  privateDnsNameOptions: {\n    enableResourceNameDnsAaaaRecord: false,\n    enableResourceNameDnsARecord: false,\n    hostnameType: 'hostnameType',\n  },\n  ramDiskId: 'ramDiskId',\n  securityGroupIds: ['securityGroupIds'],\n  securityGroups: ['securityGroups'],\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  userData: 'userData',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13368
      },
      "name": "LaunchTemplateDataProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-blockdevicemappings"
            },
            "stability": "external",
            "summary": "The block device mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13374
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification"
            },
            "remarks": "If you do not specify this parameter, the instance's Capacity Reservation preference defaults to `open` , which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).",
            "stability": "external",
            "summary": "The Capacity Reservation targeting option."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13380
          },
          "name": "capacityReservationSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CapacityReservationSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions"
            },
            "remarks": "For more information, see [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The CPU options for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13386
          },
          "name": "cpuOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CpuOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification"
            },
            "remarks": "Valid for T2, T3, or T3a instances only.",
            "stability": "external",
            "summary": "The credit option for CPU usage of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13392
          },
          "name": "creditSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-disableapitermination"
            },
            "remarks": "otherwise, you can. To change this attribute after launch, use [ModifyInstanceAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html) . Alternatively, if you set `InstanceInitiatedShutdownBehavior` to `terminate` , you can terminate the instance by running the shutdown command from the instance.",
            "stability": "external",
            "summary": "If you set this parameter to `true` , you can't terminate the instance using the Amazon EC2 console, CLI, or API;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13398
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ebsoptimized"
            },
            "remarks": "This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.",
            "stability": "external",
            "summary": "Indicates whether the instance is optimized for Amazon EBS I/O."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13404
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticgpuspecifications"
            },
            "stability": "external",
            "summary": "An elastic GPU to associate with the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13410
          },
          "name": "elasticGpuSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticinferenceaccelerators"
            },
            "stability": "external",
            "summary": "The elastic inference accelerator for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13416
          },
          "name": "elasticInferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-enclaveoptions"
            },
            "remarks": "For more information, see [What is AWS Nitro Enclaves?](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html) in the *AWS Nitro Enclaves User Guide* .\n\nYou can't enable AWS Nitro Enclaves and hibernation on the same instance.",
            "stability": "external",
            "summary": "Indicates whether the instance is enabled for AWS Nitro Enclaves."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13424
          },
          "name": "enclaveOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.EnclaveOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions"
            },
            "remarks": "This parameter is valid only if the instance meets the [hibernation prerequisites](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites) . For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "Indicates whether an instance is enabled for hibernation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13430
          },
          "name": "hibernationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.HibernationOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile"
            },
            "stability": "external",
            "summary": "The name or Amazon Resource Name (ARN) of an IAM instance profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13436
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-imageid"
            },
            "stability": "external",
            "summary": "The ID of the AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13442
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instanceinitiatedshutdownbehavior"
            },
            "remarks": "Default: `stop`",
            "stability": "external",
            "summary": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13450
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions"
            },
            "stability": "external",
            "summary": "The market (purchasing) option for the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13456
          },
          "name": "instanceMarketOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancerequirements"
            },
            "remarks": "When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.\n\nIf you specify `InstanceRequirements` , you can't specify `InstanceTypes` .",
            "stability": "external",
            "summary": "The attributes for the instance types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13464
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceRequirementsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancetype"
            },
            "remarks": "If you specify `InstanceTypes` , you can't specify `InstanceRequirements` .",
            "stability": "external",
            "summary": "The instance type. For more information, see [Instance Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon Elastic Compute Cloud User Guide* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13472
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-kernelid"
            },
            "remarks": "We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User Provided Kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The ID of the kernel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13480
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-keyname"
            },
            "remarks": "> If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.",
            "stability": "external",
            "summary": "The name of the key pair. You can create a key pair using [CreateKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or [ImportKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13488
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-licensespecifications"
            },
            "stability": "external",
            "summary": "The license configurations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13494
          },
          "name": "licenseSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-maintenanceoptions"
            },
            "stability": "external",
            "summary": "`CfnLaunchTemplate.LaunchTemplateDataProperty.MaintenanceOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13500
          },
          "name": "maintenanceOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MaintenanceOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions"
            },
            "remarks": "For more information, see [Instance Metadata and User Data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The metadata options for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13506
          },
          "name": "metadataOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MetadataOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring"
            },
            "stability": "external",
            "summary": "The monitoring for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13512
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-networkinterfaces"
            },
            "remarks": "If you specify a network interface, you must specify any security groups and subnets as part of the network interface.",
            "stability": "external",
            "summary": "One or more network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13518
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-placement"
            },
            "stability": "external",
            "summary": "The placement for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13524
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions"
            },
            "remarks": "The default values are inherited from the subnet.",
            "stability": "external",
            "summary": "The options for the instance hostname."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13530
          },
          "name": "privateDnsNameOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateDnsNameOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ramdiskid"
            },
            "remarks": "> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User Provided Kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The ID of the RAM disk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13538
          },
          "name": "ramDiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroupids"
            },
            "remarks": "You can create a security group using [CreateSecurityGroup](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html) . You cannot specify both a security group ID and security name in the same request.",
            "stability": "external",
            "summary": "One or more security group IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13544
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroups"
            },
            "remarks": "For a nondefault VPC, you must use security group IDs instead. You cannot specify both a security group ID and security name in the same request.",
            "stability": "external",
            "summary": "[EC2-Classic, default VPC] One or more security group names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13550
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications"
            },
            "remarks": "You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch.",
            "stability": "external",
            "summary": "The tags to apply to the resources during launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13556
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-userdata"
            },
            "remarks": "You must provide base64-encoded text. User data is limited to 16 KB. For more information, see [Running Commands on Your Linux Instance at Launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) (Linux) or [Adding User Data](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data) (Windows).\n\nIf you are creating the launch template for use with AWS Batch , the user data must be provided in the [MIME multi-part archive format](https://docs.aws.amazon.com/https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive) . For more information, see [Amazon EC2 user data in launch templates](https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html) in the *AWS Batch User Guide* .",
            "stability": "external",
            "summary": "The user data to make available to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13564
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.LaunchTemplateDataProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`LaunchTemplateElasticInferenceAccelerator` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies an elastic inference accelerator.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateElasticInferenceAcceleratorProperty: ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty = {\n  count: 123,\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13714
      },
      "name": "LaunchTemplateElasticInferenceAcceleratorProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html#cfn-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-count"
            },
            "remarks": "Default: 1",
            "stability": "external",
            "summary": "The number of elastic inference accelerators to attach to the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13722
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html#cfn-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-type"
            },
            "remarks": "The possible values are eia1.medium, eia1.large, and eia1.xlarge.",
            "stability": "external",
            "summary": "The type of elastic inference accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13728
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`LaunchTemplateTagSpecification` is a property of [AWS::EC2::LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html) .",
        "stability": "external",
        "summary": "Specifies the tags to apply to the launch template during creation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateTagSpecificationProperty: ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13794
      },
      "name": "LaunchTemplateTagSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html#cfn-ec2-launchtemplate-launchtemplatetagspecification-resourcetype"
            },
            "remarks": "To tag the launch template, `ResourceType` must be `launch-template` .",
            "stability": "external",
            "summary": "The type of resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13800
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html#cfn-ec2-launchtemplate-launchtemplatetagspecification-tags"
            },
            "stability": "external",
            "summary": "The tags for the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13806
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`LicenseSpecification` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies a license configuration for an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst licenseSpecificationProperty: ec2.CfnLaunchTemplate.LicenseSpecificationProperty = {\n  licenseConfigurationArn: 'licenseConfigurationArn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LicenseSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13872
      },
      "name": "LicenseSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html#cfn-ec2-launchtemplate-licensespecification-licenseconfigurationarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the license configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13878
          },
          "name": "licenseConfigurationArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.LicenseSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MaintenanceOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-maintenanceoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The maintenance options of your instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst maintenanceOptionsProperty: ec2.CfnLaunchTemplate.MaintenanceOptionsProperty = {\n  autoRecovery: 'autoRecovery',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MaintenanceOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 13939
      },
      "name": "MaintenanceOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-maintenanceoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-maintenanceoptions-autorecovery"
            },
            "stability": "external",
            "summary": "Disables the automatic recovery behavior of your instance or sets it to default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 13945
          },
          "name": "autoRecovery",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MaintenanceOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryGiBPerVCpuProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of memory per vCPU, in GiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst memoryGiBPerVCpuProperty: ec2.CfnLaunchTemplate.MemoryGiBPerVCpuProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryGiBPerVCpuProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14006
      },
      "name": "MemoryGiBPerVCpuProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html#cfn-ec2-launchtemplate-memorygibpervcpu-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14012
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorygibpervcpu.html#cfn-ec2-launchtemplate-memorygibpervcpu-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14018
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MemoryGiBPerVCpuProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryMiBProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of memory, in MiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst memoryMiBProperty: ec2.CfnLaunchTemplate.MemoryMiBProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MemoryMiBProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14082
      },
      "name": "MemoryMiBProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html#cfn-ec2-launchtemplate-memorymib-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14088
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-memorymib.html#cfn-ec2-launchtemplate-memorymib-min"
            },
            "remarks": "To specify no minimum limit, specify `0` .",
            "stability": "external",
            "summary": "The minimum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14094
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MemoryMiBProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MetadataOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`MetadataOptions` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies the metadata options for the instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst metadataOptionsProperty: ec2.CfnLaunchTemplate.MetadataOptionsProperty = {\n  httpEndpoint: 'httpEndpoint',\n  httpProtocolIpv6: 'httpProtocolIpv6',\n  httpPutResponseHopLimit: 123,\n  httpTokens: 'httpTokens',\n  instanceMetadataTags: 'instanceMetadataTags',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MetadataOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14160
      },
      "name": "MetadataOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpendpoint"
            },
            "remarks": "If the parameter is not specified, the default state is `enabled` .\n\n> If you specify a value of `disabled` , you will not be able to access your instance metadata.",
            "stability": "external",
            "summary": "Enables or disables the HTTP metadata endpoint on your instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14168
          },
          "name": "httpEndpoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpprotocolipv6"
            },
            "remarks": "Default: `disabled`",
            "stability": "external",
            "summary": "Enables or disables the IPv6 endpoint for the instance metadata service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14176
          },
          "name": "httpProtocolIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httpputresponsehoplimit"
            },
            "remarks": "The larger the number, the further instance metadata requests can travel.\n\nDefault: 1\n\nPossible values: Integers from 1 to 64",
            "stability": "external",
            "summary": "The desired HTTP PUT response hop limit for instance metadata requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14186
          },
          "name": "httpPutResponseHopLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-httptokens"
            },
            "remarks": "If the parameter is not specified in the request, the default state is `optional` .\n\nIf the state is `optional` , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.\n\nIf the state is `required` , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.",
            "stability": "external",
            "summary": "The state of token usage for your instance metadata requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14196
          },
          "name": "httpTokens",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-metadataoptions-instancemetadatatags"
            },
            "remarks": "Set to `disabled` to turn off access to instance tags from the instance metadata. For more information, see [Work with instance tags using the instance metadata](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS) .\n\nDefault: `disabled`",
            "stability": "external",
            "summary": "Set to `enabled` to allow access to instance tags from the instance metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14204
          },
          "name": "instanceMetadataTags",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MetadataOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Monitoring` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies whether detailed monitoring is enabled for an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst monitoringProperty: ec2.CfnLaunchTemplate.MonitoringProperty = {\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14279
      },
      "name": "MonitoringProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring-enabled"
            },
            "remarks": "Otherwise, basic monitoring is enabled.",
            "stability": "external",
            "summary": "Specify `true` to enable detailed monitoring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14285
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.MonitoringProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceCountProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum number of network interfaces.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst networkInterfaceCountProperty: ec2.CfnLaunchTemplate.NetworkInterfaceCountProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceCountProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14583
      },
      "name": "NetworkInterfaceCountProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html#cfn-ec2-launchtemplate-networkinterfacecount-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14589
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterfacecount.html#cfn-ec2-launchtemplate-networkinterfacecount-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14595
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.NetworkInterfaceCountProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`NetworkInterface` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies the parameters for a network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst networkInterfaceProperty: ec2.CfnLaunchTemplate.NetworkInterfaceProperty = {\n  associateCarrierIpAddress: false,\n  associatePublicIpAddress: false,\n  deleteOnTermination: false,\n  description: 'description',\n  deviceIndex: 123,\n  groups: ['groups'],\n  interfaceType: 'interfaceType',\n  ipv4PrefixCount: 123,\n  ipv4Prefixes: [{\n    ipv4Prefix: 'ipv4Prefix',\n  }],\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  ipv6PrefixCount: 123,\n  ipv6Prefixes: [{\n    ipv6Prefix: 'ipv6Prefix',\n  }],\n  networkCardIndex: 123,\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddress: 'privateIpAddress',\n  privateIpAddresses: [{\n    primary: false,\n    privateIpAddress: 'privateIpAddress',\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14348
      },
      "name": "NetworkInterfaceProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatecarrieripaddress"
            },
            "remarks": "Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. For more information about Carrier IP addresses, see [Carrier IP addresses](https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#provider-owned-ip) in the *AWS Wavelength Developer Guide* .",
            "stability": "external",
            "summary": "Indicates whether to associate a Carrier IP address with eth0 for a new network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14356
          },
          "name": "associateCarrierIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatepublicipaddress"
            },
            "stability": "external",
            "summary": "Associates a public IPv4 address with eth0 for a new network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14362
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deleteontermination"
            },
            "stability": "external",
            "summary": "Indicates whether the network interface is deleted when the instance is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14368
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-description"
            },
            "stability": "external",
            "summary": "A description for the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14374
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deviceindex"
            },
            "stability": "external",
            "summary": "The device index for the network interface attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14380
          },
          "name": "deviceIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-groups"
            },
            "stability": "external",
            "summary": "The IDs of one or more security groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14386
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-interfacetype"
            },
            "remarks": "To create an Elastic Fabric Adapter (EFA), specify `efa` . For more information, see [Elastic Fabric Adapter](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html) in the *Amazon Elastic Compute Cloud User Guide* .\n\nIf you are not creating an EFA, specify `interface` or omit this parameter.\n\nValid values: `interface` | `efa`",
            "stability": "external",
            "summary": "The type of network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14396
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv4prefixcount"
            },
            "remarks": "You cannot use this option if you use the `Ipv4Prefix` option.",
            "stability": "external",
            "summary": "The number of IPv4 prefixes to be automatically assigned to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14402
          },
          "name": "ipv4PrefixCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv4prefixes"
            },
            "remarks": "You cannot use this option if you use the `Ipv4PrefixCount` option.",
            "stability": "external",
            "summary": "One or more IPv4 prefixes to be assigned to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14408
          },
          "name": "ipv4Prefixes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv4PrefixSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresscount"
            },
            "remarks": "Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.",
            "stability": "external",
            "summary": "The number of IPv6 addresses to assign to a network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14414
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresses"
            },
            "remarks": "You can't use this option if you're specifying a number of IPv6 addresses.",
            "stability": "external",
            "summary": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14420
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6prefixcount"
            },
            "remarks": "You cannot use this option if you use the `Ipv6Prefix` option.",
            "stability": "external",
            "summary": "The number of IPv6 prefixes to be automatically assigned to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14426
          },
          "name": "ipv6PrefixCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6prefixes"
            },
            "remarks": "You cannot use this option if you use the `Ipv6PrefixCount` option.",
            "stability": "external",
            "summary": "One or more IPv6 prefixes to be assigned to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14432
          },
          "name": "ipv6Prefixes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6PrefixSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkcardindex"
            },
            "remarks": "Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.",
            "stability": "external",
            "summary": "The index of the network card."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14438
          },
          "name": "networkCardIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14444
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddress"
            },
            "stability": "external",
            "summary": "The primary private IPv4 address of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14450
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddresses"
            },
            "stability": "external",
            "summary": "One or more private IPv4 addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14456
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-secondaryprivateipaddresscount"
            },
            "stability": "external",
            "summary": "The number of secondary private IPv4 addresses to assign to a network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14462
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet for the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14468
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.NetworkInterfaceProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Placement` is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies the placement of an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst placementProperty: ec2.CfnLaunchTemplate.PlacementProperty = {\n  affinity: 'affinity',\n  availabilityZone: 'availabilityZone',\n  groupName: 'groupName',\n  hostId: 'hostId',\n  hostResourceGroupArn: 'hostResourceGroupArn',\n  partitionNumber: 123,\n  spreadDomain: 'spreadDomain',\n  tenancy: 'tenancy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14661
      },
      "name": "PlacementProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-affinity"
            },
            "stability": "external",
            "summary": "The affinity setting for an instance on a Dedicated Host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14667
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14673
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-groupname"
            },
            "stability": "external",
            "summary": "The name of the placement group for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14679
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostid"
            },
            "stability": "external",
            "summary": "The ID of the Dedicated Host for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14685
          },
          "name": "hostId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostresourcegrouparn"
            },
            "remarks": "If you specify a host resource group ARN, omit the *Tenancy* parameter or set it to `host` .",
            "stability": "external",
            "summary": "The ARN of the host resource group in which to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14691
          },
          "name": "hostResourceGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-partitionnumber"
            },
            "remarks": "Valid only if the placement group strategy is set to `partition` .",
            "stability": "external",
            "summary": "The number of the partition the instance should launch in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14697
          },
          "name": "partitionNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-spreaddomain"
            },
            "stability": "external",
            "summary": "Reserved for future use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14703
          },
          "name": "spreadDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-tenancy"
            },
            "remarks": "An instance with a tenancy of dedicated runs on single-tenant hardware.",
            "stability": "external",
            "summary": "The tenancy of the instance (if the instance is running in a VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14709
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.PlacementProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateDnsNameOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the options for instance hostnames.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateDnsNameOptionsProperty: ec2.CfnLaunchTemplate.PrivateDnsNameOptionsProperty = {\n  enableResourceNameDnsAaaaRecord: false,\n  enableResourceNameDnsARecord: false,\n  hostnameType: 'hostnameType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateDnsNameOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14791
      },
      "name": "PrivateDnsNameOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions-enableresourcenamednsaaaarecord"
            },
            "stability": "external",
            "summary": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14797
          },
          "name": "enableResourceNameDnsAaaaRecord",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions-enableresourcenamednsarecord"
            },
            "stability": "external",
            "summary": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14803
          },
          "name": "enableResourceNameDnsARecord",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-privatednsnameoptions-hostnametype"
            },
            "remarks": "For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The type of hostname for EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14809
          },
          "name": "hostnameType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.PrivateDnsNameOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`PrivateIpAdd` is a property of [AWS::EC2::LaunchTemplate NetworkInterface](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html) .",
        "stability": "external",
        "summary": "Specifies a secondary private IPv4 address for a network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateIpAddProperty: ec2.CfnLaunchTemplate.PrivateIpAddProperty = {\n  primary: false,\n  privateIpAddress: 'privateIpAddress',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14878
      },
      "name": "PrivateIpAddProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-primary"
            },
            "remarks": "Only one IPv4 address can be designated as primary.",
            "stability": "external",
            "summary": "Indicates whether the private IPv4 address is the primary private IPv4 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14884
          },
          "name": "primary",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-privateipaddress"
            },
            "stability": "external",
            "summary": "The private IPv4 addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14890
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.PrivateIpAddProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`SpotOptions` is a property of [AWS::EC2::LaunchTemplate InstanceMarketOptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html) .",
        "stability": "external",
        "summary": "Specifies options for Spot Instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotOptionsProperty: ec2.CfnLaunchTemplate.SpotOptionsProperty = {\n  blockDurationMinutes: 123,\n  instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n  maxPrice: 'maxPrice',\n  spotInstanceType: 'spotInstanceType',\n  validUntil: 'validUntil',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 14956
      },
      "name": "SpotOptionsProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-blockdurationminutes"
            },
            "remarks": "This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).",
            "stability": "external",
            "summary": "The required duration for the Spot Instances (also known as Spot blocks), in minutes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14962
          },
          "name": "blockDurationMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-instanceinterruptionbehavior"
            },
            "remarks": "The default is `terminate` .",
            "stability": "external",
            "summary": "The behavior when a Spot Instance is interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14968
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-maxprice"
            },
            "stability": "external",
            "summary": "The maximum hourly price you're willing to pay for the Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14974
          },
          "name": "maxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-spotinstancetype"
            },
            "remarks": "If you are using Spot Instances with an Auto Scaling group, use `one-time` requests, as the Amazon EC2 Auto Scaling service handles requesting new Spot Instances whenever the group is below its desired capacity.",
            "stability": "external",
            "summary": "The Spot Instance request type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14982
          },
          "name": "spotInstanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-validuntil"
            },
            "remarks": "For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.",
            "stability": "external",
            "summary": "The end date of the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 14988
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.SpotOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`TagSpecification` is a property type of [`TagSpecifications`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications) . [`TagSpecifications`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications) is a property of [AWS::EC2::LaunchTemplate LaunchTemplateData](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html) .",
        "stability": "external",
        "summary": "Specifies the tags to apply to a resource when the resource is created for the launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst tagSpecificationProperty: ec2.CfnLaunchTemplate.TagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15063
      },
      "name": "TagSpecificationProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-resourcetype"
            },
            "remarks": "Currently, the resource types that support tagging on creation are `instance` and `volume` . To tag a resource after it has been created, see [CreateTags](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html) .\n\n*Conditional* : Required if tags are set.",
            "stability": "external",
            "summary": "The type of resource to tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15071
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15077
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.TagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.TotalLocalStorageGBProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of total local storage, in GB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst totalLocalStorageGBProperty: ec2.CfnLaunchTemplate.TotalLocalStorageGBProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.TotalLocalStorageGBProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15141
      },
      "name": "TotalLocalStorageGBProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html#cfn-ec2-launchtemplate-totallocalstoragegb-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15147
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-totallocalstoragegb.html#cfn-ec2-launchtemplate-totallocalstoragegb-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15153
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.TotalLocalStorageGBProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplate.VCpuCountProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum number of vCPUs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst vCpuCountProperty: ec2.CfnLaunchTemplate.VCpuCountProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.VCpuCountProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15217
      },
      "name": "VCpuCountProperty",
      "namespace": "CfnLaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html#cfn-ec2-launchtemplate-vcpucount-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15223
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-vcpucount.html#cfn-ec2-launchtemplate-vcpucount-min"
            },
            "remarks": "To specify no minimum limit, specify `0` .",
            "stability": "external",
            "summary": "The minimum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15229
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplate.VCpuCountProperty"
    },
    "@aws-cdk/aws-ec2.CfnLaunchTemplateProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html"
        },
        "example": "declare const cluster: eks.Cluster;\n\nconst userData = `MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"==MYBOUNDARY==\"\n\n--==MYBOUNDARY==\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n\n#!/bin/bash\necho \"Running custom user data script\"\n\n--==MYBOUNDARY==--\\\\\n`;\nconst lt = new ec2.CfnLaunchTemplate(this, 'LaunchTemplate', {\n  launchTemplateData: {\n    instanceType: 't3.small',\n    userData: Fn.base64(userData),\n  },\n});\n\ncluster.addNodegroupCapacity('extra-ng', {\n  launchTemplateSpec: {\n    id: lt.ref,\n    version: lt.attrLatestVersionNumber,\n  },\n});",
        "stability": "external",
        "summary": "Properties for defining a `CfnLaunchTemplate`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 11465
      },
      "name": "CfnLaunchTemplateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata"
            },
            "stability": "external",
            "summary": "The information for the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11472
          },
          "name": "launchTemplateData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename"
            },
            "stability": "external",
            "summary": "A name for the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11479
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications"
            },
            "stability": "external",
            "summary": "The tags to apply to the launch template during creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 11486
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateTagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLaunchTemplateProps"
    },
    "@aws-cdk/aws-ec2.CfnLocalGatewayRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::LocalGatewayRoute",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a static route for the specified local gateway route table.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::LocalGatewayRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnLocalGatewayRoute = new ec2.CfnLocalGatewayRoute(this, 'MyCfnLocalGatewayRoute', {\n  destinationCidrBlock: 'destinationCidrBlock',\n  localGatewayRouteTableId: 'localGatewayRouteTableId',\n  localGatewayVirtualInterfaceGroupId: 'localGatewayVirtualInterfaceGroupId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::LocalGatewayRoute`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 15445
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15380
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15464
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15477
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLocalGatewayRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15384
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external",
            "summary": "The state of the local gateway route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15409
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Type"
            },
            "stability": "external",
            "summary": "The type of local gateway route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15415
          },
          "name": "attrType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15469
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "The CIDR block used for destination matches."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15422
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the local gateway route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15429
          },
          "name": "localGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayvirtualinterfacegroupid"
            },
            "stability": "external",
            "summary": "The ID of the virtual interface group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15436
          },
          "name": "localGatewayVirtualInterfaceGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLocalGatewayRoute"
    },
    "@aws-cdk/aws-ec2.CfnLocalGatewayRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnLocalGatewayRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnLocalGatewayRouteProps: ec2.CfnLocalGatewayRouteProps = {\n  destinationCidrBlock: 'destinationCidrBlock',\n  localGatewayRouteTableId: 'localGatewayRouteTableId',\n  localGatewayVirtualInterfaceGroupId: 'localGatewayVirtualInterfaceGroupId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15292
      },
      "name": "CfnLocalGatewayRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "The CIDR block used for destination matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15299
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the local gateway route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15306
          },
          "name": "localGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayvirtualinterfacegroupid"
            },
            "stability": "external",
            "summary": "The ID of the virtual interface group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15313
          },
          "name": "localGatewayVirtualInterfaceGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLocalGatewayRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates the specified VPC with the specified local gateway route table.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::LocalGatewayRouteTableVPCAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnLocalGatewayRouteTableVPCAssociation = new ec2.CfnLocalGatewayRouteTableVPCAssociation(this, 'MyCfnLocalGatewayRouteTableVPCAssociation', {\n  localGatewayRouteTableId: 'localGatewayRouteTableId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::LocalGatewayRouteTableVPCAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 15648
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15577
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15667
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15680
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLocalGatewayRouteTableVPCAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15581
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LocalGatewayId"
            },
            "stability": "external",
            "summary": "The ID of the local gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15606
          },
          "name": "attrLocalGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LocalGatewayRouteTableVpcAssociationId"
            },
            "stability": "external",
            "summary": "The ID of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15612
          },
          "name": "attrLocalGatewayRouteTableVpcAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external",
            "summary": "The state of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15618
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15672
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-tags"
            },
            "stability": "external",
            "summary": "The tags assigned to the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15639
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-localgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the local gateway route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15625
          },
          "name": "localGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15632
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLocalGatewayRouteTableVPCAssociation"
    },
    "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnLocalGatewayRouteTableVPCAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnLocalGatewayRouteTableVPCAssociationProps: ec2.CfnLocalGatewayRouteTableVPCAssociationProps = {\n  localGatewayRouteTableId: 'localGatewayRouteTableId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnLocalGatewayRouteTableVPCAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15490
      },
      "name": "CfnLocalGatewayRouteTableVPCAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-localgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the local gateway route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15497
          },
          "name": "localGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15504
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-tags"
            },
            "stability": "external",
            "summary": "The tags assigned to the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15511
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnLocalGatewayRouteTableVPCAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnNatGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NatGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a network address translation (NAT) gateway in the specified subnet. You can create either a public NAT gateway or a private NAT gateway. The default is a public NAT gateway. If you create a public NAT gateway, you must specify an elastic IP address.\n\nWith a NAT gateway, instances in a private subnet can connect to the internet, other AWS services, or an on-premises network using the IP address of the NAT gateway.\n\nIf you add a default route ( `AWS::EC2::Route` resource) that points to a NAT gateway, specify the NAT gateway ID for the route's `NatGatewayId` property.\n\nFor more information, see [NAT Gateways](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html) in the *Amazon VPC User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NatGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNatGateway = new ec2.CfnNatGateway(this, 'MyCfnNatGateway', {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  allocationId: 'allocationId',\n  connectivityType: 'connectivityType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNatGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NatGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 15855
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNatGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15795
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15871
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15885
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNatGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15799
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15876
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags"
            },
            "stability": "external",
            "summary": "The tags for the NAT gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15846
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet in which the NAT gateway is located."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15825
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid"
            },
            "stability": "external",
            "summary": "[Public NAT gateway only] The allocation ID of the Elastic IP address that's associated with the NAT gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15832
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-connectivitytype"
            },
            "stability": "external",
            "summary": "Indicates whether the NAT gateway supports public or private connectivity."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15839
          },
          "name": "connectivityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNatGateway"
    },
    "@aws-cdk/aws-ec2.CfnNatGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNatGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNatGatewayProps: ec2.CfnNatGatewayProps = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  allocationId: 'allocationId',\n  connectivityType: 'connectivityType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNatGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15693
      },
      "name": "CfnNatGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet in which the NAT gateway is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15700
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid"
            },
            "stability": "external",
            "summary": "[Public NAT gateway only] The allocation ID of the Elastic IP address that's associated with the NAT gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15707
          },
          "name": "allocationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-connectivitytype"
            },
            "stability": "external",
            "summary": "Indicates whether the NAT gateway supports public or private connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15714
          },
          "name": "connectivityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags"
            },
            "stability": "external",
            "summary": "The tags for the NAT gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15721
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNatGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAcl": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkAcl",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a network ACL for your VPC.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkAcl`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkAcl = new ec2.CfnNetworkAcl(this, 'MyCfnNetworkAcl', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAcl",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkAcl`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 16026
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15974
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16041
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16053
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkAcl",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15978
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16003
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16046
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-tags"
            },
            "stability": "external",
            "summary": "The tags for the network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16017
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC for the network ACL."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16010
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAcl"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkAclEntry",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies an entry, known as a rule, in a network ACL with a rule number you specify. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules.\n\nFor information about the protocol value, see [Protocol Numbers](https://docs.aws.amazon.com/https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkAclEntry`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkAclEntry = new ec2.CfnNetworkAclEntry(this, 'MyCfnNetworkAclEntry', {\n  networkAclId: 'networkAclId',\n  protocol: 123,\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n\n  // the properties below are optional\n  cidrBlock: 'cidrBlock',\n  egress: false,\n  icmp: {\n    code: 123,\n    type: 123,\n  },\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkAclEntry`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 16322
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16219
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16347
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16366
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkAclEntry",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16223
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the network ACL entry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16248
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16352
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-networkaclid"
            },
            "stability": "external",
            "summary": "The ID of the ACL for the entry."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16255
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-protocol"
            },
            "remarks": "You must specify -1 or a protocol number. You can specify -1 for all protocols.\n\n> If you specify -1, all ports are opened and the `PortRange` property is ignored.",
            "stability": "external",
            "summary": "The IP protocol that the rule applies to."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16264
          },
          "name": "protocol",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ruleaction"
            },
            "remarks": "valid values are \"allow\" or \"deny\".",
            "stability": "external",
            "summary": "Whether to allow or deny traffic that matches the rule;"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16271
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-rulenumber"
            },
            "remarks": "ACL entries are processed in ascending order by rule number. Entries can't use the same rule number unless one is an egress rule and the other is an ingress rule.",
            "stability": "external",
            "summary": "Rule number to assign to the entry, such as 100."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16278
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-cidrblock"
            },
            "stability": "external",
            "summary": "The IPv4 CIDR range to allow or deny, in CIDR notation (for example, 172.16.0.0/24). Requirement is conditional: You must specify the `CidrBlock` or `Ipv6CidrBlock` property."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16285
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-egress"
            },
            "remarks": "By default, AWS CloudFormation specifies `false` .",
            "stability": "external",
            "summary": "Whether this rule applies to egress traffic from the subnet ( `true` ) or ingress traffic to the subnet ( `false` )."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16292
          },
          "name": "egress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-icmp"
            },
            "remarks": "Requirement is conditional: Required if specifying 1 (ICMP) for the protocol parameter.",
            "stability": "external",
            "summary": "The Internet Control Message Protocol (ICMP) code and type."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16299
          },
          "name": "icmp",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ipv6cidrblock"
            },
            "remarks": "Requirement is conditional: You must specify the `CidrBlock` or `Ipv6CidrBlock` property.",
            "stability": "external",
            "summary": "The IPv6 network range to allow or deny, in CIDR notation."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16306
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-portrange"
            },
            "remarks": "Conditional required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "stability": "external",
            "summary": "The range of port numbers for the UDP/TCP protocol."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16313
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclEntry"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the ICMP type and code.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst icmpProperty: ec2.CfnNetworkAclEntry.IcmpProperty = {\n  code: 123,\n  type: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16380
      },
      "name": "IcmpProperty",
      "namespace": "CfnNetworkAclEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-code"
            },
            "remarks": "You can use -1 to specify all ICMP codes for the given ICMP type. Requirement is conditional: Required if you specify 1 (ICMP) for the protocol parameter.",
            "stability": "external",
            "summary": "The Internet Control Message Protocol (ICMP) code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16386
          },
          "name": "code",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-type"
            },
            "remarks": "You can use -1 to specify all ICMP types. Conditional requirement: Required if you specify 1 (ICMP) for the `CreateNetworkAclEntry` protocol parameter.",
            "stability": "external",
            "summary": "The Internet Control Message Protocol (ICMP) type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16392
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclEntry.IcmpProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a range of ports.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst portRangeProperty: ec2.CfnNetworkAclEntry.PortRangeProperty = {\n  from: 123,\n  to: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16456
      },
      "name": "PortRangeProperty",
      "namespace": "CfnNetworkAclEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-from"
            },
            "remarks": "Required if you specify 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "stability": "external",
            "summary": "The first port in the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16462
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-to"
            },
            "remarks": "Required if you specify 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "stability": "external",
            "summary": "The last port in the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16468
          },
          "name": "to",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclEntry.PortRangeProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkAclEntry`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkAclEntryProps: ec2.CfnNetworkAclEntryProps = {\n  networkAclId: 'networkAclId',\n  protocol: 123,\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n\n  // the properties below are optional\n  cidrBlock: 'cidrBlock',\n  egress: false,\n  icmp: {\n    code: 123,\n    type: 123,\n  },\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntryProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16066
      },
      "name": "CfnNetworkAclEntryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-networkaclid"
            },
            "stability": "external",
            "summary": "The ID of the ACL for the entry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16073
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-protocol"
            },
            "remarks": "You must specify -1 or a protocol number. You can specify -1 for all protocols.\n\n> If you specify -1, all ports are opened and the `PortRange` property is ignored.",
            "stability": "external",
            "summary": "The IP protocol that the rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16082
          },
          "name": "protocol",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ruleaction"
            },
            "remarks": "valid values are \"allow\" or \"deny\".",
            "stability": "external",
            "summary": "Whether to allow or deny traffic that matches the rule;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16089
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-rulenumber"
            },
            "remarks": "ACL entries are processed in ascending order by rule number. Entries can't use the same rule number unless one is an egress rule and the other is an ingress rule.",
            "stability": "external",
            "summary": "Rule number to assign to the entry, such as 100."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16096
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-cidrblock"
            },
            "stability": "external",
            "summary": "The IPv4 CIDR range to allow or deny, in CIDR notation (for example, 172.16.0.0/24). Requirement is conditional: You must specify the `CidrBlock` or `Ipv6CidrBlock` property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16103
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-egress"
            },
            "remarks": "By default, AWS CloudFormation specifies `false` .",
            "stability": "external",
            "summary": "Whether this rule applies to egress traffic from the subnet ( `true` ) or ingress traffic to the subnet ( `false` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16110
          },
          "name": "egress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-icmp"
            },
            "remarks": "Requirement is conditional: Required if specifying 1 (ICMP) for the protocol parameter.",
            "stability": "external",
            "summary": "The Internet Control Message Protocol (ICMP) code and type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16117
          },
          "name": "icmp",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ipv6cidrblock"
            },
            "remarks": "Requirement is conditional: You must specify the `CidrBlock` or `Ipv6CidrBlock` property.",
            "stability": "external",
            "summary": "The IPv6 network range to allow or deny, in CIDR notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16124
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-portrange"
            },
            "remarks": "Conditional required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter.",
            "stability": "external",
            "summary": "The range of port numbers for the UDP/TCP protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16131
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclEntryProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkAclProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkAcl`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkAclProps: ec2.CfnNetworkAclProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkAclProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 15898
      },
      "name": "CfnNetworkAclProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC for the network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15905
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-tags"
            },
            "stability": "external",
            "summary": "The tags for the network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 15912
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkAclProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInsightsAccessScope",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Describes a Network Access Scope. A Network Access Scope defines outbound (egress) and inbound (ingress) traffic patterns, including sources, destinations, paths, and traffic types.\n\nNetwork Access Analyzer identifies unintended network access to your resources on AWS . When you start an analysis on a Network Access Scope, Network Access Analyzer produces findings. For more information, see the [Network Access Analyzer User Guide](https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInsightsAccessScope`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInsightsAccessScope = new ec2.CfnNetworkInsightsAccessScope(this, 'MyCfnNetworkInsightsAccessScope', /* all optional props */ {\n  excludePaths: [{\n    destination: {\n      packetHeaderStatement: {\n        destinationAddresses: ['destinationAddresses'],\n        destinationPorts: ['destinationPorts'],\n        destinationPrefixLists: ['destinationPrefixLists'],\n        protocols: ['protocols'],\n        sourceAddresses: ['sourceAddresses'],\n        sourcePorts: ['sourcePorts'],\n        sourcePrefixLists: ['sourcePrefixLists'],\n      },\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    },\n    source: {\n      packetHeaderStatement: {\n        destinationAddresses: ['destinationAddresses'],\n        destinationPorts: ['destinationPorts'],\n        destinationPrefixLists: ['destinationPrefixLists'],\n        protocols: ['protocols'],\n        sourceAddresses: ['sourceAddresses'],\n        sourcePorts: ['sourcePorts'],\n        sourcePrefixLists: ['sourcePrefixLists'],\n      },\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    },\n    throughResources: [{\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    }],\n  }],\n  matchPaths: [{\n    destination: {\n      packetHeaderStatement: {\n        destinationAddresses: ['destinationAddresses'],\n        destinationPorts: ['destinationPorts'],\n        destinationPrefixLists: ['destinationPrefixLists'],\n        protocols: ['protocols'],\n        sourceAddresses: ['sourceAddresses'],\n        sourcePorts: ['sourcePorts'],\n        sourcePrefixLists: ['sourcePrefixLists'],\n      },\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    },\n    source: {\n      packetHeaderStatement: {\n        destinationAddresses: ['destinationAddresses'],\n        destinationPorts: ['destinationPorts'],\n        destinationPrefixLists: ['destinationPrefixLists'],\n        protocols: ['protocols'],\n        sourceAddresses: ['sourceAddresses'],\n        sourcePorts: ['sourcePorts'],\n        sourcePrefixLists: ['sourcePrefixLists'],\n      },\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    },\n    throughResources: [{\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInsightsAccessScope`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 16695
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScopeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16618
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16713
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16726
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInsightsAccessScope",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16622
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatedDate"
            },
            "stability": "external",
            "summary": "The creation date."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16647
          },
          "name": "attrCreatedDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsAccessScopeArn"
            },
            "stability": "external",
            "summary": "The ARN of the Network Access Scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16653
          },
          "name": "attrNetworkInsightsAccessScopeArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsAccessScopeId"
            },
            "stability": "external",
            "summary": "The ID of the Network Access Scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16659
          },
          "name": "attrNetworkInsightsAccessScopeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "UpdatedDate"
            },
            "stability": "external",
            "summary": "The last updated date."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16665
          },
          "name": "attrUpdatedDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16718
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-tags"
            },
            "stability": "external",
            "summary": "The tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16686
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-excludepaths"
            },
            "stability": "external",
            "summary": "The paths to exclude."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16672
          },
          "name": "excludePaths",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-matchpaths"
            },
            "stability": "external",
            "summary": "The paths to match."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16679
          },
          "name": "matchPaths",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScope"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-accessscopepathrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a path.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst accessScopePathRequestProperty: ec2.CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty = {\n  destination: {\n    packetHeaderStatement: {\n      destinationAddresses: ['destinationAddresses'],\n      destinationPorts: ['destinationPorts'],\n      destinationPrefixLists: ['destinationPrefixLists'],\n      protocols: ['protocols'],\n      sourceAddresses: ['sourceAddresses'],\n      sourcePorts: ['sourcePorts'],\n      sourcePrefixLists: ['sourcePrefixLists'],\n    },\n    resourceStatement: {\n      resources: ['resources'],\n      resourceTypes: ['resourceTypes'],\n    },\n  },\n  source: {\n    packetHeaderStatement: {\n      destinationAddresses: ['destinationAddresses'],\n      destinationPorts: ['destinationPorts'],\n      destinationPrefixLists: ['destinationPrefixLists'],\n      protocols: ['protocols'],\n      sourceAddresses: ['sourceAddresses'],\n      sourcePorts: ['sourcePorts'],\n      sourcePrefixLists: ['sourcePrefixLists'],\n    },\n    resourceStatement: {\n      resources: ['resources'],\n      resourceTypes: ['resourceTypes'],\n    },\n  },\n  throughResources: [{\n    resourceStatement: {\n      resources: ['resources'],\n      resourceTypes: ['resourceTypes'],\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16740
      },
      "name": "AccessScopePathRequestProperty",
      "namespace": "CfnNetworkInsightsAccessScope",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-accessscopepathrequest.html#cfn-ec2-networkinsightsaccessscope-accessscopepathrequest-destination"
            },
            "stability": "external",
            "summary": "The destination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16746
          },
          "name": "destination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.PathStatementRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-accessscopepathrequest.html#cfn-ec2-networkinsightsaccessscope-accessscopepathrequest-source"
            },
            "stability": "external",
            "summary": "The source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16752
          },
          "name": "source",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.PathStatementRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-accessscopepathrequest.html#cfn-ec2-networkinsightsaccessscope-accessscopepathrequest-throughresources"
            },
            "stability": "external",
            "summary": "The through resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16758
          },
          "name": "throughResources",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.ThroughResourcesStatementRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.PacketHeaderStatementRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a packet header statement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst packetHeaderStatementRequestProperty: ec2.CfnNetworkInsightsAccessScope.PacketHeaderStatementRequestProperty = {\n  destinationAddresses: ['destinationAddresses'],\n  destinationPorts: ['destinationPorts'],\n  destinationPrefixLists: ['destinationPrefixLists'],\n  protocols: ['protocols'],\n  sourceAddresses: ['sourceAddresses'],\n  sourcePorts: ['sourcePorts'],\n  sourcePrefixLists: ['sourcePrefixLists'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.PacketHeaderStatementRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16825
      },
      "name": "PacketHeaderStatementRequestProperty",
      "namespace": "CfnNetworkInsightsAccessScope",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-destinationaddresses"
            },
            "stability": "external",
            "summary": "The destination addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16831
          },
          "name": "destinationAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-destinationports"
            },
            "stability": "external",
            "summary": "The destination ports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16837
          },
          "name": "destinationPorts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-destinationprefixlists"
            },
            "stability": "external",
            "summary": "The destination prefix lists."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16843
          },
          "name": "destinationPrefixLists",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-protocols"
            },
            "stability": "external",
            "summary": "The protocols."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16849
          },
          "name": "protocols",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-sourceaddresses"
            },
            "stability": "external",
            "summary": "The source addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16855
          },
          "name": "sourceAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-sourceports"
            },
            "stability": "external",
            "summary": "The source ports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16861
          },
          "name": "sourcePorts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-packetheaderstatementrequest.html#cfn-ec2-networkinsightsaccessscope-packetheaderstatementrequest-sourceprefixlists"
            },
            "stability": "external",
            "summary": "The source prefix lists."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16867
          },
          "name": "sourcePrefixLists",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScope.PacketHeaderStatementRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.PathStatementRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-pathstatementrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a path statement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst pathStatementRequestProperty: ec2.CfnNetworkInsightsAccessScope.PathStatementRequestProperty = {\n  packetHeaderStatement: {\n    destinationAddresses: ['destinationAddresses'],\n    destinationPorts: ['destinationPorts'],\n    destinationPrefixLists: ['destinationPrefixLists'],\n    protocols: ['protocols'],\n    sourceAddresses: ['sourceAddresses'],\n    sourcePorts: ['sourcePorts'],\n    sourcePrefixLists: ['sourcePrefixLists'],\n  },\n  resourceStatement: {\n    resources: ['resources'],\n    resourceTypes: ['resourceTypes'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.PathStatementRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16946
      },
      "name": "PathStatementRequestProperty",
      "namespace": "CfnNetworkInsightsAccessScope",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-pathstatementrequest.html#cfn-ec2-networkinsightsaccessscope-pathstatementrequest-packetheaderstatement"
            },
            "stability": "external",
            "summary": "The packet header statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16952
          },
          "name": "packetHeaderStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.PacketHeaderStatementRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-pathstatementrequest.html#cfn-ec2-networkinsightsaccessscope-pathstatementrequest-resourcestatement"
            },
            "stability": "external",
            "summary": "The resource statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16958
          },
          "name": "resourceStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScope.PathStatementRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-resourcestatementrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a resource statement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst resourceStatementRequestProperty: ec2.CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty = {\n  resources: ['resources'],\n  resourceTypes: ['resourceTypes'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17022
      },
      "name": "ResourceStatementRequestProperty",
      "namespace": "CfnNetworkInsightsAccessScope",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-resourcestatementrequest.html#cfn-ec2-networkinsightsaccessscope-resourcestatementrequest-resources"
            },
            "stability": "external",
            "summary": "The resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17034
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-resourcestatementrequest.html#cfn-ec2-networkinsightsaccessscope-resourcestatementrequest-resourcetypes"
            },
            "stability": "external",
            "summary": "The resource types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17028
          },
          "name": "resourceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.ThroughResourcesStatementRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-throughresourcesstatementrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a through resource statement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst throughResourcesStatementRequestProperty: ec2.CfnNetworkInsightsAccessScope.ThroughResourcesStatementRequestProperty = {\n  resourceStatement: {\n    resources: ['resources'],\n    resourceTypes: ['resourceTypes'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.ThroughResourcesStatementRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17098
      },
      "name": "ThroughResourcesStatementRequestProperty",
      "namespace": "CfnNetworkInsightsAccessScope",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsaccessscope-throughresourcesstatementrequest.html#cfn-ec2-networkinsightsaccessscope-throughresourcesstatementrequest-resourcestatement"
            },
            "stability": "external",
            "summary": "The resource statement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17104
          },
          "name": "resourceStatement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.ResourceStatementRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScope.ThroughResourcesStatementRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScopeAnalysis": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInsightsAccessScopeAnalysis",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Describes a Network Access Scope analysis.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInsightsAccessScopeAnalysis`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInsightsAccessScopeAnalysis = new ec2.CfnNetworkInsightsAccessScopeAnalysis(this, 'MyCfnNetworkInsightsAccessScopeAnalysis', {\n  networkInsightsAccessScopeId: 'networkInsightsAccessScopeId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScopeAnalysis",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInsightsAccessScopeAnalysis`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 17334
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScopeAnalysisProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17240
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17356
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17368
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInsightsAccessScopeAnalysis",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17244
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AnalyzedEniCount"
            },
            "stability": "external",
            "summary": "The number of network interfaces analyzed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17269
          },
          "name": "attrAnalyzedEniCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EndDate"
            },
            "stability": "external",
            "summary": "The end date of the analysis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17275
          },
          "name": "attrEndDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FindingsFound"
            },
            "stability": "external",
            "summary": "Indicates whether there are findings (true | false | unknown)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17281
          },
          "name": "attrFindingsFound",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsAccessScopeAnalysisArn"
            },
            "stability": "external",
            "summary": "The ARN of the Network Access Scope analysis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17287
          },
          "name": "attrNetworkInsightsAccessScopeAnalysisArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsAccessScopeAnalysisId"
            },
            "stability": "external",
            "summary": "The ID of the Network Access Scope analysis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17293
          },
          "name": "attrNetworkInsightsAccessScopeAnalysisId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StartDate"
            },
            "stability": "external",
            "summary": "The start date of the analysis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17299
          },
          "name": "attrStartDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "stability": "external",
            "summary": "The status of the analysis (running | succeeded | failed)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17305
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StatusMessage"
            },
            "stability": "external",
            "summary": "The status message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17311
          },
          "name": "attrStatusMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17361
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-tags"
            },
            "stability": "external",
            "summary": "The tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17325
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-networkinsightsaccessscopeid"
            },
            "stability": "external",
            "summary": "The ID of the Network Access Scope."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17318
          },
          "name": "networkInsightsAccessScopeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScopeAnalysis"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScopeAnalysisProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkInsightsAccessScopeAnalysis`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInsightsAccessScopeAnalysisProps: ec2.CfnNetworkInsightsAccessScopeAnalysisProps = {\n  networkInsightsAccessScopeId: 'networkInsightsAccessScopeId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScopeAnalysisProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17164
      },
      "name": "CfnNetworkInsightsAccessScopeAnalysisProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-networkinsightsaccessscopeid"
            },
            "stability": "external",
            "summary": "The ID of the Network Access Scope."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17171
          },
          "name": "networkInsightsAccessScopeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-tags"
            },
            "stability": "external",
            "summary": "The tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17178
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScopeAnalysisProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScopeProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkInsightsAccessScope`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInsightsAccessScopeProps: ec2.CfnNetworkInsightsAccessScopeProps = {\n  excludePaths: [{\n    destination: {\n      packetHeaderStatement: {\n        destinationAddresses: ['destinationAddresses'],\n        destinationPorts: ['destinationPorts'],\n        destinationPrefixLists: ['destinationPrefixLists'],\n        protocols: ['protocols'],\n        sourceAddresses: ['sourceAddresses'],\n        sourcePorts: ['sourcePorts'],\n        sourcePrefixLists: ['sourcePrefixLists'],\n      },\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    },\n    source: {\n      packetHeaderStatement: {\n        destinationAddresses: ['destinationAddresses'],\n        destinationPorts: ['destinationPorts'],\n        destinationPrefixLists: ['destinationPrefixLists'],\n        protocols: ['protocols'],\n        sourceAddresses: ['sourceAddresses'],\n        sourcePorts: ['sourcePorts'],\n        sourcePrefixLists: ['sourcePrefixLists'],\n      },\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    },\n    throughResources: [{\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    }],\n  }],\n  matchPaths: [{\n    destination: {\n      packetHeaderStatement: {\n        destinationAddresses: ['destinationAddresses'],\n        destinationPorts: ['destinationPorts'],\n        destinationPrefixLists: ['destinationPrefixLists'],\n        protocols: ['protocols'],\n        sourceAddresses: ['sourceAddresses'],\n        sourcePorts: ['sourcePorts'],\n        sourcePrefixLists: ['sourcePrefixLists'],\n      },\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    },\n    source: {\n      packetHeaderStatement: {\n        destinationAddresses: ['destinationAddresses'],\n        destinationPorts: ['destinationPorts'],\n        destinationPrefixLists: ['destinationPrefixLists'],\n        protocols: ['protocols'],\n        sourceAddresses: ['sourceAddresses'],\n        sourcePorts: ['sourcePorts'],\n        sourcePrefixLists: ['sourcePrefixLists'],\n      },\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    },\n    throughResources: [{\n      resourceStatement: {\n        resources: ['resources'],\n        resourceTypes: ['resourceTypes'],\n      },\n    }],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScopeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 16531
      },
      "name": "CfnNetworkInsightsAccessScopeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-excludepaths"
            },
            "stability": "external",
            "summary": "The paths to exclude."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16538
          },
          "name": "excludePaths",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-matchpaths"
            },
            "stability": "external",
            "summary": "The paths to match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16545
          },
          "name": "matchPaths",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAccessScope.AccessScopePathRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-tags"
            },
            "stability": "external",
            "summary": "The tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 16552
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAccessScopeProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInsightsAnalysis",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a network insights analysis.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInsightsAnalysis`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInsightsAnalysis = new ec2.CfnNetworkInsightsAnalysis(this, 'MyCfnNetworkInsightsAnalysis', {\n  networkInsightsPathId: 'networkInsightsPathId',\n\n  // the properties below are optional\n  filterInArns: ['filterInArns'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInsightsAnalysis`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 17580
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysisProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17467
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17605
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17618
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17471
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AlternatePathHints"
            },
            "stability": "external",
            "summary": "Potential intermediate components."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17496
          },
          "name": "attrAlternatePathHints",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Explanations"
            },
            "remarks": "For more information, see [Reachability Analyzer explanation codes](https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html) .",
            "stability": "external",
            "summary": "The explanations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17502
          },
          "name": "attrExplanations",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ForwardPathComponents"
            },
            "stability": "external",
            "summary": "The components in the path from source to destination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17508
          },
          "name": "attrForwardPathComponents",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsAnalysisArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the network insights analysis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17514
          },
          "name": "attrNetworkInsightsAnalysisArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsAnalysisId"
            },
            "stability": "external",
            "summary": "The ID of the network insights analysis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17520
          },
          "name": "attrNetworkInsightsAnalysisId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkPathFound"
            },
            "stability": "external",
            "summary": "Indicates whether the destination is reachable from the source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17526
          },
          "name": "attrNetworkPathFound",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ReturnPathComponents"
            },
            "stability": "external",
            "summary": "The components in the path from destination to source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17532
          },
          "name": "attrReturnPathComponents",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StartDate"
            },
            "stability": "external",
            "summary": "The time the analysis started."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17538
          },
          "name": "attrStartDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "stability": "external",
            "summary": "The status of the network insights analysis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17544
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StatusMessage"
            },
            "stability": "external",
            "summary": "The status message, if the status is `failed` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17550
          },
          "name": "attrStatusMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17610
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-tags"
            },
            "stability": "external",
            "summary": "The tags to apply."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17571
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-networkinsightspathid"
            },
            "stability": "external",
            "summary": "The ID of the path."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17557
          },
          "name": "networkInsightsPathId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-filterinarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARN) of the resources that the path must traverse."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17564
          },
          "name": "filterInArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AlternatePathHintProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes an potential intermediate component of a feasible path.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst alternatePathHintProperty: ec2.CfnNetworkInsightsAnalysis.AlternatePathHintProperty = {\n  componentArn: 'componentArn',\n  componentId: 'componentId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AlternatePathHintProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17632
      },
      "name": "AlternatePathHintProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html#cfn-ec2-networkinsightsanalysis-alternatepathhint-componentarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17638
          },
          "name": "componentArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-alternatepathhint.html#cfn-ec2-networkinsightsanalysis-alternatepathhint-componentid"
            },
            "stability": "external",
            "summary": "The ID of the component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17644
          },
          "name": "componentId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AlternatePathHintProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a network access control (ACL) rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst analysisAclRuleProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty = {\n  cidr: 'cidr',\n  egress: false,\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n  protocol: 'protocol',\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17708
      },
      "name": "AnalysisAclRuleProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-cidr"
            },
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17714
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-egress"
            },
            "stability": "external",
            "summary": "Indicates whether the rule is an outbound rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17720
          },
          "name": "egress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-portrange"
            },
            "stability": "external",
            "summary": "The range of ports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17726
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-protocol"
            },
            "stability": "external",
            "summary": "The protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17732
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-ruleaction"
            },
            "stability": "external",
            "summary": "Indicates whether to allow or deny traffic that matches the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17738
          },
          "name": "ruleAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisaclrule.html#cfn-ec2-networkinsightsanalysis-analysisaclrule-rulenumber"
            },
            "stability": "external",
            "summary": "The rule number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17744
          },
          "name": "ruleNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a path component.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst analysisComponentProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty = {\n  arn: 'arn',\n  id: 'id',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17820
      },
      "name": "AnalysisComponentProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html#cfn-ec2-networkinsightsanalysis-analysiscomponent-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17826
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysiscomponent.html#cfn-ec2-networkinsightsanalysis-analysiscomponent-id"
            },
            "stability": "external",
            "summary": "The ID of the component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17832
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a load balancer listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst analysisLoadBalancerListenerProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty = {\n  instancePort: 123,\n  loadBalancerPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17896
      },
      "name": "AnalysisLoadBalancerListenerProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancerlistener-instanceport"
            },
            "stability": "external",
            "summary": "[Classic Load Balancers] The back-end port for the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17902
          },
          "name": "instancePort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancerlistener.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancerlistener-loadbalancerport"
            },
            "stability": "external",
            "summary": "The port on which the load balancer is listening."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17908
          },
          "name": "loadBalancerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a load balancer target.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst analysisLoadBalancerTargetProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty = {\n  address: 'address',\n  availabilityZone: 'availabilityZone',\n  instance: {\n    arn: 'arn',\n    id: 'id',\n  },\n  port: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17972
      },
      "name": "AnalysisLoadBalancerTargetProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-address"
            },
            "stability": "external",
            "summary": "The IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17978
          },
          "name": "address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17984
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-instance"
            },
            "stability": "external",
            "summary": "Information about the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17990
          },
          "name": "instance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisloadbalancertarget.html#cfn-ec2-networkinsightsanalysis-analysisloadbalancertarget-port"
            },
            "stability": "external",
            "summary": "The port on which the target is listening."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17996
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Reflects any changes made by a component as traffic passes through. The fields of an inbound header are null except for the first component of a path.",
        "stability": "external",
        "summary": "Describes a header.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst analysisPacketHeaderProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty = {\n  destinationAddresses: ['destinationAddresses'],\n  destinationPortRanges: [{\n    from: 123,\n    to: 123,\n  }],\n  protocol: 'protocol',\n  sourceAddresses: ['sourceAddresses'],\n  sourcePortRanges: [{\n    from: 123,\n    to: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18066
      },
      "name": "AnalysisPacketHeaderProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-destinationaddresses"
            },
            "stability": "external",
            "summary": "The destination addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18072
          },
          "name": "destinationAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-destinationportranges"
            },
            "stability": "external",
            "summary": "The destination port ranges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18078
          },
          "name": "destinationPortRanges",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-protocol"
            },
            "stability": "external",
            "summary": "The protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18084
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-sourceaddresses"
            },
            "stability": "external",
            "summary": "The source addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18090
          },
          "name": "sourceAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-sourceportranges"
            },
            "stability": "external",
            "summary": "The source port ranges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18096
          },
          "name": "sourcePortRanges",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a route table route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst analysisRouteTableRouteProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty = {\n  destinationCidr: 'destinationCidr',\n  destinationPrefixListId: 'destinationPrefixListId',\n  egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n  gatewayId: 'gatewayId',\n  instanceId: 'instanceId',\n  natGatewayId: 'natGatewayId',\n  networkInterfaceId: 'networkInterfaceId',\n  origin: 'origin',\n  transitGatewayId: 'transitGatewayId',\n  vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18169
      },
      "name": "AnalysisRouteTableRouteProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-destinationcidr"
            },
            "stability": "external",
            "summary": "The destination IPv4 address, in CIDR notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18209
          },
          "name": "destinationCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-destinationprefixlistid"
            },
            "stability": "external",
            "summary": "The prefix of the AWS service ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18215
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-egressonlyinternetgatewayid"
            },
            "stability": "external",
            "summary": "The ID of an egress-only internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18221
          },
          "name": "egressOnlyInternetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-gatewayid"
            },
            "stability": "external",
            "summary": "The ID of the gateway, such as an internet gateway or virtual private gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18227
          },
          "name": "gatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-instanceid"
            },
            "stability": "external",
            "summary": "The ID of the instance, such as a NAT instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18233
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-natgatewayid"
            },
            "stability": "external",
            "summary": "The ID of a NAT gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18175
          },
          "name": "natGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of a network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18181
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-origin"
            },
            "remarks": "- CreateRouteTable - The route was automatically created when the route table was created.\n- CreateRoute - The route was manually added to the route table.\n- EnableVgwRoutePropagation - The route was propagated by route propagation.",
            "stability": "external",
            "summary": "Describes how the route was created. The following are the possible values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18191
          },
          "name": "origin",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of a transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18197
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-vpcpeeringconnectionid"
            },
            "stability": "external",
            "summary": "The ID of a VPC peering connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18203
          },
          "name": "vpcPeeringConnectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a security group rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst analysisSecurityGroupRuleProperty: ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty = {\n  cidr: 'cidr',\n  direction: 'direction',\n  portRange: {\n    from: 123,\n    to: 123,\n  },\n  prefixListId: 'prefixListId',\n  protocol: 'protocol',\n  securityGroupId: 'securityGroupId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18321
      },
      "name": "AnalysisSecurityGroupRuleProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-cidr"
            },
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18327
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-direction"
            },
            "remarks": "- egress\n- ingress",
            "stability": "external",
            "summary": "The direction. The following are the possible values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18336
          },
          "name": "direction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-portrange"
            },
            "stability": "external",
            "summary": "The port range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18342
          },
          "name": "portRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-prefixlistid"
            },
            "stability": "external",
            "summary": "The prefix list ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18348
          },
          "name": "prefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-protocol"
            },
            "stability": "external",
            "summary": "The protocol name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18354
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysissecuritygrouprule.html#cfn-ec2-networkinsightsanalysis-analysissecuritygrouprule-securitygroupid"
            },
            "stability": "external",
            "summary": "The security group ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18360
          },
          "name": "securityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.ExplanationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Reachability Analyzer explanation codes](https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html) .",
        "stability": "external",
        "summary": "Describes an explanation code for an unreachable path.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst explanationProperty: ec2.CfnNetworkInsightsAnalysis.ExplanationProperty = {\n  acl: {\n    arn: 'arn',\n    id: 'id',\n  },\n  aclRule: {\n    cidr: 'cidr',\n    egress: false,\n    portRange: {\n      from: 123,\n      to: 123,\n    },\n    protocol: 'protocol',\n    ruleAction: 'ruleAction',\n    ruleNumber: 123,\n  },\n  address: 'address',\n  addresses: ['addresses'],\n  attachedTo: {\n    arn: 'arn',\n    id: 'id',\n  },\n  availabilityZones: ['availabilityZones'],\n  cidrs: ['cidrs'],\n  classicLoadBalancerListener: {\n    instancePort: 123,\n    loadBalancerPort: 123,\n  },\n  component: {\n    arn: 'arn',\n    id: 'id',\n  },\n  customerGateway: {\n    arn: 'arn',\n    id: 'id',\n  },\n  destination: {\n    arn: 'arn',\n    id: 'id',\n  },\n  destinationVpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  direction: 'direction',\n  elasticLoadBalancerListener: {\n    arn: 'arn',\n    id: 'id',\n  },\n  explanationCode: 'explanationCode',\n  ingressRouteTable: {\n    arn: 'arn',\n    id: 'id',\n  },\n  internetGateway: {\n    arn: 'arn',\n    id: 'id',\n  },\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerListenerPort: 123,\n  loadBalancerTarget: {\n    address: 'address',\n    availabilityZone: 'availabilityZone',\n    instance: {\n      arn: 'arn',\n      id: 'id',\n    },\n    port: 123,\n  },\n  loadBalancerTargetGroup: {\n    arn: 'arn',\n    id: 'id',\n  },\n  loadBalancerTargetGroups: [{\n    arn: 'arn',\n    id: 'id',\n  }],\n  loadBalancerTargetPort: 123,\n  missingComponent: 'missingComponent',\n  natGateway: {\n    arn: 'arn',\n    id: 'id',\n  },\n  networkInterface: {\n    arn: 'arn',\n    id: 'id',\n  },\n  packetField: 'packetField',\n  port: 123,\n  portRanges: [{\n    from: 123,\n    to: 123,\n  }],\n  prefixList: {\n    arn: 'arn',\n    id: 'id',\n  },\n  protocols: ['protocols'],\n  routeTable: {\n    arn: 'arn',\n    id: 'id',\n  },\n  routeTableRoute: {\n    destinationCidr: 'destinationCidr',\n    destinationPrefixListId: 'destinationPrefixListId',\n    egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n    gatewayId: 'gatewayId',\n    instanceId: 'instanceId',\n    natGatewayId: 'natGatewayId',\n    networkInterfaceId: 'networkInterfaceId',\n    origin: 'origin',\n    transitGatewayId: 'transitGatewayId',\n    vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n  },\n  securityGroup: {\n    arn: 'arn',\n    id: 'id',\n  },\n  securityGroupRule: {\n    cidr: 'cidr',\n    direction: 'direction',\n    portRange: {\n      from: 123,\n      to: 123,\n    },\n    prefixListId: 'prefixListId',\n    protocol: 'protocol',\n    securityGroupId: 'securityGroupId',\n  },\n  securityGroups: [{\n    arn: 'arn',\n    id: 'id',\n  }],\n  sourceVpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  state: 'state',\n  subnet: {\n    arn: 'arn',\n    id: 'id',\n  },\n  subnetRouteTable: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpcEndpoint: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpcPeeringConnection: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpnConnection: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpnGateway: {\n    arn: 'arn',\n    id: 'id',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.ExplanationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18436
      },
      "name": "ExplanationProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-acl"
            },
            "stability": "external",
            "summary": "The network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18442
          },
          "name": "acl",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-aclrule"
            },
            "stability": "external",
            "summary": "The network ACL rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18448
          },
          "name": "aclRule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-address"
            },
            "stability": "external",
            "summary": "The IPv4 address, in CIDR notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18454
          },
          "name": "address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-addresses"
            },
            "stability": "external",
            "summary": "The IPv4 addresses, in CIDR notation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18460
          },
          "name": "addresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-attachedto"
            },
            "stability": "external",
            "summary": "The resource to which the component is attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18466
          },
          "name": "attachedTo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-availabilityzones"
            },
            "stability": "external",
            "summary": "The Availability Zones."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18472
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-cidrs"
            },
            "stability": "external",
            "summary": "The CIDR ranges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18478
          },
          "name": "cidrs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-classicloadbalancerlistener"
            },
            "stability": "external",
            "summary": "The listener for a Classic Load Balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18484
          },
          "name": "classicLoadBalancerListener",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerListenerProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-component"
            },
            "stability": "external",
            "summary": "The component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18490
          },
          "name": "component",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-customergateway"
            },
            "stability": "external",
            "summary": "The customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18496
          },
          "name": "customerGateway",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-destination"
            },
            "stability": "external",
            "summary": "The destination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18502
          },
          "name": "destination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-destinationvpc"
            },
            "stability": "external",
            "summary": "The destination VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18508
          },
          "name": "destinationVpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-direction"
            },
            "remarks": "- egress\n- ingress",
            "stability": "external",
            "summary": "The direction. The following are the possible values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18517
          },
          "name": "direction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-elasticloadbalancerlistener"
            },
            "stability": "external",
            "summary": "The load balancer listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18523
          },
          "name": "elasticLoadBalancerListener",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-explanationcode"
            },
            "stability": "external",
            "summary": "The explanation code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18529
          },
          "name": "explanationCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-ingressroutetable"
            },
            "stability": "external",
            "summary": "The route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18535
          },
          "name": "ingressRouteTable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-internetgateway"
            },
            "stability": "external",
            "summary": "The internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18541
          },
          "name": "internetGateway",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18547
          },
          "name": "loadBalancerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancerlistenerport"
            },
            "stability": "external",
            "summary": "The listener port of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18553
          },
          "name": "loadBalancerListenerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertarget"
            },
            "stability": "external",
            "summary": "The target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18559
          },
          "name": "loadBalancerTarget",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisLoadBalancerTargetProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetgroup"
            },
            "stability": "external",
            "summary": "The target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18565
          },
          "name": "loadBalancerTargetGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetgroups"
            },
            "stability": "external",
            "summary": "The target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18571
          },
          "name": "loadBalancerTargetGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-loadbalancertargetport"
            },
            "stability": "external",
            "summary": "The target port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18577
          },
          "name": "loadBalancerTargetPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-missingcomponent"
            },
            "stability": "external",
            "summary": "The missing component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18583
          },
          "name": "missingComponent",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-natgateway"
            },
            "stability": "external",
            "summary": "The NAT gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18589
          },
          "name": "natGateway",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-networkinterface"
            },
            "stability": "external",
            "summary": "The network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18595
          },
          "name": "networkInterface",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-packetfield"
            },
            "stability": "external",
            "summary": "The packet field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18601
          },
          "name": "packetField",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-port"
            },
            "stability": "external",
            "summary": "The port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18607
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-portranges"
            },
            "stability": "external",
            "summary": "The port ranges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18613
          },
          "name": "portRanges",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-prefixlist"
            },
            "stability": "external",
            "summary": "The prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18619
          },
          "name": "prefixList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-protocols"
            },
            "stability": "external",
            "summary": "The protocols."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18625
          },
          "name": "protocols",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-routetable"
            },
            "stability": "external",
            "summary": "The route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18631
          },
          "name": "routeTable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-routetableroute"
            },
            "stability": "external",
            "summary": "The route table route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18637
          },
          "name": "routeTableRoute",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygroup"
            },
            "stability": "external",
            "summary": "The security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18643
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygrouprule"
            },
            "stability": "external",
            "summary": "The security group rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18649
          },
          "name": "securityGroupRule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-securitygroups"
            },
            "stability": "external",
            "summary": "The security groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18655
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-sourcevpc"
            },
            "stability": "external",
            "summary": "The source VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18661
          },
          "name": "sourceVpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-state"
            },
            "stability": "external",
            "summary": "The state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18667
          },
          "name": "state",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-subnet"
            },
            "stability": "external",
            "summary": "The subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18673
          },
          "name": "subnet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-subnetroutetable"
            },
            "stability": "external",
            "summary": "The route table for the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18679
          },
          "name": "subnetRouteTable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpc"
            },
            "stability": "external",
            "summary": "The component VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18685
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpcendpoint"
            },
            "stability": "external",
            "summary": "The VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18709
          },
          "name": "vpcEndpoint",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpcpeeringconnection"
            },
            "stability": "external",
            "summary": "The VPC peering connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18691
          },
          "name": "vpcPeeringConnection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpnconnection"
            },
            "stability": "external",
            "summary": "The VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18697
          },
          "name": "vpnConnection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-explanation.html#cfn-ec2-networkinsightsanalysis-explanation-vpngateway"
            },
            "stability": "external",
            "summary": "The VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18703
          },
          "name": "vpnGateway",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.ExplanationProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PathComponentProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a path component.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst pathComponentProperty: ec2.CfnNetworkInsightsAnalysis.PathComponentProperty = {\n  aclRule: {\n    cidr: 'cidr',\n    egress: false,\n    portRange: {\n      from: 123,\n      to: 123,\n    },\n    protocol: 'protocol',\n    ruleAction: 'ruleAction',\n    ruleNumber: 123,\n  },\n  component: {\n    arn: 'arn',\n    id: 'id',\n  },\n  destinationVpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  inboundHeader: {\n    destinationAddresses: ['destinationAddresses'],\n    destinationPortRanges: [{\n      from: 123,\n      to: 123,\n    }],\n    protocol: 'protocol',\n    sourceAddresses: ['sourceAddresses'],\n    sourcePortRanges: [{\n      from: 123,\n      to: 123,\n    }],\n  },\n  outboundHeader: {\n    destinationAddresses: ['destinationAddresses'],\n    destinationPortRanges: [{\n      from: 123,\n      to: 123,\n    }],\n    protocol: 'protocol',\n    sourceAddresses: ['sourceAddresses'],\n    sourcePortRanges: [{\n      from: 123,\n      to: 123,\n    }],\n  },\n  routeTableRoute: {\n    destinationCidr: 'destinationCidr',\n    destinationPrefixListId: 'destinationPrefixListId',\n    egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n    gatewayId: 'gatewayId',\n    instanceId: 'instanceId',\n    natGatewayId: 'natGatewayId',\n    networkInterfaceId: 'networkInterfaceId',\n    origin: 'origin',\n    transitGatewayId: 'transitGatewayId',\n    vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n  },\n  securityGroupRule: {\n    cidr: 'cidr',\n    direction: 'direction',\n    portRange: {\n      from: 123,\n      to: 123,\n    },\n    prefixListId: 'prefixListId',\n    protocol: 'protocol',\n    securityGroupId: 'securityGroupId',\n  },\n  sequenceNumber: 123,\n  sourceVpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n  subnet: {\n    arn: 'arn',\n    id: 'id',\n  },\n  vpc: {\n    arn: 'arn',\n    id: 'id',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PathComponentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 18902
      },
      "name": "PathComponentProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-aclrule"
            },
            "stability": "external",
            "summary": "The network ACL rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18908
          },
          "name": "aclRule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisAclRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-component"
            },
            "stability": "external",
            "summary": "The component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18914
          },
          "name": "component",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-destinationvpc"
            },
            "stability": "external",
            "summary": "The destination VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18920
          },
          "name": "destinationVpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-inboundheader"
            },
            "stability": "external",
            "summary": "The inbound header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18926
          },
          "name": "inboundHeader",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-outboundheader"
            },
            "stability": "external",
            "summary": "The outbound header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18932
          },
          "name": "outboundHeader",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisPacketHeaderProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-routetableroute"
            },
            "stability": "external",
            "summary": "The route table route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18938
          },
          "name": "routeTableRoute",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisRouteTableRouteProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-securitygrouprule"
            },
            "stability": "external",
            "summary": "The security group rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18944
          },
          "name": "securityGroupRule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisSecurityGroupRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-sequencenumber"
            },
            "stability": "external",
            "summary": "The sequence number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18950
          },
          "name": "sequenceNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-sourcevpc"
            },
            "stability": "external",
            "summary": "The source VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18956
          },
          "name": "sourceVpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-subnet"
            },
            "stability": "external",
            "summary": "The subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18962
          },
          "name": "subnet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-pathcomponent.html#cfn-ec2-networkinsightsanalysis-pathcomponent-vpc"
            },
            "stability": "external",
            "summary": "The component VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 18968
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.AnalysisComponentProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.PathComponentProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a range of ports.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst portRangeProperty: ec2.CfnNetworkInsightsAnalysis.PortRangeProperty = {\n  from: 123,\n  to: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysis.PortRangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19059
      },
      "name": "PortRangeProperty",
      "namespace": "CfnNetworkInsightsAnalysis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html#cfn-ec2-networkinsightsanalysis-portrange-from"
            },
            "stability": "external",
            "summary": "The first port in the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19065
          },
          "name": "from",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-portrange.html#cfn-ec2-networkinsightsanalysis-portrange-to"
            },
            "stability": "external",
            "summary": "The last port in the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19071
          },
          "name": "to",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysis.PortRangeProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysisProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkInsightsAnalysis`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInsightsAnalysisProps: ec2.CfnNetworkInsightsAnalysisProps = {\n  networkInsightsPathId: 'networkInsightsPathId',\n\n  // the properties below are optional\n  filterInArns: ['filterInArns'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsAnalysisProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 17381
      },
      "name": "CfnNetworkInsightsAnalysisProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-networkinsightspathid"
            },
            "stability": "external",
            "summary": "The ID of the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17388
          },
          "name": "networkInsightsPathId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-filterinarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARN) of the resources that the path must traverse."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17395
          },
          "name": "filterInArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-tags"
            },
            "stability": "external",
            "summary": "The tags to apply."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 17402
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsAnalysisProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsPath": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInsightsPath",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a path to analyze for reachability.\n\nVPC Reachability Analyzer enables you to analyze and debug network reachability between two resources in your virtual private cloud (VPC). For more information, see the [Reachability Analyzer User Guide](https://docs.aws.amazon.com/vpc/latest/reachability/what-is-reachability-analyzer.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInsightsPath`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInsightsPath = new ec2.CfnNetworkInsightsPath(this, 'MyCfnNetworkInsightsPath', {\n  destination: 'destination',\n  protocol: 'protocol',\n  source: 'source',\n\n  // the properties below are optional\n  destinationIp: 'destinationIp',\n  destinationPort: 123,\n  sourceIp: 'sourceIp',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsPath",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInsightsPath`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 19363
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsPathProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19264
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19387
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19404
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInsightsPath",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19268
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatedDate"
            },
            "stability": "external",
            "summary": "The time stamp when the path was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19293
          },
          "name": "attrCreatedDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsPathArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19299
          },
          "name": "attrNetworkInsightsPathArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInsightsPathId"
            },
            "stability": "external",
            "summary": "The ID of the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19305
          },
          "name": "attrNetworkInsightsPathId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19392
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-tags"
            },
            "stability": "external",
            "summary": "The tags to add to the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19354
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destination"
            },
            "stability": "external",
            "summary": "The AWS resource that is the destination of the path."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19312
          },
          "name": "destination",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-protocol"
            },
            "stability": "external",
            "summary": "The protocol."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19319
          },
          "name": "protocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-source"
            },
            "stability": "external",
            "summary": "The AWS resource that is the source of the path."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19326
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationip"
            },
            "stability": "external",
            "summary": "The IP address of the AWS resource that is the destination of the path."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19333
          },
          "name": "destinationIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationport"
            },
            "stability": "external",
            "summary": "The destination port."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19340
          },
          "name": "destinationPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-sourceip"
            },
            "stability": "external",
            "summary": "The IP address of the AWS resource that is the source of the path."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19347
          },
          "name": "sourceIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsPath"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInsightsPathProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkInsightsPath`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInsightsPathProps: ec2.CfnNetworkInsightsPathProps = {\n  destination: 'destination',\n  protocol: 'protocol',\n  source: 'source',\n\n  // the properties below are optional\n  destinationIp: 'destinationIp',\n  destinationPort: 123,\n  sourceIp: 'sourceIp',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInsightsPathProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19134
      },
      "name": "CfnNetworkInsightsPathProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destination"
            },
            "stability": "external",
            "summary": "The AWS resource that is the destination of the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19141
          },
          "name": "destination",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-protocol"
            },
            "stability": "external",
            "summary": "The protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19148
          },
          "name": "protocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-source"
            },
            "stability": "external",
            "summary": "The AWS resource that is the source of the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19155
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationip"
            },
            "stability": "external",
            "summary": "The IP address of the AWS resource that is the destination of the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19162
          },
          "name": "destinationIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationport"
            },
            "stability": "external",
            "summary": "The destination port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19169
          },
          "name": "destinationPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-sourceip"
            },
            "stability": "external",
            "summary": "The IP address of the AWS resource that is the source of the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19176
          },
          "name": "sourceIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-tags"
            },
            "stability": "external",
            "summary": "The tags to add to the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19183
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInsightsPathProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterface",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Describes a network interface in an Amazon EC2 instance for AWS CloudFormation .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterface`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInterface = new ec2.CfnNetworkInterface(this, 'MyCfnNetworkInterface', {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  description: 'description',\n  groupSet: ['groupSet'],\n  interfaceType: 'interfaceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  privateIpAddress: 'privateIpAddress',\n  privateIpAddresses: [{\n    primary: false,\n    privateIpAddress: 'privateIpAddress',\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  sourceDestCheck: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInterface`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 19714
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19585
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19740
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19761
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterface",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19589
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19614
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrimaryPrivateIpAddress"
            },
            "remarks": "For example, `10.0.0.192` .",
            "stability": "external",
            "summary": "The primary private IP address of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19620
          },
          "name": "attrPrimaryPrivateIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SecondaryPrivateIpAddresses"
            },
            "remarks": "For example, `[\"10.0.0.161\", \"10.0.0.162\", \"10.0.0.163\"]` .",
            "stability": "external",
            "summary": "The secondary private IP addresses of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19626
          },
          "name": "attrSecondaryPrivateIpAddresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19745
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-tags"
            },
            "stability": "external",
            "summary": "An arbitrary set of tags (key-value pairs) for this network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19705
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet to associate with the network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19633
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-description"
            },
            "stability": "external",
            "summary": "A description for the network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19640
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-groupset"
            },
            "stability": "external",
            "summary": "The security group IDs associated with this network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19647
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-interfacetype"
            },
            "remarks": "The default is `interface` . The supported values are `efa` and `trunk` .",
            "stability": "external",
            "summary": "The type of network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19654
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresscount"
            },
            "remarks": "Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the `Ipv6Addresses` property and don't specify this property.",
            "stability": "external",
            "summary": "The number of IPv6 addresses to assign to a network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19661
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresses"
            },
            "remarks": "If you're specifying a number of IPv6 addresses, use the `Ipv6AddressCount` property and don't specify this property.",
            "stability": "external",
            "summary": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19668
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddress"
            },
            "remarks": "If you want to specify multiple private IP address, use the `PrivateIpAddresses` property.",
            "stability": "external",
            "summary": "Assigns a single private IP address to the network interface, which is used as the primary private IP address."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19675
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddresses"
            },
            "remarks": "You can specify a primary private IP address by setting the value of the `Primary` property to `true` in the `PrivateIpAddressSpecification` property. If you want EC2 to automatically assign private IP addresses, use the `SecondaryPrivateIpAddressCount` property and do not specify this property.",
            "stability": "external",
            "summary": "Assigns private IP addresses to the network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19682
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-secondaryprivateipaddresscount"
            },
            "remarks": "When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using `privateIpAddresses` .\n\nThe number of IP addresses you can assign to a network interface varies by instance type. For more information, see [IP Addresses Per ENI Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "The number of secondary private IPv4 addresses to assign to a network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19691
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-sourcedestcheck"
            },
            "remarks": "If the value is `true` , source/destination checks are enabled; otherwise, they are disabled. The default value is `true` . You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.",
            "stability": "external",
            "summary": "Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19698
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterface"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the IPv6 addresses to associate with the network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceIpv6AddressProperty: ec2.CfnNetworkInterface.InstanceIpv6AddressProperty = {\n  ipv6Address: 'ipv6Address',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19775
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnNetworkInterface",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html#cfn-ec2-networkinterface-instanceipv6address-ipv6address"
            },
            "stability": "external",
            "summary": "An IPv6 address to associate with the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19781
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterface.InstanceIpv6AddressProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-privateipaddressspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a secondary private IPv4 address for a network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateIpAddressSpecificationProperty: ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty = {\n  primary: false,\n  privateIpAddress: 'privateIpAddress',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19843
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnNetworkInterface",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-privateipaddressspecification.html#cfn-ec2-networkinterface-privateipaddressspecification-primary"
            },
            "remarks": "You can set only one primary private IP address. If you don't specify a primary private IP address, Amazon EC2 automatically assigns a primary private IP address.",
            "stability": "external",
            "summary": "Sets the private IP address as the primary private address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19849
          },
          "name": "primary",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-privateipaddressspecification.html#cfn-ec2-networkinterface-privateipaddressspecification-privateipaddress"
            },
            "stability": "external",
            "summary": "The private IP address of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19855
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterface.PrivateIpAddressSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterfaceAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Attaches an elastic network interface (ENI) to an Amazon EC2 instance. You can use this resource type to attach additional network interfaces to an instance without interruption.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterfaceAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInterfaceAttachment = new ec2.CfnNetworkInterfaceAttachment(this, 'MyCfnNetworkInterfaceAttachment', {\n  deviceIndex: 'deviceIndex',\n  instanceId: 'instanceId',\n  networkInterfaceId: 'networkInterfaceId',\n\n  // the properties below are optional\n  deleteOnTermination: false,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInterfaceAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20078
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20018
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20096
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20110
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterfaceAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20022
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20101
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex"
            },
            "remarks": "For example, the first attached network interface has a `DeviceIndex` of 0.",
            "stability": "external",
            "summary": "The network interface's position in the attachment order."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20048
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid"
            },
            "stability": "external",
            "summary": "The ID of the instance to which you will attach the ENI."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20055
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the ENI that you want to attach."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20062
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm"
            },
            "remarks": "By default, this value is set to `true` .",
            "stability": "external",
            "summary": "Whether to delete the network interface when the instance terminates."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20069
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfaceAttachment"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkInterfaceAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInterfaceAttachmentProps: ec2.CfnNetworkInterfaceAttachmentProps = {\n  deviceIndex: 'deviceIndex',\n  instanceId: 'instanceId',\n  networkInterfaceId: 'networkInterfaceId',\n\n  // the properties below are optional\n  deleteOnTermination: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19920
      },
      "name": "CfnNetworkInterfaceAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex"
            },
            "remarks": "For example, the first attached network interface has a `DeviceIndex` of 0.",
            "stability": "external",
            "summary": "The network interface's position in the attachment order."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19927
          },
          "name": "deviceIndex",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid"
            },
            "stability": "external",
            "summary": "The ID of the instance to which you will attach the ENI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19934
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the ENI that you want to attach."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19941
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm"
            },
            "remarks": "By default, this value is set to `true` .",
            "stability": "external",
            "summary": "Whether to delete the network interface when the instance terminates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19948
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfaceAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfacePermission": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::NetworkInterfacePermission",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a permission for an Amazon EC2 network interface. For example, you can grant an AWS authorized partner account permission to attach the specified network interface to an instance in their account.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::NetworkInterfacePermission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInterfacePermission = new ec2.CfnNetworkInterfacePermission(this, 'MyCfnNetworkInterfacePermission', {\n  awsAccountId: 'awsAccountId',\n  networkInterfaceId: 'networkInterfaceId',\n  permission: 'permission',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermission",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::NetworkInterfacePermission`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20264
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20211
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20281
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20294
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNetworkInterfacePermission",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20215
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20286
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid"
            },
            "stability": "external",
            "summary": "The AWS account ID."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20241
          },
          "name": "awsAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20248
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission"
            },
            "stability": "external",
            "summary": "The type of permission to grant: `INSTANCE-ATTACH` or `EIP-ASSOCIATE` ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20255
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfacePermission"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkInterfacePermission`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInterfacePermissionProps: ec2.CfnNetworkInterfacePermissionProps = {\n  awsAccountId: 'awsAccountId',\n  networkInterfaceId: 'networkInterfaceId',\n  permission: 'permission',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20123
      },
      "name": "CfnNetworkInterfacePermissionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid"
            },
            "stability": "external",
            "summary": "The AWS account ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20130
          },
          "name": "awsAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20137
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission"
            },
            "stability": "external",
            "summary": "The type of permission to grant: `INSTANCE-ATTACH` or `EIP-ASSOCIATE` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20144
          },
          "name": "permission",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfacePermissionProps"
    },
    "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNetworkInterface`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnNetworkInterfaceProps: ec2.CfnNetworkInterfaceProps = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  description: 'description',\n  groupSet: ['groupSet'],\n  interfaceType: 'interfaceType',\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  privateIpAddress: 'privateIpAddress',\n  privateIpAddresses: [{\n    primary: false,\n    privateIpAddress: 'privateIpAddress',\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  sourceDestCheck: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterfaceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 19417
      },
      "name": "CfnNetworkInterfaceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet to associate with the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19424
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-description"
            },
            "stability": "external",
            "summary": "A description for the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19431
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-groupset"
            },
            "stability": "external",
            "summary": "The security group IDs associated with this network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19438
          },
          "name": "groupSet",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-interfacetype"
            },
            "remarks": "The default is `interface` . The supported values are `efa` and `trunk` .",
            "stability": "external",
            "summary": "The type of network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19445
          },
          "name": "interfaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresscount"
            },
            "remarks": "Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the `Ipv6Addresses` property and don't specify this property.",
            "stability": "external",
            "summary": "The number of IPv6 addresses to assign to a network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19452
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresses"
            },
            "remarks": "If you're specifying a number of IPv6 addresses, use the `Ipv6AddressCount` property and don't specify this property.",
            "stability": "external",
            "summary": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19459
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddress"
            },
            "remarks": "If you want to specify multiple private IP address, use the `PrivateIpAddresses` property.",
            "stability": "external",
            "summary": "Assigns a single private IP address to the network interface, which is used as the primary private IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19466
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddresses"
            },
            "remarks": "You can specify a primary private IP address by setting the value of the `Primary` property to `true` in the `PrivateIpAddressSpecification` property. If you want EC2 to automatically assign private IP addresses, use the `SecondaryPrivateIpAddressCount` property and do not specify this property.",
            "stability": "external",
            "summary": "Assigns private IP addresses to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19473
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-secondaryprivateipaddresscount"
            },
            "remarks": "When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using `privateIpAddresses` .\n\nThe number of IP addresses you can assign to a network interface varies by instance type. For more information, see [IP Addresses Per ENI Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "The number of secondary private IPv4 addresses to assign to a network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19482
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-sourcedestcheck"
            },
            "remarks": "If the value is `true` , source/destination checks are enabled; otherwise, they are disabled. The default value is `true` . You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.",
            "stability": "external",
            "summary": "Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19489
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-tags"
            },
            "stability": "external",
            "summary": "An arbitrary set of tags (key-value pairs) for this network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 19496
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnNetworkInterfaceProps"
    },
    "@aws-cdk/aws-ec2.CfnPlacementGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::PlacementGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a placement group in which to launch instances. The strategy of the placement group determines how the instances are organized within the group.\n\nA `cluster` placement group is a logical grouping of instances within a single Availability Zone that benefit from low network latency, high network throughput. A `spread` placement group places instances on distinct hardware. A `partition` placement group places groups of instances in different partitions, where instances in one partition do not share the same hardware with instances in another partition.\n\nFor more information, see [Placement Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::PlacementGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnPlacementGroup = new ec2.CfnPlacementGroup(this, 'MyCfnPlacementGroup', /* all optional props */ {\n  strategy: 'strategy',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::PlacementGroup`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20415
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20376
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20427
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20438
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPlacementGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20380
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20432
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy"
            },
            "stability": "external",
            "summary": "The placement strategy."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20406
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPlacementGroup"
    },
    "@aws-cdk/aws-ec2.CfnPlacementGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnPlacementGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnPlacementGroupProps: ec2.CfnPlacementGroupProps = {\n  strategy: 'strategy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPlacementGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20307
      },
      "name": "CfnPlacementGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy"
            },
            "stability": "external",
            "summary": "The placement strategy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20314
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPlacementGroupProps"
    },
    "@aws-cdk/aws-ec2.CfnPrefixList": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::PrefixList",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a managed prefix list. You can add one or more entries to the prefix list. Each entry consists of a CIDR block and an optional description.\n\nYou must specify the maximum number of entries for the prefix list. The maximum number of entries cannot be changed later.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::PrefixList`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnPrefixList = new ec2.CfnPrefixList(this, 'MyCfnPrefixList', {\n  addressFamily: 'addressFamily',\n  maxEntries: 123,\n  prefixListName: 'prefixListName',\n\n  // the properties below are optional\n  entries: [{\n    cidr: 'cidr',\n\n    // the properties below are optional\n    description: 'description',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPrefixList",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::PrefixList`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 20660
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnPrefixListProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20565
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20683
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20698
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPrefixList",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20569
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "remarks": "For example, `arn:aws:ec2:us-east-1:123456789012:prefix-list/pl-0123123123123abcd` .",
            "stability": "external",
            "summary": "The ARN of the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20594
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OwnerId"
            },
            "remarks": "For example, `123456789012` .",
            "stability": "external",
            "summary": "The ID of the owner of the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20600
          },
          "name": "attrOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PrefixListId"
            },
            "remarks": "For example, `pl-0123123123123abcd` .",
            "stability": "external",
            "summary": "The ID of the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20606
          },
          "name": "attrPrefixListId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Version"
            },
            "remarks": "For example, `1` .",
            "stability": "external",
            "summary": "The version of the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20612
          },
          "name": "attrVersion",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20688
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-tags"
            },
            "stability": "external",
            "summary": "The tags for the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20651
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-addressfamily"
            },
            "remarks": "Valid Values: `IPv4` | `IPv6`",
            "stability": "external",
            "summary": "The IP address type."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20621
          },
          "name": "addressFamily",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-maxentries"
            },
            "stability": "external",
            "summary": "The maximum number of entries for the prefix list."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20628
          },
          "name": "maxEntries",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-prefixlistname"
            },
            "remarks": "Constraints: Up to 255 characters in length. The name cannot start with `com.amazonaws` .",
            "stability": "external",
            "summary": "A name for the prefix list."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20637
          },
          "name": "prefixListName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-entries"
            },
            "stability": "external",
            "summary": "One or more entries for the prefix list."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20644
          },
          "name": "entries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnPrefixList.EntryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPrefixList"
    },
    "@aws-cdk/aws-ec2.CfnPrefixList.EntryProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "An entry for a prefix list.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst entryProperty: ec2.CfnPrefixList.EntryProperty = {\n  cidr: 'cidr',\n\n  // the properties below are optional\n  description: 'description',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPrefixList.EntryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20712
      },
      "name": "EntryProperty",
      "namespace": "CfnPrefixList",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html#cfn-ec2-prefixlist-entry-cidr"
            },
            "stability": "external",
            "summary": "The CIDR block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20718
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-prefixlist-entry.html#cfn-ec2-prefixlist-entry-description"
            },
            "remarks": "Constraints: Up to 255 characters in length.",
            "stability": "external",
            "summary": "A description for the entry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20726
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPrefixList.EntryProperty"
    },
    "@aws-cdk/aws-ec2.CfnPrefixListProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnPrefixList`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnPrefixListProps: ec2.CfnPrefixListProps = {\n  addressFamily: 'addressFamily',\n  maxEntries: 123,\n  prefixListName: 'prefixListName',\n\n  // the properties below are optional\n  entries: [{\n    cidr: 'cidr',\n\n    // the properties below are optional\n    description: 'description',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnPrefixListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20451
      },
      "name": "CfnPrefixListProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-addressfamily"
            },
            "remarks": "Valid Values: `IPv4` | `IPv6`",
            "stability": "external",
            "summary": "The IP address type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20460
          },
          "name": "addressFamily",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-maxentries"
            },
            "stability": "external",
            "summary": "The maximum number of entries for the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20467
          },
          "name": "maxEntries",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-prefixlistname"
            },
            "remarks": "Constraints: Up to 255 characters in length. The name cannot start with `com.amazonaws` .",
            "stability": "external",
            "summary": "A name for the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20476
          },
          "name": "prefixListName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-entries"
            },
            "stability": "external",
            "summary": "One or more entries for the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20483
          },
          "name": "entries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnPrefixList.EntryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-tags"
            },
            "stability": "external",
            "summary": "The tags for the prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20490
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnPrefixListProps"
    },
    "@aws-cdk/aws-ec2.CfnRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Route",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a route in a route table within a VPC.\n\nYou must specify either `DestinationCidrBlock` or `DestinationIpv6CidrBlock` , plus the ID of one of the target resources.\n\nIf you create a route that references a transit gateway in the same template where you create the transit gateway, you must declare a dependency on the transit gateway attachment. The route table cannot use the transit gateway until it has successfully attached to the VPC. Add a [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) in the `AWS::EC2::Route` resource to explicitly declare a dependency on the `AWS::EC2::TransitGatewayAttachment` resource.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Route`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnRoute = new ec2.CfnRoute(this, 'MyCfnRoute', {\n  routeTableId: 'routeTableId',\n\n  // the properties below are optional\n  carrierGatewayId: 'carrierGatewayId',\n  destinationCidrBlock: 'destinationCidrBlock',\n  destinationIpv6CidrBlock: 'destinationIpv6CidrBlock',\n  egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n  gatewayId: 'gatewayId',\n  instanceId: 'instanceId',\n  localGatewayId: 'localGatewayId',\n  natGatewayId: 'natGatewayId',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayId: 'transitGatewayId',\n  vpcEndpointId: 'vpcEndpointId',\n  vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Route`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 21103
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20980
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21128
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21151
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20984
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21133
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid"
            },
            "remarks": "The routing table must be associated with the same VPC that the virtual private gateway is attached to.",
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21010
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-carriergatewayid"
            },
            "stability": "external",
            "summary": "The ID of the carrier gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21017
          },
          "name": "carrierGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock"
            },
            "stability": "external",
            "summary": "The IPv4 CIDR block used for the destination match."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21024
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock"
            },
            "stability": "external",
            "summary": "The IPv6 CIDR block used for the destination match."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21031
          },
          "name": "destinationIpv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the egress-only internet gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21038
          },
          "name": "egressOnlyInternetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid"
            },
            "stability": "external",
            "summary": "The ID of an internet gateway or virtual private gateway attached to your VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21045
          },
          "name": "gatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid"
            },
            "stability": "external",
            "summary": "The ID of a NAT instance in your VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21052
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-localgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the local gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21059
          },
          "name": "localGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid"
            },
            "stability": "external",
            "summary": "The ID of a NAT gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21066
          },
          "name": "natGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21073
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of a transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21080
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcendpointid"
            },
            "remarks": "Supported for Gateway Load Balancer endpoints only.",
            "stability": "external",
            "summary": "The ID of a VPC endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21087
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid"
            },
            "stability": "external",
            "summary": "The ID of a VPC peering connection."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21094
          },
          "name": "vpcPeeringConnectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnRoute"
    },
    "@aws-cdk/aws-ec2.CfnRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnRouteProps: ec2.CfnRouteProps = {\n  routeTableId: 'routeTableId',\n\n  // the properties below are optional\n  carrierGatewayId: 'carrierGatewayId',\n  destinationCidrBlock: 'destinationCidrBlock',\n  destinationIpv6CidrBlock: 'destinationIpv6CidrBlock',\n  egressOnlyInternetGatewayId: 'egressOnlyInternetGatewayId',\n  gatewayId: 'gatewayId',\n  instanceId: 'instanceId',\n  localGatewayId: 'localGatewayId',\n  natGatewayId: 'natGatewayId',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayId: 'transitGatewayId',\n  vpcEndpointId: 'vpcEndpointId',\n  vpcPeeringConnectionId: 'vpcPeeringConnectionId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 20790
      },
      "name": "CfnRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid"
            },
            "remarks": "The routing table must be associated with the same VPC that the virtual private gateway is attached to.",
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20797
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-carriergatewayid"
            },
            "stability": "external",
            "summary": "The ID of the carrier gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20804
          },
          "name": "carrierGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock"
            },
            "stability": "external",
            "summary": "The IPv4 CIDR block used for the destination match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20811
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock"
            },
            "stability": "external",
            "summary": "The IPv6 CIDR block used for the destination match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20818
          },
          "name": "destinationIpv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the egress-only internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20825
          },
          "name": "egressOnlyInternetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid"
            },
            "stability": "external",
            "summary": "The ID of an internet gateway or virtual private gateway attached to your VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20832
          },
          "name": "gatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid"
            },
            "stability": "external",
            "summary": "The ID of a NAT instance in your VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20839
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-localgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the local gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20846
          },
          "name": "localGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid"
            },
            "stability": "external",
            "summary": "The ID of a NAT gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20853
          },
          "name": "natGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20860
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of a transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20867
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcendpointid"
            },
            "remarks": "Supported for Gateway Load Balancer endpoints only.",
            "stability": "external",
            "summary": "The ID of a VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20874
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid"
            },
            "stability": "external",
            "summary": "The ID of a VPC peering connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 20881
          },
          "name": "vpcPeeringConnectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnRouteTable": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::RouteTable",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a route table for a specified VPC. After you create a route table, you can add routes and associate the table with a subnet.\n\nFor more information, see [Route Tables](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html) in the *Amazon Virtual Private Cloud User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::RouteTable`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnRouteTable = new ec2.CfnRouteTable(this, 'MyCfnRouteTable', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::RouteTable`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 21294
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnRouteTableProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21242
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21309
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21321
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRouteTable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21246
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "RouteTableId"
            },
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21271
          },
          "name": "attrRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21314
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21285
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21278
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnRouteTable"
    },
    "@aws-cdk/aws-ec2.CfnRouteTableProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnRouteTable`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnRouteTableProps: ec2.CfnRouteTableProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnRouteTableProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21164
      },
      "name": "CfnRouteTableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21171
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21178
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnRouteTableProps"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a security group. To create a security group, use the [VpcId](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid) property to specify the VPC for which to create the security group.\n\nThis type supports updates. For more information about updating stacks, see [AWS CloudFormation Stacks Updates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html) .\n\n> To cross-reference two security groups in the ingress and egress rules of those security groups, use the [AWS::EC2::SecurityGroupEgress](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html) and [AWS::EC2::SecurityGroupIngress](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-ingress.html) resources to define your rules. Do not use the embedded ingress and egress rules in the `AWS::EC2::SecurityGroup` . Doing so creates a circular dependency, which AWS CloudFormation doesn't allow.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSecurityGroup = new ec2.CfnSecurityGroup(this, 'MyCfnSecurityGroup', {\n  groupDescription: 'groupDescription',\n\n  // the properties below are optional\n  groupName: 'groupName',\n  securityGroupEgress: [{\n    ipProtocol: 'ipProtocol',\n\n    // the properties below are optional\n    cidrIp: 'cidrIp',\n    cidrIpv6: 'cidrIpv6',\n    description: 'description',\n    destinationPrefixListId: 'destinationPrefixListId',\n    destinationSecurityGroupId: 'destinationSecurityGroupId',\n    fromPort: 123,\n    toPort: 123,\n  }],\n  securityGroupIngress: [{\n    ipProtocol: 'ipProtocol',\n\n    // the properties below are optional\n    cidrIp: 'cidrIp',\n    cidrIpv6: 'cidrIpv6',\n    description: 'description',\n    fromPort: 123,\n    sourcePrefixListId: 'sourcePrefixListId',\n    sourceSecurityGroupId: 'sourceSecurityGroupId',\n    sourceSecurityGroupName: 'sourceSecurityGroupName',\n    sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n    toPort: 123,\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcId: 'vpcId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SecurityGroup`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 21564
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21466
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21584
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21600
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21470
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupId"
            },
            "stability": "external",
            "summary": "The group ID of the specified security group, such as `sg-94b3a1f6` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21495
          },
          "name": "attrGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VpcId"
            },
            "remarks": "You can obtain the physical ID by using a reference to an [AWS::EC2::VPC](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html) , such as: `{ \"Ref\" : \"myVPC\" }` .",
            "stability": "external",
            "summary": "The physical ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21501
          },
          "name": "attrVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21589
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21548
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription"
            },
            "remarks": "Constraints: Up to 255 characters in length\n\nConstraints for EC2-Classic: ASCII characters\n\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
            "stability": "external",
            "summary": "A description for the security group. This is informational only."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21514
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname"
            },
            "remarks": "Constraints: Up to 255 characters in length. Cannot start with `sg-` .\n\nConstraints for EC2-Classic: ASCII characters\n\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
            "stability": "external",
            "summary": "The name of the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21527
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress"
            },
            "remarks": "There is a short interruption during which you cannot connect to the security group.",
            "stability": "external",
            "summary": "[VPC only] The outbound rules associated with the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21534
          },
          "name": "securityGroupEgress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress"
            },
            "remarks": "There is a short interruption during which you cannot connect to the security group.",
            "stability": "external",
            "summary": "The inbound rules associated with the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21541
          },
          "name": "securityGroupIngress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid"
            },
            "stability": "external",
            "summary": "[VPC only] The ID of the VPC for the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21555
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroup"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "An outbound rule permits instances to send traffic to the specified destination IPv4 or IPv6 CIDR address ranges, or to the specified destination security groups for the same VPC.\n\nYou specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.\n\nYou must specify only one of the following properties: `CidrIp` , `CidrIpv6` , `DestinationPrefixListId` , or `DestinationSecurityGroupId` .\n\nYou must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ). If you do not specify one of these parameters, the stack will launch successfully but the rule will not be added to the security group.\n\nRule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.\n\nFor more information about VPC security group limits, see [Amazon VPC Limits](https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html) .\n\nUse `SecurityGroup.Ingress` and `SecurityGroup.Egress` only when necessary, typically to allow security groups to reference each other in ingress and egress rules. Otherwise, use the embedded ingress and egress rules of the security group. For more information, see [Amazon EC2 Security Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html) .\n\nThe EC2 Security Group Rule is an embedded property of the `AWS::EC2::SecurityGroup` type.",
        "stability": "external",
        "summary": "[EC2-VPC only] Adds the specified egress rules to a security group for use with a VPC.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst egressProperty: ec2.CfnSecurityGroup.EgressProperty = {\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  destinationPrefixListId: 'destinationPrefixListId',\n  destinationSecurityGroupId: 'destinationSecurityGroupId',\n  fromPort: 123,\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21630
      },
      "name": "EgressProperty",
      "namespace": "CfnSecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol"
            },
            "remarks": "[VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.",
            "stability": "external",
            "summary": "The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21688
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21640
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv6 address range, in CIDR format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21650
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description"
            },
            "remarks": "Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*",
            "stability": "external",
            "summary": "A description for the security group rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21658
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destinationprefixlistid"
            },
            "remarks": "This is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.\n\nYou must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).",
            "stability": "external",
            "summary": "[EC2-VPC only] The prefix list IDs for the destination AWS service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21666
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destsecgroupid"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).",
            "stability": "external",
            "summary": "The ID of the destination VPC security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21674
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
            "stability": "external",
            "summary": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21680
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
            "stability": "external",
            "summary": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21694
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroup.EgressProperty"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "An inbound rule permits instances to receive traffic from the specified IPv4 or IPv6 CIDR address range, or from the instances associated with the specified security group.\n\nYou must specify only one of the following properties: `CidrIp` , `CidrIpv6` , `SourcePrefixListId` , `SourceSecurityGroupId` , or `SourceSecurityGroupName` .\n\nYou specify a protocol for each rule (for example, TCP). For TCP and UDP, you must also specify a port or port range. For ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.\n\nYou must specify a source security group ( `SourcePrefixListId` , `SourceSecurityGroupId` , or `SourceSecurityGroupName` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ). If you do not specify one of these parameters, the stack will launch successfully but the rule will not be added to the security group.\n\nRule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.\n\nThe EC2 Security Group Rule is an embedded property of the `AWS::EC2::SecurityGroup` type.",
        "stability": "external",
        "summary": "Adds an inbound rule to a security group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ingressProperty: ec2.CfnSecurityGroup.IngressProperty = {\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  fromPort: 123,\n  sourcePrefixListId: 'sourcePrefixListId',\n  sourceSecurityGroupId: 'sourceSecurityGroupId',\n  sourceSecurityGroupName: 'sourceSecurityGroupName',\n  sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21789
      },
      "name": "IngressProperty",
      "namespace": "CfnSecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol"
            },
            "remarks": "[VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.",
            "stability": "external",
            "summary": "The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21831
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip"
            },
            "remarks": "You must specify a source security group ( `SourcePrefixListId` or `SourceSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21799
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6"
            },
            "remarks": "You must specify a source security group ( `SourcePrefixListId` or `SourceSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv6 address range, in CIDR format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21809
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description"
            },
            "remarks": "You can replace an existing description, or add a description to a rule that did not have one previously.\n\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*",
            "stability": "external",
            "summary": "Updates the description of an ingress (inbound) security group rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21817
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
            "stability": "external",
            "summary": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21823
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-securitygroup-ingress-sourceprefixlistid"
            },
            "stability": "external",
            "summary": "[EC2-VPC only] The ID of a prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21837
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupid"
            },
            "remarks": "You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21843
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupname"
            },
            "remarks": "You can't specify this parameter in combination with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n\nYou must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.",
            "stability": "external",
            "summary": "[EC2-Classic, default VPC] The name of the source security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21851
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupownerid"
            },
            "remarks": "You can't specify this property with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n\nIf you specify `SourceSecurityGroupName` or `SourceSecurityGroupId` and that security group is owned by a different account than the account creating the stack, you must specify the `SourceSecurityGroupOwnerId` ; otherwise, this property is optional.",
            "stability": "external",
            "summary": "[nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21859
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
            "stability": "external",
            "summary": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21865
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroup.IngressProperty"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupEgress": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroupEgress",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "[EC2-VPC only] Adds the specified egress rules to a security group for use with a VPC.\n\nAn outbound rule permits instances to send traffic to the specified destination IPv4 or IPv6 CIDR address ranges, or to the specified destination security groups for the same VPC.\n\nYou specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.\n\nYou must specify only one of the following properties: `CidrIp` , `CidrIpv6` , `DestinationPrefixListId` , or `DestinationSecurityGroupId` .\n\nYou must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ). If you do not specify one of these parameters, the stack will launch successfully but the rule will not be added to the security group.\n\nRule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.\n\nFor more information about VPC security group limits, see [Amazon VPC Limits](https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html) .\n\nUse `AWS::EC2::SecurityGroupIngress` and `AWS::EC2::SecurityGroupEgress` only when necessary, typically to allow security groups to reference each other in ingress and egress rules. Otherwise, use the embedded ingress and egress rules of the security group. For more information, see [Amazon EC2 Security Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroupEgress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSecurityGroupEgress = new ec2.CfnSecurityGroupEgress(this, 'MyCfnSecurityGroupEgress', {\n  groupId: 'groupId',\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  destinationPrefixListId: 'destinationPrefixListId',\n  destinationSecurityGroupId: 'destinationSecurityGroupId',\n  fromPort: 123,\n  toPort: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgress",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SecurityGroupEgress`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 22241
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22130
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22263
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22282
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroupEgress",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22134
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22268
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid"
            },
            "remarks": "You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22160
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol"
            },
            "remarks": "[VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.",
            "stability": "external",
            "summary": "The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) )."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22169
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR format."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22180
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv6 address range, in CIDR format."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22191
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description"
            },
            "remarks": "Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*",
            "stability": "external",
            "summary": "The description of an egress (outbound) security group rule."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22200
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid"
            },
            "remarks": "This is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.\n\nYou must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).",
            "stability": "external",
            "summary": "[EC2-VPC only] The prefix list IDs for an AWS service."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22209
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22218
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
            "stability": "external",
            "summary": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22225
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
            "stability": "external",
            "summary": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22232
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupEgress"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSecurityGroupEgress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSecurityGroupEgressProps: ec2.CfnSecurityGroupEgressProps = {\n  groupId: 'groupId',\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  destinationPrefixListId: 'destinationPrefixListId',\n  destinationSecurityGroupId: 'destinationSecurityGroupId',\n  fromPort: 123,\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21953
      },
      "name": "CfnSecurityGroupEgressProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid"
            },
            "remarks": "You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21960
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol"
            },
            "remarks": "[VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.",
            "stability": "external",
            "summary": "The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21969
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21980
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv6 address range, in CIDR format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21991
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description"
            },
            "remarks": "Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*",
            "stability": "external",
            "summary": "The description of an egress (outbound) security group rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22000
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid"
            },
            "remarks": "This is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.\n\nYou must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).",
            "stability": "external",
            "summary": "[EC2-VPC only] The prefix list IDs for an AWS service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22009
          },
          "name": "destinationPrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid"
            },
            "remarks": "You must specify a destination security group ( `DestinationPrefixListId` or `DestinationSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22018
          },
          "name": "destinationSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
            "stability": "external",
            "summary": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22025
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
            "stability": "external",
            "summary": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22032
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupEgressProps"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupIngress": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SecurityGroupIngress",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Adds an inbound rule to a security group.\n\nAn inbound rule permits instances to receive traffic from the specified IPv4 or IPv6 CIDR address range, or from the instances associated with the specified security group.\n\nYou must specify only one of the following properties: `CidrIp` , `CidrIpv6` , `SourcePrefixListId` , `SourceSecurityGroupId` , or `SourceSecurityGroupName` .\n\nYou specify a protocol for each rule (for example, TCP). For TCP and UDP, you must also specify a port or port range. For ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.\n\nYou must specify a source security group ( `SourcePrefixListId` , `SourceSecurityGroupId` , or `SourceSecurityGroupName` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ). If you do not specify one of these parameters, the stack will launch successfully but the rule will not be added to the security group.\n\nRule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SecurityGroupIngress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSecurityGroupIngress = new ec2.CfnSecurityGroupIngress(this, 'MyCfnSecurityGroupIngress', {\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  fromPort: 123,\n  groupId: 'groupId',\n  groupName: 'groupName',\n  sourcePrefixListId: 'sourcePrefixListId',\n  sourceSecurityGroupId: 'sourceSecurityGroupId',\n  sourceSecurityGroupName: 'sourceSecurityGroupName',\n  sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n  toPort: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngress",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SecurityGroupIngress`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 22653
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22509
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22677
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22699
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecurityGroupIngress",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22513
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22682
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol"
            },
            "remarks": "[VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.",
            "stability": "external",
            "summary": "The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) )."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22541
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip"
            },
            "remarks": "You must specify a source security group ( `SourcePrefixListId` or `SourceSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR format."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22552
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6"
            },
            "remarks": "You must specify a source security group ( `SourcePrefixListId` or `SourceSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv6 address range, in CIDR format."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22563
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description"
            },
            "remarks": "You can replace an existing description, or add a description to a rule that did not have one previously.\n\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*",
            "stability": "external",
            "summary": "Updates the description of an ingress (inbound) security group rule."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22572
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUse this for ICMP and any protocol that uses ports.",
            "stability": "external",
            "summary": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22581
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid"
            },
            "remarks": "You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.\n\nYou must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22590
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname"
            },
            "remarks": "Constraints: Up to 255 characters in length. Cannot start with `sg-` .\n\nConstraints for EC2-Classic: ASCII characters\n\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
            "stability": "external",
            "summary": "The name of the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22603
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid"
            },
            "stability": "external",
            "summary": "[EC2-VPC only] The ID of a prefix list."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22610
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid"
            },
            "remarks": "You must specify either the security group ID or the security group name. For security groups in a nondefault VPC, you must specify the security group ID.",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22617
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname"
            },
            "remarks": "You can't specify this parameter in combination with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n\nYou must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.",
            "stability": "external",
            "summary": "[EC2-Classic, default VPC] The name of the source security group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22626
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid"
            },
            "remarks": "You can't specify this property with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n\nIf you specify `SourceSecurityGroupName` or `SourceSecurityGroupId` and that security group is owned by a different account than the account creating the stack, you must specify the `SourceSecurityGroupOwnerId` ; otherwise, this property is optional.",
            "stability": "external",
            "summary": "[nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22635
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUse this for ICMP and any protocol that uses ports.",
            "stability": "external",
            "summary": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22644
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupIngress"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSecurityGroupIngress`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSecurityGroupIngressProps: ec2.CfnSecurityGroupIngressProps = {\n  ipProtocol: 'ipProtocol',\n\n  // the properties below are optional\n  cidrIp: 'cidrIp',\n  cidrIpv6: 'cidrIpv6',\n  description: 'description',\n  fromPort: 123,\n  groupId: 'groupId',\n  groupName: 'groupName',\n  sourcePrefixListId: 'sourcePrefixListId',\n  sourceSecurityGroupId: 'sourceSecurityGroupId',\n  sourceSecurityGroupName: 'sourceSecurityGroupName',\n  sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22295
      },
      "name": "CfnSecurityGroupIngressProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol"
            },
            "remarks": "[VPC only] Use `-1` to specify all protocols. When authorizing security group rules, specifying `-1` or a protocol number other than `tcp` , `udp` , `icmp` , or `icmpv6` allows traffic on all ports, regardless of any port range you specify. For `tcp` , `udp` , and `icmp` , you must specify a port range. For `icmpv6` , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.",
            "stability": "external",
            "summary": "The IP protocol name ( `tcp` , `udp` , `icmp` , `icmpv6` ) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22304
          },
          "name": "ipProtocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip"
            },
            "remarks": "You must specify a source security group ( `SourcePrefixListId` or `SourceSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv4 address range, in CIDR format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22315
          },
          "name": "cidrIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6"
            },
            "remarks": "You must specify a source security group ( `SourcePrefixListId` or `SourceSecurityGroupId` ) or a CIDR range ( `CidrIp` or `CidrIpv6` ).\n\nFor examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "The IPv6 address range, in CIDR format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22326
          },
          "name": "cidrIpv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description"
            },
            "remarks": "You can replace an existing description, or add a description to a rule that did not have one previously.\n\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*",
            "stability": "external",
            "summary": "Updates the description of an ingress (inbound) security group rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22335
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUse this for ICMP and any protocol that uses ports.",
            "stability": "external",
            "summary": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22344
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid"
            },
            "remarks": "You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.\n\nYou must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22353
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname"
            },
            "remarks": "Constraints: Up to 255 characters in length. Cannot start with `sg-` .\n\nConstraints for EC2-Classic: ASCII characters\n\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
            "stability": "external",
            "summary": "The name of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22366
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid"
            },
            "stability": "external",
            "summary": "[EC2-VPC only] The ID of a prefix list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22373
          },
          "name": "sourcePrefixListId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid"
            },
            "remarks": "You must specify either the security group ID or the security group name. For security groups in a nondefault VPC, you must specify the security group ID.",
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22380
          },
          "name": "sourceSecurityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname"
            },
            "remarks": "You can't specify this parameter in combination with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n\nYou must specify the `GroupName` property or the `GroupId` property. For security groups that are in a VPC, you must use the `GroupId` property.",
            "stability": "external",
            "summary": "[EC2-Classic, default VPC] The name of the source security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22389
          },
          "name": "sourceSecurityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid"
            },
            "remarks": "You can't specify this property with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.\n\nIf you specify `SourceSecurityGroupName` or `SourceSecurityGroupId` and that security group is owned by a different account than the account creating the stack, you must specify the `SourceSecurityGroupOwnerId` ; otherwise, this property is optional.",
            "stability": "external",
            "summary": "[nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22398
          },
          "name": "sourceSecurityGroupOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport"
            },
            "remarks": "A value of `-1` indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUse this for ICMP and any protocol that uses ports.",
            "stability": "external",
            "summary": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22407
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupIngressProps"
    },
    "@aws-cdk/aws-ec2.CfnSecurityGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSecurityGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSecurityGroupProps: ec2.CfnSecurityGroupProps = {\n  groupDescription: 'groupDescription',\n\n  // the properties below are optional\n  groupName: 'groupName',\n  securityGroupEgress: [{\n    ipProtocol: 'ipProtocol',\n\n    // the properties below are optional\n    cidrIp: 'cidrIp',\n    cidrIpv6: 'cidrIpv6',\n    description: 'description',\n    destinationPrefixListId: 'destinationPrefixListId',\n    destinationSecurityGroupId: 'destinationSecurityGroupId',\n    fromPort: 123,\n    toPort: 123,\n  }],\n  securityGroupIngress: [{\n    ipProtocol: 'ipProtocol',\n\n    // the properties below are optional\n    cidrIp: 'cidrIp',\n    cidrIpv6: 'cidrIpv6',\n    description: 'description',\n    fromPort: 123,\n    sourcePrefixListId: 'sourcePrefixListId',\n    sourceSecurityGroupId: 'sourceSecurityGroupId',\n    sourceSecurityGroupName: 'sourceSecurityGroupName',\n    sourceSecurityGroupOwnerId: 'sourceSecurityGroupOwnerId',\n    toPort: 123,\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 21334
      },
      "name": "CfnSecurityGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription"
            },
            "remarks": "Constraints: Up to 255 characters in length\n\nConstraints for EC2-Classic: ASCII characters\n\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
            "stability": "external",
            "summary": "A description for the security group. This is informational only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21347
          },
          "name": "groupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname"
            },
            "remarks": "Constraints: Up to 255 characters in length. Cannot start with `sg-` .\n\nConstraints for EC2-Classic: ASCII characters\n\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
            "stability": "external",
            "summary": "The name of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21360
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress"
            },
            "remarks": "There is a short interruption during which you cannot connect to the security group.",
            "stability": "external",
            "summary": "[VPC only] The outbound rules associated with the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21367
          },
          "name": "securityGroupEgress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress"
            },
            "remarks": "There is a short interruption during which you cannot connect to the security group.",
            "stability": "external",
            "summary": "The inbound rules associated with the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21374
          },
          "name": "securityGroupIngress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21381
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid"
            },
            "stability": "external",
            "summary": "[VPC only] The ID of the VPC for the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 21388
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSecurityGroupProps"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SpotFleet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a Spot Fleet request. A Spot Fleet request contains the configuration information to launch a fleet, or group, of instances.\n\nThe Spot Fleet request specifies the total target capacity and the On-Demand target capacity for the fleet. Amazon EC2 calculates the difference between the total capacity and On-Demand capacity, and launches the difference as Spot capacity.\n\nThe Spot Fleet request can include multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.\n\nBy default, the Spot Fleet requests Spot Instances in the Spot pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload.\n\nAlternatively, you can specify that the Spot Fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot Instances in your Spot Fleet are in different Spot pools, you can improve the availability of your fleet.\n\nYou can specify tags for the Spot Instances. You cannot tag other resource types in a Spot Fleet request because only the `instance` resource type is supported.\n\nFor more information, see [Spot Fleet Requests](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html) in the *Amazon EC2 User Guide for Linux Instances* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SpotFleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSpotFleet = new ec2.CfnSpotFleet(this, 'MyCfnSpotFleet', {\n  spotFleetRequestConfigData: {\n    iamFleetRole: 'iamFleetRole',\n    targetCapacity: 123,\n\n    // the properties below are optional\n    allocationStrategy: 'allocationStrategy',\n    context: 'context',\n    excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    instancePoolsToUseCount: 123,\n    launchSpecifications: [{\n      imageId: 'imageId',\n\n      // the properties below are optional\n      blockDeviceMappings: [{\n        deviceName: 'deviceName',\n\n        // the properties below are optional\n        ebs: {\n          deleteOnTermination: false,\n          encrypted: false,\n          iops: 123,\n          snapshotId: 'snapshotId',\n          volumeSize: 123,\n          volumeType: 'volumeType',\n        },\n        noDevice: 'noDevice',\n        virtualName: 'virtualName',\n      }],\n      ebsOptimized: false,\n      iamInstanceProfile: {\n        arn: 'arn',\n      },\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      kernelId: 'kernelId',\n      keyName: 'keyName',\n      monitoring: {\n        enabled: false,\n      },\n      networkInterfaces: [{\n        associatePublicIpAddress: false,\n        deleteOnTermination: false,\n        description: 'description',\n        deviceIndex: 123,\n        groups: ['groups'],\n        ipv6AddressCount: 123,\n        ipv6Addresses: [{\n          ipv6Address: 'ipv6Address',\n        }],\n        networkInterfaceId: 'networkInterfaceId',\n        privateIpAddresses: [{\n          privateIpAddress: 'privateIpAddress',\n\n          // the properties below are optional\n          primary: false,\n        }],\n        secondaryPrivateIpAddressCount: 123,\n        subnetId: 'subnetId',\n      }],\n      placement: {\n        availabilityZone: 'availabilityZone',\n        groupName: 'groupName',\n        tenancy: 'tenancy',\n      },\n      ramdiskId: 'ramdiskId',\n      securityGroups: [{\n        groupId: 'groupId',\n      }],\n      spotPrice: 'spotPrice',\n      subnetId: 'subnetId',\n      tagSpecifications: [{\n        resourceType: 'resourceType',\n        tags: [{\n          key: 'key',\n          value: 'value',\n        }],\n      }],\n      userData: 'userData',\n      weightedCapacity: 123,\n    }],\n    launchTemplateConfigs: [{\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n      overrides: [{\n        availabilityZone: 'availabilityZone',\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        priority: 123,\n        spotPrice: 'spotPrice',\n        subnetId: 'subnetId',\n        weightedCapacity: 123,\n      }],\n    }],\n    loadBalancersConfig: {\n      classicLoadBalancersConfig: {\n        classicLoadBalancers: [{\n          name: 'name',\n        }],\n      },\n      targetGroupsConfig: {\n        targetGroups: [{\n          arn: 'arn',\n        }],\n      },\n    },\n    onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n    onDemandMaxTotalPrice: 'onDemandMaxTotalPrice',\n    onDemandTargetCapacity: 123,\n    replaceUnhealthyInstances: false,\n    spotMaintenanceStrategies: {\n      capacityRebalance: {\n        replacementStrategy: 'replacementStrategy',\n        terminationDelay: 123,\n      },\n    },\n    spotMaxTotalPrice: 'spotMaxTotalPrice',\n    spotPrice: 'spotPrice',\n    targetCapacityUnitType: 'targetCapacityUnitType',\n    terminateInstancesWithExpiration: false,\n    type: 'type',\n    validFrom: 'validFrom',\n    validUntil: 'validUntil',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SpotFleet`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 22835
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSpotFleetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22790
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22849
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22860
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSpotFleet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22794
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the Spot Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22819
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22854
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata"
            },
            "stability": "external",
            "summary": "Describes the configuration of a Spot Fleet request."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22826
          },
          "name": "spotFleetRequestConfigData",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorCountRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To exclude accelerator-enabled instance types, set `Max` to `0` .",
        "stability": "external",
        "summary": "The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst acceleratorCountRequestProperty: ec2.CfnSpotFleet.AcceleratorCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22874
      },
      "name": "AcceleratorCountRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html#cfn-ec2-spotfleet-acceleratorcountrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter. To exclude accelerator-enabled instance types, set `Max` to `0` .",
            "stability": "external",
            "summary": "The maximum number of accelerators."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22880
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratorcountrequest.html#cfn-ec2-spotfleet-acceleratorcountrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum number of accelerators."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22886
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.AcceleratorCountRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of total accelerator memory, in MiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst acceleratorTotalMemoryMiBRequestProperty: ec2.CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22950
      },
      "name": "AcceleratorTotalMemoryMiBRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html#cfn-ec2-spotfleet-acceleratortotalmemorymibrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22956
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-acceleratortotalmemorymibrequest.html#cfn-ec2-spotfleet-acceleratortotalmemorymibrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22962
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst baselineEbsBandwidthMbpsRequestProperty: ec2.CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23026
      },
      "name": "BaselineEbsBandwidthMbpsRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-spotfleet-baselineebsbandwidthmbpsrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum baseline bandwidth, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23032
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-baselineebsbandwidthmbpsrequest.html#cfn-ec2-spotfleet-baselineebsbandwidthmbpsrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum baseline bandwidth, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23038
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You can specify `Ebs` or `VirtualName` , but not both.",
        "stability": "external",
        "summary": "Specifies a block device mapping.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst blockDeviceMappingProperty: ec2.CfnSpotFleet.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    snapshotId: 'snapshotId',\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: 'noDevice',\n  virtualName: 'virtualName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23104
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-devicename"
            },
            "stability": "external",
            "summary": "The device name (for example, `/dev/sdh` or `xvdh` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23110
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-ebs"
            },
            "stability": "external",
            "summary": "Parameters used to automatically set up EBS volumes when the instance is launched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23116
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-nodevice"
            },
            "remarks": "When this property is specified, the device is removed from the block device mapping regardless of the assigned value.",
            "stability": "external",
            "summary": "To omit the device from the block device mapping, specify an empty string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23122
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-blockdevicemapping.html#cfn-ec2-spotfleet-blockdevicemapping-virtualname"
            },
            "remarks": "Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for `ephemeral0` and `ephemeral1` . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\n\nNVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\n\nConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.",
            "stability": "external",
            "summary": "The virtual device name ( `ephemeral` N)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23132
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.BlockDeviceMappingProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies a Classic Load Balancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst classicLoadBalancerProperty: ec2.CfnSpotFleet.ClassicLoadBalancerProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23203
      },
      "name": "ClassicLoadBalancerProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html#cfn-ec2-spotfleet-classicloadbalancer-name"
            },
            "stability": "external",
            "summary": "The name of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23209
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.ClassicLoadBalancerProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Spot Fleet registers the running Spot Instances with these Classic Load Balancers.",
        "stability": "external",
        "summary": "Specifies the Classic Load Balancers to attach to a Spot Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst classicLoadBalancersConfigProperty: ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty = {\n  classicLoadBalancers: [{\n    name: 'name',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23271
      },
      "name": "ClassicLoadBalancersConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html#cfn-ec2-spotfleet-classicloadbalancersconfig-classicloadbalancers"
            },
            "stability": "external",
            "summary": "One or more Classic Load Balancers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23277
          },
          "name": "classicLoadBalancers",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.ClassicLoadBalancersConfigProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a block device for an EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ebsBlockDeviceProperty: ec2.CfnSpotFleet.EbsBlockDeviceProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23339
      },
      "name": "EbsBlockDeviceProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-deleteontermination"
            },
            "remarks": "For more information, see [Preserving Amazon EBS volumes on instance termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) in the *Amazon EC2 User Guide* .",
            "stability": "external",
            "summary": "Indicates whether the EBS volume is deleted on instance termination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23345
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-encrypted"
            },
            "remarks": "The effect of setting the encryption state to `true` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Amazon EBS Encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters) in the *Amazon EC2 User Guide* .\n\nIn no case can you remove encryption from an encrypted volume.\n\nEncrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see [Supported Instance Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) .\n\nThis parameter is not returned by [DescribeImageAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html) .",
            "stability": "external",
            "summary": "Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23357
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-iops"
            },
            "remarks": "For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n\nThe following are the supported values for each volume type:\n\n- `gp3` : 3,000-16,000 IOPS\n- `io1` : 100-64,000 IOPS\n- `io2` : 100-64,000 IOPS\n\nFor `io1` and `io2` volumes, we guarantee 64,000 IOPS only for [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families guarantee performance up to 32,000 IOPS.\n\nThis parameter is required for `io1` and `io2` volumes. The default for `gp3` volumes is 3,000 IOPS. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.",
            "stability": "external",
            "summary": "The number of I/O operations per second (IOPS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23373
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-snapshotid"
            },
            "stability": "external",
            "summary": "The ID of the snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23379
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-volumesize"
            },
            "remarks": "You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n\nThe following are the supported volumes sizes for each volume type:\n\n- `gp2` and `gp3` :1-16,384\n- `io1` and `io2` : 4-16,384\n- `st1` and `sc1` : 125-16,384\n- `standard` : 1-1,024",
            "stability": "external",
            "summary": "The size of the volume, in GiBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23392
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-ebsblockdevice.html#cfn-ec2-spotfleet-ebsblockdevice-volumetype"
            },
            "remarks": "For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide* . If the volume type is `io1` or `io2` , you must specify the IOPS that the volume supports.",
            "stability": "external",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23398
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.EbsBlockDeviceProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For information about launch templates, see [Launching an instance from a launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html) in the *Amazon EC2 User Guide for Linux Instances* .",
        "stability": "external",
        "summary": "Describes the Amazon EC2 launch template and the launch template version that can be used by a Spot Fleet request to configure Amazon EC2 instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst fleetLaunchTemplateSpecificationProperty: ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty = {\n  version: 'version',\n\n  // the properties below are optional\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23474
      },
      "name": "FleetLaunchTemplateSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-version"
            },
            "remarks": "Minimum length of 1. Maximum length of 255. Versions must fit the following pattern: `[\\ u0020-\\ uD7FF\\ uE000-\\ uFFFD\\ uD800\\ uDC00-\\ uDBFF\\ uDFFF\\r\\n\\t]*`",
            "stability": "external",
            "summary": "The version number of the launch template. You must specify a version number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23496
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplateid"
            },
            "remarks": "If you specify the template ID, you can't specify the template name.",
            "stability": "external",
            "summary": "The ID of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23480
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplatename"
            },
            "remarks": "Minimum length of 3. Maximum length of 128. Names must match the following pattern: `[a-zA-Z0-9\\(\\)\\.-/_]+`",
            "stability": "external",
            "summary": "The name of the launch template. You must specify either a template name or a template ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23488
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.FleetLaunchTemplateSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-groupidentifier.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a security group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst groupIdentifierProperty: ec2.CfnSpotFleet.GroupIdentifierProperty = {\n  groupId: 'groupId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23564
      },
      "name": "GroupIdentifierProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-groupidentifier.html#cfn-ec2-spotfleet-groupidentifier-groupid"
            },
            "stability": "external",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23570
          },
          "name": "groupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.GroupIdentifierProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-iaminstanceprofilespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes an IAM instance profile.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst iamInstanceProfileSpecificationProperty: ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty = {\n  arn: 'arn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23632
      },
      "name": "IamInstanceProfileSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-iaminstanceprofilespecification.html#cfn-ec2-spotfleet-iaminstanceprofilespecification-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the instance profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23638
          },
          "name": "arn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.IamInstanceProfileSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes an IPv6 address.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceIpv6AddressProperty: ec2.CfnSpotFleet.InstanceIpv6AddressProperty = {\n  ipv6Address: 'ipv6Address',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23699
      },
      "name": "InstanceIpv6AddressProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html#cfn-ec2-spotfleet-instanceipv6address-ipv6address"
            },
            "stability": "external",
            "summary": "The IPv6 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23705
          },
          "name": "ipv6Address",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.InstanceIpv6AddressProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceNetworkInterfaceSpecificationProperty: ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty = {\n  associatePublicIpAddress: false,\n  deleteOnTermination: false,\n  description: 'description',\n  deviceIndex: 123,\n  groups: ['groups'],\n  ipv6AddressCount: 123,\n  ipv6Addresses: [{\n    ipv6Address: 'ipv6Address',\n  }],\n  networkInterfaceId: 'networkInterfaceId',\n  privateIpAddresses: [{\n    privateIpAddress: 'privateIpAddress',\n\n    // the properties below are optional\n    primary: false,\n  }],\n  secondaryPrivateIpAddressCount: 123,\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23767
      },
      "name": "InstanceNetworkInterfaceSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-associatepublicipaddress"
            },
            "remarks": "The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is `true` .",
            "stability": "external",
            "summary": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23773
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deleteontermination"
            },
            "stability": "external",
            "summary": "Indicates whether the network interface is deleted when the instance is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23779
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-description"
            },
            "remarks": "Applies only if creating a network interface when launching an instance.",
            "stability": "external",
            "summary": "The description of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23785
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deviceindex"
            },
            "remarks": "A primary network interface has a device index of 0.\n\nIf you specify a network interface when launching an instance, you must specify the device index.",
            "stability": "external",
            "summary": "The position of the network interface in the attachment order."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23793
          },
          "name": "deviceIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-groups"
            },
            "remarks": "Applies only if creating a network interface when launching an instance.",
            "stability": "external",
            "summary": "The IDs of the security groups for the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23799
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresscount"
            },
            "remarks": "Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.",
            "stability": "external",
            "summary": "A number of IPv6 addresses to assign to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23805
          },
          "name": "ipv6AddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresses"
            },
            "remarks": "You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.",
            "stability": "external",
            "summary": "One or more IPv6 addresses to assign to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23811
          },
          "name": "ipv6Addresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-networkinterfaceid"
            },
            "remarks": "If you are creating a Spot Fleet, omit this parameter because you can’t specify a network interface ID in a launch specification.",
            "stability": "external",
            "summary": "The ID of the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23819
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-privateipaddresses"
            },
            "remarks": "Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a [RunInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request.",
            "stability": "external",
            "summary": "One or more private IPv4 addresses to assign to the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23825
          },
          "name": "privateIpAddresses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-secondaryprivateipaddresscount"
            },
            "remarks": "You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're launching more than one instance in a [RunInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request.",
            "stability": "external",
            "summary": "The number of secondary private IPv4 addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23831
          },
          "name": "secondaryPrivateIpAddressCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancenetworkinterfacespecification.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-subnetid"
            },
            "remarks": "Applies only if creating a network interface when launching an instance.",
            "stability": "external",
            "summary": "The ID of the subnet associated with the network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23837
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceRequirementsRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.\n\nWhen you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.\n\n> You must specify `VCpuCount` and `MemoryMiB` . All other parameters are optional. Any unspecified optional parameter is set to its default.\n\nFor more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html) , [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html) , and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the *Amazon EC2 User Guide* .",
        "stability": "external",
        "summary": "The attributes for the instance types.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceRequirementsRequestProperty: ec2.CfnSpotFleet.InstanceRequirementsRequestProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceRequirementsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 23934
      },
      "name": "InstanceRequirementsRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratorcount"
            },
            "remarks": "To exclude accelerator-enabled instance types, set `Max` to `0` .\n\nDefault: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) on an instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23944
          },
          "name": "acceleratorCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratormanufacturers"
            },
            "remarks": "- For instance types with NVIDIA devices, specify `nvidia` .\n- For instance types with AMD devices, specify `amd` .\n- For instance types with AWS devices, specify `amazon-web-services` .\n- For instance types with Xilinx devices, specify `xilinx` .\n\nDefault: Any manufacturer",
            "stability": "external",
            "summary": "Indicates whether instance types must have accelerators by specific manufacturers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23957
          },
          "name": "acceleratorManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratornames"
            },
            "remarks": "- For instance types with NVIDIA A100 GPUs, specify `a100` .\n- For instance types with NVIDIA V100 GPUs, specify `v100` .\n- For instance types with NVIDIA K80 GPUs, specify `k80` .\n- For instance types with NVIDIA T4 GPUs, specify `t4` .\n- For instance types with NVIDIA M60 GPUs, specify `m60` .\n- For instance types with AMD Radeon Pro V520 GPUs, specify `radeon-pro-v520` .\n- For instance types with Xilinx VU9P FPGAs, specify `vu9p` .\n\nDefault: Any accelerator",
            "stability": "external",
            "summary": "The accelerators that must be on the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23973
          },
          "name": "acceleratorNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratortotalmemorymib"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of total accelerator memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23981
          },
          "name": "acceleratorTotalMemoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.AcceleratorTotalMemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-acceleratortypes"
            },
            "remarks": "- To include instance types with GPU hardware, specify `gpu` .\n- To include instance types with FPGA hardware, specify `fpga` .\n- To include instance types with inference hardware, specify `inference` .\n\nDefault: Any accelerator type",
            "stability": "external",
            "summary": "The accelerator types that must be on the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 23993
          },
          "name": "acceleratorTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-baremetal"
            },
            "remarks": "- To include bare metal instance types, specify `included` .\n- To require only bare metal instance types, specify `required` .\n- To exclude bare metal instance types, specify `excluded` .\n\nDefault: `excluded`",
            "stability": "external",
            "summary": "Indicates whether bare metal instance types must be included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24005
          },
          "name": "bareMetal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-baselineebsbandwidthmbps"
            },
            "remarks": "For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide* .\n\nDefault: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24013
          },
          "name": "baselineEbsBandwidthMbps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BaselineEbsBandwidthMbpsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-burstableperformance"
            },
            "remarks": "For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) .\n\n- To include burstable performance instance types, specify `included` .\n- To require only burstable performance instance types, specify `required` .\n- To exclude burstable performance instance types, specify `excluded` .\n\nDefault: `excluded`",
            "stability": "external",
            "summary": "Indicates whether burstable performance T instance types are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24025
          },
          "name": "burstablePerformance",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-cpumanufacturers"
            },
            "remarks": "- For instance types with Intel CPUs, specify `intel` .\n- For instance types with AMD CPUs, specify `amd` .\n- For instance types with AWS CPUs, specify `amazon-web-services` .\n\n> Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.\n\nDefault: Any manufacturer",
            "stability": "external",
            "summary": "The CPU manufacturers to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24039
          },
          "name": "cpuManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-excludedinstancetypes"
            },
            "remarks": "You can use strings with one or more wild cards, represented by an asterisk ( `*` ), to exclude an instance family, type, size, or generation. The following are examples: `m5.8xlarge` , `c5*.*` , `m5a.*` , `r*` , `*3*` .\n\nFor example, if you specify `c5*` ,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*` , Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.\n\nDefault: No excluded instance types",
            "stability": "external",
            "summary": "The instance types to exclude."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24049
          },
          "name": "excludedInstanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-instancegenerations"
            },
            "remarks": "The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* .\n\nFor current generation instance types, specify `current` .\n\nFor previous generation instance types, specify `previous` .\n\nDefault: Current and previous generation instance types",
            "stability": "external",
            "summary": "Indicates whether current or previous generation instance types are included."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24061
          },
          "name": "instanceGenerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-localstorage"
            },
            "remarks": "For more information, [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide* .\n\n- To include instance types with instance store volumes, specify `included` .\n- To require only instance types with instance store volumes, specify `required` .\n- To exclude instance types with instance store volumes, specify `excluded` .\n\nDefault: `included`",
            "stability": "external",
            "summary": "Indicates whether instance types with instance store volumes are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24073
          },
          "name": "localStorage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-localstoragetypes"
            },
            "remarks": "- For instance types with hard disk drive (HDD) storage, specify `hdd` .\n- For instance types with solid state drive (SDD) storage, specify `sdd` .\n\nDefault: `hdd` and `sdd`",
            "stability": "external",
            "summary": "The type of local storage that is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24084
          },
          "name": "localStorageTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-memorygibpervcpu"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24092
          },
          "name": "memoryGiBPerVCpu",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryGiBPerVCpuRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-memorymib"
            },
            "stability": "external",
            "summary": "The minimum and maximum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24098
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-networkinterfacecount"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24106
          },
          "name": "networkInterfaceCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.NetworkInterfaceCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-ondemandmaxpricepercentageoverlowestprice"
            },
            "remarks": "This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n\nThe parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n\nTo turn off price protection, specify a high value, such as `999999` .\n\nThis parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n\n> If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n\nDefault: `20`",
            "stability": "external",
            "summary": "The price protection threshold for On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24122
          },
          "name": "onDemandMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-requirehibernatesupport"
            },
            "remarks": "This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) .\n\nDefault: `false`",
            "stability": "external",
            "summary": "Indicates whether instance types must support hibernation for On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24132
          },
          "name": "requireHibernateSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-spotmaxpricepercentageoverlowestprice"
            },
            "remarks": "This is the maximum you’ll pay for an Spot Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\n\nThe parameter accepts an integer, which Amazon EC2 interprets as a percentage.\n\nTo turn off price protection, specify a high value, such as `999999` .\n\nThis parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html) .\n\n> If you set `TargetCapacityUnitType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\n\nDefault: `100`",
            "stability": "external",
            "summary": "The price protection threshold for Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24148
          },
          "name": "spotMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-totallocalstoragegb"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24156
          },
          "name": "totalLocalStorageGb",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TotalLocalStorageGBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instancerequirementsrequest.html#cfn-ec2-spotfleet-instancerequirementsrequest-vcpucount"
            },
            "stability": "external",
            "summary": "The minimum and maximum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24162
          },
          "name": "vCpuCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.VCpuCountRangeRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.InstanceRequirementsRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies a launch template and overrides.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateConfigProperty: ec2.CfnSpotFleet.LaunchTemplateConfigProperty = {\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  overrides: [{\n    availabilityZone: 'availabilityZone',\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    priority: 123,\n    spotPrice: 'spotPrice',\n    subnetId: 'subnetId',\n    weightedCapacity: 123,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24283
      },
      "name": "LaunchTemplateConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-launchtemplatespecification"
            },
            "stability": "external",
            "summary": "The launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24289
          },
          "name": "launchTemplateSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-overrides"
            },
            "stability": "external",
            "summary": "Any parameters that you specify override the same parameters in the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24295
          },
          "name": "overrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.LaunchTemplateConfigProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies overrides for a launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateOverridesProperty: ec2.CfnSpotFleet.LaunchTemplateOverridesProperty = {\n  availabilityZone: 'availabilityZone',\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  priority: 123,\n  spotPrice: 'spotPrice',\n  subnetId: 'subnetId',\n  weightedCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24359
      },
      "name": "LaunchTemplateOverridesProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone in which to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24365
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancerequirements"
            },
            "remarks": "When you specify instance requirements, Amazon EC2 will identify instance types with the provided requirements, and then use your On-Demand and Spot allocation strategies to launch instances from these instance types, in the same way as when you specify a list of instance types.\n\n> If you specify `InstanceRequirements` , you can't specify `InstanceTypes` .",
            "stability": "external",
            "summary": "The instance requirements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24373
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceRequirementsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancetype"
            },
            "stability": "external",
            "summary": "The instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24379
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-priority"
            },
            "remarks": "If `OnDemandAllocationStrategy` is set to `prioritized` , Spot Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.\n\nIf the Spot `AllocationStrategy` is set to `capacityOptimizedPrioritized` , Spot Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.\n\nValid values are whole numbers starting at `0` . The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.",
            "stability": "external",
            "summary": "The priority for the launch template override. The highest priority is launched first."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24391
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-spotprice"
            },
            "stability": "external",
            "summary": "The maximum price per unit hour that you are willing to pay for a Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24397
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet in which to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24403
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-weightedcapacity"
            },
            "stability": "external",
            "summary": "The number of units provided by the specified instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24409
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.LaunchTemplateOverridesProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies the Classic Load Balancers and target groups to attach to a Spot Fleet request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst loadBalancersConfigProperty: ec2.CfnSpotFleet.LoadBalancersConfigProperty = {\n  classicLoadBalancersConfig: {\n    classicLoadBalancers: [{\n      name: 'name',\n    }],\n  },\n  targetGroupsConfig: {\n    targetGroups: [{\n      arn: 'arn',\n    }],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24488
      },
      "name": "LoadBalancersConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-classicloadbalancersconfig"
            },
            "stability": "external",
            "summary": "The Classic Load Balancers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24494
          },
          "name": "classicLoadBalancersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-targetgroupsconfig"
            },
            "stability": "external",
            "summary": "The target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24500
          },
          "name": "targetGroupsConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.LoadBalancersConfigProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryGiBPerVCpuRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of memory per vCPU, in GiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst memoryGiBPerVCpuRequestProperty: ec2.CfnSpotFleet.MemoryGiBPerVCpuRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryGiBPerVCpuRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24564
      },
      "name": "MemoryGiBPerVCpuRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html#cfn-ec2-spotfleet-memorygibpervcpurequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24570
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorygibpervcpurequest.html#cfn-ec2-spotfleet-memorygibpervcpurequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of memory per vCPU, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24576
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.MemoryGiBPerVCpuRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of memory, in MiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst memoryMiBRequestProperty: ec2.CfnSpotFleet.MemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.MemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24640
      },
      "name": "MemoryMiBRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html#cfn-ec2-spotfleet-memorymibrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24646
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-memorymibrequest.html#cfn-ec2-spotfleet-memorymibrequest-min"
            },
            "remarks": "To specify no minimum limit, specify `0` .",
            "stability": "external",
            "summary": "The minimum amount of memory, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24652
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.MemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.NetworkInterfaceCountRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum number of network interfaces.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst networkInterfaceCountRequestProperty: ec2.CfnSpotFleet.NetworkInterfaceCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.NetworkInterfaceCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24716
      },
      "name": "NetworkInterfaceCountRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html#cfn-ec2-spotfleet-networkinterfacecountrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24722
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-networkinterfacecountrequest.html#cfn-ec2-spotfleet-networkinterfacecountrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24728
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.NetworkInterfaceCountRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a secondary private IPv4 address for a network interface.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateIpAddressSpecificationProperty: ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty = {\n  privateIpAddress: 'privateIpAddress',\n\n  // the properties below are optional\n  primary: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24792
      },
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html#cfn-ec2-spotfleet-privateipaddressspecification-privateipaddress"
            },
            "stability": "external",
            "summary": "The private IPv4 addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24804
          },
          "name": "privateIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-privateipaddressspecification.html#cfn-ec2-spotfleet-privateipaddressspecification-primary"
            },
            "remarks": "Only one IPv4 address can be designated as primary.",
            "stability": "external",
            "summary": "Indicates whether the private IPv4 address is the primary private IPv4 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24798
          },
          "name": "primary",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.PrivateIpAddressSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotCapacityRebalanceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Capacity rebalancing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-capacity-rebalance.html) in the *Amazon EC2 User Guide for Linux Instances* .",
        "stability": "external",
        "summary": "The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotCapacityRebalanceProperty: ec2.CfnSpotFleet.SpotCapacityRebalanceProperty = {\n  replacementStrategy: 'replacementStrategy',\n  terminationDelay: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotCapacityRebalanceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24869
      },
      "name": "SpotCapacityRebalanceProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html#cfn-ec2-spotfleet-spotcapacityrebalance-replacementstrategy"
            },
            "remarks": "`launch` - Spot Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet. Spot Fleet does not terminate the instances that receive a rebalance notification. You can terminate the old instances, or you can leave them running. You are charged for all instances while they are running.\n\n`launch-before-terminate` - Spot Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet, and then, after a delay that you specify (in `TerminationDelay` ), terminates the instances that received a rebalance notification.",
            "stability": "external",
            "summary": "The replacement strategy to use. Only available for fleets of type `maintain` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24879
          },
          "name": "replacementStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotcapacityrebalance.html#cfn-ec2-spotfleet-spotcapacityrebalance-terminationdelay"
            },
            "remarks": "Required when `ReplacementStrategy` is set to `launch-before-terminate` .\n\nNot valid when `ReplacementStrategy` is set to `launch` .\n\nValid values: Minimum value of `120` seconds. Maximum value of `7200` seconds.",
            "stability": "external",
            "summary": "The amount of time (in seconds) that Amazon EC2 waits before terminating the old Spot Instance after launching a new replacement Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24891
          },
          "name": "terminationDelay",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotCapacityRebalanceProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "If you include On-Demand capacity in your fleet request, you can't use `SpotFleetLaunchSpecification` ; you must use [LaunchTemplateConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html) .",
        "stability": "external",
        "summary": "Specifies the launch specification for one or more Spot Instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotFleetLaunchSpecificationProperty: ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty = {\n  imageId: 'imageId',\n\n  // the properties below are optional\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: 'noDevice',\n    virtualName: 'virtualName',\n  }],\n  ebsOptimized: false,\n  iamInstanceProfile: {\n    arn: 'arn',\n  },\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  monitoring: {\n    enabled: false,\n  },\n  networkInterfaces: [{\n    associatePublicIpAddress: false,\n    deleteOnTermination: false,\n    description: 'description',\n    deviceIndex: 123,\n    groups: ['groups'],\n    ipv6AddressCount: 123,\n    ipv6Addresses: [{\n      ipv6Address: 'ipv6Address',\n    }],\n    networkInterfaceId: 'networkInterfaceId',\n    privateIpAddresses: [{\n      privateIpAddress: 'privateIpAddress',\n\n      // the properties below are optional\n      primary: false,\n    }],\n    secondaryPrivateIpAddressCount: 123,\n    subnetId: 'subnetId',\n  }],\n  placement: {\n    availabilityZone: 'availabilityZone',\n    groupName: 'groupName',\n    tenancy: 'tenancy',\n  },\n  ramdiskId: 'ramdiskId',\n  securityGroups: [{\n    groupId: 'groupId',\n  }],\n  spotPrice: 'spotPrice',\n  subnetId: 'subnetId',\n  tagSpecifications: [{\n    resourceType: 'resourceType',\n    tags: [{\n      key: 'key',\n      value: 'value',\n    }],\n  }],\n  userData: 'userData',\n  weightedCapacity: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 24955
      },
      "name": "SpotFleetLaunchSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-imageid"
            },
            "stability": "external",
            "summary": "The ID of the AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24981
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-blockdevicemappings"
            },
            "remarks": "You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.",
            "stability": "external",
            "summary": "One or more block devices that are mapped to the Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24961
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ebsoptimized"
            },
            "remarks": "This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\n\nDefault: `false`",
            "stability": "external",
            "summary": "Indicates whether the instances are optimized for EBS I/O."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24969
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-iaminstanceprofile"
            },
            "stability": "external",
            "summary": "The IAM instance profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24975
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancerequirements"
            },
            "remarks": "When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.\n\n> If you specify `InstanceRequirements` , you can't specify `InstanceTypes` .",
            "stability": "external",
            "summary": "The attributes for the instance types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24989
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceRequirementsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancetype"
            },
            "stability": "external",
            "summary": "The instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 24995
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-kernelid"
            },
            "stability": "external",
            "summary": "The ID of the kernel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25001
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-keyname"
            },
            "stability": "external",
            "summary": "The name of the key pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25007
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-monitoring"
            },
            "stability": "external",
            "summary": "Enable or disable monitoring for the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25013
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-networkinterfaces"
            },
            "remarks": "If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.\n\n> `SpotFleetLaunchSpecification` currently does not support Elastic Fabric Adapter (EFA). To specify an EFA, you must use [LaunchTemplateConfig](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html) .",
            "stability": "external",
            "summary": "One or more network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25021
          },
          "name": "networkInterfaces",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-placement"
            },
            "stability": "external",
            "summary": "The placement information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25027
          },
          "name": "placement",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ramdiskid"
            },
            "remarks": "Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.",
            "stability": "external",
            "summary": "The ID of the RAM disk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25033
          },
          "name": "ramdiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-securitygroups"
            },
            "remarks": "When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.",
            "stability": "external",
            "summary": "One or more security groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25039
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-spotprice"
            },
            "remarks": "If this value is not specified, the default is the Spot price specified for the fleet. To determine the Spot price per unit hour, divide the Spot price by the value of `WeightedCapacity` .",
            "stability": "external",
            "summary": "The maximum price per unit hour that you are willing to pay for a Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25045
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-subnetid"
            },
            "remarks": "To specify multiple subnets, separate them using commas; for example, \"subnet-1234abcdeexample1, subnet-0987cdef6example2\".",
            "stability": "external",
            "summary": "The IDs of the subnets in which to launch the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25051
          },
          "name": "subnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-tagspecifications"
            },
            "stability": "external",
            "summary": "The tags to apply during creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25057
          },
          "name": "tagSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-userdata"
            },
            "stability": "external",
            "summary": "The Base64-encoded user data that instances use when starting up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25063
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-weightedcapacity"
            },
            "remarks": "These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.\n\nIf the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.",
            "stability": "external",
            "summary": "The number of units provided by the specified instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25071
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotFleetLaunchSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetmonitoring.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes whether monitoring is enabled.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotFleetMonitoringProperty: ec2.CfnSpotFleet.SpotFleetMonitoringProperty = {\n  enabled: false,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25184
      },
      "name": "SpotFleetMonitoringProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetmonitoring.html#cfn-ec2-spotfleet-spotfleetmonitoring-enabled"
            },
            "remarks": "Default: `false`",
            "stability": "external",
            "summary": "Enables monitoring for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25192
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotFleetMonitoringProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [How Spot Fleet Works](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nYou must specify either `LaunchSpecifications` or `LaunchTemplateConfigs` .",
        "stability": "external",
        "summary": "Specifies the configuration of a Spot Fleet request.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotFleetRequestConfigDataProperty: ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty = {\n  iamFleetRole: 'iamFleetRole',\n  targetCapacity: 123,\n\n  // the properties below are optional\n  allocationStrategy: 'allocationStrategy',\n  context: 'context',\n  excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n  instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n  instancePoolsToUseCount: 123,\n  launchSpecifications: [{\n    imageId: 'imageId',\n\n    // the properties below are optional\n    blockDeviceMappings: [{\n      deviceName: 'deviceName',\n\n      // the properties below are optional\n      ebs: {\n        deleteOnTermination: false,\n        encrypted: false,\n        iops: 123,\n        snapshotId: 'snapshotId',\n        volumeSize: 123,\n        volumeType: 'volumeType',\n      },\n      noDevice: 'noDevice',\n      virtualName: 'virtualName',\n    }],\n    ebsOptimized: false,\n    iamInstanceProfile: {\n      arn: 'arn',\n    },\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    kernelId: 'kernelId',\n    keyName: 'keyName',\n    monitoring: {\n      enabled: false,\n    },\n    networkInterfaces: [{\n      associatePublicIpAddress: false,\n      deleteOnTermination: false,\n      description: 'description',\n      deviceIndex: 123,\n      groups: ['groups'],\n      ipv6AddressCount: 123,\n      ipv6Addresses: [{\n        ipv6Address: 'ipv6Address',\n      }],\n      networkInterfaceId: 'networkInterfaceId',\n      privateIpAddresses: [{\n        privateIpAddress: 'privateIpAddress',\n\n        // the properties below are optional\n        primary: false,\n      }],\n      secondaryPrivateIpAddressCount: 123,\n      subnetId: 'subnetId',\n    }],\n    placement: {\n      availabilityZone: 'availabilityZone',\n      groupName: 'groupName',\n      tenancy: 'tenancy',\n    },\n    ramdiskId: 'ramdiskId',\n    securityGroups: [{\n      groupId: 'groupId',\n    }],\n    spotPrice: 'spotPrice',\n    subnetId: 'subnetId',\n    tagSpecifications: [{\n      resourceType: 'resourceType',\n      tags: [{\n        key: 'key',\n        value: 'value',\n      }],\n    }],\n    userData: 'userData',\n    weightedCapacity: 123,\n  }],\n  launchTemplateConfigs: [{\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n    overrides: [{\n      availabilityZone: 'availabilityZone',\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      priority: 123,\n      spotPrice: 'spotPrice',\n      subnetId: 'subnetId',\n      weightedCapacity: 123,\n    }],\n  }],\n  loadBalancersConfig: {\n    classicLoadBalancersConfig: {\n      classicLoadBalancers: [{\n        name: 'name',\n      }],\n    },\n    targetGroupsConfig: {\n      targetGroups: [{\n        arn: 'arn',\n      }],\n    },\n  },\n  onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n  onDemandMaxTotalPrice: 'onDemandMaxTotalPrice',\n  onDemandTargetCapacity: 123,\n  replaceUnhealthyInstances: false,\n  spotMaintenanceStrategies: {\n    capacityRebalance: {\n      replacementStrategy: 'replacementStrategy',\n      terminationDelay: 123,\n    },\n  },\n  spotMaxTotalPrice: 'spotMaxTotalPrice',\n  spotPrice: 'spotPrice',\n  targetCapacityUnitType: 'targetCapacityUnitType',\n  terminateInstancesWithExpiration: false,\n  type: 'type',\n  validFrom: 'validFrom',\n  validUntil: 'validUntil',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25255
      },
      "name": "SpotFleetRequestConfigDataProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-iamfleetrole"
            },
            "remarks": "For more information, see [Spot Fleet Prerequisites](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html#spot-fleet-prerequisites) in the *Amazon EC2 User Guide for Linux Instances* . Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request or when the Spot Fleet request expires, if you set `TerminateInstancesWithExpiration` .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25285
          },
          "name": "iamFleetRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacity"
            },
            "remarks": "You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of 0 and add capacity later.",
            "stability": "external",
            "summary": "The number of units to request for the Spot Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25367
          },
          "name": "targetCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-allocationstrategy"
            },
            "remarks": "If the allocation strategy is `lowestPrice` , Spot Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.\n\nIf the allocation strategy is `diversified` , Spot Fleet launches instances from all the Spot Instance pools that you specify.\n\nIf the allocation strategy is `capacityOptimized` (recommended), Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use `capacityOptimizedPrioritized` . Set a priority for each instance type by using the `Priority` parameter for `LaunchTemplateOverrides` . You can assign the same priority to different `LaunchTemplateOverrides` . EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. `capacityOptimizedPrioritized` is supported only if your Spot Fleet uses a launch template. Note that if the `OnDemandAllocationStrategy` is set to `prioritized` , the same priority is applied when fulfilling On-Demand capacity.",
            "stability": "external",
            "summary": "Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25267
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-context"
            },
            "stability": "external",
            "summary": "Reserved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25273
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-excesscapacityterminationpolicy"
            },
            "stability": "external",
            "summary": "Indicates whether running Spot Instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25279
          },
          "name": "excessCapacityTerminationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instanceinterruptionbehavior"
            },
            "remarks": "The default is `terminate` .",
            "stability": "external",
            "summary": "The behavior when a Spot Instance is interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25291
          },
          "name": "instanceInterruptionBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instancepoolstousecount"
            },
            "remarks": "Valid only when Spot *AllocationStrategy* is set to `lowest-price` . Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.\n\nNote that Spot Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, Spot Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.",
            "stability": "external",
            "summary": "The number of Spot pools across which to allocate your target Spot capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25299
          },
          "name": "instancePoolsToUseCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications"
            },
            "remarks": "If you specify `LaunchSpecifications` , you can't specify `LaunchTemplateConfigs` .",
            "stability": "external",
            "summary": "The launch specifications for the Spot Fleet request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25305
          },
          "name": "launchSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchtemplateconfigs"
            },
            "remarks": "If you specify `LaunchTemplateConfigs` , you can't specify `LaunchSpecifications` .",
            "stability": "external",
            "summary": "The launch template and overrides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25311
          },
          "name": "launchTemplateConfigs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-loadbalancersconfig"
            },
            "remarks": "Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.\n\nWith Network Load Balancers, Spot Fleet cannot register instances that have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.",
            "stability": "external",
            "summary": "One or more Classic Load Balancers and target groups to attach to the Spot Fleet request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25319
          },
          "name": "loadBalancersConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandallocationstrategy"
            },
            "remarks": "If you specify `lowestPrice` , Spot Fleet uses price to determine the order, launching the lowest price first. If you specify `prioritized` , Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to `lowestPrice` .",
            "stability": "external",
            "summary": "The order of the launch template overrides to use in fulfilling On-Demand capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25325
          },
          "name": "onDemandAllocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandmaxtotalprice"
            },
            "remarks": "You can use the `onDemandMaxTotalPrice` parameter, the `spotMaxTotalPrice` parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.",
            "stability": "external",
            "summary": "The maximum amount per hour for On-Demand Instances that you're willing to pay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25331
          },
          "name": "onDemandMaxTotalPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandtargetcapacity"
            },
            "remarks": "You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of 0 and add capacity later.",
            "stability": "external",
            "summary": "The number of On-Demand units to request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25337
          },
          "name": "onDemandTargetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-replaceunhealthyinstances"
            },
            "stability": "external",
            "summary": "Indicates whether Spot Fleet should replace unhealthy instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25343
          },
          "name": "replaceUnhealthyInstances",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotmaintenancestrategies"
            },
            "stability": "external",
            "summary": "The strategies for managing your Spot Instances that are at an elevated risk of being interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25349
          },
          "name": "spotMaintenanceStrategies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotMaintenanceStrategiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotmaxtotalprice"
            },
            "remarks": "You can use the `spotdMaxTotalPrice` parameter, the `onDemandMaxTotalPrice` parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.",
            "stability": "external",
            "summary": "The maximum amount per hour for Spot Instances that you're willing to pay."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25355
          },
          "name": "spotMaxTotalPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotprice"
            },
            "remarks": "The default is the On-Demand price.",
            "stability": "external",
            "summary": "The maximum price per unit hour that you are willing to pay for a Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25361
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacityunittype"
            },
            "remarks": "Default: `units` (translates to number of instances)",
            "stability": "external",
            "summary": "The unit for the target capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25375
          },
          "name": "targetCapacityUnitType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-terminateinstanceswithexpiration"
            },
            "stability": "external",
            "summary": "Indicates whether running Spot Instances are terminated when the Spot Fleet request expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25381
          },
          "name": "terminateInstancesWithExpiration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-type"
            },
            "remarks": "Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is `request` , the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is `maintain` , the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: `maintain` . `instant` is listed but is not used by Spot Fleet.",
            "stability": "external",
            "summary": "The type of request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25387
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validfrom"
            },
            "remarks": "By default, Amazon EC2 starts fulfilling the request immediately.",
            "stability": "external",
            "summary": "The start date and time of the request, in UTC format ( *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25393
          },
          "name": "validFrom",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validuntil"
            },
            "remarks": "After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it.",
            "stability": "external",
            "summary": "The end date and time of the request, in UTC format ( *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25399
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotFleetRequestConfigDataProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The tags for a Spot Fleet resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotFleetTagSpecificationProperty: ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty = {\n  resourceType: 'resourceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25525
      },
      "name": "SpotFleetTagSpecificationProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html#cfn-ec2-spotfleet-spotfleettagspecification-resourcetype"
            },
            "remarks": "Currently, the only resource type that is supported is `instance` . To tag the Spot Fleet request on creation, use the `TagSpecifications` parameter in [`SpotFleetRequestConfigData`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetRequestConfigData.html) .",
            "stability": "external",
            "summary": "The type of resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25531
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleettagspecification.html#cfn-ec2-spotfleet-spotfleettagspecification-tags"
            },
            "stability": "external",
            "summary": "The tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25537
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotFleetTagSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotMaintenanceStrategiesProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotmaintenancestrategies.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotMaintenanceStrategiesProperty: ec2.CfnSpotFleet.SpotMaintenanceStrategiesProperty = {\n  capacityRebalance: {\n    replacementStrategy: 'replacementStrategy',\n    terminationDelay: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotMaintenanceStrategiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25601
      },
      "name": "SpotMaintenanceStrategiesProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotmaintenancestrategies.html#cfn-ec2-spotfleet-spotmaintenancestrategies-capacityrebalance"
            },
            "remarks": "For more information, see [Capacity rebalancing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-capacity-rebalance.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25607
          },
          "name": "capacityRebalance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotCapacityRebalanceProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotMaintenanceStrategiesProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes Spot Instance placement.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst spotPlacementProperty: ec2.CfnSpotFleet.SpotPlacementProperty = {\n  availabilityZone: 'availabilityZone',\n  groupName: 'groupName',\n  tenancy: 'tenancy',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25668
      },
      "name": "SpotPlacementProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-availabilityzone"
            },
            "remarks": "To specify multiple Availability Zones, separate them using commas; for example, \"us-west-2a, us-west-2b\".",
            "stability": "external",
            "summary": "The Availability Zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25676
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-groupname"
            },
            "stability": "external",
            "summary": "The name of the placement group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25682
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotplacement.html#cfn-ec2-spotfleet-spotplacement-tenancy"
            },
            "remarks": "An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for Spot Instances.",
            "stability": "external",
            "summary": "The tenancy of the instance (if the instance is running in a VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25688
          },
          "name": "tenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.SpotPlacementProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes a load balancer target group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst targetGroupProperty: ec2.CfnSpotFleet.TargetGroupProperty = {\n  arn: 'arn',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25755
      },
      "name": "TargetGroupProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html#cfn-ec2-spotfleet-targetgroup-arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the target group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25761
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.TargetGroupProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Spot Fleet registers the running Spot Instances with these target groups.",
        "stability": "external",
        "summary": "Describes the target groups to attach to a Spot Fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst targetGroupsConfigProperty: ec2.CfnSpotFleet.TargetGroupsConfigProperty = {\n  targetGroups: [{\n    arn: 'arn',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25823
      },
      "name": "TargetGroupsConfigProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html#cfn-ec2-spotfleet-targetgroupsconfig-targetgroups"
            },
            "stability": "external",
            "summary": "One or more target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25829
          },
          "name": "targetGroups",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.TargetGroupsConfigProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.TotalLocalStorageGBRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum amount of total local storage, in GB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst totalLocalStorageGBRequestProperty: ec2.CfnSpotFleet.TotalLocalStorageGBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.TotalLocalStorageGBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25891
      },
      "name": "TotalLocalStorageGBRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html#cfn-ec2-spotfleet-totallocalstoragegbrequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25897
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-totallocalstoragegbrequest.html#cfn-ec2-spotfleet-totallocalstoragegbrequest-min"
            },
            "remarks": "To specify no minimum limit, omit this parameter.",
            "stability": "external",
            "summary": "The minimum amount of total local storage, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25903
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.TotalLocalStorageGBRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleet.VCpuCountRangeRequestProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The minimum and maximum number of vCPUs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst vCpuCountRangeRequestProperty: ec2.CfnSpotFleet.VCpuCountRangeRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.VCpuCountRangeRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 25967
      },
      "name": "VCpuCountRangeRequestProperty",
      "namespace": "CfnSpotFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html#cfn-ec2-spotfleet-vcpucountrangerequest-max"
            },
            "remarks": "To specify no maximum limit, omit this parameter.",
            "stability": "external",
            "summary": "The maximum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25973
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-vcpucountrangerequest.html#cfn-ec2-spotfleet-vcpucountrangerequest-min"
            },
            "remarks": "To specify no minimum limit, specify `0` .",
            "stability": "external",
            "summary": "The minimum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 25979
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleet.VCpuCountRangeRequestProperty"
    },
    "@aws-cdk/aws-ec2.CfnSpotFleetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSpotFleet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSpotFleetProps: ec2.CfnSpotFleetProps = {\n  spotFleetRequestConfigData: {\n    iamFleetRole: 'iamFleetRole',\n    targetCapacity: 123,\n\n    // the properties below are optional\n    allocationStrategy: 'allocationStrategy',\n    context: 'context',\n    excessCapacityTerminationPolicy: 'excessCapacityTerminationPolicy',\n    instanceInterruptionBehavior: 'instanceInterruptionBehavior',\n    instancePoolsToUseCount: 123,\n    launchSpecifications: [{\n      imageId: 'imageId',\n\n      // the properties below are optional\n      blockDeviceMappings: [{\n        deviceName: 'deviceName',\n\n        // the properties below are optional\n        ebs: {\n          deleteOnTermination: false,\n          encrypted: false,\n          iops: 123,\n          snapshotId: 'snapshotId',\n          volumeSize: 123,\n          volumeType: 'volumeType',\n        },\n        noDevice: 'noDevice',\n        virtualName: 'virtualName',\n      }],\n      ebsOptimized: false,\n      iamInstanceProfile: {\n        arn: 'arn',\n      },\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      kernelId: 'kernelId',\n      keyName: 'keyName',\n      monitoring: {\n        enabled: false,\n      },\n      networkInterfaces: [{\n        associatePublicIpAddress: false,\n        deleteOnTermination: false,\n        description: 'description',\n        deviceIndex: 123,\n        groups: ['groups'],\n        ipv6AddressCount: 123,\n        ipv6Addresses: [{\n          ipv6Address: 'ipv6Address',\n        }],\n        networkInterfaceId: 'networkInterfaceId',\n        privateIpAddresses: [{\n          privateIpAddress: 'privateIpAddress',\n\n          // the properties below are optional\n          primary: false,\n        }],\n        secondaryPrivateIpAddressCount: 123,\n        subnetId: 'subnetId',\n      }],\n      placement: {\n        availabilityZone: 'availabilityZone',\n        groupName: 'groupName',\n        tenancy: 'tenancy',\n      },\n      ramdiskId: 'ramdiskId',\n      securityGroups: [{\n        groupId: 'groupId',\n      }],\n      spotPrice: 'spotPrice',\n      subnetId: 'subnetId',\n      tagSpecifications: [{\n        resourceType: 'resourceType',\n        tags: [{\n          key: 'key',\n          value: 'value',\n        }],\n      }],\n      userData: 'userData',\n      weightedCapacity: 123,\n    }],\n    launchTemplateConfigs: [{\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n      overrides: [{\n        availabilityZone: 'availabilityZone',\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        priority: 123,\n        spotPrice: 'spotPrice',\n        subnetId: 'subnetId',\n        weightedCapacity: 123,\n      }],\n    }],\n    loadBalancersConfig: {\n      classicLoadBalancersConfig: {\n        classicLoadBalancers: [{\n          name: 'name',\n        }],\n      },\n      targetGroupsConfig: {\n        targetGroups: [{\n          arn: 'arn',\n        }],\n      },\n    },\n    onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n    onDemandMaxTotalPrice: 'onDemandMaxTotalPrice',\n    onDemandTargetCapacity: 123,\n    replaceUnhealthyInstances: false,\n    spotMaintenanceStrategies: {\n      capacityRebalance: {\n        replacementStrategy: 'replacementStrategy',\n        terminationDelay: 123,\n      },\n    },\n    spotMaxTotalPrice: 'spotMaxTotalPrice',\n    spotPrice: 'spotPrice',\n    targetCapacityUnitType: 'targetCapacityUnitType',\n    terminateInstancesWithExpiration: false,\n    type: 'type',\n    validFrom: 'validFrom',\n    validUntil: 'validUntil',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSpotFleetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 22712
      },
      "name": "CfnSpotFleetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata"
            },
            "stability": "external",
            "summary": "Describes the configuration of a Spot Fleet request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 22719
          },
          "name": "spotFleetRequestConfigData",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSpotFleetProps"
    },
    "@aws-cdk/aws-ec2.CfnSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Subnet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a subnet for a VPC.\n\nWhen you create each subnet, you provide the VPC ID and IPv4 CIDR block for the subnet. After you create a subnet, you can't change its CIDR block. The size of the subnet's IPv4 CIDR block can be the same as a VPC's IPv4 CIDR block, or a subset of a VPC's IPv4 CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest IPv4 subnet (and VPC) you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses).\n\nIf you've associated an IPv6 CIDR block with your VPC, you can create a subnet with an IPv6 CIDR block that uses a /64 prefix length.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Subnet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const privateDnsNameOptionsOnLaunch: any;\nconst cfnSubnet = new ec2.CfnSubnet(this, 'MyCfnSubnet', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  assignIpv6AddressOnCreation: false,\n  availabilityZone: 'availabilityZone',\n  availabilityZoneId: 'availabilityZoneId',\n  cidrBlock: 'cidrBlock',\n  enableDns64: false,\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  ipv6Native: false,\n  mapPublicIpOnLaunch: false,\n  outpostArn: 'outpostArn',\n  privateDnsNameOptionsOnLaunch: privateDnsNameOptionsOnLaunch,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Subnet`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26404
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26236
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26434
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26456
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26240
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AvailabilityZone"
            },
            "remarks": "`{ \"Fn::GetAtt\" : [ \"mySubnet\", \"AvailabilityZone\" ] }`",
            "stability": "external",
            "summary": "The Availability Zone of this subnet. For example:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26267
          },
          "name": "attrAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Ipv6CidrBlocks"
            },
            "stability": "external",
            "summary": "The IPv6 CIDR blocks that are associated with the subnet, such as `[ 2001:db8:1234:1a00::/64 ]` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26273
          },
          "name": "attrIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkAclAssociationId"
            },
            "stability": "external",
            "summary": "The ID of the network ACL that is associated with the subnet's VPC, such as `acl-5fb85d36` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26279
          },
          "name": "attrNetworkAclAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OutpostArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Outpost."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26285
          },
          "name": "attrOutpostArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SubnetId"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26291
          },
          "name": "attrSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VpcId"
            },
            "stability": "external",
            "summary": "The ID of the subnet's VPC, such as `vpc-11ad4878` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26297
          },
          "name": "attrVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26439
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26395
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-privatednsnameoptionsonlaunch"
            },
            "remarks": "For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The hostname type for EC2 instances launched into this subnet and how DNS A and AAAA record queries to the instances should be handled."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26388
          },
          "name": "privateDnsNameOptionsOnLaunch",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-vpcid"
            },
            "remarks": "If you update this property, you must also update the `CidrBlock` property.",
            "stability": "external",
            "summary": "The ID of the VPC the subnet is in."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26306
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation"
            },
            "remarks": "If you specify `AssignIpv6AddressOnCreation` , you must also specify `Ipv6CidrBlock` .\n\nIf you specify `AssignIpv6AddressOnCreation` , you cannot specify `MapPublicIpOnLaunch` .",
            "stability": "external",
            "summary": "Indicates whether a network interface created in this subnet receives an IPv6 address. The default value is `false` ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26317
          },
          "name": "assignIpv6AddressOnCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone"
            },
            "remarks": "If you update this property, you must also update the `CidrBlock` property.",
            "stability": "external",
            "summary": "The Availability Zone of the subnet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26326
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzoneid"
            },
            "stability": "external",
            "summary": "The AZ ID of the subnet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26333
          },
          "name": "availabilityZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock"
            },
            "remarks": "If you update this property, we create a new subnet, and then delete the existing one.",
            "stability": "external",
            "summary": "The IPv4 CIDR block assigned to the subnet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26342
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-enabledns64"
            },
            "remarks": "For more information, see [DNS64 and NAT64](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-nat64-dns64) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26349
          },
          "name": "enableDns64",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock"
            },
            "remarks": "If you specify `AssignIpv6AddressOnCreation` , you must also specify `Ipv6CidrBlock` .",
            "stability": "external",
            "summary": "The IPv6 CIDR block."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26358
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6native"
            },
            "remarks": "For more information, see [Subnet basics](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#subnet-basics) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "Indicates whether this is an IPv6 only subnet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26365
          },
          "name": "ipv6Native",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch"
            },
            "remarks": "If you specify `MapPublicIpOnLaunch` , you cannot specify `AssignIpv6AddressOnCreation` .",
            "stability": "external",
            "summary": "Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is `false` ."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26374
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-outpostarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Outpost."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26381
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnet"
    },
    "@aws-cdk/aws-ec2.CfnSubnetCidrBlock": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetCidrBlock",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates a CIDR block with your subnet. You can associate a single IPv6 CIDR block with your subnet. An IPv6 CIDR block must have a prefix length of /64.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SubnetCidrBlock`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSubnetCidrBlock = new ec2.CfnSubnetCidrBlock(this, 'MyCfnSubnetCidrBlock', {\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  subnetId: 'subnetId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlock",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SubnetCidrBlock`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26596
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26548
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26611
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26623
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetCidrBlock",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26552
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26616
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock"
            },
            "remarks": "This parameter is required for an IPv6 only subnet.",
            "stability": "external",
            "summary": "The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26580
          },
          "name": "ipv6CidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26587
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetCidrBlock"
    },
    "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSubnetCidrBlock`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSubnetCidrBlockProps: ec2.CfnSubnetCidrBlockProps = {\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26469
      },
      "name": "CfnSubnetCidrBlockProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock"
            },
            "remarks": "This parameter is required for an IPv6 only subnet.",
            "stability": "external",
            "summary": "The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26478
          },
          "name": "ipv6CidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26485
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetCidrBlockProps"
    },
    "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetNetworkAclAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates a subnet with a network ACL. For more information, see [ReplaceNetworkAclAssociation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceNetworkAclAssociation.html) in the *Amazon EC2 API Reference* .\n\nWhen `AWS::EC2::SubnetNetworkAclAssociation` resources are created during create or update operations, AWS CloudFormation adopts existing resources that share the same key properties (the properties that contribute to uniquely identify the resource). However, if the operation fails and rolls back, AWS CloudFormation deletes the previously out-of-band resources. You can protect against this behavior by using `Retain` deletion policies. For more information, see [DeletionPolicy Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SubnetNetworkAclAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSubnetNetworkAclAssociation = new ec2.CfnSubnetNetworkAclAssociation(this, 'MyCfnSubnetNetworkAclAssociation', {\n  networkAclId: 'networkAclId',\n  subnetId: 'subnetId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SubnetNetworkAclAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26767
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26715
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26783
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26795
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetNetworkAclAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26719
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AssociationId"
            },
            "stability": "external",
            "summary": "Returns the value of this object's [SubnetId](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html) property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26744
          },
          "name": "attrAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26788
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid"
            },
            "stability": "external",
            "summary": "The ID of the network ACL."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26751
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26758
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetNetworkAclAssociation"
    },
    "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSubnetNetworkAclAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSubnetNetworkAclAssociationProps: ec2.CfnSubnetNetworkAclAssociationProps = {\n  networkAclId: 'networkAclId',\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26636
      },
      "name": "CfnSubnetNetworkAclAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid"
            },
            "stability": "external",
            "summary": "The ID of the network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26643
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26650
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetNetworkAclAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSubnet`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const privateDnsNameOptionsOnLaunch: any;\nconst cfnSubnetProps: ec2.CfnSubnetProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  assignIpv6AddressOnCreation: false,\n  availabilityZone: 'availabilityZone',\n  availabilityZoneId: 'availabilityZoneId',\n  cidrBlock: 'cidrBlock',\n  enableDns64: false,\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  ipv6Native: false,\n  mapPublicIpOnLaunch: false,\n  outpostArn: 'outpostArn',\n  privateDnsNameOptionsOnLaunch: privateDnsNameOptionsOnLaunch,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26042
      },
      "name": "CfnSubnetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-vpcid"
            },
            "remarks": "If you update this property, you must also update the `CidrBlock` property.",
            "stability": "external",
            "summary": "The ID of the VPC the subnet is in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26051
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation"
            },
            "remarks": "If you specify `AssignIpv6AddressOnCreation` , you must also specify `Ipv6CidrBlock` .\n\nIf you specify `AssignIpv6AddressOnCreation` , you cannot specify `MapPublicIpOnLaunch` .",
            "stability": "external",
            "summary": "Indicates whether a network interface created in this subnet receives an IPv6 address. The default value is `false` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26062
          },
          "name": "assignIpv6AddressOnCreation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone"
            },
            "remarks": "If you update this property, you must also update the `CidrBlock` property.",
            "stability": "external",
            "summary": "The Availability Zone of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26071
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzoneid"
            },
            "stability": "external",
            "summary": "The AZ ID of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26078
          },
          "name": "availabilityZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock"
            },
            "remarks": "If you update this property, we create a new subnet, and then delete the existing one.",
            "stability": "external",
            "summary": "The IPv4 CIDR block assigned to the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26087
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-enabledns64"
            },
            "remarks": "For more information, see [DNS64 and NAT64](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-nat64-dns64) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26094
          },
          "name": "enableDns64",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock"
            },
            "remarks": "If you specify `AssignIpv6AddressOnCreation` , you must also specify `Ipv6CidrBlock` .",
            "stability": "external",
            "summary": "The IPv6 CIDR block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26103
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6native"
            },
            "remarks": "For more information, see [Subnet basics](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#subnet-basics) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "Indicates whether this is an IPv6 only subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26110
          },
          "name": "ipv6Native",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch"
            },
            "remarks": "If you specify `MapPublicIpOnLaunch` , you cannot specify `AssignIpv6AddressOnCreation` .",
            "stability": "external",
            "summary": "Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is `false` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26119
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-outpostarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Outpost."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26126
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-privatednsnameoptionsonlaunch"
            },
            "remarks": "For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *Amazon Elastic Compute Cloud User Guide* .",
            "stability": "external",
            "summary": "The hostname type for EC2 instances launched into this subnet and how DNS A and AAAA record queries to the instances should be handled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26133
          },
          "name": "privateDnsNameOptionsOnLaunch",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26140
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetProps"
    },
    "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::SubnetRouteTableAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates a subnet with a route table. The subnet and route table must be in the same VPC. This association causes traffic originating from the subnet to be routed according to the routes in the route table. A route table can be associated with multiple subnets. If you want to associate a route table with a VPC, see [AWS::EC2::RouteTable](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::SubnetRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSubnetRouteTableAssociation = new ec2.CfnSubnetRouteTableAssociation(this, 'MyCfnSubnetRouteTableAssociation', {\n  routeTableId: 'routeTableId',\n  subnetId: 'subnetId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::SubnetRouteTableAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 26941
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26887
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26957
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26969
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSubnetRouteTableAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26891
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the subnet route table association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26916
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26962
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-routetableid"
            },
            "remarks": "The physical ID changes when the route table ID is changed.",
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26925
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26932
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetRouteTableAssociation"
    },
    "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSubnetRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnSubnetRouteTableAssociationProps: ec2.CfnSubnetRouteTableAssociationProps = {\n  routeTableId: 'routeTableId',\n  subnetId: 'subnetId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26808
      },
      "name": "CfnSubnetRouteTableAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-routetableid"
            },
            "remarks": "The physical ID changes when the route table ID is changed.",
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26817
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26824
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnSubnetRouteTableAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilter": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TrafficMirrorFilter",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a Traffic Mirror filter.\n\nA Traffic Mirror filter is a set of rules that defines the traffic to mirror.\n\nBy default, no traffic is mirrored. To mirror traffic, use [AWS::EC2::TrafficMirrorFilterRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html) to add Traffic Mirror rules to the filter. The rules you add define what traffic gets mirrored.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TrafficMirrorFilter`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTrafficMirrorFilter = new ec2.CfnTrafficMirrorFilter(this, 'MyCfnTrafficMirrorFilter', /* all optional props */ {\n  description: 'description',\n  networkServices: ['networkServices'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilter",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TrafficMirrorFilter`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 27128
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27073
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27142
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27155
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTrafficMirrorFilter",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27077
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27147
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-tags"
            },
            "stability": "external",
            "summary": "The tags to assign to a Traffic Mirror filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27119
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-description"
            },
            "stability": "external",
            "summary": "The description of the Traffic Mirror filter."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27103
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-networkservices"
            },
            "remarks": "Valid values are `amazon-dns` .",
            "stability": "external",
            "summary": "The network service traffic that is associated with the Traffic Mirror filter."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27112
          },
          "name": "networkServices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilter"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTrafficMirrorFilter`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTrafficMirrorFilterProps: ec2.CfnTrafficMirrorFilterProps = {\n  description: 'description',\n  networkServices: ['networkServices'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 26982
      },
      "name": "CfnTrafficMirrorFilterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-description"
            },
            "stability": "external",
            "summary": "The description of the Traffic Mirror filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26989
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-networkservices"
            },
            "remarks": "Valid values are `amazon-dns` .",
            "stability": "external",
            "summary": "The network service traffic that is associated with the Traffic Mirror filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 26998
          },
          "name": "networkServices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-tags"
            },
            "stability": "external",
            "summary": "The tags to assign to a Traffic Mirror filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27005
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilterProps"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TrafficMirrorFilterRule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a Traffic Mirror filter rule.\n\nA Traffic Mirror rule defines the Traffic Mirror source traffic to mirror.\n\nYou need the Traffic Mirror filter ID when you create the rule.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TrafficMirrorFilterRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTrafficMirrorFilterRule = new ec2.CfnTrafficMirrorFilterRule(this, 'MyCfnTrafficMirrorFilterRule', {\n  destinationCidrBlock: 'destinationCidrBlock',\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n  sourceCidrBlock: 'sourceCidrBlock',\n  trafficDirection: 'trafficDirection',\n  trafficMirrorFilterId: 'trafficMirrorFilterId',\n\n  // the properties below are optional\n  description: 'description',\n  destinationPortRange: {\n    fromPort: 123,\n    toPort: 123,\n  },\n  protocol: 123,\n  sourcePortRange: {\n    fromPort: 123,\n    toPort: 123,\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TrafficMirrorFilterRule`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 27439
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27335
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27466
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27486
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTrafficMirrorFilterRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27339
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27471
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationcidrblock"
            },
            "stability": "external",
            "summary": "The destination CIDR block to assign to the Traffic Mirror rule."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27365
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-ruleaction"
            },
            "stability": "external",
            "summary": "The action to take on the filtered traffic."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27372
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-rulenumber"
            },
            "remarks": "This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.",
            "stability": "external",
            "summary": "The number of the Traffic Mirror rule."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27379
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourcecidrblock"
            },
            "stability": "external",
            "summary": "The source CIDR block to assign to the Traffic Mirror rule."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27386
          },
          "name": "sourceCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficdirection"
            },
            "stability": "external",
            "summary": "The type of traffic."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27393
          },
          "name": "trafficDirection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorfilterid"
            },
            "stability": "external",
            "summary": "The ID of the filter that this rule is associated with."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27400
          },
          "name": "trafficMirrorFilterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-description"
            },
            "stability": "external",
            "summary": "The description of the Traffic Mirror rule."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27407
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationportrange"
            },
            "stability": "external",
            "summary": "The destination port range."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27414
          },
          "name": "destinationPortRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-protocol"
            },
            "remarks": "For information about the protocol value, see [Protocol Numbers](https://docs.aws.amazon.com/https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.",
            "stability": "external",
            "summary": "The protocol, for example UDP, to assign to the Traffic Mirror rule."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27423
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourceportrange"
            },
            "stability": "external",
            "summary": "The source port range."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27430
          },
          "name": "sourcePortRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilterRule"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the Traffic Mirror port range.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst trafficMirrorPortRangeProperty: ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty = {\n  fromPort: 123,\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27500
      },
      "name": "TrafficMirrorPortRangeProperty",
      "namespace": "CfnTrafficMirrorFilterRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorportrange-fromport"
            },
            "remarks": "This applies to the TCP and UDP protocols.",
            "stability": "external",
            "summary": "The start of the Traffic Mirror port range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27506
          },
          "name": "fromPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-trafficmirrorfilterrule-trafficmirrorportrange.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorportrange-toport"
            },
            "remarks": "This applies to the TCP and UDP protocols.",
            "stability": "external",
            "summary": "The end of the Traffic Mirror port range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27512
          },
          "name": "toPort",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRuleProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTrafficMirrorFilterRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTrafficMirrorFilterRuleProps: ec2.CfnTrafficMirrorFilterRuleProps = {\n  destinationCidrBlock: 'destinationCidrBlock',\n  ruleAction: 'ruleAction',\n  ruleNumber: 123,\n  sourceCidrBlock: 'sourceCidrBlock',\n  trafficDirection: 'trafficDirection',\n  trafficMirrorFilterId: 'trafficMirrorFilterId',\n\n  // the properties below are optional\n  description: 'description',\n  destinationPortRange: {\n    fromPort: 123,\n    toPort: 123,\n  },\n  protocol: 123,\n  sourcePortRange: {\n    fromPort: 123,\n    toPort: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27168
      },
      "name": "CfnTrafficMirrorFilterRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationcidrblock"
            },
            "stability": "external",
            "summary": "The destination CIDR block to assign to the Traffic Mirror rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27175
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-ruleaction"
            },
            "stability": "external",
            "summary": "The action to take on the filtered traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27182
          },
          "name": "ruleAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-rulenumber"
            },
            "remarks": "This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.",
            "stability": "external",
            "summary": "The number of the Traffic Mirror rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27189
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourcecidrblock"
            },
            "stability": "external",
            "summary": "The source CIDR block to assign to the Traffic Mirror rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27196
          },
          "name": "sourceCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficdirection"
            },
            "stability": "external",
            "summary": "The type of traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27203
          },
          "name": "trafficDirection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorfilterid"
            },
            "stability": "external",
            "summary": "The ID of the filter that this rule is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27210
          },
          "name": "trafficMirrorFilterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-description"
            },
            "stability": "external",
            "summary": "The description of the Traffic Mirror rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27217
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationportrange"
            },
            "stability": "external",
            "summary": "The destination port range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27224
          },
          "name": "destinationPortRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-protocol"
            },
            "remarks": "For information about the protocol value, see [Protocol Numbers](https://docs.aws.amazon.com/https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.",
            "stability": "external",
            "summary": "The protocol, for example UDP, to assign to the Traffic Mirror rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27233
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourceportrange"
            },
            "stability": "external",
            "summary": "The source port range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27240
          },
          "name": "sourcePortRange",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorFilterRule.TrafficMirrorPortRangeProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorFilterRuleProps"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorSession": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TrafficMirrorSession",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a Traffic Mirror session.\n\nA Traffic Mirror session actively copies packets from a Traffic Mirror source to a Traffic Mirror target. Create a filter, and then assign it to the session to define a subset of the traffic to mirror, for example all TCP traffic.\n\nThe Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in a different VPC connected via VPC peering or a transit gateway.\n\nBy default, no traffic is mirrored. Use [AWS::EC2::TrafficMirrorFilterRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html) to specify filter rules that specify the traffic to mirror.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TrafficMirrorSession`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTrafficMirrorSession = new ec2.CfnTrafficMirrorSession(this, 'MyCfnTrafficMirrorSession', {\n  networkInterfaceId: 'networkInterfaceId',\n  sessionNumber: 123,\n  trafficMirrorFilterId: 'trafficMirrorFilterId',\n  trafficMirrorTargetId: 'trafficMirrorTargetId',\n\n  // the properties below are optional\n  description: 'description',\n  packetLength: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  virtualNetworkId: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorSession",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TrafficMirrorSession`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 27818
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorSessionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27726
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27841
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27859
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTrafficMirrorSession",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27730
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27846
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-tags"
            },
            "stability": "external",
            "summary": "The tags to assign to a Traffic Mirror session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27802
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the source network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27756
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-sessionnumber"
            },
            "remarks": "The first session with a matching filter is the one that mirrors the packets.\n\nValid values are 1-32766.",
            "stability": "external",
            "summary": "The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27765
          },
          "name": "sessionNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrorfilterid"
            },
            "stability": "external",
            "summary": "The ID of the Traffic Mirror filter."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27772
          },
          "name": "trafficMirrorFilterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrortargetid"
            },
            "stability": "external",
            "summary": "The ID of the Traffic Mirror target."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27779
          },
          "name": "trafficMirrorTargetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-description"
            },
            "stability": "external",
            "summary": "The description of the Traffic Mirror session."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27786
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-packetlength"
            },
            "remarks": "These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.\n\nIf you do not want to mirror the entire packet, use the `PacketLength` parameter to specify the number of bytes in each packet to mirror.",
            "stability": "external",
            "summary": "The number of bytes in each packet to mirror."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27795
          },
          "name": "packetLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-virtualnetworkid"
            },
            "remarks": "For more information about the VXLAN protocol, see [RFC 7348](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc7348) . If you do not specify a `VirtualNetworkId` , an account-wide unique id is chosen at random.",
            "stability": "external",
            "summary": "The VXLAN ID for the Traffic Mirror session."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27809
          },
          "name": "virtualNetworkId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorSession"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorSessionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTrafficMirrorSession`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTrafficMirrorSessionProps: ec2.CfnTrafficMirrorSessionProps = {\n  networkInterfaceId: 'networkInterfaceId',\n  sessionNumber: 123,\n  trafficMirrorFilterId: 'trafficMirrorFilterId',\n  trafficMirrorTargetId: 'trafficMirrorTargetId',\n\n  // the properties below are optional\n  description: 'description',\n  packetLength: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  virtualNetworkId: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorSessionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27577
      },
      "name": "CfnTrafficMirrorSessionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The ID of the source network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27584
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-sessionnumber"
            },
            "remarks": "The first session with a matching filter is the one that mirrors the packets.\n\nValid values are 1-32766.",
            "stability": "external",
            "summary": "The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27593
          },
          "name": "sessionNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrorfilterid"
            },
            "stability": "external",
            "summary": "The ID of the Traffic Mirror filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27600
          },
          "name": "trafficMirrorFilterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrortargetid"
            },
            "stability": "external",
            "summary": "The ID of the Traffic Mirror target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27607
          },
          "name": "trafficMirrorTargetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-description"
            },
            "stability": "external",
            "summary": "The description of the Traffic Mirror session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27614
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-packetlength"
            },
            "remarks": "These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.\n\nIf you do not want to mirror the entire packet, use the `PacketLength` parameter to specify the number of bytes in each packet to mirror.",
            "stability": "external",
            "summary": "The number of bytes in each packet to mirror."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27623
          },
          "name": "packetLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-tags"
            },
            "stability": "external",
            "summary": "The tags to assign to a Traffic Mirror session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27630
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-virtualnetworkid"
            },
            "remarks": "For more information about the VXLAN protocol, see [RFC 7348](https://docs.aws.amazon.com/https://tools.ietf.org/html/rfc7348) . If you do not specify a `VirtualNetworkId` , an account-wide unique id is chosen at random.",
            "stability": "external",
            "summary": "The VXLAN ID for the Traffic Mirror session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27637
          },
          "name": "virtualNetworkId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorSessionProps"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorTarget": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TrafficMirrorTarget",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a target for your Traffic Mirror session.\n\nA Traffic Mirror target is the destination for mirrored traffic. The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in different VPCs connected via VPC peering or a transit gateway.\n\nA Traffic Mirror target can be a network interface, or a Network Load Balancer.\n\nTo use the target in a Traffic Mirror session, use [AWS::EC2::TrafficMirrorSession](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TrafficMirrorTarget`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTrafficMirrorTarget = new ec2.CfnTrafficMirrorTarget(this, 'MyCfnTrafficMirrorTarget', /* all optional props */ {\n  description: 'description',\n  networkInterfaceId: 'networkInterfaceId',\n  networkLoadBalancerArn: 'networkLoadBalancerArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorTarget",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TrafficMirrorTarget`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 28033
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorTargetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27973
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28048
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28062
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTrafficMirrorTarget",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27977
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28053
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-tags"
            },
            "stability": "external",
            "summary": "The tags to assign to the Traffic Mirror target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28024
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-description"
            },
            "stability": "external",
            "summary": "The description of the Traffic Mirror target."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28003
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The network interface ID that is associated with the target."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28010
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkloadbalancerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28017
          },
          "name": "networkLoadBalancerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorTarget"
    },
    "@aws-cdk/aws-ec2.CfnTrafficMirrorTargetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTrafficMirrorTarget`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTrafficMirrorTargetProps: ec2.CfnTrafficMirrorTargetProps = {\n  description: 'description',\n  networkInterfaceId: 'networkInterfaceId',\n  networkLoadBalancerArn: 'networkLoadBalancerArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTrafficMirrorTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 27872
      },
      "name": "CfnTrafficMirrorTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-description"
            },
            "stability": "external",
            "summary": "The description of the Traffic Mirror target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27879
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The network interface ID that is associated with the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27886
          },
          "name": "networkInterfaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkloadbalancerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27893
          },
          "name": "networkLoadBalancerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-tags"
            },
            "stability": "external",
            "summary": "The tags to assign to the Traffic Mirror target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 27900
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTrafficMirrorTargetProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a transit gateway.\n\nYou can use a transit gateway to interconnect your virtual private clouds (VPC) and on-premises networks. After the transit gateway enters the `available` state, you can attach your VPCs and VPN connections to the transit gateway.\n\nTo attach your VPCs, use [AWS::EC2::TransitGatewayAttachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html) .\n\nTo attach a VPN connection, use [AWS::EC2::CustomerGateway](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html) to create a customer gateway and specify the ID of the customer gateway and the ID of the transit gateway in a call to [AWS::EC2::VPNConnection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html) .\n\nWhen you create a transit gateway, we create a default transit gateway route table and use it as the default association route table and the default propagation route table. You can use [AWS::EC2::TransitGatewayRouteTable](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html) to create additional transit gateway route tables. If you disable automatic route propagation, we do not create a default transit gateway route table. You can use [AWS::EC2::TransitGatewayRouteTablePropagation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html) to propagate routes from a resource attachment to a transit gateway route table. If you disable automatic associations, you can use [AWS::EC2::TransitGatewayRouteTableAssociation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html) to associate a resource attachment with a transit gateway route table.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGateway = new ec2.CfnTransitGateway(this, 'MyCfnTransitGateway', /* all optional props */ {\n  amazonSideAsn: 123,\n  associationDefaultRouteTableId: 'associationDefaultRouteTableId',\n  autoAcceptSharedAttachments: 'autoAcceptSharedAttachments',\n  defaultRouteTableAssociation: 'defaultRouteTableAssociation',\n  defaultRouteTablePropagation: 'defaultRouteTablePropagation',\n  description: 'description',\n  dnsSupport: 'dnsSupport',\n  multicastSupport: 'multicastSupport',\n  propagationDefaultRouteTableId: 'propagationDefaultRouteTableId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayCidrBlocks: ['transitGatewayCidrBlocks'],\n  vpnEcmpSupport: 'vpnEcmpSupport',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 28380
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 28258
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28404
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28426
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28262
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28287
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28409
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags"
            },
            "stability": "external",
            "summary": "The tags for the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28357
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn"
            },
            "remarks": "The range is 64512 to 65534 for 16-bit ASNs. The default is 64512.",
            "stability": "external",
            "summary": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28294
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-associationdefaultroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the default association route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28301
          },
          "name": "associationDefaultRouteTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments"
            },
            "remarks": "Disabled by default.",
            "stability": "external",
            "summary": "Enable or disable automatic acceptance of attachment requests."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28308
          },
          "name": "autoAcceptSharedAttachments",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation"
            },
            "remarks": "Enabled by default.",
            "stability": "external",
            "summary": "Enable or disable automatic association with the default association route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28315
          },
          "name": "defaultRouteTableAssociation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation"
            },
            "remarks": "Enabled by default.",
            "stability": "external",
            "summary": "Enable or disable automatic propagation of routes to the default propagation route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28322
          },
          "name": "defaultRouteTablePropagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description"
            },
            "stability": "external",
            "summary": "The description of the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28329
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport"
            },
            "remarks": "Enabled by default.",
            "stability": "external",
            "summary": "Enable or disable DNS support."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28336
          },
          "name": "dnsSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-multicastsupport"
            },
            "stability": "external",
            "summary": "Indicates whether multicast is enabled on the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28343
          },
          "name": "multicastSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-propagationdefaultroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the default propagation route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28350
          },
          "name": "propagationDefaultRouteTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-transitgatewaycidrblocks"
            },
            "stability": "external",
            "summary": "The transit gateway CIDR blocks."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28364
          },
          "name": "transitGatewayCidrBlocks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport"
            },
            "remarks": "Enabled by default.",
            "stability": "external",
            "summary": "Enable or disable Equal Cost Multipath Protocol support."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28371
          },
          "name": "vpnEcmpSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGateway"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Attaches a VPC to a transit gateway.\n\nIf you attach a VPC with a CIDR range that overlaps the CIDR range of a VPC that is already attached, the new VPC CIDR range is not propagated to the default propagation route table.\n\nTo send VPC traffic to an attached transit gateway, add a route to the VPC route table using [AWS::EC2::Route](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayAttachment = new ec2.CfnTransitGatewayAttachment(this, 'MyCfnTransitGatewayAttachment', {\n  subnetIds: ['subnetIds'],\n  transitGatewayId: 'transitGatewayId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 28601
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 28541
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28619
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28633
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28545
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28624
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags"
            },
            "stability": "external",
            "summary": "The tags for the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28592
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids"
            },
            "remarks": "You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.",
            "stability": "external",
            "summary": "The IDs of one or more subnets."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28571
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28578
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28585
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayAttachment"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayAttachmentProps: ec2.CfnTransitGatewayAttachmentProps = {\n  subnetIds: ['subnetIds'],\n  transitGatewayId: 'transitGatewayId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 28439
      },
      "name": "CfnTransitGatewayAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids"
            },
            "remarks": "You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.",
            "stability": "external",
            "summary": "The IDs of one or more subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28446
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28453
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28460
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags"
            },
            "stability": "external",
            "summary": "The tags for the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28467
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayConnect": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayConnect",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a Connect attachment from a specified transit gateway attachment. A Connect attachment is a GRE-based tunnel attachment that you can use to establish a connection between a transit gateway and an appliance.\n\nA Connect attachment uses an existing VPC or AWS Direct Connect attachment as the underlying transport mechanism.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayConnect`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayConnect = new ec2.CfnTransitGatewayConnect(this, 'MyCfnTransitGatewayConnect', {\n  options: {\n    protocol: 'protocol',\n  },\n  transportTransitGatewayAttachmentId: 'transportTransitGatewayAttachmentId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnect",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayConnect`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 28816
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnectProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 28737
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28836
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28849
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayConnect",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28741
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The creation time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28766
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external",
            "summary": "The state of the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28772
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayAttachmentId"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28778
          },
          "name": "attrTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayId"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28784
          },
          "name": "attrTransitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28841
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-tags"
            },
            "stability": "external",
            "summary": "The tags for the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28807
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-options"
            },
            "remarks": "- protocol (gre)",
            "stability": "external",
            "summary": "The Connect attachment options."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28793
          },
          "name": "options",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-transporttransitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the attachment from which the Connect attachment was created."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28800
          },
          "name": "transportTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayConnect"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-transitgatewayconnect-transitgatewayconnectoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Describes the Connect attachment options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst transitGatewayConnectOptionsProperty: ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty = {\n  protocol: 'protocol',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 28863
      },
      "name": "TransitGatewayConnectOptionsProperty",
      "namespace": "CfnTransitGatewayConnect",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-transitgatewayconnect-transitgatewayconnectoptions.html#cfn-ec2-transitgatewayconnect-transitgatewayconnectoptions-protocol"
            },
            "stability": "external",
            "summary": "The tunnel protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28869
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayConnectProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayConnect`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayConnectProps: ec2.CfnTransitGatewayConnectProps = {\n  options: {\n    protocol: 'protocol',\n  },\n  transportTransitGatewayAttachmentId: 'transportTransitGatewayAttachmentId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 28646
      },
      "name": "CfnTransitGatewayConnectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-options"
            },
            "remarks": "- protocol (gre)",
            "stability": "external",
            "summary": "The Connect attachment options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28655
          },
          "name": "options",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayConnect.TransitGatewayConnectOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-transporttransitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the attachment from which the Connect attachment was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28662
          },
          "name": "transportTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-tags"
            },
            "stability": "external",
            "summary": "The tags for the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28669
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayConnectProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomain": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayMulticastDomain",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a multicast domain using the specified transit gateway.\n\nThe transit gateway must be in the available state before you create a domain.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayMulticastDomain`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const options: any;\nconst cfnTransitGatewayMulticastDomain = new ec2.CfnTransitGatewayMulticastDomain(this, 'MyCfnTransitGatewayMulticastDomain', {\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  options: options,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomain",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayMulticastDomain`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 29102
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29021
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29121
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29134
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayMulticastDomain",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29025
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The time the multicast domain was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29050
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external",
            "summary": "The state of the multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29056
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayMulticastDomainArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29062
          },
          "name": "attrTransitGatewayMulticastDomainArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayMulticastDomainId"
            },
            "stability": "external",
            "summary": "The ID of the multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29068
          },
          "name": "attrTransitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29126
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-tags"
            },
            "stability": "external",
            "summary": "The tags for the transit gateway multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29093
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-options"
            },
            "remarks": "- AutoAcceptSharedAssociations (enable | disable)\n- Igmpv2Support (enable | disable)\n- StaticSourcesSupport (enable | disable)",
            "stability": "external",
            "summary": "The options for the transit gateway multicast domain."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29086
          },
          "name": "options",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29075
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastDomain"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayMulticastDomainAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates the specified subnets and transit gateway attachments with the specified transit gateway multicast domain.\n\nThe transit gateway attachment must be in the available state before you can add a resource.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayMulticastDomainAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayMulticastDomainAssociation = new ec2.CfnTransitGatewayMulticastDomainAssociation(this, 'MyCfnTransitGatewayMulticastDomainAssociation', {\n  subnetId: 'subnetId',\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayMulticastDomainAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 29308
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29237
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29328
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29341
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayMulticastDomainAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29241
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceId"
            },
            "stability": "external",
            "summary": "The ID of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29266
          },
          "name": "attrResourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceType"
            },
            "stability": "external",
            "summary": "The type of resource, for example a VPC attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29272
          },
          "name": "attrResourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "stability": "external",
            "summary": "The state of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29278
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29333
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-subnetid"
            },
            "stability": "external",
            "summary": "The IDs of the subnets to associate with the transit gateway multicast domain."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29285
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway attachment."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29292
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway multicast domain."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29299
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastDomainAssociation"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayMulticastDomainAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayMulticastDomainAssociationProps: ec2.CfnTransitGatewayMulticastDomainAssociationProps = {\n  subnetId: 'subnetId',\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29147
      },
      "name": "CfnTransitGatewayMulticastDomainAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-subnetid"
            },
            "stability": "external",
            "summary": "The IDs of the subnets to associate with the transit gateway multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29154
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29161
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29168
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastDomainAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayMulticastDomain`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const options: any;\nconst cfnTransitGatewayMulticastDomainProps: ec2.CfnTransitGatewayMulticastDomainProps = {\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  options: options,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastDomainProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 28929
      },
      "name": "CfnTransitGatewayMulticastDomainProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28936
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-options"
            },
            "remarks": "- AutoAcceptSharedAssociations (enable | disable)\n- Igmpv2Support (enable | disable)\n- StaticSourcesSupport (enable | disable)",
            "stability": "external",
            "summary": "The options for the transit gateway multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28947
          },
          "name": "options",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-tags"
            },
            "stability": "external",
            "summary": "The tags for the transit gateway multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28954
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastDomainProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMember": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayMulticastGroupMember",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Registers members (network interfaces) with the transit gateway multicast group. A member is a network interface associated with a supported EC2 instance that receives multicast traffic. For information about supported instances, see [Multicast Consideration](https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits) in *Amazon VPC Transit Gateways* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayMulticastGroupMember`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayMulticastGroupMember = new ec2.CfnTransitGatewayMulticastGroupMember(this, 'MyCfnTransitGatewayMulticastGroupMember', {\n  groupIpAddress: 'groupIpAddress',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMember",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayMulticastGroupMember`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 29543
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMemberProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29442
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29568
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29581
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayMulticastGroupMember",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29446
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupMember"
            },
            "stability": "external",
            "summary": "Information about the registered transit gateway multicast domain group members."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29471
          },
          "name": "attrGroupMember",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupSource"
            },
            "stability": "external",
            "summary": "Indicates that the resource is a transit gateway multicast domain group member."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29477
          },
          "name": "attrGroupSource",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "MemberType"
            },
            "stability": "external",
            "summary": "The type of group member, for example static."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29483
          },
          "name": "attrMemberType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceId"
            },
            "stability": "external",
            "summary": "The ID of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29489
          },
          "name": "attrResourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceType"
            },
            "stability": "external",
            "summary": "The type of resource, for example a VPC attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29495
          },
          "name": "attrResourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SourceType"
            },
            "stability": "external",
            "summary": "The type of source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29501
          },
          "name": "attrSourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SubnetId"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29507
          },
          "name": "attrSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayAttachmentId"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29513
          },
          "name": "attrTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29573
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-groupipaddress"
            },
            "stability": "external",
            "summary": "The IP address assigned to the transit gateway multicast group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29520
          },
          "name": "groupIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The group members' network interface IDs to register with the transit gateway multicast group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29527
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway multicast domain."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29534
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastGroupMember"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMemberProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayMulticastGroupMember`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayMulticastGroupMemberProps: ec2.CfnTransitGatewayMulticastGroupMemberProps = {\n  groupIpAddress: 'groupIpAddress',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupMemberProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29354
      },
      "name": "CfnTransitGatewayMulticastGroupMemberProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-groupipaddress"
            },
            "stability": "external",
            "summary": "The IP address assigned to the transit gateway multicast group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29361
          },
          "name": "groupIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The group members' network interface IDs to register with the transit gateway multicast group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29368
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29375
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastGroupMemberProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayMulticastGroupSource",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Registers sources (network interfaces) with the specified transit gateway multicast domain.\n\nA multicast source is a network interface attached to a supported instance that sends multicast traffic. For information about supported instances, see [Multicast Considerations](https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits) in *Amazon VPC Transit Gateways* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayMulticastGroupSource`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayMulticastGroupSource = new ec2.CfnTransitGatewayMulticastGroupSource(this, 'MyCfnTransitGatewayMulticastGroupSource', {\n  groupIpAddress: 'groupIpAddress',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSource",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayMulticastGroupSource`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 29785
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29684
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29810
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29823
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayMulticastGroupSource",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29688
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupMember"
            },
            "stability": "external",
            "summary": "Information about the registered transit gateway multicast domain group members."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29713
          },
          "name": "attrGroupMember",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GroupSource"
            },
            "stability": "external",
            "summary": "Indicates that the resource is a transit gateway group member."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29719
          },
          "name": "attrGroupSource",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "MemberType"
            },
            "stability": "external",
            "summary": "The type of group member, for example static."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29725
          },
          "name": "attrMemberType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceId"
            },
            "stability": "external",
            "summary": "The ID of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29731
          },
          "name": "attrResourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResourceType"
            },
            "stability": "external",
            "summary": "The type of resource, for example a VPC attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29737
          },
          "name": "attrResourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SourceType"
            },
            "stability": "external",
            "summary": "The type of source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29743
          },
          "name": "attrSourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SubnetId"
            },
            "stability": "external",
            "summary": "The ID of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29749
          },
          "name": "attrSubnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayAttachmentId"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29755
          },
          "name": "attrTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29815
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-groupipaddress"
            },
            "stability": "external",
            "summary": "The IP address assigned to the transit gateway multicast group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29762
          },
          "name": "groupIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The group sources' network interface IDs to register with the transit gateway multicast group."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29769
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway multicast domain."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29776
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastGroupSource"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayMulticastGroupSource`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayMulticastGroupSourceProps: ec2.CfnTransitGatewayMulticastGroupSourceProps = {\n  groupIpAddress: 'groupIpAddress',\n  networkInterfaceId: 'networkInterfaceId',\n  transitGatewayMulticastDomainId: 'transitGatewayMulticastDomainId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayMulticastGroupSourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29594
      },
      "name": "CfnTransitGatewayMulticastGroupSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-groupipaddress"
            },
            "stability": "external",
            "summary": "The IP address assigned to the transit gateway multicast group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29601
          },
          "name": "groupIpAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-networkinterfaceid"
            },
            "stability": "external",
            "summary": "The group sources' network interface IDs to register with the transit gateway multicast group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29608
          },
          "name": "networkInterfaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-transitgatewaymulticastdomainid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway multicast domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29615
          },
          "name": "transitGatewayMulticastDomainId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayMulticastGroupSourceProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayPeeringAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Requests a transit gateway peering attachment between the specified transit gateway (requester) and a peer transit gateway (accepter). The transit gateways must be in different Regions. The peer transit gateway can be in your account or a different AWS account .\n\nAfter you create the peering attachment, the owner of the accepter transit gateway must accept the attachment request.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayPeeringAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayPeeringAttachment = new ec2.CfnTransitGatewayPeeringAttachment(this, 'MyCfnTransitGatewayPeeringAttachment', {\n  peerAccountId: 'peerAccountId',\n  peerRegion: 'peerRegion',\n  peerTransitGatewayId: 'peerTransitGatewayId',\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayPeeringAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 30032
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29947
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30055
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30070
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayPeeringAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29951
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The time the transit gateway peering attachment was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29976
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "State"
            },
            "remarks": "Note that the `initiating` state has been deprecated.",
            "stability": "external",
            "summary": "The state of the transit gateway peering attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29982
          },
          "name": "attrState",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TransitGatewayAttachmentId"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway peering attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29988
          },
          "name": "attrTransitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30060
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-tags"
            },
            "stability": "external",
            "summary": "The tags for the transit gateway peering attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30023
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peeraccountid"
            },
            "stability": "external",
            "summary": "The ID of the AWS account that owns the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29995
          },
          "name": "peerAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peerregion"
            },
            "stability": "external",
            "summary": "The Region of the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30002
          },
          "name": "peerRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peertransitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30009
          },
          "name": "peerTransitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway peering attachment."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30016
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayPeeringAttachment"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayPeeringAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayPeeringAttachmentProps: ec2.CfnTransitGatewayPeeringAttachmentProps = {\n  peerAccountId: 'peerAccountId',\n  peerRegion: 'peerRegion',\n  peerTransitGatewayId: 'peerTransitGatewayId',\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayPeeringAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 29836
      },
      "name": "CfnTransitGatewayPeeringAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peeraccountid"
            },
            "stability": "external",
            "summary": "The ID of the AWS account that owns the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29843
          },
          "name": "peerAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peerregion"
            },
            "stability": "external",
            "summary": "The Region of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29850
          },
          "name": "peerRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peertransitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29857
          },
          "name": "peerTransitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway peering attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29864
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-tags"
            },
            "stability": "external",
            "summary": "The tags for the transit gateway peering attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 29871
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayPeeringAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayProps: ec2.CfnTransitGatewayProps = {\n  amazonSideAsn: 123,\n  associationDefaultRouteTableId: 'associationDefaultRouteTableId',\n  autoAcceptSharedAttachments: 'autoAcceptSharedAttachments',\n  defaultRouteTableAssociation: 'defaultRouteTableAssociation',\n  defaultRouteTablePropagation: 'defaultRouteTablePropagation',\n  description: 'description',\n  dnsSupport: 'dnsSupport',\n  multicastSupport: 'multicastSupport',\n  propagationDefaultRouteTableId: 'propagationDefaultRouteTableId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayCidrBlocks: ['transitGatewayCidrBlocks'],\n  vpnEcmpSupport: 'vpnEcmpSupport',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 28075
      },
      "name": "CfnTransitGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn"
            },
            "remarks": "The range is 64512 to 65534 for 16-bit ASNs. The default is 64512.",
            "stability": "external",
            "summary": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28082
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-associationdefaultroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the default association route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28089
          },
          "name": "associationDefaultRouteTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments"
            },
            "remarks": "Disabled by default.",
            "stability": "external",
            "summary": "Enable or disable automatic acceptance of attachment requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28096
          },
          "name": "autoAcceptSharedAttachments",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation"
            },
            "remarks": "Enabled by default.",
            "stability": "external",
            "summary": "Enable or disable automatic association with the default association route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28103
          },
          "name": "defaultRouteTableAssociation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation"
            },
            "remarks": "Enabled by default.",
            "stability": "external",
            "summary": "Enable or disable automatic propagation of routes to the default propagation route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28110
          },
          "name": "defaultRouteTablePropagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description"
            },
            "stability": "external",
            "summary": "The description of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28117
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport"
            },
            "remarks": "Enabled by default.",
            "stability": "external",
            "summary": "Enable or disable DNS support."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28124
          },
          "name": "dnsSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-multicastsupport"
            },
            "stability": "external",
            "summary": "Indicates whether multicast is enabled on the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28131
          },
          "name": "multicastSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-propagationdefaultroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the default propagation route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28138
          },
          "name": "propagationDefaultRouteTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags"
            },
            "stability": "external",
            "summary": "The tags for the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28145
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-transitgatewaycidrblocks"
            },
            "stability": "external",
            "summary": "The transit gateway CIDR blocks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28152
          },
          "name": "transitGatewayCidrBlocks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport"
            },
            "remarks": "Enabled by default.",
            "stability": "external",
            "summary": "Enable or disable Equal Cost Multipath Protocol support."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 28159
          },
          "name": "vpnEcmpSupport",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRoute",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a static route for a transit gateway route table.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayRoute = new ec2.CfnTransitGatewayRoute(this, 'MyCfnTransitGatewayRoute', {\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n\n  // the properties below are optional\n  blackhole: false,\n  destinationCidrBlock: 'destinationCidrBlock',\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayRoute`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 30239
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30179
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30255
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30269
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30183
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30260
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30209
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole"
            },
            "stability": "external",
            "summary": "Indicates whether to drop traffic that matches this route."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30216
          },
          "name": "blackhole",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "The CIDR block used for destination matches."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30223
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the attachment."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30230
          },
          "name": "transitGatewayAttachmentId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRoute"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayRouteProps: ec2.CfnTransitGatewayRouteProps = {\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n\n  // the properties below are optional\n  blackhole: false,\n  destinationCidrBlock: 'destinationCidrBlock',\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30083
      },
      "name": "CfnTransitGatewayRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30090
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole"
            },
            "stability": "external",
            "summary": "Indicates whether to drop traffic that matches this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30097
          },
          "name": "blackhole",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock"
            },
            "stability": "external",
            "summary": "The CIDR block used for destination matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30104
          },
          "name": "destinationCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30111
          },
          "name": "transitGatewayAttachmentId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTable": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTable",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a route table for a transit gateway.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTable`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayRouteTable = new ec2.CfnTransitGatewayRouteTable(this, 'MyCfnTransitGatewayRouteTable', {\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTable",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTable`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 30404
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30358
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30418
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30430
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30362
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30423
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30395
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30388
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTable"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTableAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates the specified attachment with the specified transit gateway route table. You can associate one route table with an attachment.\n\nBefore you can update the route table associated with an attachment, you must disassociate the transit gateway route table that is currently associated with the attachment. First update the stack to remove the associated transit gateway route table, and then update the stack with the ID of the new transit gateway route table to associate.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayRouteTableAssociation = new ec2.CfnTransitGatewayRouteTableAssociation(this, 'MyCfnTransitGatewayRouteTableAssociation', {\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTableAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 30568
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30522
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30583
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30595
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTableAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30526
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30588
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the attachment."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30552
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the route table for the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30559
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTableAssociation"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayRouteTableAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayRouteTableAssociationProps: ec2.CfnTransitGatewayRouteTableAssociationProps = {\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30443
      },
      "name": "CfnTransitGatewayRouteTableAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30450
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the route table for the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30457
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTableAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayRouteTablePropagation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Enables the specified attachment to propagate routes to the specified propagation route table.\n\nFor more information about enabling transit gateway route propagation, see [EnableTransitGatewayRouteTablePropagation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableTransitGatewayRouteTablePropagation.html) in the *Amazon EC2 API Reference* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayRouteTablePropagation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayRouteTablePropagation = new ec2.CfnTransitGatewayRouteTablePropagation(this, 'MyCfnTransitGatewayRouteTablePropagation', {\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayRouteTablePropagation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 30733
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30687
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30748
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30760
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayRouteTablePropagation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30691
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30753
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the attachment."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30717
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the propagation route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30724
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTablePropagation"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayRouteTablePropagation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayRouteTablePropagationProps: ec2.CfnTransitGatewayRouteTablePropagationProps = {\n  transitGatewayAttachmentId: 'transitGatewayAttachmentId',\n  transitGatewayRouteTableId: 'transitGatewayRouteTableId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30608
      },
      "name": "CfnTransitGatewayRouteTablePropagationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid"
            },
            "stability": "external",
            "summary": "The ID of the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30615
          },
          "name": "transitGatewayAttachmentId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid"
            },
            "stability": "external",
            "summary": "The ID of the propagation route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30622
          },
          "name": "transitGatewayRouteTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTablePropagationProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayRouteTable`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnTransitGatewayRouteTableProps: ec2.CfnTransitGatewayRouteTableProps = {\n  transitGatewayId: 'transitGatewayId',\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30282
      },
      "name": "CfnTransitGatewayRouteTableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30289
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30296
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayRouteTableProps"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::TransitGatewayVpcAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a VPC attachment.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::TransitGatewayVpcAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const options: any;\nconst cfnTransitGatewayVpcAttachment = new ec2.CfnTransitGatewayVpcAttachment(this, 'MyCfnTransitGatewayVpcAttachment', {\n  subnetIds: ['subnetIds'],\n  transitGatewayId: 'transitGatewayId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  addSubnetIds: ['addSubnetIds'],\n  options: options,\n  removeSubnetIds: ['removeSubnetIds'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::TransitGatewayVpcAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 30996
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30905
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31018
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31035
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTransitGatewayVpcAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30909
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30934
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31023
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-tags"
            },
            "stability": "external",
            "summary": "The tags for the VPC attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30987
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-options"
            },
            "remarks": "- DnsSupport (enable | disable)\n- Ipv6Support (enable| disable)\n- ApplianceModeSupport (enable | disable)",
            "stability": "external",
            "summary": "The VPC attachment options in JSON or YAML."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30973
          },
          "name": "options",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-subnetids"
            },
            "stability": "external",
            "summary": "The IDs of the subnets."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30941
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30948
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30955
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-addsubnetids"
            },
            "remarks": "You can specify at most one subnet per Availability Zone.",
            "stability": "external",
            "summary": "The IDs of one or more subnets to add."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30962
          },
          "name": "addSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-removesubnetids"
            },
            "stability": "external",
            "summary": "The IDs of one or more subnets to remove."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30980
          },
          "name": "removeSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayVpcAttachment"
    },
    "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnTransitGatewayVpcAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const options: any;\nconst cfnTransitGatewayVpcAttachmentProps: ec2.CfnTransitGatewayVpcAttachmentProps = {\n  subnetIds: ['subnetIds'],\n  transitGatewayId: 'transitGatewayId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  addSubnetIds: ['addSubnetIds'],\n  options: options,\n  removeSubnetIds: ['removeSubnetIds'],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnTransitGatewayVpcAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 30773
      },
      "name": "CfnTransitGatewayVpcAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-subnetids"
            },
            "stability": "external",
            "summary": "The IDs of the subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30780
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-transitgatewayid"
            },
            "stability": "external",
            "summary": "The ID of the transit gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30787
          },
          "name": "transitGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30794
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-addsubnetids"
            },
            "remarks": "You can specify at most one subnet per Availability Zone.",
            "stability": "external",
            "summary": "The IDs of one or more subnets to add."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30801
          },
          "name": "addSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-options"
            },
            "remarks": "- DnsSupport (enable | disable)\n- Ipv6Support (enable| disable)\n- ApplianceModeSupport (enable | disable)",
            "stability": "external",
            "summary": "The VPC attachment options in JSON or YAML."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30812
          },
          "name": "options",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-removesubnetids"
            },
            "stability": "external",
            "summary": "The IDs of one or more subnets to remove."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30819
          },
          "name": "removeSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-tags"
            },
            "stability": "external",
            "summary": "The tags for the VPC attachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 30826
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnTransitGatewayVpcAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnVPC": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPC",
          "exampleMetadata": "infused",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html"
        },
        "example": "declare const cfnTemplate: cfn_inc.CfnInclude;\n\n// using from*Name()\nconst cfnBucket = cfnTemplate.getResource('Bucket') as s3.CfnBucket;\nconst bucket = s3.Bucket.fromBucketName(this, 'L2Bucket', cfnBucket.ref);\n\n// using from*Arn()\nconst cfnKey = cfnTemplate.getResource('Key') as kms.CfnKey;\nconst key = kms.Key.fromKeyArn(this, 'L2Key', cfnKey.attrArn);\n\n// using from*Attributes()\ndeclare const privateCfnSubnet1: ec2.CfnSubnet;\ndeclare const privateCfnSubnet2: ec2.CfnSubnet;\nconst cfnVpc = cfnTemplate.getResource('Vpc') as ec2.CfnVPC;\nconst vpc = ec2.Vpc.fromVpcAttributes(this, 'L2Vpc', {\n  vpcId: cfnVpc.ref,\n  availabilityZones: core.Fn.getAzs(),\n  privateSubnetIds: [privateCfnSubnet1.ref, privateCfnSubnet2.ref],\n});",
        "remarks": "Specifies a VPC with the specified IPv4 CIDR block. The smallest VPC you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses). For more information about how large to make your VPC, see [Overview of VPCs and subnets](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html) in the *Amazon Virtual Private Cloud User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPC`."
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPC",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPC`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 31299
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 31181
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31323
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31340
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPC",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31185
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CidrBlock"
            },
            "remarks": "For example, `10.0.0.0/16` .",
            "stability": "external",
            "summary": "The set of IP addresses for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31210
          },
          "name": "attrCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CidrBlockAssociations"
            },
            "remarks": "For example, `[ vpc-cidr-assoc-0280ab6b ]` .",
            "stability": "external",
            "summary": "The IPv4 CIDR block association IDs for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31216
          },
          "name": "attrCidrBlockAssociations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultNetworkAcl"
            },
            "remarks": "For example, `acl-814dafe3` .",
            "stability": "external",
            "summary": "The default network ACL ID that is associated with the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31222
          },
          "name": "attrDefaultNetworkAcl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DefaultSecurityGroup"
            },
            "remarks": "For example, `sg-b178e0d3` .",
            "stability": "external",
            "summary": "The default security group ID that is associated with the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31228
          },
          "name": "attrDefaultSecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Ipv6CidrBlocks"
            },
            "stability": "external",
            "summary": "The IPv6 CIDR blocks that are associated with the VPC, such as `[ 2001:db8:1234:1a00::/56 ]` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31234
          },
          "name": "attrIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31328
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags"
            },
            "stability": "external",
            "summary": "The tags for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31290
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock"
            },
            "stability": "external",
            "summary": "The primary IPv4 CIDR block for the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31241
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames"
            },
            "remarks": "If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support) .\n\nYou can only enable DNS hostnames if you've enabled DNS support.",
            "stability": "external",
            "summary": "Indicates whether the instances launched in the VPC get DNS hostnames."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31250
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport"
            },
            "remarks": "If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support) .",
            "stability": "external",
            "summary": "Indicates whether the DNS resolution is supported for the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31257
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy"
            },
            "remarks": "- `\"default\"` : An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.\n- `\"dedicated\"` : An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.\n\nUpdating `InstanceTenancy` requires no replacement only if you are updating its value from `\"dedicated\"` to `\"default\"` . Updating `InstanceTenancy` from `\"default\"` to `\"dedicated\"` requires replacement.",
            "stability": "external",
            "summary": "The allowed tenancy of instances launched into the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31269
          },
          "name": "instanceTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4ipampoolid"
            },
            "remarks": "For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31276
          },
          "name": "ipv4IpamPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4netmasklength"
            },
            "remarks": "For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31283
          },
          "name": "ipv4NetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPC"
    },
    "@aws-cdk/aws-ec2.CfnVPCCidrBlock": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCCidrBlock",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates a CIDR block with your VPC. You can only associate a single IPv6 CIDR block with your VPC. The IPv6 CIDR block size is fixed at /56.\n\nFor more information about associating CIDR blocks with your VPC and applicable restrictions, see [VPC and Subnet Sizing](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#VPC_Sizing) in the *Amazon Virtual Private Cloud User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCCidrBlock`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCCidrBlock = new ec2.CfnVPCCidrBlock(this, 'MyCfnVPCCidrBlock', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  amazonProvidedIpv6CidrBlock: false,\n  cidrBlock: 'cidrBlock',\n  ipv4IpamPoolId: 'ipv4IpamPoolId',\n  ipv4NetmaskLength: 123,\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  ipv6IpamPoolId: 'ipv6IpamPoolId',\n  ipv6NetmaskLength: 123,\n  ipv6Pool: 'ipv6Pool',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlock",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCCidrBlock`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 31600
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 31503
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31621
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31640
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCCidrBlock",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31507
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31626
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31533
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock"
            },
            "remarks": "You cannot specify the range of IPv6 addresses, or the size of the CIDR block.",
            "stability": "external",
            "summary": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31540
          },
          "name": "amazonProvidedIpv6CidrBlock",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock"
            },
            "stability": "external",
            "summary": "An IPv4 CIDR block to associate with the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31547
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4ipampoolid"
            },
            "remarks": "For more information about Amazon VPC IP Address Manager (IPAM), see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "Associate a CIDR allocated from an IPv4 IPAM pool to a VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31554
          },
          "name": "ipv4IpamPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4netmasklength"
            },
            "remarks": "For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31561
          },
          "name": "ipv4NetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblock"
            },
            "remarks": "To let Amazon choose the IPv6 CIDR block for you, omit this parameter.",
            "stability": "external",
            "summary": "An IPv6 CIDR block from the IPv6 address pool. You must also specify `Ipv6Pool` in the request."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31570
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6ipampoolid"
            },
            "remarks": "For more information about Amazon VPC IP Address Manager (IPAM), see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "Associates a CIDR allocated from an IPv6 IPAM pool to a VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31577
          },
          "name": "ipv6IpamPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6netmasklength"
            },
            "remarks": "For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31584
          },
          "name": "ipv6NetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6pool"
            },
            "stability": "external",
            "summary": "The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31591
          },
          "name": "ipv6Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCCidrBlock"
    },
    "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPCCidrBlock`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCCidrBlockProps: ec2.CfnVPCCidrBlockProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  amazonProvidedIpv6CidrBlock: false,\n  cidrBlock: 'cidrBlock',\n  ipv4IpamPoolId: 'ipv4IpamPoolId',\n  ipv4NetmaskLength: 123,\n  ipv6CidrBlock: 'ipv6CidrBlock',\n  ipv6IpamPoolId: 'ipv6IpamPoolId',\n  ipv6NetmaskLength: 123,\n  ipv6Pool: 'ipv6Pool',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCCidrBlockProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 31353
      },
      "name": "CfnVPCCidrBlockProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31360
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock"
            },
            "remarks": "You cannot specify the range of IPv6 addresses, or the size of the CIDR block.",
            "stability": "external",
            "summary": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31367
          },
          "name": "amazonProvidedIpv6CidrBlock",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock"
            },
            "stability": "external",
            "summary": "An IPv4 CIDR block to associate with the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31374
          },
          "name": "cidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4ipampoolid"
            },
            "remarks": "For more information about Amazon VPC IP Address Manager (IPAM), see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "Associate a CIDR allocated from an IPv4 IPAM pool to a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31381
          },
          "name": "ipv4IpamPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4netmasklength"
            },
            "remarks": "For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31388
          },
          "name": "ipv4NetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblock"
            },
            "remarks": "To let Amazon choose the IPv6 CIDR block for you, omit this parameter.",
            "stability": "external",
            "summary": "An IPv6 CIDR block from the IPv6 address pool. You must also specify `Ipv6Pool` in the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31397
          },
          "name": "ipv6CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6ipampoolid"
            },
            "remarks": "For more information about Amazon VPC IP Address Manager (IPAM), see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "Associates a CIDR allocated from an IPv6 IPAM pool to a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31404
          },
          "name": "ipv6IpamPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6netmasklength"
            },
            "remarks": "For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31411
          },
          "name": "ipv6NetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6pool"
            },
            "stability": "external",
            "summary": "The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31418
          },
          "name": "ipv6Pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCCidrBlockProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCDHCPOptionsAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Associates a set of DHCP options with a VPC, or associates no DHCP options with the VPC.\n\nAfter you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don't need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCDHCPOptionsAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCDHCPOptionsAssociation = new ec2.CfnVPCDHCPOptionsAssociation(this, 'MyCfnVPCDHCPOptionsAssociation', {\n  dhcpOptionsId: 'dhcpOptionsId',\n  vpcId: 'vpcId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCDHCPOptionsAssociation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 31784
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 31732
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31800
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31812
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCDHCPOptionsAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31736
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the DHCP options set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31761
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31805
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid"
            },
            "stability": "external",
            "summary": "The ID of the DHCP options set, or `default` to associate no DHCP options with the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31768
          },
          "name": "dhcpOptionsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31775
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCDHCPOptionsAssociation"
    },
    "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPCDHCPOptionsAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCDHCPOptionsAssociationProps: ec2.CfnVPCDHCPOptionsAssociationProps = {\n  dhcpOptionsId: 'dhcpOptionsId',\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 31653
      },
      "name": "CfnVPCDHCPOptionsAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid"
            },
            "stability": "external",
            "summary": "The ID of the DHCP options set, or `default` to associate no DHCP options with the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31660
          },
          "name": "dhcpOptionsId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31667
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCDHCPOptionsAssociationProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpoint",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a VPC endpoint for a service. An endpoint enables you to create a private connection between your VPC and the service. The service may be provided by AWS , an AWS Marketplace Partner, or another AWS account. For more information, see the [AWS PrivateLink User Guide](https://docs.aws.amazon.com/vpc/latest/privatelink/) .\n\nAn interface endpoint establishes connections between the subnets in your VPC and an AWS service, your own service, or a service hosted by another AWS account . You can specify the subnets in which to create the endpoint and the security groups to associate with the endpoint network interface.\n\nA gateway endpoint serves as a target for a route in your route table for traffic destined for Amazon S3 or Amazon DynamoDB. You can specify an endpoint policy for the endpoint, which controls access to the service from your VPC. You can also specify the VPC route tables that use the endpoint. For information about connectivity to Amazon S3, see [Why can’t I connect to an S3 bucket using a gateway VPC endpoint?](https://docs.aws.amazon.com/premiumsupport/knowledge-center/connect-s3-vpc-endpoint)\n\nA Gateway Load Balancer endpoint provides private connectivity between your VPC and virtual appliances from a service provider.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const policyDocument: any;\nconst cfnVPCEndpoint = new ec2.CfnVPCEndpoint(this, 'MyCfnVPCEndpoint', {\n  serviceName: 'serviceName',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  policyDocument: policyDocument,\n  privateDnsEnabled: false,\n  routeTableIds: ['routeTableIds'],\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n  vpcEndpointType: 'vpcEndpointType',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpoint",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCEndpoint`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 32100
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 31978
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32124
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32142
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpoint",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31982
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTimestamp"
            },
            "remarks": "For example: `Fri Sep 28 23:34:36 UTC 2018.`",
            "stability": "external",
            "summary": "The date and time the VPC endpoint was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32007
          },
          "name": "attrCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DnsEntries"
            },
            "remarks": "Each entry is a combination of the hosted zone ID and the DNS name. The entries are ordered as follows: regional public DNS, zonal public DNS, private DNS, and wildcard DNS. This order is not enforced for AWS Marketplace services.\n\nThe following is an example. In the first entry, the hosted zone ID is Z1HUB23UULQXV and the DNS name is vpce-01abc23456de78f9g-12abccd3.ec2.us-east-1.vpce.amazonaws.com.\n\n[\"Z1HUB23UULQXV:vpce-01abc23456de78f9g-12abccd3.ec2.us-east-1.vpce.amazonaws.com\", \"Z1HUB23UULQXV:vpce-01abc23456de78f9g-12abccd3-us-east-1a.ec2.us-east-1.vpce.amazonaws.com\", \"Z1C12344VYDITB0:ec2.us-east-1.amazonaws.com\"]\n\nIf you update the `PrivateDnsEnabled` or `SubnetIds` properties, the DNS entries in the list will change.",
            "stability": "external",
            "summary": "(Interface endpoints) The DNS entries for the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32019
          },
          "name": "attrDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NetworkInterfaceIds"
            },
            "remarks": "If you update the `PrivateDnsEnabled` or `SubnetIds` properties, the items in this list might change.",
            "stability": "external",
            "summary": "(Interface endpoints) One or more network interface IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32025
          },
          "name": "attrNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32129
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument"
            },
            "remarks": "If this parameter is not specified, the default policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints.\n\nFor CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation converts YAML policies to JSON format before calling the API to create or modify the VPC endpoint.",
            "stability": "external",
            "summary": "A policy that controls access to the service from the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32048
          },
          "name": "policyDocument",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename"
            },
            "remarks": "To list the available services, use [DescribeVpcEndpointServices](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html) . Otherwise, get the name from the service provider.",
            "stability": "external",
            "summary": "The service name."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32032
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC in which the endpoint will be used."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32039
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled"
            },
            "remarks": "The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, `kinesis.us-east-1.amazonaws.com` ), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.\n\nTo use a private hosted zone, you must set the following VPC attributes to `true` : `enableDnsHostnames` and `enableDnsSupport` .\n\nThis property is supported only for interface endpoints.\n\nDefault: `false`",
            "stability": "external",
            "summary": "Indicate whether to associate a private hosted zone with the specified VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32061
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids"
            },
            "remarks": "Routing is supported only for gateway endpoints.",
            "stability": "external",
            "summary": "The route table IDs."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32068
          },
          "name": "routeTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids"
            },
            "remarks": "Security groups are supported only for interface endpoints.",
            "stability": "external",
            "summary": "The IDs of the security groups to associate with the endpoint network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32075
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids"
            },
            "remarks": "You must specify this property for an interface endpoints or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.",
            "stability": "external",
            "summary": "The ID of the subnets in which to create an endpoint network interface."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32082
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype"
            },
            "remarks": "Default: Gateway",
            "stability": "external",
            "summary": "The type of endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32091
          },
          "name": "vpcEndpointType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpoint"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotification": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointConnectionNotification",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a connection notification for a VPC endpoint or VPC endpoint service. A connection notification notifies you of specific endpoint events. You must create an SNS topic to receive notifications. For more information, see [Create a Topic](https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html) in the *Amazon Simple Notification Service Developer Guide* .\n\nYou can create a connection notification for interface endpoints only.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointConnectionNotification`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCEndpointConnectionNotification = new ec2.CfnVPCEndpointConnectionNotification(this, 'MyCfnVPCEndpointConnectionNotification', {\n  connectionEvents: ['connectionEvents'],\n  connectionNotificationArn: 'connectionNotificationArn',\n\n  // the properties below are optional\n  serviceId: 'serviceId',\n  vpcEndpointId: 'vpcEndpointId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotification",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCEndpointConnectionNotification`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 32314
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32254
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32331
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32345
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointConnectionNotification",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32258
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32336
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents"
            },
            "remarks": "Valid values are `Accept` , `Connect` , `Delete` , and `Reject` .",
            "stability": "external",
            "summary": "One or more endpoint events for which to receive notifications."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32284
          },
          "name": "connectionEvents",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn"
            },
            "stability": "external",
            "summary": "The ARN of the SNS topic for the notifications."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32291
          },
          "name": "connectionNotificationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid"
            },
            "stability": "external",
            "summary": "The ID of the endpoint service."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32298
          },
          "name": "serviceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid"
            },
            "stability": "external",
            "summary": "The ID of the endpoint."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32305
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointConnectionNotification"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPCEndpointConnectionNotification`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCEndpointConnectionNotificationProps: ec2.CfnVPCEndpointConnectionNotificationProps = {\n  connectionEvents: ['connectionEvents'],\n  connectionNotificationArn: 'connectionNotificationArn',\n\n  // the properties below are optional\n  serviceId: 'serviceId',\n  vpcEndpointId: 'vpcEndpointId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32155
      },
      "name": "CfnVPCEndpointConnectionNotificationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents"
            },
            "remarks": "Valid values are `Accept` , `Connect` , `Delete` , and `Reject` .",
            "stability": "external",
            "summary": "One or more endpoint events for which to receive notifications."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32162
          },
          "name": "connectionEvents",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn"
            },
            "stability": "external",
            "summary": "The ARN of the SNS topic for the notifications."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32169
          },
          "name": "connectionNotificationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid"
            },
            "stability": "external",
            "summary": "The ID of the endpoint service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32176
          },
          "name": "serviceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid"
            },
            "stability": "external",
            "summary": "The ID of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32183
          },
          "name": "vpcEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointConnectionNotificationProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPCEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const policyDocument: any;\nconst cfnVPCEndpointProps: ec2.CfnVPCEndpointProps = {\n  serviceName: 'serviceName',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  policyDocument: policyDocument,\n  privateDnsEnabled: false,\n  routeTableIds: ['routeTableIds'],\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n  vpcEndpointType: 'vpcEndpointType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 31825
      },
      "name": "CfnVPCEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename"
            },
            "remarks": "To list the available services, use [DescribeVpcEndpointServices](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html) . Otherwise, get the name from the service provider.",
            "stability": "external",
            "summary": "The service name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31832
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC in which the endpoint will be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31839
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument"
            },
            "remarks": "If this parameter is not specified, the default policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints.\n\nFor CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation converts YAML policies to JSON format before calling the API to create or modify the VPC endpoint.",
            "stability": "external",
            "summary": "A policy that controls access to the service from the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31848
          },
          "name": "policyDocument",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled"
            },
            "remarks": "The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, `kinesis.us-east-1.amazonaws.com` ), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.\n\nTo use a private hosted zone, you must set the following VPC attributes to `true` : `enableDnsHostnames` and `enableDnsSupport` .\n\nThis property is supported only for interface endpoints.\n\nDefault: `false`",
            "stability": "external",
            "summary": "Indicate whether to associate a private hosted zone with the specified VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31861
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids"
            },
            "remarks": "Routing is supported only for gateway endpoints.",
            "stability": "external",
            "summary": "The route table IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31868
          },
          "name": "routeTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids"
            },
            "remarks": "Security groups are supported only for interface endpoints.",
            "stability": "external",
            "summary": "The IDs of the security groups to associate with the endpoint network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31875
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids"
            },
            "remarks": "You must specify this property for an interface endpoints or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.",
            "stability": "external",
            "summary": "The ID of the subnets in which to create an endpoint network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31882
          },
          "name": "subnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype"
            },
            "remarks": "Default: Gateway",
            "stability": "external",
            "summary": "The type of endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31891
          },
          "name": "vpcEndpointType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointService",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a VPC endpoint service configuration to which service consumers ( AWS accounts, IAM users, and IAM roles) can connect.\n\nTo create an endpoint service configuration, you must first create one of the following for your service:\n\n- A [Network Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html) . Service consumers connect to your service using an interface endpoint.\n- A [Gateway Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/gateway/introduction.html) . Service consumers connect to your service using a Gateway Load Balancer endpoint.\n\nFor more information, see the [AWS PrivateLink User Guide](https://docs.aws.amazon.com/vpc/latest/privatelink/) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointService`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCEndpointService = new ec2.CfnVPCEndpointService(this, 'MyCfnVPCEndpointService', /* all optional props */ {\n  acceptanceRequired: false,\n  gatewayLoadBalancerArns: ['gatewayLoadBalancerArns'],\n  networkLoadBalancerArns: ['networkLoadBalancerArns'],\n  payerResponsibility: 'payerResponsibility',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointService",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCEndpointService`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 32520
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32460
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32535
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32549
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32464
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32540
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired"
            },
            "stability": "external",
            "summary": "Indicates whether requests from service consumers to create an endpoint to your service must be accepted."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32490
          },
          "name": "acceptanceRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-gatewayloadbalancerarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32497
          },
          "name": "gatewayLoadBalancerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32504
          },
          "name": "networkLoadBalancerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-payerresponsibility"
            },
            "remarks": "The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.",
            "stability": "external",
            "summary": "The entity that is responsible for the endpoint costs."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32511
          },
          "name": "payerResponsibility",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointService"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissions": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCEndpointServicePermissions",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Grant or revoke permissions for service consumers (IAM users, IAM roles, and AWS accounts) to connect to a VPC endpoint service.\n\nIf you grant permissions to all principals, the service is public. Any users who know the name of a public service can send a request to attach an endpoint. If the service does not require manual approval, attachments are automatically approved.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCEndpointServicePermissions`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCEndpointServicePermissions = new ec2.CfnVPCEndpointServicePermissions(this, 'MyCfnVPCEndpointServicePermissions', {\n  serviceId: 'serviceId',\n\n  // the properties below are optional\n  allowedPrincipals: ['allowedPrincipals'],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissions",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCEndpointServicePermissions`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 32686
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32640
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32700
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32712
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCEndpointServicePermissions",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32644
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32705
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid"
            },
            "stability": "external",
            "summary": "The ID of the service."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32670
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals"
            },
            "remarks": "Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.",
            "stability": "external",
            "summary": "The Amazon Resource Names (ARN) of one or more principals (IAM users, IAM roles, and AWS accounts)."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32677
          },
          "name": "allowedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointServicePermissions"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPCEndpointServicePermissions`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCEndpointServicePermissionsProps: ec2.CfnVPCEndpointServicePermissionsProps = {\n  serviceId: 'serviceId',\n\n  // the properties below are optional\n  allowedPrincipals: ['allowedPrincipals'],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32562
      },
      "name": "CfnVPCEndpointServicePermissionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid"
            },
            "stability": "external",
            "summary": "The ID of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32569
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals"
            },
            "remarks": "Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.",
            "stability": "external",
            "summary": "The Amazon Resource Names (ARN) of one or more principals (IAM users, IAM roles, and AWS accounts)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32576
          },
          "name": "allowedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointServicePermissionsProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPCEndpointService`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCEndpointServiceProps: ec2.CfnVPCEndpointServiceProps = {\n  acceptanceRequired: false,\n  gatewayLoadBalancerArns: ['gatewayLoadBalancerArns'],\n  networkLoadBalancerArns: ['networkLoadBalancerArns'],\n  payerResponsibility: 'payerResponsibility',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCEndpointServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32358
      },
      "name": "CfnVPCEndpointServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired"
            },
            "stability": "external",
            "summary": "Indicates whether requests from service consumers to create an endpoint to your service must be accepted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32365
          },
          "name": "acceptanceRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-gatewayloadbalancerarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32372
          },
          "name": "gatewayLoadBalancerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns"
            },
            "stability": "external",
            "summary": "The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32379
          },
          "name": "networkLoadBalancerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-payerresponsibility"
            },
            "remarks": "The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.",
            "stability": "external",
            "summary": "The entity that is responsible for the endpoint costs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32386
          },
          "name": "payerResponsibility",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCEndpointServiceProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCGatewayAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCGatewayAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Attaches an internet gateway, or a virtual private gateway to a VPC, enabling connectivity between the internet and the VPC.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCGatewayAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCGatewayAttachment = new ec2.CfnVPCGatewayAttachment(this, 'MyCfnVPCGatewayAttachment', {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  internetGatewayId: 'internetGatewayId',\n  vpnGatewayId: 'vpnGatewayId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCGatewayAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 32872
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32815
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32887
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32900
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCGatewayAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32819
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32892
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32845
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid"
            },
            "remarks": "You must specify either `InternetGatewayId` or `VpnGatewayId` , but not both.",
            "stability": "external",
            "summary": "The ID of the internet gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32854
          },
          "name": "internetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid"
            },
            "remarks": "You must specify either `InternetGatewayId` or `VpnGatewayId` , but not both.",
            "stability": "external",
            "summary": "The ID of the virtual private gateway."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32863
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCGatewayAttachment"
    },
    "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPCGatewayAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCGatewayAttachmentProps: ec2.CfnVPCGatewayAttachmentProps = {\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  internetGatewayId: 'internetGatewayId',\n  vpnGatewayId: 'vpnGatewayId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32725
      },
      "name": "CfnVPCGatewayAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32732
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid"
            },
            "remarks": "You must specify either `InternetGatewayId` or `VpnGatewayId` , but not both.",
            "stability": "external",
            "summary": "The ID of the internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32741
          },
          "name": "internetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid"
            },
            "remarks": "You must specify either `InternetGatewayId` or `VpnGatewayId` , but not both.",
            "stability": "external",
            "summary": "The ID of the virtual private gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32750
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCGatewayAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCPeeringConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPCPeeringConnection",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Requests a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection. The accepter VPC can belong to another AWS account and can be in a different Region to the requester VPC.\n\nThe requester VPC and accepter VPC cannot have overlapping CIDR blocks. If you create a VPC peering connection request between VPCs with overlapping CIDR blocks, the VPC peering connection has a status of `failed` .\n\nFor more information, see [Walkthough: Peer with a VPC in another AWS account](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/peer-with-vpc-in-another-account.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPCPeeringConnection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCPeeringConnection = new ec2.CfnVPCPeeringConnection(this, 'MyCfnVPCPeeringConnection', {\n  peerVpcId: 'peerVpcId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  peerOwnerId: 'peerOwnerId',\n  peerRegion: 'peerRegion',\n  peerRoleArn: 'peerRoleArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnection",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPCPeeringConnection`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 33120
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33040
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33139
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33155
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPCPeeringConnection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33044
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33144
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33111
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid"
            },
            "remarks": "You must specify this parameter in the request.",
            "stability": "external",
            "summary": "The ID of the VPC with which you are creating the VPC peering connection."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33070
          },
          "name": "peerVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33077
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid"
            },
            "remarks": "Default: Your AWS account ID",
            "stability": "external",
            "summary": "The AWS account ID of the owner of the accepter VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33086
          },
          "name": "peerOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion"
            },
            "remarks": "Default: The Region in which you make the request.",
            "stability": "external",
            "summary": "The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33095
          },
          "name": "peerRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn"
            },
            "remarks": "This is required when you are peering a VPC in a different AWS account.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33104
          },
          "name": "peerRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCPeeringConnection"
    },
    "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPCPeeringConnection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCPeeringConnectionProps: ec2.CfnVPCPeeringConnectionProps = {\n  peerVpcId: 'peerVpcId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  peerOwnerId: 'peerOwnerId',\n  peerRegion: 'peerRegion',\n  peerRoleArn: 'peerRoleArn',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 32913
      },
      "name": "CfnVPCPeeringConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid"
            },
            "remarks": "You must specify this parameter in the request.",
            "stability": "external",
            "summary": "The ID of the VPC with which you are creating the VPC peering connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32920
          },
          "name": "peerVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32927
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid"
            },
            "remarks": "Default: Your AWS account ID",
            "stability": "external",
            "summary": "The AWS account ID of the owner of the accepter VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32936
          },
          "name": "peerOwnerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion"
            },
            "remarks": "Default: The Region in which you make the request.",
            "stability": "external",
            "summary": "The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32945
          },
          "name": "peerRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn"
            },
            "remarks": "This is required when you are peering a VPC in a different AWS account.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32954
          },
          "name": "peerRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 32961
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCPeeringConnectionProps"
    },
    "@aws-cdk/aws-ec2.CfnVPCProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPC`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPCProps: ec2.CfnVPCProps = {\n  cidrBlock: 'cidrBlock',\n\n  // the properties below are optional\n  enableDnsHostnames: false,\n  enableDnsSupport: false,\n  instanceTenancy: 'instanceTenancy',\n  ipv4IpamPoolId: 'ipv4IpamPoolId',\n  ipv4NetmaskLength: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPCProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 31048
      },
      "name": "CfnVPCProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock"
            },
            "stability": "external",
            "summary": "The primary IPv4 CIDR block for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31055
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames"
            },
            "remarks": "If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support) .\n\nYou can only enable DNS hostnames if you've enabled DNS support.",
            "stability": "external",
            "summary": "Indicates whether the instances launched in the VPC get DNS hostnames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31064
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport"
            },
            "remarks": "If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support) .",
            "stability": "external",
            "summary": "Indicates whether the DNS resolution is supported for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31071
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy"
            },
            "remarks": "- `\"default\"` : An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.\n- `\"dedicated\"` : An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.\n\nUpdating `InstanceTenancy` requires no replacement only if you are updating its value from `\"dedicated\"` to `\"default\"` . Updating `InstanceTenancy` from `\"default\"` to `\"dedicated\"` requires replacement.",
            "stability": "external",
            "summary": "The allowed tenancy of instances launched into the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31083
          },
          "name": "instanceTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4ipampoolid"
            },
            "remarks": "For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31090
          },
          "name": "ipv4IpamPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4netmasklength"
            },
            "remarks": "For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide* .",
            "stability": "external",
            "summary": "The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31097
          },
          "name": "ipv4NetmaskLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags"
            },
            "stability": "external",
            "summary": "The tags for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 31104
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPCProps"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNConnection",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a VPN connection between a virtual private gateway and a VPN customer gateway or a transit gateway and a VPN customer gateway.\n\nTo specify a VPN connection between a transit gateway and customer gateway, use the `TransitGatewayId` and `CustomerGatewayId` properties.\n\nTo specify a VPN connection between a virtual private gateway and customer gateway, use the `VpnGatewayId` and `CustomerGatewayId` properties.\n\nFor more information, see [AWS Site-to-Site VPN](https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html) in the *AWS Site-to-Site VPN User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPNConnection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPNConnection = new ec2.CfnVPNConnection(this, 'MyCfnVPNConnection', {\n  customerGatewayId: 'customerGatewayId',\n  type: 'type',\n\n  // the properties below are optional\n  staticRoutesOnly: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayId: 'transitGatewayId',\n  vpnGatewayId: 'vpnGatewayId',\n  vpnTunnelOptionsSpecifications: [{\n    preSharedKey: 'preSharedKey',\n    tunnelInsideCidr: 'tunnelInsideCidr',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPNConnection`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 33394
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33307
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33414
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33431
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNConnection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33311
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33419
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33360
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid"
            },
            "stability": "external",
            "summary": "The ID of the customer gateway at your end of the VPN connection."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33337
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type"
            },
            "stability": "external",
            "summary": "The type of VPN connection."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33344
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly"
            },
            "remarks": "Static routes must be used for devices that don't support BGP.\n\nIf you are creating a VPN connection for a device that does not support Border Gateway Protocol (BGP), you must specify `true` .",
            "stability": "external",
            "summary": "Indicates whether the VPN connection uses static routes only."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33353
          },
          "name": "staticRoutesOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid"
            },
            "remarks": "You must specify either `TransitGatewayId` or `VpnGatewayId` , but not both.",
            "stability": "external",
            "summary": "The ID of the transit gateway associated with the VPN connection."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33369
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid"
            },
            "remarks": "You must specify either `TransitGatewayId` or `VpnGatewayId` , but not both.",
            "stability": "external",
            "summary": "The ID of the virtual private gateway at the AWS side of the VPN connection."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33378
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications"
            },
            "stability": "external",
            "summary": "The tunnel options for the VPN connection."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33385
          },
          "name": "vpnTunnelOptionsSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnection"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The tunnel options for a single VPN tunnel.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst vpnTunnelOptionsSpecificationProperty: ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty = {\n  preSharedKey: 'preSharedKey',\n  tunnelInsideCidr: 'tunnelInsideCidr',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33445
      },
      "name": "VpnTunnelOptionsSpecificationProperty",
      "namespace": "CfnVPNConnection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-presharedkey"
            },
            "remarks": "Constraints: Allowed characters are alphanumeric characters, periods (.), and underscores (_). Must be between 8 and 64 characters in length and cannot start with zero (0).",
            "stability": "external",
            "summary": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33453
          },
          "name": "preSharedKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-tunnelinsidecidr"
            },
            "remarks": "Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway.\n\nConstraints: A size /30 CIDR block from the `169.254.0.0/16` range. The following CIDR blocks are reserved and cannot be used:\n\n- `169.254.0.0/30`\n- `169.254.1.0/30`\n- `169.254.2.0/30`\n- `169.254.3.0/30`\n- `169.254.4.0/30`\n- `169.254.5.0/30`\n- `169.254.169.252/30`",
            "stability": "external",
            "summary": "The range of inside IP addresses for the tunnel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33469
          },
          "name": "tunnelInsideCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnection.VpnTunnelOptionsSpecificationProperty"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPNConnection`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPNConnectionProps: ec2.CfnVPNConnectionProps = {\n  customerGatewayId: 'customerGatewayId',\n  type: 'type',\n\n  // the properties below are optional\n  staticRoutesOnly: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transitGatewayId: 'transitGatewayId',\n  vpnGatewayId: 'vpnGatewayId',\n  vpnTunnelOptionsSpecifications: [{\n    preSharedKey: 'preSharedKey',\n    tunnelInsideCidr: 'tunnelInsideCidr',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33168
      },
      "name": "CfnVPNConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid"
            },
            "stability": "external",
            "summary": "The ID of the customer gateway at your end of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33175
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type"
            },
            "stability": "external",
            "summary": "The type of VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33182
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly"
            },
            "remarks": "Static routes must be used for devices that don't support BGP.\n\nIf you are creating a VPN connection for a device that does not support Border Gateway Protocol (BGP), you must specify `true` .",
            "stability": "external",
            "summary": "Indicates whether the VPN connection uses static routes only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33191
          },
          "name": "staticRoutesOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33198
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid"
            },
            "remarks": "You must specify either `TransitGatewayId` or `VpnGatewayId` , but not both.",
            "stability": "external",
            "summary": "The ID of the transit gateway associated with the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33207
          },
          "name": "transitGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid"
            },
            "remarks": "You must specify either `TransitGatewayId` or `VpnGatewayId` , but not both.",
            "stability": "external",
            "summary": "The ID of the virtual private gateway at the AWS side of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33216
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications"
            },
            "stability": "external",
            "summary": "The tunnel options for the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33223
          },
          "name": "vpnTunnelOptionsSpecifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnectionProps"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNConnectionRoute",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a static route for a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.\n\nFor more information, see [AWS Site-to-Site VPN](https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html) in the *AWS Site-to-Site VPN User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPNConnectionRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPNConnectionRoute = new ec2.CfnVPNConnectionRoute(this, 'MyCfnVPNConnectionRoute', {\n  destinationCidrBlock: 'destinationCidrBlock',\n  vpnConnectionId: 'vpnConnectionId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRoute",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPNConnectionRoute`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 33657
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33611
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33672
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33684
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNConnectionRoute",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33615
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33677
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock"
            },
            "stability": "external",
            "summary": "The CIDR block associated with the local subnet of the customer network."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33641
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid"
            },
            "stability": "external",
            "summary": "The ID of the VPN connection."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33648
          },
          "name": "vpnConnectionId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnectionRoute"
    },
    "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPNConnectionRoute`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPNConnectionRouteProps: ec2.CfnVPNConnectionRouteProps = {\n  destinationCidrBlock: 'destinationCidrBlock',\n  vpnConnectionId: 'vpnConnectionId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33532
      },
      "name": "CfnVPNConnectionRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock"
            },
            "stability": "external",
            "summary": "The CIDR block associated with the local subnet of the customer network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33539
          },
          "name": "destinationCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid"
            },
            "stability": "external",
            "summary": "The ID of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33546
          },
          "name": "vpnConnectionId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNConnectionRouteProps"
    },
    "@aws-cdk/aws-ec2.CfnVPNGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNGateway",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself.\n\nFor more information, see [AWS Site-to-Site VPN](https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html) in the *AWS Site-to-Site VPN User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPNGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPNGateway = new ec2.CfnVPNGateway(this, 'MyCfnVPNGateway', {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGateway",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPNGateway`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 33838
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33785
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33853
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33866
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNGateway",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33789
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33858
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the virtual private gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33829
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type"
            },
            "stability": "external",
            "summary": "The type of VPN connection the virtual private gateway supports."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33815
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn"
            },
            "stability": "external",
            "summary": "The private Autonomous System Number (ASN) for the Amazon side of a BGP session."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33822
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNGateway"
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPNGateway`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPNGatewayProps: ec2.CfnVPNGatewayProps = {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33697
      },
      "name": "CfnVPNGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type"
            },
            "stability": "external",
            "summary": "The type of VPN connection the virtual private gateway supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33704
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn"
            },
            "stability": "external",
            "summary": "The private Autonomous System Number (ASN) for the Amazon side of a BGP session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33711
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags"
            },
            "stability": "external",
            "summary": "Any tags assigned to the virtual private gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33718
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNGatewayProps"
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VPNGatewayRoutePropagation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.\n\nIf you reference a VPN gateway that is in the same template as your VPN gateway route propagation, you must explicitly declare a dependency on the VPN gateway attachment. The `AWS::EC2::VPNGatewayRoutePropagation` resource cannot use the VPN gateway until it has successfully attached to the VPC. Add a [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) in the `AWS::EC2::VPNGatewayRoutePropagation` resource to explicitly declare a dependency on the VPN gateway attachment.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VPNGatewayRoutePropagation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPNGatewayRoutePropagation = new ec2.CfnVPNGatewayRoutePropagation(this, 'MyCfnVPNGatewayRoutePropagation', {\n  routeTableIds: ['routeTableIds'],\n  vpnGatewayId: 'vpnGatewayId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VPNGatewayRoutePropagation`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 34010
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33958
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34026
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34038
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVPNGatewayRoutePropagation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33962
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33987
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34031
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-routetableids"
            },
            "remarks": "The routing table must be associated with the same VPC that the virtual private gateway is attached to.",
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33994
          },
          "name": "routeTableIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-vpngatewayid"
            },
            "remarks": "The virtual private gateway must be attached to the same VPC that the routing tables are associated with.",
            "stability": "external",
            "summary": "The ID of the virtual private gateway that is attached to a VPC."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34001
          },
          "name": "vpnGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNGatewayRoutePropagation"
    },
    "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVPNGatewayRoutePropagation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVPNGatewayRoutePropagationProps: ec2.CfnVPNGatewayRoutePropagationProps = {\n  routeTableIds: ['routeTableIds'],\n  vpnGatewayId: 'vpnGatewayId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 33879
      },
      "name": "CfnVPNGatewayRoutePropagationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-routetableids"
            },
            "remarks": "The routing table must be associated with the same VPC that the virtual private gateway is attached to.",
            "stability": "external",
            "summary": "The ID of the route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33886
          },
          "name": "routeTableIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-vpngatewayid"
            },
            "remarks": "The virtual private gateway must be attached to the same VPC that the routing tables are associated with.",
            "stability": "external",
            "summary": "The ID of the virtual private gateway that is attached to a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 33893
          },
          "name": "vpnGatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVPNGatewayRoutePropagationProps"
    },
    "@aws-cdk/aws-ec2.CfnVolume": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::Volume",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Specifies an Amazon Elastic Block Store (Amazon EBS) volume. You can attach the volume to an instance in the same Availability Zone using [AWS::EC2::VolumeAttachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html) .\n\nWhen you use AWS CloudFormation to update an Amazon EBS volume that modifies `Iops` , `Size` , or `VolumeType` , there is a cooldown period before another operation can occur. This can cause your stack to report being in `UPDATE_IN_PROGRESS` or `UPDATE_ROLLBACK_IN_PROGRESS` for long periods of time.\n\nAmazon EBS does not support sizing down an Amazon EBS volume. AWS CloudFormation does not attempt to modify an Amazon EBS volume to a smaller size on rollback.\n\nSome common scenarios when you might encounter a cooldown period for Amazon EBS include:\n\n- You successfully update an Amazon EBS volume and the update succeeds. When you attempt another update within the cooldown window, that update will be subject to a cooldown period.\n- You successfully update an Amazon EBS volume and the update succeeds but another change in your `update-stack` call fails. The rollback will be subject to a cooldown period.\n\nFor more information on the cooldown period, see [Requirements when modifying volumes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-volume-requirements.html) .\n\n*DeletionPolicy attribute*\n\nTo control how AWS CloudFormation handles the volume when the stack is deleted, set a deletion policy for your volume. You can choose to retain the volume, to delete the volume, or to create a snapshot of the volume. For more information, see [DeletionPolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html) .\n\n> If you set a deletion policy that creates a snapshot, all tags on the volume are included in the snapshot.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::Volume`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVolume = new ec2.CfnVolume(this, 'MyCfnVolume', {\n  availabilityZone: 'availabilityZone',\n\n  // the properties below are optional\n  autoEnableIo: false,\n  encrypted: false,\n  iops: 123,\n  kmsKeyId: 'kmsKeyId',\n  multiAttachEnabled: false,\n  outpostArn: 'outpostArn',\n  size: 123,\n  snapshotId: 'snapshotId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  throughput: 123,\n  volumeType: 'volumeType',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolume",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::Volume`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 34440
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVolumeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 34284
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34469
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34491
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVolume",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34288
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34474
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the volume during creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34407
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone in which to create the volume."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34314
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio"
            },
            "remarks": "By default, Amazon EBS disables I/O to the volume from attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O.",
            "stability": "external",
            "summary": "Indicates whether the volume is auto-enabled for I/O operations."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34321
          },
          "name": "autoEnableIo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted"
            },
            "remarks": "The effect of setting the encryption state to `true` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) in the *Amazon Elastic Compute Cloud User Guide* .\n\nEncrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) .",
            "stability": "external",
            "summary": "Indicates whether the volume should be encrypted."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34330
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops"
            },
            "remarks": "For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n\nThe following are the supported values for each volume type:\n\n- `gp3` : 3,000-16,000 IOPS\n- `io1` : 100-64,000 IOPS\n- `io2` : 100-64,000 IOPS\n\n`io1` and `io2` volumes support up to 64,000 IOPS only on [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families support performance up to 32,000 IOPS.\n\nThis parameter is required for `io1` and `io2` volumes. The default for `gp3` volumes is 3,000 IOPS. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.",
            "stability": "external",
            "summary": "The number of I/O operations per second (IOPS)."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34347
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid"
            },
            "remarks": "If `KmsKeyId` is specified, the encrypted state must be `true` .\n\nIf you omit this property and your account is enabled for encryption by default, or *Encrypted* is set to `true` , then the volume is encrypted using the default key specified for your account. If your account does not have a default key, then the volume is encrypted using the AWS managed key .\n\nAlternatively, if you want to specify a different key, you can specify one of the following:\n\n- Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.\n- Key alias. Specify the alias for the key, prefixed with `alias/` . For example, for a key with the alias `my_cmk` , use `alias/my_cmk` . Or to specify the AWS managed key , use `alias/aws/ebs` .\n- Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.\n- Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.",
            "stability": "external",
            "summary": "The identifier of the AWS KMS key to use for Amazon EBS encryption."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34363
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-multiattachenabled"
            },
            "remarks": "AWS CloudFormation does not currently support updating a single-attach volume to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number of I/O operations per second (IOPS) of a multi-attach enabled volume.",
            "stability": "external",
            "summary": "Indicates whether Amazon EBS Multi-Attach is enabled."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34372
          },
          "name": "multiAttachEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-outpostarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Outpost."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34379
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size"
            },
            "remarks": "You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n\nThe following are the supported volumes sizes for each volume type:\n\n- `gp2` and `gp3` : 1-16,384\n- `io1` and `io2` : 4-16,384\n- `st1` and `sc1` : 125-16,384\n- `standard` : 1-1,024",
            "stability": "external",
            "summary": "The size of the volume, in GiBs."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34393
          },
          "name": "size",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid"
            },
            "remarks": "You must specify either a snapshot ID or a volume size.",
            "stability": "external",
            "summary": "The snapshot from which to create the volume."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34400
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-throughput"
            },
            "stability": "external",
            "summary": "The throughput that the volume supports, in MiB/s."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34414
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype"
            },
            "remarks": "- General Purpose SSD: `gp2` | `gp3`\n- Provisioned IOPS SSD: `io1` | `io2`\n- Throughput Optimized HDD: `st1`\n- Cold HDD: `sc1`\n- Magnetic: `standard`\n\nFor more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon Elastic Compute Cloud User Guide* .\n\nDefault: `gp2`",
            "stability": "external",
            "summary": "The volume type. This parameter can be one of the following values:."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34431
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVolume"
    },
    "@aws-cdk/aws-ec2.CfnVolumeAttachment": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EC2::VolumeAttachment",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Attaches an Amazon EBS volume to a running instance and exposes it to the instance with the specified device name.\n\nBefore this resource can be deleted (and therefore the volume detached), you must first unmount the volume in the instance. Failure to do so results in the volume being stuck in the busy state while it is trying to detach, which could possibly damage the file system or the data it contains.\n\nIf an Amazon EBS volume is the root device of an instance, it cannot be detached while the instance is in the \"running\" state. To detach the root volume, stop the instance first.\n\nIf the root volume is detached from an instance with an AWS Marketplace product code, then the product codes from that volume are no longer associated with the instance.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EC2::VolumeAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVolumeAttachment = new ec2.CfnVolumeAttachment(this, 'MyCfnVolumeAttachment', {\n  device: 'device',\n  instanceId: 'instanceId',\n  volumeId: 'volumeId',\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EC2::VolumeAttachment`."
        },
        "locationInModule": {
          "filename": "lib/ec2.generated.ts",
          "line": 34651
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 34598
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34668
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34681
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnVolumeAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34602
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34673
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device"
            },
            "stability": "external",
            "summary": "The device name (for example, `/dev/sdh` or `xvdh` )."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34628
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid"
            },
            "remarks": "This value can be a reference to an [`AWS::EC2::Instance`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource, or it can be the physical ID of an existing EC2 instance.",
            "stability": "external",
            "summary": "The ID of the instance to which the volume attaches."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34635
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid"
            },
            "remarks": "The volume and instance must be within the same Availability Zone. This value can be a reference to an [`AWS::EC2::Volume`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html) resource, or it can be the volume ID of an existing Amazon EBS volume.",
            "stability": "external",
            "summary": "The ID of the Amazon EBS volume."
          },
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34642
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVolumeAttachment"
    },
    "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVolumeAttachment`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVolumeAttachmentProps: ec2.CfnVolumeAttachmentProps = {\n  device: 'device',\n  instanceId: 'instanceId',\n  volumeId: 'volumeId',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 34504
      },
      "name": "CfnVolumeAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device"
            },
            "stability": "external",
            "summary": "The device name (for example, `/dev/sdh` or `xvdh` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34511
          },
          "name": "device",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid"
            },
            "remarks": "This value can be a reference to an [`AWS::EC2::Instance`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource, or it can be the physical ID of an existing EC2 instance.",
            "stability": "external",
            "summary": "The ID of the instance to which the volume attaches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34518
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid"
            },
            "remarks": "The volume and instance must be within the same Availability Zone. This value can be a reference to an [`AWS::EC2::Volume`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html) resource, or it can be the volume ID of an existing Amazon EBS volume.",
            "stability": "external",
            "summary": "The ID of the Amazon EBS volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34525
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVolumeAttachmentProps"
    },
    "@aws-cdk/aws-ec2.CfnVolumeProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnVolume`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst cfnVolumeProps: ec2.CfnVolumeProps = {\n  availabilityZone: 'availabilityZone',\n\n  // the properties below are optional\n  autoEnableIo: false,\n  encrypted: false,\n  iops: 123,\n  kmsKeyId: 'kmsKeyId',\n  multiAttachEnabled: false,\n  outpostArn: 'outpostArn',\n  size: 123,\n  snapshotId: 'snapshotId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  throughput: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-ec2.CfnVolumeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2.generated.ts",
        "line": 34051
      },
      "name": "CfnVolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone"
            },
            "stability": "external",
            "summary": "The Availability Zone in which to create the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34058
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio"
            },
            "remarks": "By default, Amazon EBS disables I/O to the volume from attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O.",
            "stability": "external",
            "summary": "Indicates whether the volume is auto-enabled for I/O operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34065
          },
          "name": "autoEnableIo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted"
            },
            "remarks": "The effect of setting the encryption state to `true` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) in the *Amazon Elastic Compute Cloud User Guide* .\n\nEncrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) .",
            "stability": "external",
            "summary": "Indicates whether the volume should be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34074
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops"
            },
            "remarks": "For `gp3` , `io1` , and `io2` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n\nThe following are the supported values for each volume type:\n\n- `gp3` : 3,000-16,000 IOPS\n- `io1` : 100-64,000 IOPS\n- `io2` : 100-64,000 IOPS\n\n`io1` and `io2` volumes support up to 64,000 IOPS only on [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families support performance up to 32,000 IOPS.\n\nThis parameter is required for `io1` and `io2` volumes. The default for `gp3` volumes is 3,000 IOPS. This parameter is not supported for `gp2` , `st1` , `sc1` , or `standard` volumes.",
            "stability": "external",
            "summary": "The number of I/O operations per second (IOPS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34091
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid"
            },
            "remarks": "If `KmsKeyId` is specified, the encrypted state must be `true` .\n\nIf you omit this property and your account is enabled for encryption by default, or *Encrypted* is set to `true` , then the volume is encrypted using the default key specified for your account. If your account does not have a default key, then the volume is encrypted using the AWS managed key .\n\nAlternatively, if you want to specify a different key, you can specify one of the following:\n\n- Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.\n- Key alias. Specify the alias for the key, prefixed with `alias/` . For example, for a key with the alias `my_cmk` , use `alias/my_cmk` . Or to specify the AWS managed key , use `alias/aws/ebs` .\n- Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.\n- Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.",
            "stability": "external",
            "summary": "The identifier of the AWS KMS key to use for Amazon EBS encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34107
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-multiattachenabled"
            },
            "remarks": "AWS CloudFormation does not currently support updating a single-attach volume to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number of I/O operations per second (IOPS) of a multi-attach enabled volume.",
            "stability": "external",
            "summary": "Indicates whether Amazon EBS Multi-Attach is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34116
          },
          "name": "multiAttachEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-outpostarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Outpost."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34123
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size"
            },
            "remarks": "You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n\nThe following are the supported volumes sizes for each volume type:\n\n- `gp2` and `gp3` : 1-16,384\n- `io1` and `io2` : 4-16,384\n- `st1` and `sc1` : 125-16,384\n- `standard` : 1-1,024",
            "stability": "external",
            "summary": "The size of the volume, in GiBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34137
          },
          "name": "size",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid"
            },
            "remarks": "You must specify either a snapshot ID or a volume size.",
            "stability": "external",
            "summary": "The snapshot from which to create the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34144
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags"
            },
            "stability": "external",
            "summary": "The tags to apply to the volume during creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34151
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-throughput"
            },
            "stability": "external",
            "summary": "The throughput that the volume supports, in MiB/s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34158
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype"
            },
            "remarks": "- General Purpose SSD: `gp2` | `gp3`\n- Provisioned IOPS SSD: `io1` | `io2`\n- Throughput Optimized HDD: `st1`\n- Cold HDD: `sc1`\n- Magnetic: `standard`\n\nFor more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon Elastic Compute Cloud User Guide* .\n\nDefault: `gp2`",
            "stability": "external",
            "summary": "The volume type. This parameter can be one of the following values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2.generated.ts",
            "line": 34175
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ec2.generated:CfnVolumeProps"
    },
    "@aws-cdk/aws-ec2.ClientVpnAuthorizationRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A client VPN authorization rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const clientVpnEndpoint: ec2.ClientVpnEndpoint;\nconst clientVpnAuthorizationRule = new ec2.ClientVpnAuthorizationRule(this, 'MyClientVpnAuthorizationRule', {\n  cidr: 'cidr',\n\n  // the properties below are optional\n  clientVpnEndoint: clientVpnEndpoint,\n  clientVpnEndpoint: clientVpnEndpoint,\n  description: 'description',\n  groupId: 'groupId',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/client-vpn-authorization-rule.ts",
          "line": 54
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-authorization-rule.ts",
        "line": 53
      },
      "name": "ClientVpnAuthorizationRule",
      "symbolId": "lib/client-vpn-authorization-rule:ClientVpnAuthorizationRule"
    },
    "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=client-vpn infused"
        },
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});",
        "stability": "stable",
        "summary": "Options for a ClientVpnAuthorizationRule."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-authorization-rule.ts",
        "line": 9
      },
      "name": "ClientVpnAuthorizationRuleOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IPv4 address range, in CIDR notation, of the network for which access is being authorized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 14
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "stable",
            "summary": "A brief description of the authorization rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 29
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- authorize all groups",
            "stability": "stable",
            "summary": "The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 22
          },
          "name": "groupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/client-vpn-authorization-rule:ClientVpnAuthorizationRuleOptions"
    },
    "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a ClientVpnAuthorizationRule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const clientVpnEndpoint: ec2.ClientVpnEndpoint;\nconst clientVpnAuthorizationRuleProps: ec2.ClientVpnAuthorizationRuleProps = {\n  cidr: 'cidr',\n\n  // the properties below are optional\n  clientVpnEndoint: clientVpnEndpoint,\n  clientVpnEndpoint: clientVpnEndpoint,\n  description: 'description',\n  groupId: 'groupId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-authorization-rule.ts",
        "line": 35
      },
      "name": "ClientVpnAuthorizationRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "clientVpnEndpoint is required",
            "deprecated": "Use `clientVpnEndpoint` instead",
            "stability": "deprecated",
            "summary": "The client VPN endpoint to which to add the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 47
          },
          "name": "clientVpnEndoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "clientVpnEndpoint is required",
            "stability": "stable",
            "summary": "The client VPN endpoint to which to add the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-authorization-rule.ts",
            "line": 40
          },
          "name": "clientVpnEndpoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
          }
        }
      ],
      "symbolId": "lib/client-vpn-authorization-rule:ClientVpnAuthorizationRuleProps"
    },
    "@aws-cdk/aws-ec2.ClientVpnEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=client-vpn infused"
        },
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});",
        "stability": "stable",
        "summary": "A client VPN connnection."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/client-vpn-endpoint.ts",
          "line": 293
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IClientVpnEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 269
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing client VPN endpoint."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 273
          },
          "name": "fromEndpointAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an authorization rule to this endpoint."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 400
          },
          "name": "addAuthorizationRule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnAuthorizationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a route to this endpoint."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 410
          },
          "name": "addRoute",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnRoute"
            }
          }
        }
      ],
      "name": "ClientVpnEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 287
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The endpoint ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 282
          },
          "name": "endpointId",
          "overrides": "@aws-cdk/aws-ec2.IClientVpnEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force target networks associations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 289
          },
          "name": "targetNetworksAssociated",
          "overrides": "@aws-cdk/aws-ec2.IClientVpnEndpoint",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint:ClientVpnEndpoint"
    },
    "@aws-cdk/aws-ec2.ClientVpnEndpointAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes when importing an existing client VPN endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const securityGroup: ec2.SecurityGroup;\nconst clientVpnEndpointAttributes: ec2.ClientVpnEndpointAttributes = {\n  endpointId: 'endpointId',\n  securityGroups: [securityGroup],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 254
      },
      "name": "ClientVpnEndpointAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The endpoint ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 258
          },
          "name": "endpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The security groups associated with the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 263
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint:ClientVpnEndpointAttributes"
    },
    "@aws-cdk/aws-ec2.ClientVpnEndpointOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=client-vpn infused"
        },
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});",
        "stability": "stable",
        "summary": "Options for a client VPN endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 17
      },
      "name": "ClientVpnEndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The address range cannot overlap with the local CIDR of the VPC\nin which the associated subnet is located, or the routes that you add manually.\n\nChanging the address range will replace the Client VPN endpoint.\n\nThe CIDR block should be /22 or greater.",
            "stability": "stable",
            "summary": "The IPv4 address range, in CIDR notation, from which to assign client IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 27
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the server certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 102
          },
          "name": "serverCertificateArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This automatically creates an authorization rule. Set this to `false` and\nuse `addAuthorizationRule()` to create your own rules instead.",
            "stability": "stable",
            "summary": "Whether to authorize all users to the VPC CIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 152
          },
          "name": "authorizeAllUsersToVpcCidr",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use user-based authentication",
            "remarks": "The certificate must be signed by a certificate authority (CA) and it must\nbe provisioned in AWS Certificate Manager (ACM).",
            "stability": "stable",
            "summary": "The ARN of the client certificate for mutual authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 37
          },
          "name": "clientCertificateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no connection handler",
            "remarks": "The name of the Lambda function must begin with the `AWSClientVPN-` prefix",
            "stability": "stable",
            "summary": "The AWS Lambda function used for connection authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 76
          },
          "name": "clientConnectionHandler",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnConnectionHandler"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no banner is presented to the client",
            "remarks": "UTF-8 encoded characters only. Maximum of 1400 characters.",
            "stability": "stable",
            "summary": "Customizable text that will be displayed in a banner on AWS provided clients when a VPN session is established."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 169
          },
          "name": "clientLoginBanner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "stable",
            "summary": "A brief description of the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 83
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the DNS address configured on the device",
            "remarks": "A Client VPN endpoint can have up to two DNS servers.",
            "stability": "stable",
            "summary": "Information about the DNS servers to be used for DNS resolution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 135
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to enable connections logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 53
          },
          "name": "logging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new group is created",
            "stability": "stable",
            "summary": "A CloudWatch Logs log group for connection logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 60
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new stream is created",
            "stability": "stable",
            "summary": "A CloudWatch Logs log stream for connection logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 67
          },
          "name": "logStream",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogStream"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "VpnPort.HTTPS",
            "stability": "stable",
            "summary": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 126
          },
          "name": "port",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpnPort"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new security group is created",
            "stability": "stable",
            "summary": "The security groups to apply to the target network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 90
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Specify whether to enable the self-service portal for the Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 97
          },
          "name": "selfServicePortal",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ClientVpnSessionTimeout.TWENTY_FOUR_HOURS",
            "stability": "stable",
            "summary": "The maximum VPN session duration time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 159
          },
          "name": "sessionTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ClientVpnSessionTimeout"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html",
            "stability": "stable",
            "summary": "Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 111
          },
          "name": "splitTunnel",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TransportProtocol.UDP",
            "stability": "stable",
            "summary": "The transport protocol to be used by the VPN session."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 118
          },
          "name": "transportProtocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.TransportProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use mutual authentication",
            "see": "https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/client-authentication.html",
            "stability": "stable",
            "summary": "The type of user-based authentication to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 46
          },
          "name": "userBasedAuthentication",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the VPC default strategy",
            "stability": "stable",
            "summary": "Subnets to associate to the client VPN endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 142
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint:ClientVpnEndpointOptions"
    },
    "@aws-cdk/aws-ec2.ClientVpnEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a client VPN endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const clientVpnConnectionHandler: ec2.IClientVpnConnectionHandler;\ndeclare const clientVpnUserBasedAuthentication: ec2.ClientVpnUserBasedAuthentication;\ndeclare const logGroup: logs.LogGroup;\ndeclare const logStream: logs.LogStream;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst clientVpnEndpointProps: ec2.ClientVpnEndpointProps = {\n  cidr: 'cidr',\n  serverCertificateArn: 'serverCertificateArn',\n  vpc: vpc,\n\n  // the properties below are optional\n  authorizeAllUsersToVpcCidr: false,\n  clientCertificateArn: 'clientCertificateArn',\n  clientConnectionHandler: clientVpnConnectionHandler,\n  clientLoginBanner: 'clientLoginBanner',\n  description: 'description',\n  dnsServers: ['dnsServers'],\n  logging: false,\n  logGroup: logGroup,\n  logStream: logStream,\n  port: ec2.VpnPort.HTTPS,\n  securityGroups: [securityGroup],\n  selfServicePortal: false,\n  sessionTimeout: ec2.ClientVpnSessionTimeout.EIGHT_HOURS,\n  splitTunnel: false,\n  transportProtocol: ec2.TransportProtocol.TCP,\n  userBasedAuthentication: clientVpnUserBasedAuthentication,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.ClientVpnEndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 244
      },
      "name": "ClientVpnEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC to connect to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 248
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint:ClientVpnEndpointProps"
    },
    "@aws-cdk/aws-ec2.ClientVpnRoute": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A client VPN route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const clientVpnEndpoint: ec2.ClientVpnEndpoint;\ndeclare const clientVpnRouteTarget: ec2.ClientVpnRouteTarget;\nconst clientVpnRoute = new ec2.ClientVpnRoute(this, 'MyClientVpnRoute', {\n  cidr: 'cidr',\n  target: clientVpnRouteTarget,\n\n  // the properties below are optional\n  clientVpnEndoint: clientVpnEndpoint,\n  clientVpnEndpoint: clientVpnEndpoint,\n  description: 'description',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnRoute",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/client-vpn-route.ts",
          "line": 84
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-route.ts",
        "line": 83
      },
      "name": "ClientVpnRoute",
      "symbolId": "lib/client-vpn-route:ClientVpnRoute"
    },
    "@aws-cdk/aws-ec2.ClientVpnRouteOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=client-vpn infused"
        },
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n});\n\n// Client-to-client access\nendpoint.addRoute('Route', {\n  cidr: '10.100.0.0/16',\n  target: ec2.ClientVpnRouteTarget.local(),\n});",
        "stability": "stable",
        "summary": "Options for a ClientVpnRoute."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-route.ts",
        "line": 10
      },
      "name": "ClientVpnRouteOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example:\n   - To add a route for Internet access, enter 0.0.0.0/0\n   - To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range\n   - To add a route for an on-premises network, enter the AWS Site-to-Site VPN\n     connection's IPv4 CIDR range\n   - To add a route for the local network, enter the client CIDR range",
            "stability": "stable",
            "summary": "The IPv4 address range, in CIDR notation, of the route destination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 21
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target for the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 33
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "stable",
            "summary": "A brief description of the authorization rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 28
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/client-vpn-route:ClientVpnRouteOptions"
    },
    "@aws-cdk/aws-ec2.ClientVpnRouteProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a ClientVpnRoute.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const clientVpnEndpoint: ec2.ClientVpnEndpoint;\ndeclare const clientVpnRouteTarget: ec2.ClientVpnRouteTarget;\nconst clientVpnRouteProps: ec2.ClientVpnRouteProps = {\n  cidr: 'cidr',\n  target: clientVpnRouteTarget,\n\n  // the properties below are optional\n  clientVpnEndoint: clientVpnEndpoint,\n  clientVpnEndpoint: clientVpnEndpoint,\n  description: 'description',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.ClientVpnRouteOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-route.ts",
        "line": 64
      },
      "name": "ClientVpnRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "clientVpnEndpoint is required",
            "deprecated": "Use `clientVpnEndpoint` instead",
            "stability": "deprecated",
            "summary": "The client VPN endpoint to which to add the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 77
          },
          "name": "clientVpnEndoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "clientVpnEndpoint is required",
            "stability": "stable",
            "summary": "The client VPN endpoint to which to add the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 70
          },
          "name": "clientVpnEndpoint",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint"
          }
        }
      ],
      "symbolId": "lib/client-vpn-route:ClientVpnRouteProps"
    },
    "@aws-cdk/aws-ec2.ClientVpnRouteTarget": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=client-vpn infused"
        },
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n});\n\n// Client-to-client access\nendpoint.addRoute('Route', {\n  cidr: '10.100.0.0/16',\n  target: ec2.ClientVpnRouteTarget.local(),\n});",
        "stability": "stable",
        "summary": "Target for a client VPN route."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteTarget",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-route.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Local network."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 53
          },
          "name": "local",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteTarget"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The specified subnet must be an existing target network of the client VPN\nendpoint.",
            "stability": "stable",
            "summary": "Subnet."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 46
          },
          "name": "subnet",
          "parameters": [
            {
              "name": "subnet",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnRouteTarget"
            }
          },
          "static": true
        }
      ],
      "name": "ClientVpnRouteTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The subnet ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-route.ts",
            "line": 58
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/client-vpn-route:ClientVpnRouteTarget"
    },
    "@aws-cdk/aws-ec2.ClientVpnSessionTimeout": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Maximum VPN session duration time."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnSessionTimeout",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 175
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "8 hours."
          },
          "name": "EIGHT_HOURS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "10 hours."
          },
          "name": "TEN_HOURS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "12 hours."
          },
          "name": "TWELVE_HOURS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "24 hours."
          },
          "name": "TWENTY_FOUR_HOURS"
        }
      ],
      "name": "ClientVpnSessionTimeout",
      "symbolId": "lib/client-vpn-endpoint:ClientVpnSessionTimeout"
    },
    "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=client-vpn infused"
        },
        "example": "const endpoint = vpc.addClientVpnEndpoint('Endpoint', {\n  cidr: '10.100.0.0/16',\n  serverCertificateArn: 'arn:aws:acm:us-east-1:123456789012:certificate/server-certificate-id',\n  userBasedAuthentication: ec2.ClientVpnUserBasedAuthentication.federated(samlProvider),\n  authorizeAllUsersToVpcCidr: false,\n});\n\nendpoint.addAuthorizationRule('Rule', {\n  cidr: '10.0.10.0/32',\n  groupId: 'group-id',\n});",
        "stability": "stable",
        "summary": "User-based authentication for a client VPN endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint.ts",
        "line": 189
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Active Directory authentication."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 193
          },
          "name": "activeDirectory",
          "parameters": [
            {
              "name": "directoryId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Federated authentication."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 198
          },
          "name": "federated",
          "parameters": [
            {
              "name": "samlProvider",
              "type": {
                "fqn": "@aws-cdk/aws-iam.ISamlProvider"
              }
            },
            {
              "name": "selfServiceSamlProvider",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-iam.ISamlProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnUserBasedAuthentication"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Renders the user based authentication."
          },
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint.ts",
            "line": 203
          },
          "name": "render",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ClientVpnUserBasedAuthentication",
      "symbolId": "lib/client-vpn-endpoint:ClientVpnUserBasedAuthentication"
    },
    "@aws-cdk/aws-ec2.CloudFormationInit": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "A CloudFormation-init configuration."
      },
      "fqn": "@aws-cdk/aws-ec2.CloudFormationInit",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use an existing InitConfig object as the default and only config."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 27
          },
          "name": "fromConfig",
          "parameters": [
            {
              "name": "config",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitConfig"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Build a CloudFormationInit from config sets."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 39
          },
          "name": "fromConfigSets",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ConfigSetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Build a new config from a set of Init Elements."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 20
          },
          "name": "fromElements",
          "parameters": [
            {
              "name": "elements",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitElement"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a config with the given name to this CloudFormationInit object."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 54
          },
          "name": "addConfig",
          "parameters": [
            {
              "name": "configName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "config",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitConfig"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The new configset will reference the given configs in the given order.",
            "stability": "stable",
            "summary": "Add a config set with the given name to this CloudFormationInit object."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 66
          },
          "name": "addConfigSet",
          "parameters": [
            {
              "name": "configSetName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "configNames",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "As an app builder, use `instance.applyCloudFormationInit()` or\n`autoScalingGroup.applyCloudFormationInit()` to trigger this method.\n\nThis method does the following:\n\n- Renders the `AWS::CloudFormation::Init` object to the given resource's\n   metadata, potentially adding a `AWS::CloudFormation::Authentication` object\n   next to it if required.\n- Updates the instance role policy to be able to call the APIs required for\n   `cfn-init` and `cfn-signal` to work, and potentially add permissions to download\n   referenced asset and bucket resources.\n- Updates the given UserData with commands to execute the `cfn-init` script.",
            "stability": "stable",
            "summary": "Attach the CloudFormation Init config to the given resource."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 95
          },
          "name": "attach",
          "parameters": [
            {
              "name": "attachedResource",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            },
            {
              "name": "attachOptions",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AttachInitOptions"
              }
            }
          ]
        }
      ],
      "name": "CloudFormationInit",
      "symbolId": "lib/cfn-init:CloudFormationInit"
    },
    "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic NetworkACL entry props.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const aclCidr: ec2.AclCidr;\ndeclare const aclTraffic: ec2.AclTraffic;\nconst commonNetworkAclEntryOptions: ec2.CommonNetworkAclEntryOptions = {\n  cidr: aclCidr,\n  ruleNumber: 123,\n  traffic: aclTraffic,\n\n  // the properties below are optional\n  direction: ec2.TrafficDirection.EGRESS,\n  networkAclEntryName: 'networkAclEntryName',\n  ruleAction: ec2.Action.ALLOW,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 205
      },
      "name": "CommonNetworkAclEntryOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CIDR range to allow or deny."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 219
          },
          "name": "cidr",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AclCidr"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "ACL entries are processed in ascending order by rule number.\nEntries can't use the same rule number unless one is an egress rule and the other is an ingress rule.",
            "stability": "stable",
            "summary": "Rule number to assign to the entry, such as 100."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 247
          },
          "name": "ruleNumber",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What kind of traffic this ACL rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 224
          },
          "name": "traffic",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AclTraffic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TrafficDirection.INGRESS",
            "stability": "stable",
            "summary": "Traffic direction, with respect to the subnet, this rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 231
          },
          "name": "direction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.TrafficDirection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a NetworkAclName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "It is not recommended to use an explicit group name.",
            "stability": "stable",
            "summary": "The name of the NetworkAclEntry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 214
          },
          "name": "networkAclEntryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ALLOW",
            "remarks": "Any traffic that is not explicitly allowed is automatically denied in a custom\nACL, all traffic is automatically allowed in a default ACL.",
            "stability": "stable",
            "summary": "Whether to allow or deny traffic that matches the rule; valid values are \"allow\" or \"deny\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 241
          },
          "name": "ruleAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Action"
          }
        }
      ],
      "symbolId": "lib/network-acl:CommonNetworkAclEntryOptions"
    },
    "@aws-cdk/aws-ec2.ConfigSetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "stability": "stable",
        "summary": "Options for CloudFormationInit.withConfigSets."
      },
      "fqn": "@aws-cdk/aws-ec2.ConfigSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init.ts",
        "line": 286
      },
      "name": "ConfigSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The sets of configs to pick from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 295
          },
          "name": "configs",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitConfig"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The definitions of each config set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 290
          },
          "name": "configSets",
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init:ConfigSetProps"
    },
    "@aws-cdk/aws-ec2.ConfigureNatOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options passed by the VPC when NAT needs to be configured.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const privateSubnet: ec2.PrivateSubnet;\ndeclare const publicSubnet: ec2.PublicSubnet;\ndeclare const vpc: ec2.Vpc;\nconst configureNatOptions: ec2.ConfigureNatOptions = {\n  natSubnets: [publicSubnet],\n  privateSubnets: [privateSubnet],\n  vpc: vpc,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ConfigureNatOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 107
      },
      "name": "ConfigureNatOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The public subnets where the NAT providers need to be placed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 116
          },
          "name": "natSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.PublicSubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "There may be more private subnets than public subnets with NAT providers.",
            "stability": "stable",
            "summary": "The private subnets that need to route through the NAT providers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 123
          },
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC we're configuring NAT for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 111
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Vpc"
          }
        }
      ],
      "symbolId": "lib/nat:ConfigureNatOptions"
    },
    "@aws-cdk/aws-ec2.ConnectionRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst connectionRule: ec2.ConnectionRule = {\n  fromPort: 123,\n\n  // the properties below are optional\n  description: 'description',\n  protocol: 'protocol',\n  toPort: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ConnectionRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 652
      },
      "name": "ConnectionRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If you specify icmp for the IpProtocol property, you can specify\n-1 as a wildcard (i.e., any ICMP type number).",
            "stability": "stable",
            "summary": "Start of port range for the TCP and UDP protocols, or an ICMP type number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 672
          },
          "name": "fromPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No description",
            "remarks": "It is applied to both the ingress rule\nand the egress rule.",
            "stability": "stable",
            "summary": "Description of this connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 690
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "tcp",
            "remarks": "Use -1 to specify all protocols. If you specify -1, or a protocol number\nother than tcp, udp, icmp, or 58 (ICMPv6), traffic on all ports is\nallowed, regardless of any ports you specify. For tcp, udp, and icmp, you\nmust specify a port range. For protocol 58 (ICMPv6), you can optionally\nspecify a port range; if you don't, traffic for all types and codes is\nallowed.",
            "stability": "stable",
            "summary": "The IP protocol name (tcp, udp, icmp) or number (see Protocol Numbers)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 664
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If toPort is not specified, it will be the same as fromPort.",
            "remarks": "If you specify icmp for the IpProtocol property, you can specify -1 as a\nwildcard (i.e., any ICMP code).",
            "stability": "stable",
            "summary": "End of port range for the TCP and UDP protocols, or an ICMP code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 682
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/security-group:ConnectionRule"
    },
    "@aws-cdk/aws-ec2.Connections": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "Security Groups can be thought of as a firewall for network-connected\ndevices. This class makes it easy to allow network connections to and\nfrom security groups, and between security groups individually. When\nestablishing connectivity between security groups, it will automatically\nadd rules in both security groups\n\nThis object can manage one or more security groups.",
        "stability": "stable",
        "summary": "Manage the allowed network connections for constructs with Security Groups.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const peer: ec2.IPeer;\ndeclare const port: ec2.Port;\ndeclare const securityGroup: ec2.SecurityGroup;\nconst connections = new ec2.Connections(/* all optional props */ {\n  defaultPort: port,\n  peer: peer,\n  securityGroups: [securityGroup],\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.Connections",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/connections.ts",
          "line": 99
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ConnectionsProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 68
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a security group to the list of security groups managed by this object."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 118
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "name": "securityGroups",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Even if the peer has a default port, we will always use our default port.",
            "stability": "stable",
            "summary": "Allow connections from the peer on our default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 202
          },
          "name": "allowDefaultPortFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow default connections from all IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 222
          },
          "name": "allowDefaultPortFromAnyIpv4",
          "parameters": [
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow hosts inside the security group to connect to each other."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 212
          },
          "name": "allowDefaultPortInternally",
          "parameters": [
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Even if the peer has a default port, we will always use our default port.",
            "stability": "stable",
            "summary": "Allow connections from the peer on our default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 245
          },
          "name": "allowDefaultPortTo",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow connections from the peer on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 151
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow from any IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 193
          },
          "name": "allowFromAnyIpv4",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow hosts inside the security group to connect to each other on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 174
          },
          "name": "allowInternally",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow connections to the peer on the given port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 128
          },
          "name": "allowTo",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow to all IPv4 ranges."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 186
          },
          "name": "allowToAnyIpv4",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow connections to the security group on their default port."
          },
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 232
          },
          "name": "allowToDefaultPort",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Connections",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 69
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 111
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default port configured for this connection peer, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 74
          },
          "name": "defaultPort",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Port"
          }
        }
      ],
      "symbolId": "lib/connections:Connections"
    },
    "@aws-cdk/aws-ec2.ConnectionsProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to intialize a new Connections object.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const peer: ec2.IPeer;\ndeclare const port: ec2.Port;\ndeclare const securityGroup: ec2.SecurityGroup;\nconst connectionsProps: ec2.ConnectionsProps = {\n  defaultPort: port,\n  peer: peer,\n  securityGroups: [securityGroup],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.ConnectionsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 32
      },
      "name": "ConnectionsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No default port",
            "stability": "stable",
            "summary": "Default port range for initiating connections to and from this object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 54
          },
          "name": "defaultPort",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Port"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Derived from securityGroup if set.",
            "remarks": "This object is required, but will be derived from securityGroup if that is passed.",
            "stability": "stable",
            "summary": "Class that represents the rule by which others can connect to this connectable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 40
          },
          "name": "peer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IPeer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No security groups",
            "stability": "stable",
            "summary": "What securityGroup(s) this object is managing connections for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 47
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/connections:ConnectionsProps"
    },
    "@aws-cdk/aws-ec2.CpuCredits": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-how-to.html",
        "stability": "stable",
        "summary": "Provides the options for specifying the CPU credit type for burstable EC2 instance types (T2, T3, T3a, etc)."
      },
      "fqn": "@aws-cdk/aws-ec2.CpuCredits",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 39
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-standard-mode.html",
            "stability": "stable",
            "summary": "Standard bursting mode."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-unlimited-mode.html",
            "stability": "stable",
            "summary": "Unlimited bursting mode."
          },
          "name": "UNLIMITED"
        }
      ],
      "name": "CpuCredits",
      "symbolId": "lib/launch-template:CpuCredits"
    },
    "@aws-cdk/aws-ec2.DefaultInstanceTenancy": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The default tenancy of instances launched into the VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.DefaultInstanceTenancy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 982
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Instances can be launched with any tenancy."
          },
          "name": "DEFAULT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any instance launched into the VPC automatically has dedicated tenancy, unless you launch it with the default tenancy."
          },
          "name": "DEDICATED"
        }
      ],
      "name": "DefaultInstanceTenancy",
      "symbolId": "lib/vpc:DefaultInstanceTenancy"
    },
    "@aws-cdk/aws-ec2.EbsDeviceOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=with-vpc infused"
        },
        "example": "const host = new ec2.BastionHostLinux(this, 'BastionHost', {\n  vpc,\n  blockDevices: [{\n    deviceName: 'EBSBastionHost',\n    volume: ec2.BlockDeviceVolume.ebs(10, {\n      encrypted: true,\n    }),\n  }],\n});",
        "stability": "stable",
        "summary": "Block device options for an EBS volume."
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.EbsDeviceOptionsBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 82
      },
      "name": "EbsDeviceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Encrypted EBS volumes can only be attached to instances that support Amazon EBS encryption",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances",
            "stability": "stable",
            "summary": "Specifies whether the EBS volume is encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 91
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If encrypted is true, the default aws/ebs KMS key will be used.",
            "remarks": "You have to ensure that the KMS CMK has the correct permissions to be used by the service launching the ec2 instances.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#ebs-encryption-requirements",
            "stability": "stable",
            "summary": "The ARN of the AWS Key Management Service (AWS KMS) CMK used for encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 102
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceOptions"
    },
    "@aws-cdk/aws-ec2.EbsDeviceOptionsBase": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base block device options for an EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ebsDeviceOptionsBase: ec2.EbsDeviceOptionsBase = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeType: ec2.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceOptionsBase",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 48
      },
      "name": "EbsDeviceOptionsBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- true for Amazon EC2 Auto Scaling, false otherwise (e.g. EBS)",
            "stability": "stable",
            "summary": "Indicates whether to delete the volume when the instance is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 54
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, required for {@link EbsDeviceVolumeType.IO1}",
            "remarks": "Must only be set for {@link volumeType}: {@link EbsDeviceVolumeType.IO1}\n\nThe maximum ratio of IOPS to volume size (in GiB) is 50:1, so for 5,000 provisioned IOPS,\nyou need at least 100 GiB storage on the volume.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html",
            "stability": "stable",
            "summary": "The number of I/O operations per second (IOPS) to provision for the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 68
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link EbsDeviceVolumeType.GP2}",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html",
            "stability": "stable",
            "summary": "The EBS volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 76
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.EbsDeviceVolumeType"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceOptionsBase"
    },
    "@aws-cdk/aws-ec2.EbsDeviceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of an EBS block device.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\ndeclare const key: kms.Key;\nconst ebsDeviceProps: ec2.EbsDeviceProps = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  kmsKey: key,\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: ec2.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.EbsDeviceSnapshotOptions",
        "@aws-cdk/aws-ec2.EbsDeviceOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 122
      },
      "name": "EbsDeviceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No snapshot will be used",
            "stability": "stable",
            "summary": "The snapshot ID of the volume to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 128
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceProps"
    },
    "@aws-cdk/aws-ec2.EbsDeviceSnapshotOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device options for an EBS volume created from a snapshot.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst ebsDeviceSnapshotOptions: ec2.EbsDeviceSnapshotOptions = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeSize: 123,\n  volumeType: ec2.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceSnapshotOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.EbsDeviceOptionsBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 108
      },
      "name": "EbsDeviceSnapshotOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The snapshot size",
            "remarks": "If you specify volumeSize, it must be equal or greater than the size of the snapshot.",
            "stability": "stable",
            "summary": "The volume size, in Gibibytes (GiB)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 116
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceSnapshotOptions"
    },
    "@aws-cdk/aws-ec2.EbsDeviceVolumeType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const domain = new es.Domain(this, 'Domain', {\n  version: es.ElasticsearchVersion.V7_4,\n  ebs: {\n    volumeSize: 100,\n    volumeType: ec2.EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n  },\n  nodeToNodeEncryption: true,\n  encryptionAtRest: {\n    enabled: true,\n  },\n});",
        "stability": "stable",
        "summary": "Supported EBS volume types for blockDevices."
      },
      "fqn": "@aws-cdk/aws-ec2.EbsDeviceVolumeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 180
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Magnetic."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provisioned IOPS SSD - IO1."
          },
          "name": "IO1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provisioned IOPS SSD - IO2."
          },
          "name": "IO2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose SSD - GP2."
          },
          "name": "GP2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose SSD - GP3."
          },
          "name": "GP3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Throughput Optimized HDD."
          },
          "name": "ST1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cold HDD."
          },
          "name": "SC1"
        }
      ],
      "name": "EbsDeviceVolumeType",
      "symbolId": "lib/volume:EbsDeviceVolumeType"
    },
    "@aws-cdk/aws-ec2.EnableVpnGatewayOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the Vpc.enableVpnGateway() method.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\nconst enableVpnGatewayOptions: ec2.EnableVpnGatewayOptions = {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n  vpnRoutePropagation: [{\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  }],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.EnableVpnGatewayOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.VpnGatewayProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 127
      },
      "name": "EnableVpnGatewayOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "noPropagation",
            "stability": "stable",
            "summary": "Provide an array of subnets where the route propagation should be added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 132
          },
          "name": "vpnRoutePropagation",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpn:EnableVpnGatewayOptions"
    },
    "@aws-cdk/aws-ec2.ExecuteFileOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { Asset } from '@aws-cdk/aws-s3-assets';\n\ndeclare const instance: ec2.Instance;\n\nconst asset = new Asset(this, 'Asset', {\n  path: './configure.sh'\n});\n\nconst localPath = instance.userData.addS3DownloadCommand({\n  bucket:asset.bucket,\n  bucketKey:asset.s3ObjectKey,\n  region: 'us-east-1', // Optional\n});\ninstance.userData.addExecuteFileCommand({\n  filePath:localPath,\n  arguments: '--verbose -y'\n});\nasset.grantRead(instance.role);",
        "stability": "stable",
        "summary": "Options when executing a file."
      },
      "fqn": "@aws-cdk/aws-ec2.ExecuteFileOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 51
      },
      "name": "ExecuteFileOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path to the file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 56
          },
          "name": "filePath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No arguments are passed to the file.",
            "stability": "stable",
            "summary": "The arguments to be passed to the file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 63
          },
          "name": "arguments",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:ExecuteFileOptions"
    },
    "@aws-cdk/aws-ec2.FlowLog": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::EC2::FlowLog"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});",
        "stability": "stable",
        "summary": "A VPC flow log."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLog",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-flow-logs.ts",
          "line": 371
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IFlowLog"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 332
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a Flow Log by it's Id."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 336
          },
          "name": "fromFlowLogId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "flowLogId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IFlowLog"
            }
          },
          "static": true
        }
      ],
      "name": "FlowLog",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Id of the VPC Flow Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 349
          },
          "name": "flowLogId",
          "overrides": "@aws-cdk/aws-ec2.IFlowLog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The S3 bucket to publish flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 354
          },
          "name": "bucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The iam role used to publish logs to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 364
          },
          "name": "iamRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "S3 bucket key prefix to publish the flow logs under."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 359
          },
          "name": "keyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The CloudWatch Logs LogGroup to publish flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 369
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLog"
    },
    "@aws-cdk/aws-ec2.FlowLogDestination": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});",
        "stability": "stable",
        "summary": "The destination type for the flow log."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogDestination",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 117
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use CloudWatch logs as the destination."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 121
          },
          "name": "toCloudWatchLogs",
          "parameters": [
            {
              "name": "logGroup",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-logs.ILogGroup"
              }
            },
            {
              "name": "iamRole",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-iam.IRole"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogDestination"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use S3 as the destination."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 132
          },
          "name": "toS3",
          "parameters": [
            {
              "name": "bucket",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "name": "keyPrefix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogDestination"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Generates a flow log destination configuration."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 143
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "flowLog",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.FlowLog"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogDestinationConfig"
            }
          }
        }
      ],
      "name": "FlowLogDestination",
      "symbolId": "lib/vpc-flow-logs:FlowLogDestination"
    },
    "@aws-cdk/aws-ec2.FlowLogDestinationConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Flow Log Destination configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\nconst flowLogDestinationConfig: ec2.FlowLogDestinationConfig = {\n  logDestinationType: ec2.FlowLogDestinationType.CLOUD_WATCH_LOGS,\n\n  // the properties below are optional\n  iamRole: role,\n  keyPrefix: 'keyPrefix',\n  logGroup: logGroup,\n  s3Bucket: bucket,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogDestinationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 151
      },
      "name": "FlowLogDestinationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- CLOUD_WATCH_LOGS",
            "stability": "stable",
            "summary": "The type of destination to publish the flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 157
          },
          "name": "logDestinationType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.FlowLogDestinationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default IAM role is created for you",
            "stability": "stable",
            "summary": "The IAM Role that has access to publish to CloudWatch logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 164
          },
          "name": "iamRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "stable",
            "summary": "S3 bucket key prefix to publish the flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 185
          },
          "name": "keyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default log group is created for you",
            "stability": "stable",
            "summary": "The CloudWatch Logs Log Group to publish the flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 171
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "stable",
            "summary": "S3 bucket to publish the flow logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 178
          },
          "name": "s3Bucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLogDestinationConfig"
    },
    "@aws-cdk/aws-ec2.FlowLogDestinationType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The available destination types for Flow Logs."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogDestinationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 53
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Send flow logs to CloudWatch Logs Group."
          },
          "name": "CLOUD_WATCH_LOGS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send flow logs to S3 Bucket."
          },
          "name": "S3"
        }
      ],
      "name": "FlowLogDestinationType",
      "symbolId": "lib/vpc-flow-logs:FlowLogDestinationType"
    },
    "@aws-cdk/aws-ec2.FlowLogOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = new ec2.Vpc(this, 'Vpc');\n\nvpc.addFlowLog('FlowLogS3', {\n  destination: ec2.FlowLogDestination.toS3()\n});\n\nvpc.addFlowLog('FlowLogCloudWatch', {\n  trafficType: ec2.FlowLogTrafficType.REJECT\n});",
        "stability": "stable",
        "summary": "Options to add a flow log to a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 273
      },
      "name": "FlowLogOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "FlowLogDestinationType.toCloudWatchLogs()",
            "remarks": "Flow log data can be published to CloudWatch Logs or Amazon S3",
            "stability": "stable",
            "summary": "Specifies the type of destination to which the flow log data is to be published."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 287
          },
          "name": "destination",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.FlowLogDestination"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ALL",
            "remarks": "You can log traffic that the resource accepts or rejects, or all traffic.",
            "stability": "stable",
            "summary": "The type of traffic to log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 279
          },
          "name": "trafficType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.FlowLogTrafficType"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLogOptions"
    },
    "@aws-cdk/aws-ec2.FlowLogProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});",
        "stability": "stable",
        "summary": "Properties of a VPC Flow Log."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.FlowLogOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 295
      },
      "name": "FlowLogProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of resource for which to create the flow log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 309
          },
          "name": "resourceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a flowLogName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "It is not recommended to use an explicit name.",
            "stability": "stable",
            "summary": "The name of the FlowLog."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 304
          },
          "name": "flowLogName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLogProps"
    },
    "@aws-cdk/aws-ec2.FlowLogResourceType": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nconst logGroup = new logs.LogGroup(this, 'MyCustomLogGroup');\n\nconst role = new iam.Role(this, 'MyCustomRole', {\n  assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com')\n});\n\nnew ec2.FlowLog(this, 'FlowLog', {\n  resourceType: ec2.FlowLogResourceType.fromVpc(vpc),\n  destination: ec2.FlowLogDestination.toCloudWatchLogs(logGroup, role)\n});",
        "stability": "stable",
        "summary": "The type of resource to create the flow log for."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 70
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Network Interface to attach the Flow Log to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 94
          },
          "name": "fromNetworkInterfaceId",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The subnet to attach the Flow Log to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 74
          },
          "name": "fromSubnet",
          "parameters": [
            {
              "name": "subnet",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The VPC to attach the Flow Log to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 84
          },
          "name": "fromVpc",
          "parameters": [
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLogResourceType"
            }
          },
          "static": true
        }
      ],
      "name": "FlowLogResourceType",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Id of the resource that the flow log should be attached to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 109
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of resource to attach a flow log to."
          },
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 104
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:FlowLogResourceType"
    },
    "@aws-cdk/aws-ec2.FlowLogTrafficType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = new ec2.Vpc(this, 'Vpc');\n\nvpc.addFlowLog('FlowLogS3', {\n  destination: ec2.FlowLogDestination.toS3()\n});\n\nvpc.addFlowLog('FlowLogCloudWatch', {\n  trafficType: ec2.FlowLogTrafficType.REJECT\n});",
        "stability": "stable",
        "summary": "The type of VPC traffic to log."
      },
      "fqn": "@aws-cdk/aws-ec2.FlowLogTrafficType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 32
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Only log accepts."
          },
          "name": "ACCEPT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Log all requests."
          },
          "name": "ALL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only log rejects."
          },
          "name": "REJECT"
        }
      ],
      "name": "FlowLogTrafficType",
      "symbolId": "lib/vpc-flow-logs:FlowLogTrafficType"
    },
    "@aws-cdk/aws-ec2.GatewayConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Pair represents a gateway created by NAT Provider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst gatewayConfig: ec2.GatewayConfig = {\n  az: 'az',\n  gatewayId: 'gatewayId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 34
      },
      "name": "GatewayConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Availability Zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 39
          },
          "name": "az",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identity of gateway spawned by the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 44
          },
          "name": "gatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/nat:GatewayConfig"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.VpcEndpoint",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/integ.vpc-endpoint.lit.ts infused",
          "resource": "AWS::EC2::VPCEndpoint"
        },
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "A gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 184
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IGatewayVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 153
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 155
          },
          "name": "fromGatewayVpcEndpointId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "gatewayVpcEndpointId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpoint"
            }
          },
          "static": true
        }
      ],
      "name": "GatewayVpcEndpoint",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The date and time the gateway VPC endpoint was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 172
          },
          "name": "vpcEndpointCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 182
          },
          "name": "vpcEndpointDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The gateway VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 166
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.VpcEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 177
          },
          "name": "vpcEndpointNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:GatewayVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/integ.vpc-endpoint.lit.ts infused"
        },
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "An AWS service for a gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 101
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "prefix",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IGatewayVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 92
      },
      "name": "GatewayVpcEndpointAwsService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 93
          },
          "name": "DYNAMODB",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 94
          },
          "name": "S3",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointAwsService"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 99
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:GatewayVpcEndpointAwsService"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/integ.vpc-endpoint.lit.ts infused"
        },
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "Options to add a gateway endpoint to a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 109
      },
      "name": "GatewayVpcEndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The service to use for this gateway VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 113
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All subnets in the VPC",
            "example": "declare const vpc: ec2.Vpc;\n\nvpc.addGatewayEndpoint('DynamoDbEndpoint', {\n  service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n  // Add only to ISOLATED subnets\n  subnets: [\n    { subnetType: ec2.SubnetType.PRIVATE_ISOLATED }\n  ]\n});",
            "remarks": "By default, this endpoint will be routable from all subnets in the VPC.\nSpecify a list of subnet selection objects here to be more specific.",
            "stability": "stable",
            "summary": "Where to add endpoint routing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 136
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:GatewayVpcEndpointOptions"
    },
    "@aws-cdk/aws-ec2.GatewayVpcEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a GatewayVpcEndpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const gatewayVpcEndpointService: ec2.IGatewayVpcEndpointService;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst gatewayVpcEndpointProps: ec2.GatewayVpcEndpointProps = {\n  service: gatewayVpcEndpointService,\n  vpc: vpc,\n\n  // the properties below are optional\n  subnets: [{\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  }],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 142
      },
      "name": "GatewayVpcEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC network in which the gateway endpoint will be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 146
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:GatewayVpcEndpointProps"
    },
    "@aws-cdk/aws-ec2.GenericLinuxImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "ec2.NatProvider.instance({\n   instanceType: new ec2.InstanceType('t3.micro'),\n   machineImage: new ec2.GenericLinuxImage({\n     'us-east-2': 'ami-0f9c61b5a562a16af'\n   })\n})",
        "remarks": "Linux images IDs are not published to SSM parameter store yet, so you'll have to\nmanually specify an AMI map.",
        "stability": "stable",
        "summary": "Construct a Linux machine image from an AMI map."
      },
      "fqn": "@aws-cdk/aws-ec2.GenericLinuxImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 548
        },
        "parameters": [
          {
            "name": "amiMap",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GenericLinuxImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 547
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 551
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "GenericLinuxImage",
      "symbolId": "lib/machine-image:GenericLinuxImage"
    },
    "@aws-cdk/aws-ec2.GenericLinuxImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for GenericLinuxImage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\nconst genericLinuxImageProps: ec2.GenericLinuxImageProps = {\n  userData: userData,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.GenericLinuxImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 520
      },
      "name": "GenericLinuxImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Empty UserData for Linux machines",
            "stability": "stable",
            "summary": "Initial user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 526
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:GenericLinuxImageProps"
    },
    "@aws-cdk/aws-ec2.GenericSSMParameterImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.\n\nThe AMI ID is selected using the values published to the SSM parameter store.",
        "stability": "stable",
        "summary": "Select the image based on a given SSM parameter.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\nconst genericSSMParameterImage = new ec2.GenericSSMParameterImage('parameterName', ec2.OperatingSystemType.LINUX, /* all optional props */ userData);",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.GenericSSMParameterImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 163
        },
        "parameters": [
          {
            "name": "parameterName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "os",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
            }
          },
          {
            "name": "userData",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 153
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 170
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "GenericSSMParameterImage",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the SSM parameter we're looking up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 161
          },
          "name": "parameterName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/machine-image:GenericSSMParameterImage"
    },
    "@aws-cdk/aws-ec2.GenericWindowsImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "Allows you to create a generic Windows EC2 , manually specify an AMI map.",
        "stability": "stable",
        "summary": "Construct a Windows machine image from an AMI map.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\nconst genericWindowsImage = new ec2.GenericWindowsImage({\n  amiMapKey: 'amiMap',\n}, /* all optional props */ {\n  userData: userData,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.GenericWindowsImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 585
        },
        "parameters": [
          {
            "name": "amiMap",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GenericWindowsImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 584
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 588
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "GenericWindowsImage",
      "symbolId": "lib/machine-image:GenericWindowsImage"
    },
    "@aws-cdk/aws-ec2.GenericWindowsImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for GenericWindowsImage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\nconst genericWindowsImageProps: ec2.GenericWindowsImageProps = {\n  userData: userData,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.GenericWindowsImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 532
      },
      "name": "GenericWindowsImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Empty UserData for Windows machines",
            "stability": "stable",
            "summary": "Initial user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 538
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:GenericWindowsImageProps"
    },
    "@aws-cdk/aws-ec2.IClientVpnConnectionHandler": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A connection handler for client VPN endpoints."
      },
      "fqn": "@aws-cdk/aws-ec2.IClientVpnConnectionHandler",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint-types.ts",
        "line": 22
      },
      "name": "IClientVpnConnectionHandler",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint-types.ts",
            "line": 31
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint-types.ts",
            "line": 26
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint-types:IClientVpnConnectionHandler"
    },
    "@aws-cdk/aws-ec2.IClientVpnEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A client VPN endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IClientVpnEndpoint",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint-types.ts",
        "line": 7
      },
      "name": "IClientVpnEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The endpoint ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint-types.ts",
            "line": 11
          },
          "name": "endpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force target networks associations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/client-vpn-endpoint-types.ts",
            "line": 16
          },
          "name": "targetNetworksAssociated",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        }
      ],
      "symbolId": "lib/client-vpn-endpoint-types:IClientVpnEndpoint"
    },
    "@aws-cdk/aws-ec2.IConnectable": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "An object that has a Connections object."
      },
      "fqn": "@aws-cdk/aws-ec2.IConnectable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connections.ts",
        "line": 22
      },
      "name": "IConnectable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connections.ts",
            "line": 26
          },
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        }
      ],
      "symbolId": "lib/connections:IConnectable"
    },
    "@aws-cdk/aws-ec2.IFlowLog": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A FlowLog."
      },
      "fqn": "@aws-cdk/aws-ec2.IFlowLog",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-flow-logs.ts",
        "line": 18
      },
      "name": "IFlowLog",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Id of the VPC Flow Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-flow-logs.ts",
            "line": 24
          },
          "name": "flowLogId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-flow-logs:IFlowLog"
    },
    "@aws-cdk/aws-ec2.IGatewayVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpoint",
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 54
      },
      "name": "IGatewayVpcEndpoint",
      "symbolId": "lib/vpc-endpoint:IGatewayVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.IGatewayVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A service for a gateway VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IGatewayVpcEndpointService",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 82
      },
      "name": "IGatewayVpcEndpointService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 86
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:IGatewayVpcEndpointService"
    },
    "@aws-cdk/aws-ec2.IInstance": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IInstance",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 23
      },
      "name": "IInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The availability zone the instance was launched in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 36
          },
          "name": "instanceAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The instance's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 29
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 42
          },
          "name": "instancePrivateDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private IP for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 49
          },
          "name": "instancePrivateIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public name).",
            "stability": "stable",
            "summary": "Publicly-routable DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 58
          },
          "name": "instancePublicDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public IP).",
            "stability": "stable",
            "summary": "Publicly-routable IP  address for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 67
          },
          "name": "instancePublicIp",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/instance:IInstance"
    },
    "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "An interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint",
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 468
      },
      "name": "IInterfaceVpcEndpoint",
      "symbolId": "lib/vpc-endpoint:IInterfaceVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A service for an interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 214
      },
      "name": "IInterfaceVpcEndpointService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 218
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 223
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether Private DNS is supported by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 228
          },
          "name": "privateDnsDefault",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:IInterfaceVpcEndpointService"
    },
    "@aws-cdk/aws-ec2.ILaunchTemplate": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for LaunchTemplate-like objects."
      },
      "fqn": "@aws-cdk/aws-ec2.ILaunchTemplate",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 74
      },
      "name": "ILaunchTemplate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The version number of this launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 80
          },
          "name": "versionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` will be set.",
            "stability": "stable",
            "summary": "The identifier of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 89
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` will be set.",
            "stability": "stable",
            "summary": "The name of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 98
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/launch-template:ILaunchTemplate"
    },
    "@aws-cdk/aws-ec2.IMachineImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for classes that can select an appropriate machine image to use."
      },
      "fqn": "@aws-cdk/aws-ec2.IMachineImage",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 15
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 19
          },
          "name": "getImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "IMachineImage",
      "symbolId": "lib/machine-image:IMachineImage"
    },
    "@aws-cdk/aws-ec2.INetworkAcl": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A NetworkAcl."
      },
      "fqn": "@aws-cdk/aws-ec2.INetworkAcl",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 12
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add a new entry to the ACL."
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 22
          },
          "name": "addEntry",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NetworkAclEntry"
            }
          }
        }
      ],
      "name": "INetworkAcl",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current Network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 17
          },
          "name": "networkAclId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:INetworkAcl"
    },
    "@aws-cdk/aws-ec2.INetworkAclEntry": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A NetworkAclEntry."
      },
      "fqn": "@aws-cdk/aws-ec2.INetworkAclEntry",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 166
      },
      "name": "INetworkAclEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 170
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        }
      ],
      "symbolId": "lib/network-acl:INetworkAclEntry"
    },
    "@aws-cdk/aws-ec2.IPeer": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for classes that provide the peer-specification parts of a security group rule."
      },
      "fqn": "@aws-cdk/aws-ec2.IPeer",
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/peer.ts",
        "line": 7
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 26
          },
          "name": "toEgressRuleConfig",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 21
          },
          "name": "toIngressRuleConfig",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IPeer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 11
          },
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 16
          },
          "name": "uniqueId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/peer:IPeer"
    },
    "@aws-cdk/aws-ec2.IPrivateSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IPrivateSubnet",
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1898
      },
      "name": "IPrivateSubnet",
      "symbolId": "lib/vpc:IPrivateSubnet"
    },
    "@aws-cdk/aws-ec2.IPublicSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IPublicSubnet",
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1860
      },
      "name": "IPublicSubnet",
      "symbolId": "lib/vpc:IPublicSubnet"
    },
    "@aws-cdk/aws-ec2.IRouteTable": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "An abstract route table."
      },
      "fqn": "@aws-cdk/aws-ec2.IRouteTable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 67
      },
      "name": "IRouteTable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Route table ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 71
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:IRouteTable"
    },
    "@aws-cdk/aws-ec2.ISecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Interface for security group-like objects."
      },
      "fqn": "@aws-cdk/aws-ec2.ISecurityGroup",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IPeer"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 18
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "stable",
            "summary": "Add an egress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 50
          },
          "name": "addEgressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "stable",
            "summary": "Add an ingress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 39
          },
          "name": "addIngressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        }
      ],
      "name": "ISecurityGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether the SecurityGroup has been configured to allow all outbound traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 28
          },
          "name": "allowAllOutbound",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 23
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/security-group:ISecurityGroup"
    },
    "@aws-cdk/aws-ec2.ISubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.ISubnet",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 29
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Associate a Network ACL with this subnet."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 61
          },
          "name": "associateNetworkAcl",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The Network ACL to associate."
              },
              "name": "acl",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
              }
            }
          ]
        }
      ],
      "name": "ISubnet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 33
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force internet connectivity established on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 44
          },
          "name": "internetConnectivityEstablished",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IPv4 CIDR block for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 49
          },
          "name": "ipv4CidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The route table for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 54
          },
          "name": "routeTable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IRouteTable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 39
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:ISubnet"
    },
    "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A SubnetNetworkAclAssociation."
      },
      "fqn": "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 293
      },
      "name": "ISubnetNetworkAclAssociation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current SubnetNetworkAclAssociation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 298
          },
          "name": "subnetNetworkAclAssociationAssociationId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:ISubnetNetworkAclAssociation"
    },
    "@aws-cdk/aws-ec2.IVolume": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "An EBS Volume in AWS EC2."
      },
      "fqn": "@aws-cdk/aws-ec2.IVolume",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 256
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "CAUTION: Granting an instance permission to attach to itself using this method will lead to\nan unresolvable circular reference between the instance role and the instance.\nUse {@link IVolume.grantAttachVolumeToSelf} to grant an instance permission to attach this\nvolume to itself.",
            "stability": "stable",
            "summary": "Grants permission to attach this Volume to an instance."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 288
          },
          "name": "grantAttachVolume",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "remarks": "If not specified, then permission is granted to attach\nto all instances in this account.",
                "summary": "the instances to which permission is being granted to attach this volume to."
              },
              "name": "instances",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.IInstance"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you are looking to\ngrant an Instance, AutoScalingGroup, EC2-Fleet, SpotFleet, ECS host, etc the ability to attach\nthis volume to **itself** then this is the method you want to use.\n\nThis is implemented by adding a Tag with key `VolumeGrantAttach-<suffix>` to the given\nconstructs and this Volume, and then conditioning the Grant such that the grantee is only\ngiven the ability to AttachVolume if both the Volume and the destination Instance have that\ntag applied to them.",
            "stability": "stable",
            "summary": "Grants permission to attach the Volume by a ResourceTag condition."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 305
          },
          "name": "grantAttachVolumeByResourceTag",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The list of constructs that will have the generated resource tag applied to them."
              },
              "name": "constructs",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "constructs.Construct"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "remarks": "Defaults to a hash calculated from this volume and list of constructs. (DEPRECATED)",
                "summary": "A suffix to use on the generated Tag key in place of the generated hash value."
              },
              "name": "tagKeySuffix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Use {@link IVolume.grantDetachVolumeFromSelf} to grant an instance permission to detach this\nvolume from itself.",
            "stability": "stable",
            "summary": "Grants permission to detach this Volume from an instance CAUTION: Granting an instance permission to detach from itself using this method will lead to an unresolvable circular reference between the instance role and the instance."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 319
          },
          "name": "grantDetachVolume",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "remarks": "If not specified, then permission is granted to detach\nfrom all instances in this account.",
                "summary": "the instances to which permission is being granted to detach this volume from."
              },
              "name": "instances",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.IInstance"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is implemented via the same mechanism as {@link IVolume.grantAttachVolumeByResourceTag},\nand is subject to the same conditions.",
            "stability": "stable",
            "summary": "Grants permission to detach the Volume by a ResourceTag condition."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 332
          },
          "name": "grantDetachVolumeByResourceTag",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The list of constructs that will have the generated resource tag applied to them."
              },
              "name": "constructs",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "constructs.Construct"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "remarks": "Defaults to a hash calculated from this volume and list of constructs. (DEPRECATED)",
                "summary": "A suffix to use on the generated Tag key in place of the generated hash value."
              },
              "name": "tagKeySuffix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "IVolume",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The availability zone that the EBS Volume is contained within (ex: us-west-2a)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 267
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The EBS Volume's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 262
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt the Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 274
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/volume:IVolume"
    },
    "@aws-cdk/aws-ec2.IVpc": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IVpc",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 74
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new client VPN endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 145
          },
          "name": "addClientVpnEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpoint"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new Flow Log to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 160
          },
          "name": "addFlowLog",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.FlowLogOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLog"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 150
          },
          "name": "addGatewayEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new interface endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 155
          },
          "name": "addInterfaceEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a new VPN connection to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 140
          },
          "name": "addVpnConnection",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnection"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a VPN Gateway to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 135
          },
          "name": "enableVpnGateway",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.EnableVpnGatewayOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Requires that at least one subnet is matched, throws a descriptive\nerror message otherwise.",
            "stability": "stable",
            "summary": "Return information on the subnets appropriate for the given selection strategy."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 130
          },
          "name": "selectSubnets",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SelectedSubnets"
            }
          }
        }
      ],
      "name": "IVpc",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "AZs for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 112
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force internet connectivity established on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 122
          },
          "name": "internetConnectivityEstablished",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of isolated subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 107
          },
          "name": "isolatedSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of private subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 102
          },
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of public subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 97
          },
          "name": "publicSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ARN for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 85
          },
          "name": "vpcArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "CIDR range for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 92
          },
          "name": "vpcCidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Identifier for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 79
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifier for the VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 117
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:IVpc"
    },
    "@aws-cdk/aws-ec2.IVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpcEndpoint",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 16
      },
      "name": "IVpcEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 21
          },
          "name": "vpcEndpointId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:IVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.IVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A VPC endpoint service."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpcEndpointService",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service.ts",
        "line": 24
      },
      "name": "IVpcEndpointService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The id of the VPC Endpoint Service that clients use to connect to, like vpce-svc-xxxxxxxxxxxxxxxx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 39
          },
          "name": "vpcEndpointServiceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The service name of the VPC Endpoint Service that clients use to connect to, like com.amazonaws.vpce.<region>.vpce-svc-xxxxxxxxxxxxxxxx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 31
          },
          "name": "vpcEndpointServiceName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint-service:IVpcEndpointService"
    },
    "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A load balancer that can host a VPC Endpoint Service."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service.ts",
        "line": 11
      },
      "name": "IVpcEndpointServiceLoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the load balancer that hosts the VPC Endpoint Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 17
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint-service:IVpcEndpointServiceLoadBalancer"
    },
    "@aws-cdk/aws-ec2.IVpnConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.IVpnConnection",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 13
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this VPNConnection."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 11
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The bytes received through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 23
          },
          "name": "metricTunnelDataIn",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The bytes sent through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 29
          },
          "name": "metricTunnelDataOut",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The state of the tunnel. 0 indicates DOWN and 1 indicates UP."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 17
          },
          "name": "metricTunnelState",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "IVpnConnection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 32
          },
          "name": "customerGatewayAsn",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The id of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 22
          },
          "name": "customerGatewayId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 27
          },
          "name": "customerGatewayIp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The id of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 17
          },
          "name": "vpnId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:IVpnConnection"
    },
    "@aws-cdk/aws-ec2.IVpnGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The virtual private gateway interface."
      },
      "fqn": "@aws-cdk/aws-ec2.IVpnGateway",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 38
      },
      "name": "IVpnGateway",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The virtual private gateway Id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 43
          },
          "name": "gatewayId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:IVpnGateway"
    },
    "@aws-cdk/aws-ec2.InitCommand": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const handle = new ec2.InitServiceRestartHandle();\nec2.CloudFormationInit.fromElements(\n   ec2.InitCommand.shellCommand('/usr/bin/custom-nginx-install.sh', { serviceRestartHandles: [handle] }),\n   ec2.InitService.enable('nginx', { serviceRestartHandle: handle }),\n);",
        "stability": "stable",
        "summary": "Command to execute on the instance."
      },
      "fqn": "@aws-cdk/aws-ec2.InitCommand",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 206
      },
      "methods": [
        {
          "docs": {
            "remarks": "You do not need to escape space characters or enclose command parameters in quotes.",
            "stability": "stable",
            "summary": "Run a command from an argv array."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 222
          },
          "name": "argvCommand",
          "parameters": [
            {
              "name": "argv",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitCommandOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommand"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Remember that some characters like `&`, `|`, `;`, `>` etc. have special meaning in a shell and\nneed to be preceded by a `\\` if you want to treat them as part of a filename.",
            "stability": "stable",
            "summary": "Run a shell command."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 213
          },
          "name": "shellCommand",
          "parameters": [
            {
              "name": "shellCommand",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitCommandOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommand"
            }
          },
          "static": true
        }
      ],
      "name": "InitCommand",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 229
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitCommand"
    },
    "@aws-cdk/aws-ec2.InitCommandOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const handle = new ec2.InitServiceRestartHandle();\nec2.CloudFormationInit.fromElements(\n   ec2.InitCommand.shellCommand('/usr/bin/custom-nginx-install.sh', { serviceRestartHandles: [handle] }),\n   ec2.InitService.enable('nginx', { serviceRestartHandle: handle }),\n);",
        "stability": "stable",
        "summary": "Options for InitCommand."
      },
      "fqn": "@aws-cdk/aws-ec2.InitCommandOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 109
      },
      "name": "InitCommandOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Use default working directory",
            "stability": "stable",
            "summary": "The working directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 133
          },
          "name": "cwd",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use current environment",
            "remarks": "This property overwrites, rather than appends, the existing environment.",
            "stability": "stable",
            "summary": "Sets environment variables for the command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 126
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Continue running if this command fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 149
          },
          "name": "ignoreErrors",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated based on index",
            "remarks": "Commands are executed in lexicographical order of their key names.",
            "stability": "stable",
            "summary": "Identifier key for this command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 117
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given service(s) after this command has run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 168
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Always run the command",
            "remarks": "If the test passes (exits with error code of 0), the command is run.",
            "stability": "stable",
            "summary": "Command to determine whether this command should be run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 142
          },
          "name": "testCmd",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 60 seconds",
            "remarks": "Set this value to `InitCommandWaitDuration.none()` if you do not want to wait for every command;\n`InitCommandWaitDuration.forever()` directs cfn-init to exit and resume only after the reboot is complete.\n\nFor Windows systems only.",
            "stability": "stable",
            "summary": "The duration to wait after a command has finished in case the command causes a reboot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 161
          },
          "name": "waitAfterCompletion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitCommandOptions"
    },
    "@aws-cdk/aws-ec2.InitCommandWaitDuration": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Represents a duration to wait after a command has finished, in case of a reboot (Windows only).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst initCommandWaitDuration = ec2.InitCommandWaitDuration.forever();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 174
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "cfn-init will exit and resume only after a reboot."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 189
          },
          "name": "forever",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Do not wait for this command."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 184
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Wait for a specified duration after a command."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 176
          },
          "name": "of",
          "parameters": [
            {
              "name": "duration",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitCommandWaitDuration"
            }
          },
          "static": true
        }
      ],
      "name": "InitCommandWaitDuration",
      "symbolId": "lib/cfn-init-elements:InitCommandWaitDuration"
    },
    "@aws-cdk/aws-ec2.InitConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "stability": "stable",
        "summary": "A collection of configuration elements."
      },
      "fqn": "@aws-cdk/aws-ec2.InitConfig",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init.ts",
          "line": 197
        },
        "parameters": [
          {
            "name": "elements",
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.InitElement"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init.ts",
        "line": 194
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add one or more elements to the config."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 211
          },
          "name": "add",
          "parameters": [
            {
              "name": "elements",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitElement"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether this configset has elements or not."
          },
          "locationInModule": {
            "filename": "lib/cfn-init.ts",
            "line": 204
          },
          "name": "isEmpty",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "InitConfig",
      "symbolId": "lib/cfn-init:InitConfig"
    },
    "@aws-cdk/aws-ec2.InitElement": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Base class for all CloudFormation Init elements."
      },
      "fqn": "@aws-cdk/aws-ec2.InitElement",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 87
      },
      "name": "InitElement",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 92
          },
          "name": "elementType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitElement"
    },
    "@aws-cdk/aws-ec2.InitFile": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
        "stability": "stable",
        "summary": "Create files on the EC2 instance."
      },
      "fqn": "@aws-cdk/aws-ec2.InitFile",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 464
        },
        "parameters": [
          {
            "name": "fileName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 324
      },
      "methods": [
        {
          "docs": {
            "remarks": "This is appropriate for files that are too large to embed into the template.",
            "stability": "stable",
            "summary": "Create an asset from the given file."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 424
          },
          "name": "fromAsset",
          "parameters": [
            {
              "name": "targetFileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileAssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use a file from an asset at instance startup time."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 447
          },
          "name": "fromExistingAsset",
          "parameters": [
            {
              "name": "targetFileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/aws-s3-assets.Asset"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The file will be embedded in the template, so care should be taken to not\nexceed the template size.\n\nIf options.base64encoded is set to true, this will base64-encode the file's contents.",
            "stability": "stable",
            "summary": "Read a file from disk and use its contents."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 381
          },
          "name": "fromFileInline",
          "parameters": [
            {
              "name": "targetFileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "sourceFileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "May contain tokens.",
            "stability": "stable",
            "summary": "Use a JSON-compatible object as the file content, write it to a JSON file."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 361
          },
          "name": "fromObject",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "obj",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Download a file from an S3 bucket at instance startup time."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 405
          },
          "name": "fromS3Object",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use a literal string as the file content."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 329
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "content",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Download from a URL at instance startup time."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 390
          },
          "name": "fromUrl",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Write a symlink with the given symlink target."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 348
          },
          "name": "symlink",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitFileOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitFile"
            }
          },
          "static": true
        }
      ],
      "name": "InitFile",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 462
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitFile"
    },
    "@aws-cdk/aws-ec2.InitFileAssetOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Additional options for creating an InitFile from an asset.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as assets from '@aws-cdk/assets';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dockerImage: cdk.DockerImage;\ndeclare const grantable: iam.IGrantable;\ndeclare const initServiceRestartHandle: ec2.InitServiceRestartHandle;\ndeclare const localBundling: cdk.ILocalBundling;\nconst initFileAssetOptions: ec2.InitFileAssetOptions = {\n  assetHash: 'assetHash',\n  assetHashType: cdk.AssetHashType.SOURCE,\n  base64Encoded: false,\n  bundling: {\n    image: dockerImage,\n\n    // the properties below are optional\n    command: ['command'],\n    entrypoint: ['entrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    local: localBundling,\n    outputType: cdk.BundlingOutput.ARCHIVED,\n    securityOpt: 'securityOpt',\n    user: 'user',\n    volumes: [{\n      containerPath: 'containerPath',\n      hostPath: 'hostPath',\n\n      // the properties below are optional\n      consistency: cdk.DockerVolumeConsistency.CONSISTENT,\n    }],\n    workingDirectory: 'workingDirectory',\n  },\n  exclude: ['exclude'],\n  follow: assets.FollowMode.NEVER,\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  group: 'group',\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  mode: 'mode',\n  owner: 'owner',\n  readers: [grantable],\n  serviceRestartHandles: [initServiceRestartHandle],\n  sourceHash: 'sourceHash',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.InitFileAssetOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.InitFileOptions",
        "@aws-cdk/aws-s3-assets.AssetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 318
      },
      "name": "InitFileAssetOptions",
      "symbolId": "lib/cfn-init-elements:InitFileAssetOptions"
    },
    "@aws-cdk/aws-ec2.InitFileOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Options for InitFile."
      },
      "fqn": "@aws-cdk/aws-ec2.InitFileOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 266
      },
      "name": "InitFileOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Only applicable for inlined string and file content.",
            "stability": "stable",
            "summary": "True if the inlined content (from a string or file) should be treated as base64 encoded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 305
          },
          "name": "base64Encoded",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'root'",
            "remarks": "Not supported for Windows systems.",
            "stability": "stable",
            "summary": "The name of the owning group for this file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 274
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'000644'",
            "remarks": "Use the first three digits for symlinks and the last three digits for\nsetting permissions. To create a symlink, specify 120xxx, where xxx\ndefines the permissions of the target file. To specify permissions for a\nfile, use the last three digits, such as 000644.\n\nNot supported for Windows systems.",
            "stability": "stable",
            "summary": "A six-digit octal value representing the mode for this file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 297
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'root'",
            "remarks": "Not supported for Windows systems.",
            "stability": "stable",
            "summary": "The name of the owning user for this file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 283
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given service after this file has been written."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 312
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitFileOptions"
    },
    "@aws-cdk/aws-ec2.InitGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "remarks": "Not supported for Windows systems.",
        "stability": "stable",
        "summary": "Create Linux/UNIX groups and assign group IDs."
      },
      "fqn": "@aws-cdk/aws-ec2.InitGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 527
        },
        "parameters": [
          {
            "name": "groupName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "groupId",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 516
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a group from its name, and optionally, group id."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 521
          },
          "name": "fromName",
          "parameters": [
            {
              "name": "groupName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "groupId",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitGroup"
            }
          },
          "static": true
        }
      ],
      "name": "InitGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 525
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitGroup"
    },
    "@aws-cdk/aws-ec2.InitPackage": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "stability": "stable",
        "summary": "A package to be installed during cfn-init time."
      },
      "fqn": "@aws-cdk/aws-ec2.InitPackage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 705
        },
        "parameters": [
          {
            "name": "type",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "versions",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          {
            "name": "packageName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "serviceHandles",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
                },
                "kind": "array"
              }
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 657
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Install a package using APT."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 689
          },
          "name": "apt",
          "parameters": [
            {
              "name": "packageName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install an MSI package from an HTTP URL or a location on disk."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 696
          },
          "name": "msi",
          "parameters": [
            {
              "name": "location",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LocationPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install a package from PyPI."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 682
          },
          "name": "python",
          "parameters": [
            {
              "name": "packageName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install an RPM from an HTTP URL or a location on disk."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 661
          },
          "name": "rpm",
          "parameters": [
            {
              "name": "location",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LocationPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install a package from RubyGems."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 675
          },
          "name": "rubyGem",
          "parameters": [
            {
              "name": "gemName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Install a package using Yum."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 668
          },
          "name": "yum",
          "parameters": [
            {
              "name": "packageName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitPackage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 743
          },
          "name": "renderPackageVersions",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "InitPackage",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 703
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitPackage"
    },
    "@aws-cdk/aws-ec2.InitService": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "A services that be enabled, disabled or restarted when the instance is launched."
      },
      "fqn": "@aws-cdk/aws-ec2.InitService",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 789
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Disable and stop the given service."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 805
          },
          "name": "disable",
          "parameters": [
            {
              "name": "serviceName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitService"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Enable and start the given service, optionally restarting it."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 793
          },
          "name": "enable",
          "parameters": [
            {
              "name": "serviceName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitService"
            }
          },
          "static": true
        }
      ],
      "name": "InitService",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 809
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitService"
    },
    "@aws-cdk/aws-ec2.InitServiceOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Options for an InitService."
      },
      "fqn": "@aws-cdk/aws-ec2.InitServiceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 751
      },
      "name": "InitServiceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- true if used in `InitService.enable()`, no change to service\nstate if used in `InitService.fromOptions()`.",
            "remarks": "Set to true to ensure that the service will be started automatically upon boot.\n\nSet to false to ensure that the service will not be started automatically upon boot.",
            "stability": "stable",
            "summary": "Enable or disable this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 762
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same value as `enabled`.",
            "remarks": "Set to true to ensure that the service is running after cfn-init finishes.\n\nSet to false to ensure that the service is not running after cfn-init finishes.",
            "stability": "stable",
            "summary": "Make sure this service is running or not running after cfn-init finishes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 773
          },
          "name": "ensureRunning",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No files trigger restart",
            "remarks": "Register actions into the restartHandle by passing it to `InitFile`, `InitCommand`,\n`InitPackage` and `InitSource` objects.",
            "stability": "stable",
            "summary": "Restart service when the actions registered into the restartHandle have been performed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 783
          },
          "name": "serviceRestartHandle",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitServiceOptions"
    },
    "@aws-cdk/aws-ec2.InitServiceRestartHandle": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "remarks": "Pass an instance of this object to the `InitFile`, `InitCommand`,\n`InitSource` and `InitPackage` objects, and finally to an `InitService`\nitself to cause the actions (files, commands, sources, and packages)\nto trigger a restart of the service.\n\nFor example, the following will run a custom command to install Nginx,\nand trigger the nginx service to be restarted after the command has run.\n\n```ts\nconst handle = new ec2.InitServiceRestartHandle();\nec2.CloudFormationInit.fromElements(\n   ec2.InitCommand.shellCommand('/usr/bin/custom-nginx-install.sh', { serviceRestartHandles: [handle] }),\n   ec2.InitService.enable('nginx', { serviceRestartHandle: handle }),\n);\n```",
        "stability": "stable",
        "summary": "An object that represents reasons to restart an InitService."
      },
      "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 27
      },
      "name": "InitServiceRestartHandle",
      "symbolId": "lib/cfn-init-elements:InitServiceRestartHandle"
    },
    "@aws-cdk/aws-ec2.InitSource": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Extract an archive into a directory."
      },
      "fqn": "@aws-cdk/aws-ec2.InitSource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 934
        },
        "parameters": [
          {
            "name": "targetDirectory",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "serviceHandles",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
                },
                "kind": "array"
              }
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 857
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an InitSource from an asset created from the given path."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 897
          },
          "name": "fromAsset",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceAssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Extract a directory from an existing directory asset."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 918
          },
          "name": "fromExistingAsset",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/aws-s3-assets.Asset"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Extract a GitHub branch into a given directory."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 874
          },
          "name": "fromGitHub",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "owner",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "repo",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "refSpec",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Extract an archive stored in an S3 bucket into the given directory."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 881
          },
          "name": "fromS3Object",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve a URL and extract it into the given directory."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 861
          },
          "name": "fromUrl",
          "parameters": [
            {
              "name": "targetDirectory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitSource"
            }
          },
          "static": true
        }
      ],
      "name": "InitSource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 932
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitSource"
    },
    "@aws-cdk/aws-ec2.InitSourceAssetOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Additional options for an InitSource that builds an asset from local files.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as assets from '@aws-cdk/assets';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dockerImage: cdk.DockerImage;\ndeclare const grantable: iam.IGrantable;\ndeclare const initServiceRestartHandle: ec2.InitServiceRestartHandle;\ndeclare const localBundling: cdk.ILocalBundling;\nconst initSourceAssetOptions: ec2.InitSourceAssetOptions = {\n  assetHash: 'assetHash',\n  assetHashType: cdk.AssetHashType.SOURCE,\n  bundling: {\n    image: dockerImage,\n\n    // the properties below are optional\n    command: ['command'],\n    entrypoint: ['entrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    local: localBundling,\n    outputType: cdk.BundlingOutput.ARCHIVED,\n    securityOpt: 'securityOpt',\n    user: 'user',\n    volumes: [{\n      containerPath: 'containerPath',\n      hostPath: 'hostPath',\n\n      // the properties below are optional\n      consistency: cdk.DockerVolumeConsistency.CONSISTENT,\n    }],\n    workingDirectory: 'workingDirectory',\n  },\n  exclude: ['exclude'],\n  follow: assets.FollowMode.NEVER,\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  readers: [grantable],\n  serviceRestartHandles: [initServiceRestartHandle],\n  sourceHash: 'sourceHash',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.InitSourceAssetOptions",
      "interfaces": [
        "@aws-cdk/aws-ec2.InitSourceOptions",
        "@aws-cdk/aws-s3-assets.AssetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 850
      },
      "name": "InitSourceAssetOptions",
      "symbolId": "lib/cfn-init-elements:InitSourceAssetOptions"
    },
    "@aws-cdk/aws-ec2.InitSourceOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\n\nconst handle = new ec2.InitServiceRestartHandle();\n\nec2.CloudFormationInit.fromElements(\n  ec2.InitFile.fromString('/etc/nginx/nginx.conf', '...', { serviceRestartHandles: [handle] }),\n  ec2.InitSource.fromS3Object('/var/www/html', myBucket, 'html.zip', { serviceRestartHandles: [handle] }),\n  ec2.InitService.enable('nginx', {\n    serviceRestartHandle: handle,\n  })\n);",
        "stability": "stable",
        "summary": "Additional options for an InitSource."
      },
      "fqn": "@aws-cdk/aws-ec2.InitSourceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 837
      },
      "name": "InitSourceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given services after this archive has been extracted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 844
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitSourceOptions"
    },
    "@aws-cdk/aws-ec2.InitUser": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.InitElement",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // Showing the most complex setup, if you have simpler requirements\n  // you can use `CloudFormationInit.fromElements()`.\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      // Applies the configs below in this order\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        // Install an Amazon Linux package using yum\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        // Create a JSON file from tokens (can also create other files)\n        ec2.InitFile.fromObject('/etc/stack.json', {\n          stackId: Stack.of(this).stackId,\n          stackName: Stack.of(this).stackName,\n          region: Stack.of(this).region,\n        }),\n\n        // Create a group and user\n        ec2.InitGroup.fromName('my-group'),\n        ec2.InitUser.fromName('my-user'),\n\n        // Install an RPM from the internet\n        ec2.InitPackage.rpm('http://mirrors.ukfast.co.uk/sites/dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/r/rubygem-git-1.5.0-2.el8.noarch.rpm'),\n      ]),\n    },\n  }),\n  initOptions: {\n    // Optional, which configsets to activate (['default'] by default)\n    configSets: ['default'],\n\n    // Optional, how long the installation is expected to take (5 minutes by default)\n    timeout: Duration.minutes(30),\n\n    // Optional, whether to include the --url argument when running cfn-init and cfn-signal commands (false by default)\n    includeUrl: true,\n\n    // Optional, whether to include the --role argument when running cfn-init and cfn-signal commands (false by default)\n    includeRole: true,\n  },\n});",
        "remarks": "Users are created as non-interactive system users with a shell of\n/sbin/nologin. This is by design and cannot be modified.\n\nNot supported for Windows systems.",
        "stability": "stable",
        "summary": "Create Linux/UNIX users and to assign user IDs."
      },
      "fqn": "@aws-cdk/aws-ec2.InitUser",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cfn-init-elements.ts",
          "line": 592
        },
        "parameters": [
          {
            "name": "userName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "userOptions",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitUserOptions"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 582
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a user from user name."
          },
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 586
          },
          "name": "fromName",
          "parameters": [
            {
              "name": "userName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InitUserOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InitUser"
            }
          },
          "static": true
        }
      ],
      "name": "InitUser",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the init element type for this element."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 590
          },
          "name": "elementType",
          "overrides": "@aws-cdk/aws-ec2.InitElement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitUser"
    },
    "@aws-cdk/aws-ec2.InitUserOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Optional parameters used when creating a user.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst initUserOptions: ec2.InitUserOptions = {\n  groups: ['groups'],\n  homeDir: 'homeDir',\n  userId: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.InitUserOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 549
      },
      "name": "InitUserOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "the user is not associated with any groups.",
            "remarks": "The user will be added to each group in the list.",
            "stability": "stable",
            "summary": "A list of group names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 571
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "assigned by the OS",
            "stability": "stable",
            "summary": "The user's home directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 555
          },
          "name": "homeDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "assigned by the OS",
            "remarks": "The creation process fails if the user name exists with a different user ID.\nIf the user ID is already assigned to an existing user the operating system may\nreject the creation request.",
            "stability": "stable",
            "summary": "A user ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 564
          },
          "name": "userId",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:InitUserOptions"
    },
    "@aws-cdk/aws-ec2.Instance": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  blockDevices: [\n    {\n      deviceName: '/dev/sda1',\n      volume: ec2.BlockDeviceVolume.ebs(50),\n    },\n    {\n      deviceName: '/dev/sdm',\n      volume: ec2.BlockDeviceVolume.ebs(100),\n    },\n  ],\n});",
        "stability": "stable",
        "summary": "This represents a single EC2 instance."
      },
      "fqn": "@aws-cdk/aws-ec2.Instance",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/instance.ts",
          "line": 321
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInstance"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 262
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add the security group to the instance."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 448
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "docs": {
                "summary": ": The security group to add."
              },
              "name": "securityGroup",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role assumed by the instance."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 463
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The command must be in the scripting language supported by the instance's OS (i.e. Linux/Windows).",
            "stability": "stable",
            "summary": "Add command to the startup script of the instance."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 456
          },
          "name": "addUserData",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Instance",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 272
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 282
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "the underlying instance resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 292
          },
          "name": "instance",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CfnInstance"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The availability zone the instance was launched in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 300
          },
          "name": "instanceAvailabilityZone",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The instance's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 296
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 304
          },
          "name": "instancePrivateDnsName",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Private IP for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 308
          },
          "name": "instancePrivateIp",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public name).",
            "stability": "stable",
            "summary": "Publicly-routable DNS name for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 312
          },
          "name": "instancePublicDnsName",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "(May be an empty string if the instance does not have a public IP).",
            "stability": "stable",
            "summary": "Publicly-routable IP  address for this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 316
          },
          "name": "instancePublicIp",
          "overrides": "@aws-cdk/aws-ec2.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of OS the instance is running."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 267
          },
          "name": "osType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role assumed by the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 277
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UserData for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 287
          },
          "name": "userData",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/instance:Instance"
    },
    "@aws-cdk/aws-ec2.InstanceArchitecture": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Identifies an instance's CPU architecture."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceArchitecture",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 783
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARM64 architecture."
          },
          "name": "ARM_64"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "x86-64 architecture."
          },
          "name": "X86_64"
        }
      ],
      "name": "InstanceArchitecture",
      "symbolId": "lib/instance-types:InstanceArchitecture"
    },
    "@aws-cdk/aws-ec2.InstanceClass": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\nnew rds.DatabaseInstanceFromSnapshot(this, 'Instance', {\n  snapshotIdentifier: 'my-snapshot',\n  engine: rds.DatabaseInstanceEngine.postgres({ version: rds.PostgresEngineVersion.VER_12_3 }),\n  // optional, defaults to m5.large\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.LARGE),\n  vpc,\n});\n\ndeclare const sourceInstance: rds.DatabaseInstance;\nnew rds.DatabaseInstanceReadReplica(this, 'ReadReplica', {\n  sourceDatabaseInstance: sourceInstance,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.LARGE),\n  vpc,\n});",
        "remarks": "We have both symbolic and concrete enums for every type.\n\nThe first are for people that want to specify by purpose,\nthe second one are for people who already know exactly what\n'R4' means.",
        "stability": "stable",
        "summary": "What class and generation of instance to use."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceClass",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 10
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances, 3rd generation."
          },
          "name": "STANDARD3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances, 4th generation."
          },
          "name": "STANDARD4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances, 5th generation."
          },
          "name": "STANDARD5"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances with local NVME drive, 5th generation."
          },
          "name": "STANDARD5_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances based on AMD EPYC, 5th generation."
          },
          "name": "STANDARD5_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances based on AMD EPYC with local NVME drive, 5th generation."
          },
          "name": "STANDARD5_AMD_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances for high performance computing, 5th generation."
          },
          "name": "STANDARD5_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances with local NVME drive for high performance computing, 5th generation."
          },
          "name": "STANDARD5_NVME_DRIVE_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances with high memory and compute capacity based on Intel Xeon Scalable (Cascade Lake) processors, 5nd generation."
          },
          "name": "STANDARD5_HIGH_COMPUTE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 3rd generation."
          },
          "name": "MEMORY3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 4th generation."
          },
          "name": "MEMORY4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 5th generation."
          },
          "name": "MEMORY5"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 6th generation with Intel Xeon Scalable processors (3rd generation processors code named Ice Lake)."
          },
          "name": "MEMORY6_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances for high performance computing, 5th generation."
          },
          "name": "MEMORY5_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances with local NVME drive, 5th generation."
          },
          "name": "MEMORY5_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances with local NVME drive for high performance computing, 5th generation."
          },
          "name": "MEMORY5_NVME_DRIVE_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances based on AMD EPYC, 5th generation."
          },
          "name": "MEMORY5_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances based on AMD EPYC with local NVME drive, 5th generation."
          },
          "name": "MEMORY5_AMD_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High memory instances (6TB) based on Intel Xeon Platinum 8176M (Skylake) processors, 1st generation."
          },
          "name": "HIGH_MEMORY_6TB_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High memory instances (9TB) based on Intel Xeon Platinum 8176M (Skylake) processors, 1st generation."
          },
          "name": "HIGH_MEMORY_9TB_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High memory instances (12TB) based on Intel Xeon Platinum 8176M (Skylake) processors, 1st generation."
          },
          "name": "HIGH_MEMORY_12TB_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High memory instances (18TB) based on Intel Xeon Scalable (Cascade Lake) processors, 1st generation."
          },
          "name": "HIGH_MEMORY_18TB_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High memory instances (24TB) based on Intel Xeon Scalable (Cascade Lake) processors, 1st generation."
          },
          "name": "HIGH_MEMORY_24TB_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances that are also EBS-optimized, 5th generation."
          },
          "name": "MEMORY5_EBS_OPTIMIZED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 6th generation with Graviton2 processors."
          },
          "name": "MEMORY6_GRAVITON"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory optimized instances, 6th generation with Graviton2 processors and local NVME drive."
          },
          "name": "MEMORY6_GRAVITON2_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances, 3rd generation."
          },
          "name": "COMPUTE3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances, 4th generation."
          },
          "name": "COMPUTE4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances, 5th generation."
          },
          "name": "COMPUTE5"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances with local NVME drive, 5th generation."
          },
          "name": "COMPUTE5_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances based on AMD EPYC, 5th generation."
          },
          "name": "COMPUTE5_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances with local NVME drive based on AMD EPYC, 5th generation."
          },
          "name": "COMPUTE5_AMD_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances for high performance computing, 5th generation."
          },
          "name": "COMPUTE5_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances, 6th generation."
          },
          "name": "COMPUTE6_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances based on AMD EPYC (codename Milan), 6th generation."
          },
          "name": "COMPUTE6_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances for high performance computing, 6th generation with Graviton2 processors."
          },
          "name": "COMPUTE6_GRAVITON2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances for high performance computing, 6th generation with Graviton2 processors and local NVME drive."
          },
          "name": "COMPUTE6_GRAVITON2_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Compute optimized instances for high performance computing, 6th generation with Graviton2 processors and high network bandwidth capabilities."
          },
          "name": "COMPUTE6_GRAVITON2_HIGH_NETWORK_BANDWITH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage-optimized instances, 2nd generation."
          },
          "name": "STORAGE2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage-optimized instances, 3rd generation."
          },
          "name": "STORAGE3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage-optimized instances, 3rd generation."
          },
          "name": "STORAGE3_ENHANCED_NETWORK"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage/compute balanced instances, 1st generation."
          },
          "name": "STORAGE_COMPUTE_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "I/O-optimized instances, 3rd generation."
          },
          "name": "IO3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "I/O-optimized instances with local NVME drive, 3rd generation."
          },
          "name": "IO3_DENSE_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage optimized instances powered by Graviton2 processor, 4th generation."
          },
          "name": "STORAGE4_GRAVITON_NETWORK_OPTIMIZED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage optimized instances powered by Graviton2 processor, 4th generation."
          },
          "name": "STORAGE4_GRAVITON_NETWORK_STORAGE_OPTIMIZED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Burstable instances, 2nd generation."
          },
          "name": "BURSTABLE2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Burstable instances, 3rd generation."
          },
          "name": "BURSTABLE3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Burstable instances based on AMD EPYC, 3rd generation."
          },
          "name": "BURSTABLE3_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Burstable instances, 4th generation with Graviton2 processors."
          },
          "name": "BURSTABLE4_GRAVITON"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory-intensive instances, 1st generation."
          },
          "name": "MEMORY_INTENSIVE_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory-intensive instances, extended, 1st generation."
          },
          "name": "MEMORY_INTENSIVE_1_EXTENDED"
        },
        {
          "docs": {
            "remarks": "This instance type can be used only in RDS. It is not supported in EC2.",
            "stability": "stable",
            "summary": "Memory-intensive instances, 2nd generation with Graviton2 processors."
          },
          "name": "MEMORY_INTENSIVE_2_GRAVITON2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory-intensive instances, 2nd generation with Graviton2 processors and local NVME drive."
          },
          "name": "MEMORY_INTENSIVE_2_GRAVITON2_NVME_DRIVE"
        },
        {
          "docs": {
            "remarks": "Intel Xeon Scalable (Ice Lake) processors",
            "stability": "stable",
            "summary": "Memory-intensive instances with higher network bandwith, local NVME drive, and extended memory."
          },
          "name": "MEMORY_INTENSIVE_2_XT_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory-intensive instances with higher network bandwith and local NVME drive, Intel Xeon Scalable (Ice Lake) processors."
          },
          "name": "MEMORY_INTENSIVE_2_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory-intensive instances with higher network bandwith and single-threaded performance, Intel Xeon Scalable (Cascade Lake) processors."
          },
          "name": "MEMORY_INTENSIVE_2_XTZ_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instances with customizable hardware acceleration, 1st generation."
          },
          "name": "FPGA1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graphics-optimized instances, 3rd generation."
          },
          "name": "GRAPHICS3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graphics-optimized instances with NVME drive for high performance computing, 4th generation."
          },
          "name": "GRAPHICS4_NVME_DRIVE_HIGH_PERFORMANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graphics-optimized instances based on AMD EPYC And Radeon Pro GPU (NAVI) with local NVME drive, 4th generation."
          },
          "name": "GRAPHICS4_AMD_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graphics-optimized instances, 5th generation."
          },
          "name": "GRAPHICS5"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Graphics-optimized instances powered by AWS Graviton2 Processors and NVIDIA T4G Tensor Core GPUs, 5th generation."
          },
          "name": "GRAPHICS5_GRAVITON2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parallel-processing optimized instances, 2nd generation."
          },
          "name": "PARALLEL2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parallel-processing optimized instances, 3nd generation."
          },
          "name": "PARALLEL3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parallel-processing optimized instances, 4th generation."
          },
          "name": "PARALLEL4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Arm processor based instances, 1st generation."
          },
          "name": "ARM1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Arm processor based instances, 2nd generation."
          },
          "name": "STANDARD6_GRAVITON"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances based on Intel (Ice Lake), 6th generation."
          },
          "name": "STANDARD6_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances based on 3rd Gen AMD EPYC processors, 6th generation."
          },
          "name": "STANDARD6_AMD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard instances, 6th generation with Graviton2 processors and local NVME drive."
          },
          "name": "STANDARD6_GRAVITON2_NVME_DRIVE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High memory and compute capacity instances, 1st generation."
          },
          "name": "HIGH_COMPUTE_MEMORY1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Inferentia Chips based instances for machine learning inference applications, 1st generation."
          },
          "name": "INFERENCE1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Macintosh instances built on Apple Mac mini computers, 1st generation with Intel procesors."
          },
          "name": "MACINTOSH1_INTEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Multi-stream video transcoding instances for resolutions up to 4K UHD, 1st generation."
          },
          "name": "VIDEO_TRANSCODING1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "High performance computing based on AMD EPYC, 6th generation."
          },
          "name": "HIGH_PERFORMANCE_COMPUTING6_AMD"
        }
      ],
      "name": "InstanceClass",
      "symbolId": "lib/instance-types:InstanceClass"
    },
    "@aws-cdk/aws-ec2.InstanceInitiatedShutdownBehavior": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior",
        "stability": "stable",
        "summary": "Provides the options for specifying the instance initiated shutdown behavior."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceInitiatedShutdownBehavior",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 59
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will stop when it initiates a shutdown."
          },
          "name": "STOP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will be terminated when it initiates a shutdown."
          },
          "name": "TERMINATE"
        }
      ],
      "name": "InstanceInitiatedShutdownBehavior",
      "symbolId": "lib/launch-template:InstanceInitiatedShutdownBehavior"
    },
    "@aws-cdk/aws-ec2.InstanceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew ec2.Instance(this, 'Instance', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  blockDevices: [\n    {\n      deviceName: '/dev/sda1',\n      volume: ec2.BlockDeviceVolume.ebs(50),\n    },\n    {\n      deviceName: '/dev/sdm',\n      volume: ec2.BlockDeviceVolume.ebs(100),\n    },\n  ],\n});",
        "stability": "stable",
        "summary": "Properties of an EC2 Instance."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 73
      },
      "name": "InstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 128
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "AMI to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 133
          },
          "name": "machineImage",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC to launch the instance in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 116
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This property is only used when you do not provide a security group.",
            "stability": "stable",
            "summary": "Whether the instance could initiate connections to anywhere by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 102
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Random zone.",
            "stability": "stable",
            "summary": "In which AZ to place the instance within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 94
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Uses the block device mapping of the AMI",
            "remarks": "Each instance that is launched has an associated root device volume,\neither an Amazon EBS volume or an instance store volume.\nYou can use block device mappings to specify additional EBS volumes or\ninstance store volumes to attach to an instance when it is launched.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
            "stability": "stable",
            "summary": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 208
          },
          "name": "blockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.BlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "see": "http://aws.amazon.com/cloudwatch/pricing/",
            "stability": "stable",
            "summary": "Whether \"Detailed Monitoring\" is enabled for this instance Keep in mind that Detailed Monitoring results in extra charges."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 256
          },
          "name": "detailedMonitoring",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no CloudFormation init",
            "stability": "stable",
            "summary": "Apply the given CloudFormation Init configuration to the instance at startup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 231
          },
          "name": "init",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "remarks": "Describes the configsets to use and the timeout to wait",
            "stability": "stable",
            "summary": "Use the given options for applying CloudFormation Init."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 240
          },
          "name": "initOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ApplyCloudFormationInitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CDK generated name",
            "stability": "stable",
            "summary": "The name of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 184
          },
          "name": "instanceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No SSH access will be possible.",
            "stability": "stable",
            "summary": "Name of SSH keypair to grant access to instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 80
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no association",
            "remarks": "Private IP should be available within the VPC that the instance is build within.",
            "stability": "stable",
            "summary": "Defines a private IP address to associate with an instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 217
          },
          "name": "privateIpAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Propagate the EC2 instance tags to the EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 224
          },
          "name": "propagateTagsToVolumeOnCreation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether IMDSv2 should be required on this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 247
          },
          "name": "requireImdsv2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "The maximum value is 43200 (12 hours).",
            "stability": "stable",
            "summary": "The length of time to wait for the resourceSignalCount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 111
          },
          "name": "resourceSignalTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will automatically be created, it can be accessed via the `role` property",
            "example": "const role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n});",
            "remarks": "The role must be assumable by the service principal `ec2.amazonaws.com`:",
            "stability": "stable",
            "summary": "An IAM role to associate with the instance profile assigned to this Auto Scaling Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 177
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- create new security group",
            "stability": "stable",
            "summary": "Security Group to assign to this instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 123
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This controls whether source/destination checking is enabled on the instance.\nA value of true means that checking is enabled, and false means that checking is disabled.\nThe value must be false for the instance to perform NAT.",
            "stability": "stable",
            "summary": "Specifies whether to enable an instance launched in a VPC to perform NAT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 194
          },
          "name": "sourceDestCheck",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A UserData object appropriate for the MachineImage's\nOperating System is created.",
            "remarks": "The UserData may still be mutated after creation.",
            "stability": "stable",
            "summary": "Specific UserData to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 143
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true iff `initOptions` is specified, false otherwise.",
            "remarks": "Depending the EC2 instance type, changing UserData either\nrestarts the instance or replaces the instance.\n\n- Instance store-backed instances are replaced.\n- EBS-backed instances are restarted.\n\nBy default, restarting does not execute the new UserData so you\nwill need a different mechanism to ensure the instance is restarted.\n\nSetting this to `true` will make the instance's Logical ID depend on the\nUserData, which will cause CloudFormation to replace it if the UserData\nchanges.",
            "stability": "stable",
            "summary": "Changes to the UserData force replacement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 163
          },
          "name": "userDataCausesReplacement",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Private subnets.",
            "stability": "stable",
            "summary": "Where to place the instance within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 87
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/instance:InstanceProps"
    },
    "@aws-cdk/aws-ec2.InstanceRequireImdsv2Aspect": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const aspect = new ec2.InstanceRequireImdsv2Aspect();\nAspects.of(this).add(aspect);",
        "remarks": "This aspect configures IMDS on an EC2 instance by creating a Launch Template with the\nIMDS configuration and associating that Launch Template with the instance. If an Instance\nis already associated with a Launch Template, a warning will (optionally) be added to the\nconstruct node and it will be skipped.\n\nTo cover Instances already associated with Launch Templates, use `LaunchTemplateImdsAspect`.",
        "stability": "stable",
        "summary": "Aspect that applies IMDS configuration on EC2 Instance constructs."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceRequireImdsv2Aspect",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/aspects/require-imdsv2-aspect.ts",
          "line": 74
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceRequireImdsv2AspectProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 71
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 79
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a warning annotation to a node, unless `suppressWarnings` is true."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 106
          },
          "name": "warn",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            },
            {
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "InstanceRequireImdsv2Aspect",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 24
          },
          "name": "suppressWarnings",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/aspects/require-imdsv2-aspect:InstanceRequireImdsv2Aspect"
    },
    "@aws-cdk/aws-ec2.InstanceRequireImdsv2AspectProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `InstanceRequireImdsv2Aspect`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst instanceRequireImdsv2AspectProps: ec2.InstanceRequireImdsv2AspectProps = {\n  suppressLaunchTemplateWarning: false,\n  suppressWarnings: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceRequireImdsv2AspectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 48
      },
      "name": "InstanceRequireImdsv2AspectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "remarks": "You can set this to `true` if `LaunchTemplateImdsAspect` is being used alongside this Aspect to\nsuppress false-positive warnings because any Launch Templates associated with Instances will still be covered.",
            "stability": "stable",
            "summary": "Whether warnings that would be raised when an Instance is associated with an existing Launch Template should be suppressed or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 58
          },
          "name": "suppressLaunchTemplateWarning",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether warning annotations from this Aspect should be suppressed or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 17
          },
          "name": "suppressWarnings",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/aspects/require-imdsv2-aspect:InstanceRequireImdsv2AspectProps"
    },
    "@aws-cdk/aws-ec2.InstanceSize": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\nnew rds.DatabaseInstanceFromSnapshot(this, 'Instance', {\n  snapshotIdentifier: 'my-snapshot',\n  engine: rds.DatabaseInstanceEngine.postgres({ version: rds.PostgresEngineVersion.VER_12_3 }),\n  // optional, defaults to m5.large\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.LARGE),\n  vpc,\n});\n\ndeclare const sourceInstance: rds.DatabaseInstance;\nnew rds.DatabaseInstanceReadReplica(this, 'ReadReplica', {\n  sourceDatabaseInstance: sourceInstance,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.LARGE),\n  vpc,\n});",
        "stability": "stable",
        "summary": "What size of instance to use."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceSize",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 798
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size NANO (nano)."
          },
          "name": "NANO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size MICRO (micro)."
          },
          "name": "MICRO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size SMALL (small)."
          },
          "name": "SMALL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size MEDIUM (medium)."
          },
          "name": "MEDIUM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size LARGE (large)."
          },
          "name": "LARGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE (xlarge)."
          },
          "name": "XLARGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE2 (2xlarge)."
          },
          "name": "XLARGE2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE3 (3xlarge)."
          },
          "name": "XLARGE3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE4 (4xlarge)."
          },
          "name": "XLARGE4"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE6 (6xlarge)."
          },
          "name": "XLARGE6"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE8 (8xlarge)."
          },
          "name": "XLARGE8"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE9 (9xlarge)."
          },
          "name": "XLARGE9"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE10 (10xlarge)."
          },
          "name": "XLARGE10"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE12 (12xlarge)."
          },
          "name": "XLARGE12"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE16 (16xlarge)."
          },
          "name": "XLARGE16"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE18 (18xlarge)."
          },
          "name": "XLARGE18"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE24 (24xlarge)."
          },
          "name": "XLARGE24"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE32 (32xlarge)."
          },
          "name": "XLARGE32"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE48 (48xlarge)."
          },
          "name": "XLARGE48"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE56 (56xlarge)."
          },
          "name": "XLARGE56"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size XLARGE56 (112xlarge)."
          },
          "name": "XLARGE112"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance size METAL (metal)."
          },
          "name": "METAL"
        }
      ],
      "name": "InstanceSize",
      "symbolId": "lib/instance-types:InstanceSize"
    },
    "@aws-cdk/aws-ec2.InstanceType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser', // NOTE: 'admin' is reserved by DocumentDB\n    excludeCharacters: '\\\"@/:', // optional, defaults to the set \"\\\"@/\" and is also used for eventually created rotations\n    secretName: '/myapp/mydocdb/masteruser', // optional, if you prefer to specify the secret name\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n});",
        "remarks": "This class takes a literal string, good if you already\nknow the identifier of the type you want.",
        "stability": "stable",
        "summary": "Instance type for EC2 instances."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceType",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/instance-types.ts",
          "line": 929
        },
        "parameters": [
          {
            "name": "instanceTypeIdentifier",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance-types.ts",
        "line": 916
      },
      "methods": [
        {
          "docs": {
            "remarks": "This class takes a combination of a class and size.\n\nBe aware that not all combinations of class and size are available, and not all\nclasses are available in all regions.",
            "stability": "stable",
            "summary": "Instance type for EC2 instances."
          },
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 925
          },
          "name": "of",
          "parameters": [
            {
              "name": "instanceClass",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InstanceClass"
              }
            },
            {
              "name": "instanceSize",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InstanceSize"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the instance type as a dotted string."
          },
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 935
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "InstanceType",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance's CPU architecture."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance-types.ts",
            "line": 942
          },
          "name": "architecture",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceArchitecture"
          }
        }
      ],
      "symbolId": "lib/instance-types:InstanceType"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpoint": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.VpcEndpoint",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::EC2::VPCEndpoint"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  subnets: {\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});",
        "stability": "stable",
        "summary": "A interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 531
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 475
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports an existing interface VPC endpoint."
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 479
          },
          "name": "fromInterfaceVpcEndpointAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpoint"
            }
          },
          "static": true
        }
      ],
      "name": "InterfaceVpcEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Access to network connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 529
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "deprecated": "use the `connections` object",
            "stability": "deprecated",
            "summary": "The identifier of the first security group associated with this interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 524
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The date and time the interface VPC endpoint was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 504
          },
          "name": "vpcEndpointCreationTimestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The DNS entries for the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 510
          },
          "name": "vpcEndpointDnsEntries",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The interface VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 498
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.VpcEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "One or more network interfaces for the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 516
          },
          "name": "vpcEndpointNetworkInterfaceIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpoint"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for an ImportedInterfaceVpcEndpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const securityGroup: ec2.SecurityGroup;\nconst interfaceVpcEndpointAttributes: ec2.InterfaceVpcEndpointAttributes = {\n  port: 123,\n  vpcEndpointId: 'vpcEndpointId',\n\n  // the properties below are optional\n  securityGroupId: 'securityGroupId',\n  securityGroups: [securityGroup],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 661
      },
      "name": "InterfaceVpcEndpointAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The port of the service of the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 683
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The interface VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 665
          },
          "name": "vpcEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "use `securityGroups` instead",
            "stability": "deprecated",
            "summary": "The identifier of the security group associated with the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 672
          },
          "name": "securityGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The security groups associated with the interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 678
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointAttributes"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/integ.vpc-endpoint.lit.ts infused"
        },
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "An AWS service for an interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 331
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "prefix",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "port",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 260
      },
      "name": "InterfaceVpcEndpointAwsService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 285
          },
          "name": "APIGATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 262
          },
          "name": "ATHENA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 263
          },
          "name": "CLOUDFORMATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 264
          },
          "name": "CLOUDTRAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 294
          },
          "name": "CLOUDWATCH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 284
          },
          "name": "CLOUDWATCH_EVENTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 293
          },
          "name": "CLOUDWATCH_LOGS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 265
          },
          "name": "CODEBUILD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 266
          },
          "name": "CODEBUILD_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 267
          },
          "name": "CODECOMMIT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 268
          },
          "name": "CODECOMMIT_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 286
          },
          "name": "CODECOMMIT_GIT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 287
          },
          "name": "CODECOMMIT_GIT_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 269
          },
          "name": "CODEGURU_PROFILER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 270
          },
          "name": "CODEGURU_REVIEWER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 271
          },
          "name": "CODEPIPELINE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 272
          },
          "name": "CONFIG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 273
          },
          "name": "EC2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 274
          },
          "name": "EC2_MESSAGES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 275
          },
          "name": "ECR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 276
          },
          "name": "ECR_DOCKER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 277
          },
          "name": "ECS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 278
          },
          "name": "ECS_AGENT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 279
          },
          "name": "ECS_TELEMETRY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 280
          },
          "name": "ELASTIC_FILESYSTEM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 281
          },
          "name": "ELASTIC_FILESYSTEM_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 282
          },
          "name": "ELASTIC_INFERENCE_RUNTIME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 283
          },
          "name": "ELASTIC_LOAD_BALANCING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 288
          },
          "name": "GLUE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 289
          },
          "name": "KEYSPACES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 291
          },
          "name": "KINESIS_FIREHOSE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 290
          },
          "name": "KINESIS_STREAMS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 292
          },
          "name": "KMS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 312
          },
          "name": "LAMBDA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 295
          },
          "name": "RDS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 296
          },
          "name": "RDS_DATA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 309
          },
          "name": "REKOGNITION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 310
          },
          "name": "REKOGNITION_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 297
          },
          "name": "SAGEMAKER_API",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 261
          },
          "name": "SAGEMAKER_NOTEBOOK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 298
          },
          "name": "SAGEMAKER_RUNTIME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 299
          },
          "name": "SAGEMAKER_RUNTIME_FIPS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 300
          },
          "name": "SECRETS_MANAGER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 301
          },
          "name": "SERVICE_CATALOG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 302
          },
          "name": "SNS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 303
          },
          "name": "SQS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 304
          },
          "name": "SSM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 305
          },
          "name": "SSM_MESSAGES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 311
          },
          "name": "STEP_FUNCTIONS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 308
          },
          "name": "STORAGE_GATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 306
          },
          "name": "STS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 313
          },
          "name": "TRANSCRIBE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 307
          },
          "name": "TRANSFER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 314
          },
          "name": "XRAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointAwsService"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 319
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 324
          },
          "name": "port",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether Private DNS is supported by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 329
          },
          "name": "privateDnsDefault",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointAwsService"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/integ.vpc-endpoint.lit.ts infused"
        },
        "example": "    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });",
        "stability": "stable",
        "summary": "Options to add an interface endpoint to a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 404
      },
      "name": "InterfaceVpcEndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The service to use for this interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 408
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Setting this to 'true' requires a lookup to be performed at synthesis time. Account\nand region must be set on the containing stack for this to work.",
            "stability": "stable",
            "summary": "Limit to only those availability zones where the endpoint service can be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 452
          },
          "name": "lookupSupportedAzs",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If enabled, all traffic to the endpoint from within the VPC will be\nautomatically allowed. This is done based on the VPC's CIDR range.",
            "stability": "stable",
            "summary": "Whether to automatically allow VPC traffic to the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 442
          },
          "name": "open",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "set by the instance of IInterfaceVpcEndpointService, or true if\nnot defined by the instance of IInterfaceVpcEndpointService",
            "remarks": "This\nallows you to make requests to the service using its default DNS hostname.",
            "stability": "stable",
            "summary": "Whether to associate a private hosted zone with the specified VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 417
          },
          "name": "privateDnsEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new security group is created",
            "stability": "stable",
            "summary": "The security groups to associate with this interface VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 432
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- private subnets",
            "remarks": "At most one\nper availability zone.",
            "stability": "stable",
            "summary": "The subnets in which to create an endpoint network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 425
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointOptions"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  subnets: {\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});",
        "stability": "stable",
        "summary": "Construction properties for an InterfaceVpcEndpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 458
      },
      "name": "InterfaceVpcEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC network in which the interface endpoint will be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 462
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointProps"
    },
    "@aws-cdk/aws-ec2.InterfaceVpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nnew ec2.InterfaceVpcEndpoint(this, 'VPC Endpoint', {\n  vpc,\n  service: new ec2.InterfaceVpcEndpointService('com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc', 443),\n  // Choose which availability zones to place the VPC endpoint in, based on\n  // available AZs\n  subnets: {\n    availabilityZones: ['us-east-1a', 'us-east-1c']\n  }\n});",
        "stability": "stable",
        "summary": "A custom-hosted service for an interface VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint.ts",
          "line": 251
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "port",
            "optional": true,
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 234
      },
      "name": "InterfaceVpcEndpointService",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 239
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 244
          },
          "name": "port",
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether Private DNS is supported by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 249
          },
          "name": "privateDnsDefault",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IInterfaceVpcEndpointService",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:InterfaceVpcEndpointService"
    },
    "@aws-cdk/aws-ec2.LaunchTemplate": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const bootHookConf = ec2.UserData.forLinux();\nbootHookConf.addCommands('cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=40G\"\\' >> /etc/sysconfig/docker');\n\nconst setupCommands = ec2.UserData.forLinux();\nsetupCommands.addCommands('sudo yum install awscli && echo Packages installed らと > /var/tmp/setup');\n\nconst multipartUserData = new ec2.MultipartUserData();\n// The docker has to be configured at early stage, so content type is overridden to boothook\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHookConf, 'text/cloud-boothook; charset=\"us-ascii\"'));\n// Execute the rest of setup\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(setupCommands));\n\nnew ec2.LaunchTemplate(this, '', {\n  userData: multipartUserData,\n  blockDevices: [\n    // Block device configuration rest\n  ]\n});",
        "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html",
        "stability": "stable",
        "summary": "This represents an EC2 LaunchTemplate."
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplate",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/launch-template.ts",
          "line": 499
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.LaunchTemplateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ILaunchTemplate",
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 399
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing LaunchTemplate."
          },
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 403
          },
          "name": "fromLaunchTemplateAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LaunchTemplateAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ILaunchTemplate"
            }
          },
          "static": true
        }
      ],
      "name": "LaunchTemplate",
      "properties": [
        {
          "docs": {
            "custom": {
              "note": "Only available if you provide a securityGroup when constructing the LaunchTemplate."
            },
            "stability": "stable",
            "summary": "Allows specifying security group connections for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 677
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The default version for the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 433
          },
          "name": "defaultVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "note": "Only available if you provide a role when constructing the LaunchTemplate."
            },
            "stability": "stable",
            "summary": "Principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 689
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The latest version of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 440
          },
          "name": "latestVersionNumber",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TagManager for tagging support."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 495
          },
          "name": "tags",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The version number of this launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 421
          },
          "name": "versionNumber",
          "overrides": "@aws-cdk/aws-ec2.ILaunchTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The AMI ID of the image to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 454
          },
          "name": "imageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 475
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "docs": {
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` will be set.",
            "stability": "stable",
            "summary": "The identifier of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 422
          },
          "name": "launchTemplateId",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.ILaunchTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` will be set.",
            "stability": "stable",
            "summary": "The name of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 423
          },
          "name": "launchTemplateName",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.ILaunchTemplate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The type of OS the instance is running."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 447
          },
          "name": "osType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "IAM Role assumed by instances that are launched from this template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 461
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "UserData executed by instances that are launched from this template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 468
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplate"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes for an imported LaunchTemplate.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateAttributes: ec2.LaunchTemplateAttributes = {\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n  versionNumber: 'versionNumber',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 367
      },
      "name": "LaunchTemplateAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` may be set.",
            "stability": "stable",
            "summary": "The identifier of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 382
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "remarks": "Exactly one of `launchTemplateId` and `launchTemplateName` may be set.",
            "stability": "stable",
            "summary": "The name of the Launch Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 391
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Version: \"$Default\"",
            "stability": "stable",
            "summary": "The version number of this launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 373
          },
          "name": "versionNumber",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplateAttributes"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const bootHookConf = ec2.UserData.forLinux();\nbootHookConf.addCommands('cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=40G\"\\' >> /etc/sysconfig/docker');\n\nconst setupCommands = ec2.UserData.forLinux();\nsetupCommands.addCommands('sudo yum install awscli && echo Packages installed らと > /var/tmp/setup');\n\nconst multipartUserData = new ec2.MultipartUserData();\n// The docker has to be configured at early stage, so content type is overridden to boothook\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHookConf, 'text/cloud-boothook; charset=\"us-ascii\"'));\n// Execute the rest of setup\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(setupCommands));\n\nnew ec2.LaunchTemplate(this, '', {\n  userData: multipartUserData,\n  blockDevices: [\n    // Block device configuration rest\n  ]\n});",
        "stability": "stable",
        "summary": "Properties of a LaunchTemplate."
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 199
      },
      "name": "LaunchTemplateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Uses the block device mapping of the AMI",
            "remarks": "Each instance that is launched has an associated root device volume,\neither an Amazon EBS volume or an instance store volume.\nYou can use block device mappings to specify additional EBS volumes or\ninstance store volumes to attach to an instance when it is launched.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
            "stability": "stable",
            "summary": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 255
          },
          "name": "blockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.BlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No credit type is specified in the Launch Template.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html",
            "stability": "stable",
            "summary": "CPU credit type for burstable EC2 instance types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 264
          },
          "name": "cpuCredits",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CpuCredits"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "False - Detailed monitoring is disabled.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html",
            "stability": "stable",
            "summary": "If set to true, then detailed monitoring will be enabled on instances created with this launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 329
          },
          "name": "detailedMonitoring",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The API termination setting is not specified in the Launch Template.",
            "remarks": "otherwise, you can.",
            "stability": "stable",
            "summary": "If you set this parameter to true, you cannot terminate the instances launched with this launch template using the Amazon EC2 console, CLI, or API;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 272
          },
          "name": "disableApiTermination",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EBS optimization is not specified in the launch template.",
            "remarks": "This optimization provides dedicated throughput\nto Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization\nisn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.",
            "stability": "stable",
            "summary": "Indicates whether the instances are optimized for Amazon EBS I/O."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 281
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Hibernation configuration is not specified in the launch template; defaulting to false.",
            "stability": "stable",
            "summary": "If you set this parameter to true, the instance is enabled for hibernation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 295
          },
          "name": "hibernationConfigured",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Shutdown behavior is not specified in the launch template; defaults to STOP.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior",
            "stability": "stable",
            "summary": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 304
          },
          "name": "instanceInitiatedShutdownBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceInitiatedShutdownBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- This Launch Template does not specify a default Instance Type.",
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 212
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No SSH access will be possible.",
            "stability": "stable",
            "summary": "Name of SSH keypair to grant access to instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 319
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name",
            "stability": "stable",
            "summary": "Name for this launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 205
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- This Launch Template does not specify a default AMI.",
            "stability": "stable",
            "summary": "The AMI that will be used by instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 219
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Enablement of Nitro enclaves is not specified in the launch template; defaulting to false.",
            "remarks": "otherwise, it is not enabled for AWS Nitro Enclaves.",
            "stability": "stable",
            "summary": "If this parameter is set to true, the instance is enabled for AWS Nitro Enclaves;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 288
          },
          "name": "nitroEnclaveEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether IMDSv2 should be required on launched instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 343
          },
          "name": "requireImdsv2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No new role is created.",
            "example": "const role = new iam.Role(this, 'MyRole', {\n  assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n});",
            "remarks": "The role must be assumable by the service principal `ec2.amazonaws.com`:",
            "stability": "stable",
            "summary": "An IAM role to associate with the instance profile that is used by instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 241
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No security group is assigned.",
            "stability": "stable",
            "summary": "Security group to assign to instances created with the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 336
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Instance launched with this template will not be spot instances.",
            "stability": "stable",
            "summary": "If this property is defined, then the Launch Template's InstanceMarketOptions will be set to use Spot instances, and the options for the Spot instances will be as defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 312
          },
          "name": "spotOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.LaunchTemplateSpotOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- This Launch Template creates a UserData based on the type of provided\nmachineImage; no UserData is created if a machineImage is not provided",
            "stability": "stable",
            "summary": "The AMI that will be used by instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 227
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplateProps"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2Aspect": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-metadataoptions.html",
        "stability": "stable",
        "summary": "Aspect that applies IMDS configuration on EC2 Launch Template constructs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateRequireImdsv2Aspect = new ec2.LaunchTemplateRequireImdsv2Aspect(/* all optional props */ {\n  suppressWarnings: false,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2Aspect",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/aspects/require-imdsv2-aspect.ts",
          "line": 124
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2AspectProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 123
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 128
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a warning annotation to a node, unless `suppressWarnings` is true."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 38
          },
          "name": "warn",
          "parameters": [
            {
              "docs": {
                "summary": "The scope to add the warning to."
              },
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            },
            {
              "docs": {
                "summary": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "LaunchTemplateRequireImdsv2Aspect",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 24
          },
          "name": "suppressWarnings",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/aspects/require-imdsv2-aspect:LaunchTemplateRequireImdsv2Aspect"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2AspectProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `LaunchTemplateRequireImdsv2Aspect`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateRequireImdsv2AspectProps: ec2.LaunchTemplateRequireImdsv2AspectProps = {\n  suppressWarnings: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateRequireImdsv2AspectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 116
      },
      "name": "LaunchTemplateRequireImdsv2AspectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether warning annotations from this Aspect should be suppressed or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 17
          },
          "name": "suppressWarnings",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/aspects/require-imdsv2-aspect:LaunchTemplateRequireImdsv2AspectProps"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateSpecialVersions": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "A class that provides convenient access to special version tokens for LaunchTemplate versions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst launchTemplateSpecialVersions = new ec2.LaunchTemplateSpecialVersions();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateSpecialVersions",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 350
      },
      "name": "LaunchTemplateSpecialVersions",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The special value that denotes that users of a Launch Template should reference the DEFAULT version of the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 361
          },
          "name": "DEFAULT_VERSION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The special value that denotes that users of a Launch Template should reference the LATEST version of the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 355
          },
          "name": "LATEST_VERSION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplateSpecialVersions"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateSpotOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Interface for the Spot market instance options provided in a LaunchTemplate.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const expiration: cdk.Expiration;\nconst launchTemplateSpotOptions: ec2.LaunchTemplateSpotOptions = {\n  blockDuration: cdk.Duration.minutes(30),\n  interruptionBehavior: ec2.SpotInstanceInterruption.STOP,\n  maxPrice: 123,\n  requestType: ec2.SpotRequestType.ONE_TIME,\n  validUntil: expiration,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateSpotOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 149
      },
      "name": "LaunchTemplateSpotOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Requested spot instances do not have a pre-defined duration.",
            "remarks": "You can use a duration of 1, 2, 3, 4, 5, or 6 hours.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#fixed-duration-spot-instances",
            "stability": "stable",
            "summary": "Spot Instances with a defined duration (also known as Spot blocks) are designed not to be interrupted and will run continuously for the duration you select."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 158
          },
          "name": "blockDuration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Spot instances will terminate when interrupted.",
            "stability": "stable",
            "summary": "The behavior when a Spot Instance is interrupted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 165
          },
          "name": "interruptionBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SpotInstanceInterruption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Maximum hourly price will default to the on-demand price for the instance type.",
            "remarks": "The value is given\nin dollars. ex: 0.01 for 1 cent per hour, or 0.001 for one-tenth of a cent per hour.",
            "stability": "stable",
            "summary": "Maximum hourly price you're willing to pay for each Spot instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 173
          },
          "name": "maxPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "One-time spot request.",
            "remarks": "If you are using Spot Instances with an Auto Scaling group, use one-time requests, as the\nAmazon EC2 Auto Scaling service handles requesting new Spot Instances whenever the group is\nbelow its desired capacity.",
            "stability": "stable",
            "summary": "The Spot Instance request type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 184
          },
          "name": "requestType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SpotRequestType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default end date is 7 days from the current date.",
            "remarks": "For a one-time request, the request remains active until all instances\nlaunch, the request is canceled, or this date is reached. If the request is persistent, it remains\nactive until it is canceled or this date and time is reached.",
            "stability": "stable",
            "summary": "The end date of the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/launch-template.ts",
            "line": 193
          },
          "name": "validUntil",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Expiration"
          }
        }
      ],
      "symbolId": "lib/launch-template:LaunchTemplateSpotOptions"
    },
    "@aws-cdk/aws-ec2.LinuxUserDataOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options when constructing UserData for Linux.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst linuxUserDataOptions: ec2.LinuxUserDataOptions = {\n  shebang: 'shebang',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.LinuxUserDataOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 8
      },
      "name": "LinuxUserDataOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "\"#!/bin/bash\"",
            "stability": "stable",
            "summary": "Shebang for the UserData script."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 14
          },
          "name": "shebang",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:LinuxUserDataOptions"
    },
    "@aws-cdk/aws-ec2.LocationPackageOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for InitPackage.rpm/InitPackage.msi.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const initServiceRestartHandle: ec2.InitServiceRestartHandle;\nconst locationPackageOptions: ec2.LocationPackageOptions = {\n  key: 'key',\n  serviceRestartHandles: [initServiceRestartHandle],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.LocationPackageOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 617
      },
      "name": "LocationPackageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated",
            "remarks": "You can use this to order package installs.",
            "stability": "stable",
            "summary": "Identifier key for this package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 625
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given service after this command has run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 632
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:LocationPackageOptions"
    },
    "@aws-cdk/aws-ec2.LookupMachineImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "The most recent, available, launchable image matching the given filter\ncriteria will be used. Looking up AMIs may take a long time; specify\nas many filter criteria as possible to narrow down the search.\n\nThe AMI selected will be cached in `cdk.context.json` and the same value\nwill be used on future runs. To refresh the AMI lookup, you will have to\nevict the value from the cache using the `cdk context` command. See\nhttps://docs.aws.amazon.com/cdk/latest/guide/context.html for more information.",
        "stability": "stable",
        "summary": "A machine image whose AMI ID will be searched using DescribeImages.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\nconst lookupMachineImage = new ec2.LookupMachineImage({\n  name: 'name',\n\n  // the properties below are optional\n  filters: {\n    filtersKey: ['filters'],\n  },\n  owners: ['owners'],\n  userData: userData,\n  windows: false,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.LookupMachineImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 642
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.LookupMachineImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 641
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the image to use in the given context."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 645
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "LookupMachineImage",
      "symbolId": "lib/machine-image:LookupMachineImage"
    },
    "@aws-cdk/aws-ec2.LookupMachineImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "Properties for looking up an image."
      },
      "fqn": "@aws-cdk/aws-ec2.LookupMachineImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 682
      },
      "name": "LookupMachineImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the image (may contain wildcards)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 686
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional filters",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html",
            "stability": "stable",
            "summary": "Additional filters on the AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 701
          },
          "name": "filters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All owners",
            "stability": "stable",
            "summary": "Owner account IDs or aliases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 693
          },
          "name": "owners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Empty user data appropriate for the platform type",
            "stability": "stable",
            "summary": "Custom userdata for this image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 715
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Look for Windows images."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 708
          },
          "name": "windows",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/machine-image:LookupMachineImageProps"
    },
    "@aws-cdk/aws-ec2.MachineImage": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nconst template = new ec2.LaunchTemplate(this, 'LaunchTemplate', {\n  machineImage: ec2.MachineImage.latestAmazonLinux(),\n  securityGroup: new ec2.SecurityGroup(this, 'LaunchTemplateSG', {\n    vpc: vpc,\n  }),\n});",
        "stability": "stable",
        "summary": "Factory functions for standard Amazon Machine Image objects."
      },
      "fqn": "@aws-cdk/aws-ec2.MachineImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "remarks": "By default, the SSM parameter is refreshed at every deployment,\ncausing your instances to be replaced whenever a new version of the AMI\nis released.\n\nPass `{ cachedInContext: true }` to keep the AMI ID stable. If you do, you\nwill have to remember to periodically invalidate the context to refresh\nto the newest AMI ID.",
            "stability": "stable",
            "summary": "An image specified in SSM parameter store."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 100
          },
          "name": "fromSsmParameter",
          "parameters": [
            {
              "name": "parameterName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SsmParameterImageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "deprecated": "Use `MachineImage.fromSsmParameter()` instead",
            "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.",
            "stability": "deprecated",
            "summary": "An image specified in SSM parameter store that is automatically kept up-to-date."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 85
          },
          "name": "fromSSMParameter",
          "parameters": [
            {
              "docs": {
                "summary": "The name of SSM parameter containing the AMi id."
              },
              "name": "parameterName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The operating system type of the AMI."
              },
              "name": "os",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
              }
            },
            {
              "docs": {
                "summary": "optional user data for the given image."
              },
              "name": "userData",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.UserData"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A Linux image where you specify the AMI ID for every region."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 57
          },
          "name": "genericLinux",
          "parameters": [
            {
              "docs": {
                "summary": "For every region where you are deploying the stack, specify the AMI ID for that region."
              },
              "name": "amiMap",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "docs": {
                "summary": "Customize the image by supplying additional props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GenericLinuxImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A Windows image where you specify the AMI ID for every region."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 68
          },
          "name": "genericWindows",
          "parameters": [
            {
              "docs": {
                "summary": "For every region where you are deploying the stack, specify the AMI ID for that region."
              },
              "name": "amiMap",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "docs": {
                "summary": "Customize the image by supplying additional props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GenericWindowsImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.",
            "stability": "stable",
            "summary": "An Amazon Linux image that is automatically kept up-to-date."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 46
          },
          "name": "latestAmazonLinux",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.",
            "stability": "stable",
            "summary": "A Windows image that is automatically kept up-to-date."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 34
          },
          "name": "latestWindows",
          "parameters": [
            {
              "name": "version",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.WindowsVersion"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.WindowsImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The most recent, available, launchable image matching the given filter\ncriteria will be used. Looking up AMIs may take a long time; specify\nas many filter criteria as possible to narrow down the search.\n\nThe AMI selected will be cached in `cdk.context.json` and the same value\nwill be used on future runs. To refresh the AMI lookup, you will have to\nevict the value from the cache using the `cdk context` command. See\nhttps://docs.aws.amazon.com/cdk/latest/guide/context.html for more information.\n\nThis function can not be used in environment-agnostic stacks.",
            "stability": "stable",
            "summary": "Look up a shared Machine Image using DescribeImages."
          },
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 118
          },
          "name": "lookup",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LookupMachineImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IMachineImage"
            }
          },
          "static": true
        }
      ],
      "name": "MachineImage",
      "symbolId": "lib/machine-image:MachineImage"
    },
    "@aws-cdk/aws-ec2.MachineImageConfig": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for a machine image.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\nconst machineImageConfig: ec2.MachineImageConfig = {\n  imageId: 'imageId',\n  osType: ec2.OperatingSystemType.LINUX,\n  userData: userData,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.MachineImageConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 126
      },
      "name": "MachineImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AMI ID of the image to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 130
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Operating system type for this image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 135
          },
          "name": "osType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Initial UserData for this image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 140
          },
          "name": "userData",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:MachineImageConfig"
    },
    "@aws-cdk/aws-ec2.MultipartBody": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const multipartUserData = new ec2.MultipartUserData();\nconst commandsUserData = ec2.UserData.forLinux();\nmultipartUserData.addUserDataPart(commandsUserData, ec2.MultipartBody.SHELL_SCRIPT, true);\n\n// Adding commands to the multipartUserData adds them to commandsUserData, and vice-versa.\nmultipartUserData.addCommands('touch /root/multi.txt');\ncommandsUserData.addCommands('touch /root/userdata.txt');",
        "stability": "stable",
        "summary": "The base class for all classes which can be used as {@link MultipartUserData}."
      },
      "fqn": "@aws-cdk/aws-ec2.MultipartBody",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-data.ts",
          "line": 354
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 320
      },
      "methods": [
        {
          "docs": {
            "remarks": "When transfer encoding is specified (typically as Base64), it's caller responsibility to convert body to\nBase64 either by wrapping with `Fn.base64` or by converting it by other converters.",
            "stability": "stable",
            "summary": "Constructs the raw `MultipartBody` using specified body, content type and transfer encoding."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 350
          },
          "name": "fromRawBody",
          "parameters": [
            {
              "name": "opts",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.MultipartBodyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MultipartBody"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For more information about content types see {@link MultipartBodyOptions.contentType}.",
            "stability": "stable",
            "summary": "Constructs the new `MultipartBody` wrapping existing `UserData`. Modification to `UserData` are reflected in subsequent renders of the part."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 340
          },
          "name": "fromUserData",
          "parameters": [
            {
              "docs": {
                "summary": "user data to wrap into body part."
              },
              "name": "userData",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.UserData"
              }
            },
            {
              "docs": {
                "summary": "optional content type, if default one should not be used."
              },
              "name": "contentType",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MultipartBody"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Subclasses should not add leading nor trailing new line characters (\\r \\n)",
            "stability": "stable",
            "summary": "Render body part as the string."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 362
          },
          "name": "renderBodyPart",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "MultipartBody",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Content type for boot hooks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 329
          },
          "name": "CLOUD_BOOTHOOK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Content type for shell scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 324
          },
          "name": "SHELL_SCRIPT",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:MultipartBody"
    },
    "@aws-cdk/aws-ec2.MultipartBodyOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options when creating `MultipartBody`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst multipartBodyOptions: ec2.MultipartBodyOptions = {\n  contentType: 'contentType',\n\n  // the properties below are optional\n  body: 'body',\n  transferEncoding: 'transferEncoding',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.MultipartBodyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 289
      },
      "name": "MultipartBodyOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Some examples of content types:\n* `text/x-shellscript; charset=\"utf-8\"` (shell script)\n* `text/cloud-boothook; charset=\"utf-8\"` (shell script executed during boot phase)\n\nFor Linux shell scripts use `text/x-shellscript`.",
            "stability": "stable",
            "summary": "`Content-Type` header of this part."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 300
          },
          "name": "contentType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined - body will not be added to part",
            "stability": "stable",
            "summary": "The body of message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 314
          },
          "name": "body",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined - body is not encoded",
            "stability": "stable",
            "summary": "`Content-Transfer-Encoding` header specifying part encoding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 307
          },
          "name": "transferEncoding",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:MultipartBodyOptions"
    },
    "@aws-cdk/aws-ec2.MultipartUserData": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.UserData",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const bootHookConf = ec2.UserData.forLinux();\nbootHookConf.addCommands('cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=40G\"\\' >> /etc/sysconfig/docker');\n\nconst setupCommands = ec2.UserData.forLinux();\nsetupCommands.addCommands('sudo yum install awscli && echo Packages installed らと > /var/tmp/setup');\n\nconst multipartUserData = new ec2.MultipartUserData();\n// The docker has to be configured at early stage, so content type is overridden to boothook\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHookConf, 'text/cloud-boothook; charset=\"us-ascii\"'));\n// Execute the rest of setup\nmultipartUserData.addPart(ec2.MultipartBody.fromUserData(setupCommands));\n\nnew ec2.LaunchTemplate(this, '', {\n  userData: multipartUserData,\n  blockDevices: [\n    // Block device configuration rest\n  ]\n});",
        "remarks": "This class represents MIME multipart user data, as described in.\n[Specifying Multiple User Data Blocks Using a MIME Multi Part Archive](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#multi-part_user_data)",
        "stability": "stable",
        "summary": "Mime multipart user data."
      },
      "fqn": "@aws-cdk/aws-ec2.MultipartUserData",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/user-data.ts",
          "line": 454
        },
        "parameters": [
          {
            "name": "opts",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MultipartUserDataOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 444
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add one or more commands to the user data."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 561
          },
          "name": "addCommands",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds commands to execute a file."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 545
          },
          "name": "addExecuteFileCommand",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "params",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ExecuteFileOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add one or more commands to the user data that will run when the script exits."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 569
          },
          "name": "addOnExitCommands",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a part to the list of parts."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 478
          },
          "name": "addPart",
          "parameters": [
            {
              "name": "part",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.MultipartBody"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds commands to download a file from S3."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 537
          },
          "name": "addS3DownloadCommand",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "params",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.S3DownloadOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a command which will send a cfn-signal when the user data script ends."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 553
          },
          "name": "addSignalOnExitCommand",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/core.Resource"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "If `makeDefault` is true, then the UserData added by this method\nwill also be the target of calls to the `add*Command` methods on\nthis MultipartUserData object.\n\nIf `makeDefault` is false, then this is the same as calling:\n\n```ts\ndeclare const multiPart: ec2.MultipartUserData;\ndeclare const userData: ec2.UserData;\ndeclare const contentType: string;\n\nmultiPart.addPart(ec2.MultipartBody.fromUserData(userData, contentType));\n```\n\nAn undefined `makeDefault` defaults to either:\n- `true` if no default UserData has been set yet; or\n- `false` if there is no default UserData set.",
            "stability": "stable",
            "summary": "Adds a multipart part based on a UserData object."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 503
          },
          "name": "addUserDataPart",
          "parameters": [
            {
              "name": "userData",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.UserData"
              }
            },
            {
              "name": "contentType",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "makeDefault",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the UserData for use in a construct."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 511
          },
          "name": "render",
          "overrides": "@aws-cdk/aws-ec2.UserData",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "MultipartUserData",
      "symbolId": "lib/user-data:MultipartUserData"
    },
    "@aws-cdk/aws-ec2.MultipartUserDataOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating {@link MultipartUserData}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst multipartUserDataOptions: ec2.MultipartUserDataOptions = {\n  partsSeparator: 'partsSeparator',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.MultipartUserDataOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 426
      },
      "name": "MultipartUserDataOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "`+AWS+CDK+User+Data+Separator==`",
            "remarks": "This string should contain [a-zA-Z0-9()+,-./:=?] characters only, and should not be present in any part, or in text content of archive.",
            "stability": "stable",
            "summary": "The string used to separate parts in multipart user data archive (it's like MIME boundary)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 434
          },
          "name": "partsSeparator",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:MultipartUserDataOptions"
    },
    "@aws-cdk/aws-ec2.NamedPackageOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for InitPackage.yum/apt/rubyGem/python.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const initServiceRestartHandle: ec2.InitServiceRestartHandle;\nconst namedPackageOptions: ec2.NamedPackageOptions = {\n  serviceRestartHandles: [initServiceRestartHandle],\n  version: ['version'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.NamedPackageOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cfn-init-elements.ts",
        "line": 638
      },
      "name": "NamedPackageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Do not restart any service",
            "stability": "stable",
            "summary": "Restart the given services after this command has run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 651
          },
          "name": "serviceRestartHandles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.InitServiceRestartHandle"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Install the latest version",
            "stability": "stable",
            "summary": "Specify the versions to install."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cfn-init-elements.ts",
            "line": 644
          },
          "name": "version",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cfn-init-elements:NamedPackageOptions"
    },
    "@aws-cdk/aws-ec2.NatGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a NAT gateway.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst natGatewayProps: ec2.NatGatewayProps = {\n  eipAllocationIds: ['eipAllocationIds'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.NatGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 130
      },
      "name": "NatGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No fixed EIPs allocated for the NAT gateways",
            "stability": "stable",
            "summary": "EIP allocation IDs for the NAT gateways."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 136
          },
          "name": "eipAllocationIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/nat:NatGatewayProps"
    },
    "@aws-cdk/aws-ec2.NatInstanceImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.LookupMachineImage",
      "docs": {
        "stability": "stable",
        "summary": "Machine image representing the latest NAT instance image.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst natInstanceImage = new ec2.NatInstanceImage();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.NatInstanceImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/nat.ts",
          "line": 394
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 393
      },
      "name": "NatInstanceImage",
      "symbolId": "lib/nat:NatInstanceImage"
    },
    "@aws-cdk/aws-ec2.NatInstanceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/integ.nat-instances.lit.ts infused"
        },
        "example": "    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });",
        "stability": "stable",
        "summary": "Properties for a NAT instance."
      },
      "fqn": "@aws-cdk/aws-ec2.NatInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 144
      },
      "name": "NatInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Instance type of the NAT instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 168
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "deprecated": "- Use `defaultAllowedTraffic`.",
            "remarks": "If you set this to false, you must configure the NAT instance's security\ngroups in another way, either by passing in a fully configured Security\nGroup using the `securityGroup` property, or by configuring it using the\n`.securityGroup` or `.connections` members after passing the NAT Instance\nProvider to a Vpc.",
            "stability": "deprecated",
            "summary": "Allow all inbound traffic through the NAT instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 196
          },
          "name": "allowAllTraffic",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NatTrafficDirection.INBOUND_AND_OUTBOUND",
            "remarks": "By default, inbound and outbound traffic is allowed.\n\nIf you set this to another value than INBOUND_AND_OUTBOUND, you must\nconfigure the NAT instance's security groups in another way, either by\npassing in a fully configured Security Group using the `securityGroup`\nproperty, or by configuring it using the `.securityGroup` or\n`.connections` members after passing the NAT Instance Provider to a Vpc.",
            "stability": "stable",
            "summary": "Direction to allow all traffic through the NAT instance by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 211
          },
          "name": "defaultAllowedTraffic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.NatTrafficDirection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No SSH access will be possible.",
            "stability": "stable",
            "summary": "Name of SSH keypair to grant access to instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 175
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Latest NAT instance image",
            "remarks": "By default, will do an AMI lookup for the latest NAT instance image.\n\nIf you have a specific AMI ID you want to use, pass a `GenericLinuxImage`. For example:\n\n```ts\nec2.NatProvider.instance({\n   instanceType: new ec2.InstanceType('t3.micro'),\n   machineImage: new ec2.GenericLinuxImage({\n     'us-east-2': 'ami-0f9c61b5a562a16af'\n   })\n})\n```",
            "stability": "stable",
            "summary": "The machine image (AMI) to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 163
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group will be created",
            "stability": "stable",
            "summary": "Security Group for NAT instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 182
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        }
      ],
      "symbolId": "lib/nat:NatInstanceProps"
    },
    "@aws-cdk/aws-ec2.NatInstanceProvider": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.NatProvider",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/integ.nat-instances.lit.ts infused"
        },
        "example": "    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });",
        "stability": "stable",
        "summary": "NAT provider which uses NAT Instances."
      },
      "fqn": "@aws-cdk/aws-ec2.NatInstanceProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/nat.ts",
          "line": 271
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NatInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 266
      },
      "methods": [
        {
          "docs": {
            "remarks": "Don't call this directly, the VPC will call it automatically.",
            "stability": "stable",
            "summary": "Called by the VPC to configure NAT."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 279
          },
          "name": "configureNat",
          "overrides": "@aws-cdk/aws-ec2.NatProvider",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ConfigureNatOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Don't call this directly, the VPC will call it automatically.",
            "stability": "stable",
            "summary": "Configures subnet with the gateway."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 347
          },
          "name": "configureSubnet",
          "overrides": "@aws-cdk/aws-ec2.NatProvider",
          "parameters": [
            {
              "name": "subnet",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnet"
              }
            }
          ]
        }
      ],
      "name": "NatInstanceProvider",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return list of gateways spawned by the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 343
          },
          "name": "configuredGateways",
          "overrides": "@aws-cdk/aws-ec2.NatProvider",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.GatewayConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Manage the Security Groups associated with the NAT instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 336
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Security Group associated with the NAT instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 326
          },
          "name": "securityGroup",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        }
      ],
      "symbolId": "lib/nat:NatInstanceProvider"
    },
    "@aws-cdk/aws-ec2.NatProvider": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/integ.nat-instances.lit.ts infused"
        },
        "example": "    // Configure the `natGatewayProvider` when defining a Vpc\n    const natGatewayProvider = ec2.NatProvider.instance({\n      instanceType: new ec2.InstanceType('t3.small'),\n    });\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      natGatewayProvider,\n\n      // The 'natGateways' parameter now controls the number of NAT instances\n      natGateways: 2,\n    });",
        "remarks": "Determines what type of NAT provider to create, either NAT gateways or NAT\ninstance.",
        "stability": "stable",
        "summary": "NAT providers."
      },
      "fqn": "@aws-cdk/aws-ec2.NatProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 55
      },
      "methods": [
        {
          "docs": {
            "remarks": "NAT gateways are managed by AWS.",
            "see": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html",
            "stability": "stable",
            "summary": "Use NAT Gateways to provide NAT services for your VPC."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 63
          },
          "name": "gateway",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NatGatewayProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NatProvider"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "NAT instances are managed by you, but in return allow more configuration.\n\nBe aware that instances created using this provider will not be\nautomatically replaced if they are stopped for any reason. You should implement\nyour own NatProvider based on AutoScaling groups if you need that.",
            "see": "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_NAT_Instance.html",
            "stability": "stable",
            "summary": "Use NAT instances to provide NAT services for your VPC."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 78
          },
          "name": "instance",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.NatInstanceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NatInstanceProvider"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Don't call this directly, the VPC will call it automatically.",
            "stability": "stable",
            "summary": "Called by the VPC to configure NAT."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 92
          },
          "name": "configureNat",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ConfigureNatOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Don't call this directly, the VPC will call it automatically.",
            "stability": "stable",
            "summary": "Configures subnet with the gateway."
          },
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 99
          },
          "name": "configureSubnet",
          "parameters": [
            {
              "name": "subnet",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnet"
              }
            }
          ]
        }
      ],
      "name": "NatProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return list of gateways spawned by the provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/nat.ts",
            "line": 85
          },
          "name": "configuredGateways",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.GatewayConfig"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/nat:NatProvider"
    },
    "@aws-cdk/aws-ec2.NatTrafficDirection": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const instanceType: ec2.InstanceType;\n\nconst provider = ec2.NatProvider.instance({\n  instanceType,\n  defaultAllowedTraffic: ec2.NatTrafficDirection.OUTBOUND_ONLY,\n});\nnew ec2.Vpc(this, 'TheVPC', {\n  natGatewayProvider: provider,\n});\nprovider.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/8'), ec2.Port.tcp(80));",
        "stability": "stable",
        "summary": "Direction of traffic to allow all by default."
      },
      "fqn": "@aws-cdk/aws-ec2.NatTrafficDirection",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/nat.ts",
        "line": 14
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow all outbound traffic and disallow all inbound traffic."
          },
          "name": "OUTBOUND_ONLY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow all outbound and inbound traffic."
          },
          "name": "INBOUND_AND_OUTBOUND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Disallow all outbound and inbound traffic."
          },
          "name": "NONE"
        }
      ],
      "name": "NatTrafficDirection",
      "symbolId": "lib/nat:NatTrafficDirection"
    },
    "@aws-cdk/aws-ec2.NetworkAcl": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "By default, will deny all inbound and outbound traffic unless entries are\nadded explicitly allowing it.",
        "stability": "stable",
        "summary": "Define a new custom network ACL.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst networkAcl = new ec2.NetworkAcl(this, 'MyNetworkAcl', {\n  vpc: vpc,\n\n  // the properties below are optional\n  networkAclName: 'networkAclName',\n  subnetSelection: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkAcl",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/network-acl.ts",
          "line": 114
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NetworkAclProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.INetworkAcl"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 85
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing NetworkAcl into this app."
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 89
          },
          "name": "fromNetworkAclId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "networkAclId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a new entry to the ACL."
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 36
          },
          "name": "addEntry",
          "overrides": "@aws-cdk/aws-ec2.INetworkAcl",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NetworkAclEntry"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associate the ACL with a given set of subnets."
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 136
          },
          "name": "associateWithSubnet",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "selection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ]
        }
      ],
      "name": "NetworkAcl",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the NetworkACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 102
          },
          "name": "networkAclId",
          "overrides": "@aws-cdk/aws-ec2.INetworkAcl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The VPC ID for this NetworkACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 109
          },
          "name": "networkAclVpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:NetworkAcl"
    },
    "@aws-cdk/aws-ec2.NetworkAclEntry": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define an entry in a Network ACL table.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const aclCidr: ec2.AclCidr;\ndeclare const aclTraffic: ec2.AclTraffic;\ndeclare const networkAcl: ec2.NetworkAcl;\nconst networkAclEntry = new ec2.NetworkAclEntry(this, 'MyNetworkAclEntry', {\n  cidr: aclCidr,\n  networkAcl: networkAcl,\n  ruleNumber: 123,\n  traffic: aclTraffic,\n\n  // the properties below are optional\n  direction: ec2.TrafficDirection.EGRESS,\n  networkAclEntryName: 'networkAclEntryName',\n  ruleAction: ec2.Action.ALLOW,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkAclEntry",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/network-acl.ts",
          "line": 270
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.NetworkAclEntryProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.INetworkAclEntry"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 267
      },
      "name": "NetworkAclEntry",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 268
          },
          "name": "networkAcl",
          "overrides": "@aws-cdk/aws-ec2.INetworkAclEntry",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        }
      ],
      "symbolId": "lib/network-acl:NetworkAclEntry"
    },
    "@aws-cdk/aws-ec2.NetworkAclEntryProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create NetworkAclEntry.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const aclCidr: ec2.AclCidr;\ndeclare const aclTraffic: ec2.AclTraffic;\ndeclare const networkAcl: ec2.NetworkAcl;\nconst networkAclEntryProps: ec2.NetworkAclEntryProps = {\n  cidr: aclCidr,\n  networkAcl: networkAcl,\n  ruleNumber: 123,\n  traffic: aclTraffic,\n\n  // the properties below are optional\n  direction: ec2.TrafficDirection.EGRESS,\n  networkAclEntryName: 'networkAclEntryName',\n  ruleAction: ec2.Action.ALLOW,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkAclEntryProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.CommonNetworkAclEntryOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 255
      },
      "name": "NetworkAclEntryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The network ACL this entry applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 259
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        }
      ],
      "symbolId": "lib/network-acl:NetworkAclEntryProps"
    },
    "@aws-cdk/aws-ec2.NetworkAclProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create NetworkAcl.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst networkAclProps: ec2.NetworkAclProps = {\n  vpc: vpc,\n\n  // the properties below are optional\n  networkAclName: 'networkAclName',\n  subnetSelection: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkAclProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 50
      },
      "name": "NetworkAclProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC in which to create the NetworkACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 64
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a networkAclName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "It is not recommended to use an explicit name.",
            "stability": "stable",
            "summary": "The name of the NetworkAcl."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 59
          },
          "name": "networkAclName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No subnets associated",
            "remarks": "More subnets can always be added later by calling\n`associateWithSubnets()`.",
            "stability": "stable",
            "summary": "Subnets in the given VPC to associate the ACL with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 74
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/network-acl:NetworkAclProps"
    },
    "@aws-cdk/aws-ec2.OperatingSystemType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "The OS type of a particular image."
      },
      "fqn": "@aws-cdk/aws-ec2.OperatingSystemType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 619
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LINUX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Used when the type of the operating system is not known (for example, for imported Auto-Scaling Groups)."
          },
          "name": "UNKNOWN"
        }
      ],
      "name": "OperatingSystemType",
      "symbolId": "lib/machine-image:OperatingSystemType"
    },
    "@aws-cdk/aws-ec2.Peer": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const instanceType: ec2.InstanceType;\n\nconst provider = ec2.NatProvider.instance({\n  instanceType,\n  defaultAllowedTraffic: ec2.NatTrafficDirection.OUTBOUND_ONLY,\n});\nnew ec2.Vpc(this, 'TheVPC', {\n  natGatewayProvider: provider,\n});\nprovider.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/8'), ec2.Port.tcp(80));",
        "remarks": "The static methods on this object can be used to create peer objects\nwhich represent a connection partner in Security Group rules.\n\nUse this object if you need to represent connection partners using plain IP\naddresses, or a prefix list ID.\n\nIf you want to address a connection partner by Security Group, you can just\nuse the Security Group (or the construct that contains a Security Group)\ndirectly, as it already implements `IPeer`.",
        "stability": "stable",
        "summary": "Peer object factories (to be used in Security Group management)."
      },
      "fqn": "@aws-cdk/aws-ec2.Peer",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/peer.ts",
          "line": 85
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/peer.ts",
        "line": 42
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Any IPv4 address."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 53
          },
          "name": "anyIpv4",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any IPv6 address."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 67
          },
          "name": "anyIpv6",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an IPv4 peer from a CIDR."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 46
          },
          "name": "ipv4",
          "parameters": [
            {
              "name": "cidrIp",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an IPv6 peer from a CIDR."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 60
          },
          "name": "ipv6",
          "parameters": [
            {
              "name": "cidrIp",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A prefix list."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 74
          },
          "name": "prefixList",
          "parameters": [
            {
              "name": "prefixListId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A security group ID."
          },
          "locationInModule": {
            "filename": "lib/peer.ts",
            "line": 81
          },
          "name": "securityGroupId",
          "parameters": [
            {
              "name": "securityGroupId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "sourceSecurityGroupOwnerId",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          },
          "static": true
        }
      ],
      "name": "Peer",
      "symbolId": "lib/peer:Peer"
    },
    "@aws-cdk/aws-ec2.Port": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const loadBalancer: elbv2.ApplicationLoadBalancer;\n\nconst vpc = new ec2.Vpc(this, 'MyVPC');\nconst project = new codebuild.Project(this, 'MyProject', {\n  vpc: vpc,\n  buildSpec: codebuild.BuildSpec.fromObject({\n    // ...\n  }),\n});\n\nproject.connections.allowTo(loadBalancer, ec2.Port.tcp(443));",
        "stability": "stable",
        "summary": "Interface for classes that provide the connection-specification parts of a security group rule."
      },
      "fqn": "@aws-cdk/aws-ec2.Port",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/port.ts",
          "line": 346
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.PortProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/port.ts",
        "line": 189
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A single AH port."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 332
          },
          "name": "ah",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All ICMP traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 298
          },
          "name": "allIcmp",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any TCP traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 217
          },
          "name": "allTcp",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 310
          },
          "name": "allTraffic",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any UDP traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 253
          },
          "name": "allUdp",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A single ESP port."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 320
          },
          "name": "esp",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ICMP ping (echo) traffic."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 291
          },
          "name": "icmpPing",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All codes for a single ICMP type."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 279
          },
          "name": "icmpType",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml",
            "stability": "stable",
            "summary": "A specific combination of ICMP type and code."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 267
          },
          "name": "icmpTypeAndCode",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "code",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A single TCP port."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 193
          },
          "name": "tcp",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A TCP port range."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 205
          },
          "name": "tcpRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A single UDP port."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 229
          },
          "name": "udp",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A UDP port range."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 241
          },
          "name": "udpRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.Port"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the ingress/egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 353
          },
          "name": "toRuleJson",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 361
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Port",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the rule containing this port range can be inlined into a securitygroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 344
          },
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/port:Port"
    },
    "@aws-cdk/aws-ec2.PortProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create a port range.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst portProps: ec2.PortProps = {\n  protocol: ec2.Protocol.ALL,\n  stringRepresentation: 'stringRepresentation',\n\n  // the properties below are optional\n  fromPort: 123,\n  toPort: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.PortProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/port.ts",
        "line": 160
      },
      "name": "PortProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The protocol for the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 164
          },
          "name": "protocol",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Protocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "String representation for this object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 183
          },
          "name": "stringRepresentation",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not included in the rule",
            "stability": "stable",
            "summary": "The starting port for the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 171
          },
          "name": "fromPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not included in the rule",
            "stability": "stable",
            "summary": "The ending port for the range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/port.ts",
            "line": 178
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/port:PortProps"
    },
    "@aws-cdk/aws-ec2.PrivateSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.Subnet",
      "docs": {
        "stability": "stable",
        "summary": "Represents a private VPC subnet resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateSubnet = new ec2.PrivateSubnet(this, 'MyPrivateSubnet', {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc.ts",
          "line": 1911
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.PrivateSubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPrivateSubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1905
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1907
          },
          "name": "fromPrivateSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PrivateSubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPrivateSubnet"
            }
          },
          "static": true
        }
      ],
      "name": "PrivateSubnet",
      "symbolId": "lib/vpc:PrivateSubnet"
    },
    "@aws-cdk/aws-ec2.PrivateSubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateSubnetAttributes: ec2.PrivateSubnetAttributes = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  availabilityZone: 'availabilityZone',\n  ipv4CidrBlock: 'ipv4CidrBlock',\n  routeTableId: 'routeTableId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnetAttributes",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1900
      },
      "name": "PrivateSubnetAttributes",
      "symbolId": "lib/vpc:PrivateSubnetAttributes"
    },
    "@aws-cdk/aws-ec2.PrivateSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst privateSubnetProps: ec2.PrivateSubnetProps = {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.PrivateSubnetProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1894
      },
      "name": "PrivateSubnetProps",
      "symbolId": "lib/vpc:PrivateSubnetProps"
    },
    "@aws-cdk/aws-ec2.Protocol": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "remarks": "https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml",
        "stability": "stable",
        "summary": "Protocol for use in Connection Rules."
      },
      "fqn": "@aws-cdk/aws-ec2.Protocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/port.ts",
        "line": 8
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HOPOPT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ICMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IGMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV4"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CBT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BBN_RCC_MON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NVP_II"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PUP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EMCON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "XNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHAOS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MUX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DCN_MEAS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "XNS_IDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRUNK_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TRUNK_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LEAF_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LEAF_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IRTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ISO_TP4"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NETBLT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MFE_NSP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MERIT_INP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DCCP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "THREEPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IDPR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "XTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IDPR_CMTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TPPLUSPLUS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SDRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6_ROUTE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6_FRAG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IDRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSVP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GRE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DSR"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BNA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ESP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "I_NLSP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SWIPE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NARP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MOBILE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLSP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SKIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ICMPV6"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6_NONXT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPV6_OPTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CFTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANY_LOCAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAT_EXPAK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KRYPTOLAN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RVD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANY_DFS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SAT_MON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VISA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPCV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CPNX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CPHB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WSN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PVP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BR_SAT_MON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SUN_ND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WB_MON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WB_EXPAK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ISO_IP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VMTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SECURE_VMTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VINES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NSFNET_IGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TCF"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EIGRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "OSPFIGP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SPRITE_RPC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LARP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AX_25"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MICP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SCC_SP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ETHERIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ENCAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANY_ENC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GMTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IFMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PNNI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PIM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ARIS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SCPS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "QNX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "A_N"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPCOMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "COMPAQ_PEER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPX_IN_IP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VRRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PGM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ANY_0_HOP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "L2_T_P"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DDX"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IATP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SRP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UTI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SMP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ISIS_IPV4"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FIRE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CRTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CRUDP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SSCOPMCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPLT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SPS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PIPE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SCTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSVP_E2E_IGNORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MOBILITY_HEADER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UDPLITE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MPLS_IN_IP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MANET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SHIM6"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WESP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ROHC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ETHERNET"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXPERIMENT_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXPERIMENT_2"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RESERVED"
        }
      ],
      "name": "Protocol",
      "symbolId": "lib/port:Protocol"
    },
    "@aws-cdk/aws-ec2.PublicSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.Subnet",
      "docs": {
        "stability": "stable",
        "summary": "Represents a public VPC subnet resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst publicSubnet = new ec2.PublicSubnet(this, 'MyPublicSubnet', {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc.ts",
          "line": 1873
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.PublicSubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IPublicSubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1867
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1869
          },
          "name": "fromPublicSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.PublicSubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPublicSubnet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Also adds the EIP for the managed NAT.",
            "returns": "A ref to the the NAT Gateway ID",
            "stability": "stable",
            "summary": "Creates a new managed NAT gateway attached to this public subnet."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1882
          },
          "name": "addNatGateway",
          "parameters": [
            {
              "name": "eipAllocationId",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.CfnNatGateway"
            }
          }
        }
      ],
      "name": "PublicSubnet",
      "symbolId": "lib/vpc:PublicSubnet"
    },
    "@aws-cdk/aws-ec2.PublicSubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst publicSubnetAttributes: ec2.PublicSubnetAttributes = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  availabilityZone: 'availabilityZone',\n  ipv4CidrBlock: 'ipv4CidrBlock',\n  routeTableId: 'routeTableId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnetAttributes",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1862
      },
      "name": "PublicSubnetAttributes",
      "symbolId": "lib/vpc:PublicSubnetAttributes"
    },
    "@aws-cdk/aws-ec2.PublicSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst publicSubnetProps: ec2.PublicSubnetProps = {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.PublicSubnetProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.SubnetProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1856
      },
      "name": "PublicSubnetProps",
      "symbolId": "lib/vpc:PublicSubnetProps"
    },
    "@aws-cdk/aws-ec2.RouterType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = new ec2.Vpc(this, \"VPC\", {\n  subnetConfiguration: [{\n      subnetType: ec2.SubnetType.PUBLIC,\n      name: 'Public',\n    },{\n      subnetType: ec2.SubnetType.ISOLATED,\n      name: 'Isolated',\n    }]\n});\n\n(vpc.isolatedSubnets[0] as ec2.Subnet).addRoute(\"StaticRoute\", {\n    routerId: vpc.internetGatewayId!,\n    routerType: ec2.RouterType.GATEWAY,\n    destinationCidrBlock: \"8.8.8.8/32\",\n})",
        "stability": "stable",
        "summary": "Type of router used in route."
      },
      "fqn": "@aws-cdk/aws-ec2.RouterType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1813
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Egress-only Internet Gateway."
          },
          "name": "EGRESS_ONLY_INTERNET_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Internet Gateway."
          },
          "name": "GATEWAY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Instance."
          },
          "name": "INSTANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "NAT Gateway."
          },
          "name": "NAT_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Network Interface."
          },
          "name": "NETWORK_INTERFACE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "VPC peering connection."
          },
          "name": "VPC_PEERING_CONNECTION"
        }
      ],
      "name": "RouterType",
      "symbolId": "lib/vpc:RouterType"
    },
    "@aws-cdk/aws-ec2.S3DownloadOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { Asset } from '@aws-cdk/aws-s3-assets';\n\ndeclare const instance: ec2.Instance;\n\nconst asset = new Asset(this, 'Asset', {\n  path: './configure.sh'\n});\n\nconst localPath = instance.userData.addS3DownloadCommand({\n  bucket:asset.bucket,\n  bucketKey:asset.s3ObjectKey,\n  region: 'us-east-1', // Optional\n});\ninstance.userData.addExecuteFileCommand({\n  filePath:localPath,\n  arguments: '--verbose -y'\n});\nasset.grantRead(instance.role);",
        "stability": "stable",
        "summary": "Options when downloading files from S3."
      },
      "fqn": "@aws-cdk/aws-ec2.S3DownloadOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 20
      },
      "name": "S3DownloadOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the S3 bucket to download from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 25
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The key of the file to download."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 30
          },
          "name": "bucketKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Linux   - /tmp/bucketKey\nWindows - %TEMP%/bucketKey",
            "stability": "stable",
            "summary": "The name of the local file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 38
          },
          "name": "localFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "The region of the S3 Bucket (needed for access via VPC Gateway)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 44
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/user-data:S3DownloadOptions"
    },
    "@aws-cdk/aws-ec2.SecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nconst template = new ec2.LaunchTemplate(this, 'LaunchTemplate', {\n  machineImage: ec2.MachineImage.latestAmazonLinux(),\n  securityGroup: new ec2.SecurityGroup(this, 'LaunchTemplateSG', {\n    vpc: vpc,\n  }),\n});",
        "remarks": "Security Groups act like a firewall with a set of rules, and are associated\nwith any AWS resource that has or creates Elastic Network Interfaces (ENIs).\nA typical example of a resource that has a security group is an Instance (or\nAuto Scaling Group of instances)\n\nIf you are defining new infrastructure in CDK, there is a good chance you\nwon't have to interact with this class at all. Like IAM Roles, Security\nGroups need to exist to control access between AWS resources, but CDK will\nautomatically generate and populate them with least-privilege permissions\nfor you so you can concentrate on your business logic.\n\nAll Constructs that require Security Groups will create one for you if you\ndon't specify one at construction. After construction, you can selectively\nallow connections to and between constructs via--for example-- the `instance.connections`\nobject. Think of it as \"allowing connections to your instance\", rather than\n\"adding ingress rules a security group\". See the [Allowing\nConnections](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#allowing-connections)\nsection in the library documentation for examples.\n\nDirect manipulation of the Security Group through `addIngressRule` and\n`addEgressRule` is possible, but mutation through the `.connections` object\nis recommended. If you peer two constructs with security groups this way,\nappropriate rules will be created in both.\n\nIf you have an existing security group you want to use in your CDK application,\nyou would import it like this:\n\n```ts\nconst securityGroup = ec2.SecurityGroup.fromSecurityGroupId(this, 'SG', 'sg-12345', {\n   mutable: false\n});\n```",
        "stability": "stable",
        "summary": "Creates an Amazon EC2 security group within a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/security-group.ts",
          "line": 453
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SecurityGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISecurityGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 325
      },
      "methods": [
        {
          "docs": {
            "deprecated": "Use `fromLookupById()` instead",
            "stability": "deprecated",
            "summary": "Look up a security group by id."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 331
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Look up a security group by id."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 338
          },
          "name": "fromLookupById",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Look up a security group by name."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 345
          },
          "name": "fromLookupByName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This method will assume that the Security Group has a rule in it which allows\nall outbound traffic, and so will not add egress rules to the imported Security\nGroup (only ingress rules).\n\nIf your existing Security Group needs to have egress rules added, pass the\n`allowAllOutbound: false` option on import.",
            "stability": "stable",
            "summary": "Import an existing security group into this app."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 359
          },
          "name": "fromSecurityGroupId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "securityGroupId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SecurityGroupImportOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return whether the indicated object is a security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 60
          },
          "name": "isSecurityGroup",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "stable",
            "summary": "Add an egress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 498
          },
          "name": "addEgressRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "`remoteRule` controls where the Rule object is created if the peer is also a\nsecurityGroup and they are in different stack. If false (default) the\nrule object is created under the current SecurityGroup object. If true and the\npeer is also a SecurityGroup, the rule object is created under the remote\nSecurityGroup object.",
            "stability": "stable",
            "summary": "Add an ingress rule for the current security group."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 481
          },
          "name": "addIngressRule",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "description",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "A SecurityGroup rule is parented under the group it's related to, UNLESS\nwe're in a cross-stack scenario with another Security Group. In that case,\nwe respect the 'remoteRule' flag and will parent under the other security\ngroup.\n\nThis is necessary to avoid cyclic dependencies between stacks, since both\ningress and egress rules will reference both security groups, and a naive\nparenting will lead to the following situation:\n\n   ╔════════════════════╗         ╔════════════════════╗\n   ║  ┌───────────┐     ║         ║    ┌───────────┐   ║\n   ║  │  GroupA   │◀────╬─┐   ┌───╬───▶│  GroupB   │   ║\n   ║  └───────────┘     ║ │   │   ║    └───────────┘   ║\n   ║        ▲           ║ │   │   ║          ▲         ║\n   ║        │           ║ │   │   ║          │         ║\n   ║        │           ║ │   │   ║          │         ║\n   ║  ┌───────────┐     ║ └───┼───╬────┌───────────┐   ║\n   ║  │  EgressA  │─────╬─────┘   ║    │ IngressB  │   ║\n   ║  └───────────┘     ║         ║    └───────────┘   ║\n   ║                    ║         ║                    ║\n   ╚════════════════════╝         ╚════════════════════╝\n\nBy having the ability to switch the parent, we avoid the cyclic reference by\nkeeping all rules in a single stack.\n\nIf this happens, we also have to change the construct ID, because\notherwise we might have two objects with the same ID if we have\nmultiple reversed security group relationships.\n\n   ╔═══════════════════════════════════╗\n   ║┌───────────┐                      ║\n   ║│  GroupB   │                      ║\n   ║└───────────┘                      ║\n   ║      ▲                            ║\n   ║      │              ┌───────────┐ ║\n   ║      ├────\"from A\"──│ IngressB  │ ║\n   ║      │              └───────────┘ ║\n   ║      │              ┌───────────┐ ║\n   ║      ├─────\"to B\"───│  EgressA  │ ║\n   ║      │              └───────────┘ ║\n   ║      │              ┌───────────┐ ║\n   ║      └─────\"to B\"───│  EgressC  │ ║  <-- oops\n   ║                     └───────────┘ ║\n   ╚═══════════════════════════════════╝",
            "stability": "stable",
            "summary": "Determine where to parent a new ingress/egress rule."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 176
          },
          "name": "determineRuleScope",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.Port"
              }
            },
            {
              "name": "fromTo",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "remoteRule",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "json"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the egress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 123
          },
          "name": "toEgressRuleConfig",
          "overrides": "@aws-cdk/aws-ec2.IPeer",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the ingress rule JSON for the given connection."
          },
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 119
          },
          "name": "toIngressRuleConfig",
          "overrides": "@aws-cdk/aws-ec2.IPeer",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "SecurityGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the SecurityGroup has been configured to allow all outbound traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 442
          },
          "name": "allowAllOutbound",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the rule can be inlined into a SecurityGroup or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 67
          },
          "name": "canInlineRule",
          "overrides": "@aws-cdk/aws-ec2.IPeer",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 68
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 430
          },
          "name": "securityGroupId",
          "overrides": "@aws-cdk/aws-ec2.ISecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "deprecated": "returns the security group ID, rather than the name.",
            "stability": "deprecated",
            "summary": "An attribute that represents the security group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 423
          },
          "name": "securityGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The VPC ID this security group is part of."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 437
          },
          "name": "securityGroupVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A unique identifier for this connection peer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 79
          },
          "name": "uniqueId",
          "overrides": "@aws-cdk/aws-ec2.IPeer",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 69
          },
          "name": "defaultPort",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Port"
          }
        }
      ],
      "symbolId": "lib/security-group:SecurityGroup"
    },
    "@aws-cdk/aws-ec2.SecurityGroupImportOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const securityGroup = ec2.SecurityGroup.fromSecurityGroupId(this, 'SG', 'sg-12345', {\n   mutable: false\n});",
        "stability": "stable",
        "summary": "Additional options for imported security groups."
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupImportOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 264
      },
      "name": "SecurityGroupImportOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Only if this is set to false will egress rules be added to this security\ngroup. Be aware, this would undo any potential \"all outbound traffic\"\ndefault.",
            "stability": "stable",
            "summary": "Mark the SecurityGroup as having been created allowing all outbound traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 275
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Beware that making a SecurityGroup immutable might lead to issue\ndue to missing ingress/egress rules for new resources.",
            "stability": "stable",
            "summary": "If a SecurityGroup is mutable CDK can add rules to existing groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 286
          },
          "name": "mutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/security-group:SecurityGroupImportOptions"
    },
    "@aws-cdk/aws-ec2.SecurityGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\n\nconst securityGroup1 = new ec2.SecurityGroup(this, 'SecurityGroup1', { vpc });\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n  securityGroup: securityGroup1, // Optional - will be automatically created otherwise\n});\n\nconst securityGroup2 = new ec2.SecurityGroup(this, 'SecurityGroup2', { vpc });\nlb.addSecurityGroup(securityGroup2);",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-group.ts",
        "line": 208
      },
      "name": "SecurityGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC in which to create the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 231
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this is set to true, there will only be a single egress rule which allows all\noutbound traffic. If this is set to false, no outbound traffic will be allowed by\ndefault and all egress traffic must be explicitly authorized.",
            "stability": "stable",
            "summary": "Whether to allow all outbound traffic by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 242
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default name will be the construct's CDK path.",
            "stability": "stable",
            "summary": "A description of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 226
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If this is set to true, ingress and egress rules will not be declared under the\nSecurityGroup in cloudformation, but will be separate elements.\n\nInlining rules is an optimization for producing smaller stack templates. Sometimes\nthis is not desirable, for example when security group access is managed via tags.\n\nThe default value can be overriden globally by setting the context variable\n'@aws-cdk/aws-ec2.securityGroupDisableInlineRules'.",
            "stability": "stable",
            "summary": "Whether to disable inline ingress and egress rule optimization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 258
          },
          "name": "disableInlineRules",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a GroupName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "For valid values, see the GroupName\nparameter of the CreateSecurityGroup action in the Amazon EC2 API\nReference.\n\nIt is not recommended to use an explicit group name.",
            "stability": "stable",
            "summary": "The name of the security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-group.ts",
            "line": 219
          },
          "name": "securityGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/security-group:SecurityGroupProps"
    },
    "@aws-cdk/aws-ec2.SelectedSubnets": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = new ec2.Vpc(this, 'TheVPC', {\n   cidr: \"10.0.0.0/16\"\n})\n\n// Iterate the private subnets\nconst selection = vpc.selectSubnets({\n   subnetType: ec2.SubnetType.PRIVATE_WITH_NAT\n});\n\nfor (const subnet of selection.subnets) {\n   // ...\n}",
        "stability": "stable",
        "summary": "Result of selecting a subset of subnets from a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.SelectedSubnets",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 329
      },
      "name": "SelectedSubnets",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The respective AZs of each subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 338
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether any of the given subnets are from the VPC's public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 353
          },
          "name": "hasPublic",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dependency representing internet connectivity for these subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 343
          },
          "name": "internetConnectivityEstablished",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 333
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Selected subnet objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 348
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If this value is true, don't validate anything about the subnets. The count\nor identities are not known yet, and the validation will most likely fail\nwhich will prevent a successful lookup.",
            "stability": "stable",
            "summary": "The subnet selection is not actually real yet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 364
          },
          "name": "isPendingLookup",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc:SelectedSubnets"
    },
    "@aws-cdk/aws-ec2.SpotInstanceInterruption": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Provides the options for the types of interruption for spot instances."
      },
      "fqn": "@aws-cdk/aws-ec2.SpotInstanceInterruption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 105
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will stop when interrupted."
          },
          "name": "STOP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will be terminated when interrupted."
          },
          "name": "TERMINATE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The instance will hibernate when interrupted."
          },
          "name": "HIBERNATE"
        }
      ],
      "name": "SpotInstanceInterruption",
      "symbolId": "lib/launch-template:SpotInstanceInterruption"
    },
    "@aws-cdk/aws-ec2.SpotRequestType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html",
        "stability": "stable",
        "summary": "The Spot Instance request type."
      },
      "fqn": "@aws-cdk/aws-ec2.SpotRequestType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/launch-template.ts",
        "line": 127
      },
      "members": [
        {
          "docs": {
            "remarks": "If the Spot price exceeds your maximum price\nor capacity is not available, your Spot Instance is terminated and the Spot Instance request\nis closed.",
            "stability": "stable",
            "summary": "A one-time Spot Instance request remains active until Amazon EC2 launches the Spot Instance, the request expires, or you cancel the request."
          },
          "name": "ONE_TIME"
        },
        {
          "docs": {
            "remarks": "If the Spot price exceeds your maximum price or capacity is not available,\nyour Spot Instance is interrupted. After your instance is interrupted, when your maximum price exceeds\nthe Spot price or capacity becomes available again, the Spot Instance is started if stopped or resumed\nif hibernated.",
            "stability": "stable",
            "summary": "A persistent Spot Instance request remains active until it expires or you cancel it, even if the request is fulfilled."
          },
          "name": "PERSISTENT"
        }
      ],
      "name": "SpotRequestType",
      "symbolId": "lib/launch-template:SpotRequestType"
    },
    "@aws-cdk/aws-ec2.SsmParameterImageOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "Properties for GenericSsmParameterImage."
      },
      "fqn": "@aws-cdk/aws-ec2.SsmParameterImageOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 183
      },
      "name": "SsmParameterImageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "By default, the newest image is used on each deployment. This will cause\ninstances to be replaced whenever a new version is released, and may cause\ndowntime if there aren't enough running instances in the AutoScalingGroup\nto reschedule the tasks on.\n\nIf set to true, the AMI ID will be cached in `cdk.context.json` and the\nsame value will be used on future runs. Your instances will not be replaced\nbut your AMI version will grow old over time. To refresh the AMI lookup,\nyou will have to evict the value from the cache using the `cdk context`\ncommand. See https://docs.aws.amazon.com/cdk/latest/guide/context.html for\nmore information.\n\nCan not be set to `true` in environment-agnostic stacks.",
            "stability": "stable",
            "summary": "Whether the AMI ID is cached to be stable between deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 217
          },
          "name": "cachedInContext",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OperatingSystemType.LINUX",
            "stability": "stable",
            "summary": "Operating system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 189
          },
          "name": "os",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- UserData appropriate for the OS",
            "stability": "stable",
            "summary": "Custom UserData."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 196
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:SsmParameterImageOptions"
    },
    "@aws-cdk/aws-ec2.Subnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::EC2::Subnet"
        },
        "example": "declare const cluster: ecs.Cluster;\nconst loadBalancedFargateService = new ecsPatterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  desiredCount: 1,\n  cpu: 512,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  },\n  taskSubnets: {\n    subnets: [ec2.Subnet.fromSubnetId(this, 'subnet', 'VpcISOLATEDSubnet1Subnet80F07FA0')],\n  },\n});",
        "stability": "stable",
        "summary": "Represents a new VPC subnet resource."
      },
      "fqn": "@aws-cdk/aws-ec2.Subnet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc.ts",
          "line": 1650
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1575
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1581
          },
          "name": "fromSubnetAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISubnet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import existing subnet from id."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1589
          },
          "name": "fromSubnetId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnetId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISubnet"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1577
          },
          "name": "isVpcSubnet",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a default route that points to a passed IGW, with a dependency on the IGW's attachment to the VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1698
          },
          "name": "addDefaultInternetRoute",
          "parameters": [
            {
              "docs": {
                "summary": "the logical ID (ref) of the gateway attached to your VPC."
              },
              "name": "gatewayId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the gateway attachment construct to be added as a dependency."
              },
              "name": "gatewayAttachment",
              "type": {
                "fqn": "@aws-cdk/core.IDependable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an entry to this subnets route table that points to the passed NATGatewayId."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1729
          },
          "name": "addDefaultNatRoute",
          "parameters": [
            {
              "docs": {
                "summary": "The ID of the NAT gateway."
              },
              "name": "natGatewayId",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an entry to this subnets route table."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1740
          },
          "name": "addRoute",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.AddRouteOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associate a Network ACL with this subnet."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1757
          },
          "name": "associateNetworkAcl",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "networkAcl",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
              }
            }
          ]
        }
      ],
      "name": "Subnet",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1596
          },
          "name": "availabilityZone",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Parts of this VPC subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1637
          },
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IDependable"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dependable that can be depended upon to force internet connectivity established on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1644
          },
          "name": "internetConnectivityEstablished",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The IPv4 CIDR block for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1601
          },
          "name": "ipv4CidrBlock",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Upon creation, this is the default ACL which allows all traffic, except\nexplicit DENY entries that you add.\n\nYou can replace it with a custom ACL which denies all traffic except\nthe explicit ALLOW entries that you add by creating a `NetworkAcl`\nobject and calling `associateNetworkAcl()`.",
            "stability": "stable",
            "summary": "Network ACL associated with this Subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1721
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The routeTableId attached to this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1642
          },
          "name": "routeTable",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IRouteTable"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1616
          },
          "name": "subnetAvailabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1606
          },
          "name": "subnetId",
          "overrides": "@aws-cdk/aws-ec2.ISubnet",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1621
          },
          "name": "subnetIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1632
          },
          "name": "subnetNetworkAclAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the Outpost for this subnet (if one exists)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1627
          },
          "name": "subnetOutpostArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1611
          },
          "name": "subnetVpcId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:Subnet"
    },
    "@aws-cdk/aws-ec2.SubnetAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "// Supply all properties\nconst subnet1 = ec2.Subnet.fromSubnetAttributes(this, 'SubnetFromAttributes', {\n  subnetId: 's-1234',\n  availabilityZone: 'pub-az-4465',\n  routeTableId: 'rt-145'\n});\n\n// Supply only subnet id\nconst subnet2 = ec2.Subnet.fromSubnetId(this, 'SubnetFromId', 's-1234');",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 749
      },
      "name": "SubnetAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The subnetId for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 775
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No AZ information, cannot use AZ selection features",
            "stability": "stable",
            "summary": "The Availability Zone the subnet is located in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 756
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No CIDR information, cannot use CIDR filter features",
            "stability": "stable",
            "summary": "The IPv4 CIDR block associated with the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 763
          },
          "name": "ipv4CidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No route table information, cannot create VPC endpoints",
            "stability": "stable",
            "summary": "The ID of the route table for this particular subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 770
          },
          "name": "routeTableId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:SubnetAttributes"
    },
    "@aws-cdk/aws-ec2.SubnetConfiguration": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specify configuration parameters for a single subnet group in a VPC.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst subnetConfiguration: ec2.SubnetConfiguration = {\n  name: 'name',\n  subnetType: ec2.SubnetType.ISOLATED,\n\n  // the properties below are optional\n  cidrMask: 123,\n  mapPublicIpOnLaunch: false,\n  reserved: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 997
      },
      "name": "SubnetConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This name can be used when selecting VPC subnets to distinguish\nbetween different subnet groups of the same type.",
            "stability": "stable",
            "summary": "Logical name for the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1024
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The Subnet type will control the ability to route and connect to the\nInternet.",
            "stability": "stable",
            "summary": "The type of Subnet to configure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1016
          },
          "name": "subnetType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Available IP space is evenly divided across subnets.",
            "remarks": "The number of available IP addresses in each subnet of this group\nwill be equal to `2^(32 - cidrMask) - 2`.\n\nValid values are `16--28`.",
            "stability": "stable",
            "summary": "The number of leading 1 bits in the routing mask."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1008
          },
          "name": "cidrMask",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true in Subnet.Public, false in Subnet.Private or Subnet.Isolated.",
            "stability": "stable",
            "summary": "Controls if a public IP is associated to an instance at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1043
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When true, the IP space for the subnet is reserved but no actual\nresources are provisioned. This space is only dependent on the\nnumber of availability zones and on `cidrMask` - all other subnet\nproperties are ignored.",
            "stability": "stable",
            "summary": "Controls if subnet IP space needs to be reserved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1036
          },
          "name": "reserved",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc:SubnetConfiguration"
    },
    "@aws-cdk/aws-ec2.SubnetFilter": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Contains logic which chooses a set of subnets from a larger list, in conjunction with SubnetSelection, to determine where to place AWS resources such as VPC endpoints, EC2 instances, etc.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst subnetFilter = ec2.SubnetFilter.availabilityZones(['availabilityZones']);",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetFilter",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/subnet.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets which are in one of the given availability zones."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 21
          },
          "name": "availabilityZones",
          "parameters": [
            {
              "name": "availabilityZones",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets which have the provided CIDR netmask."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 42
          },
          "name": "byCidrMask",
          "parameters": [
            {
              "name": "mask",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets by id."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 14
          },
          "name": "byIds",
          "parameters": [
            {
              "name": "subnetIds",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets which contain any of the specified IP addresses."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 35
          },
          "name": "containsIpAddresses",
          "parameters": [
            {
              "name": "ipv4addrs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Chooses subnets such that there is at most one per availability zone."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 28
          },
          "name": "onePerAz",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Executes the subnet filtering logic, returning a filtered set of subnets."
          },
          "locationInModule": {
            "filename": "lib/subnet.ts",
            "line": 49
          },
          "name": "selectSubnets",
          "parameters": [
            {
              "name": "_subnets",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.ISubnet"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.ISubnet"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "SubnetFilter",
      "symbolId": "lib/subnet:SubnetFilter"
    },
    "@aws-cdk/aws-ec2.SubnetNetworkAclAssociation": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const networkAcl: ec2.NetworkAcl;\ndeclare const subnet: ec2.Subnet;\nconst subnetNetworkAclAssociation = new ec2.SubnetNetworkAclAssociation(this, 'MySubnetNetworkAclAssociation', {\n  networkAcl: networkAcl,\n  subnet: subnet,\n\n  // the properties below are optional\n  subnetNetworkAclAssociationName: 'subnetNetworkAclAssociationName',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociation",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/network-acl.ts",
          "line": 369
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 339
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 340
          },
          "name": "fromSubnetNetworkAclAssociationAssociationId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnetNetworkAclAssociationAssociationId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation"
            }
          },
          "static": true
        }
      ],
      "name": "SubnetNetworkAclAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current Network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 359
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID of the Subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 365
          },
          "name": "subnet",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISubnet"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID for the current SubnetNetworkAclAssociation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 353
          },
          "name": "subnetNetworkAclAssociationAssociationId",
          "overrides": "@aws-cdk/aws-ec2.ISubnetNetworkAclAssociation",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:SubnetNetworkAclAssociation"
    },
    "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create a SubnetNetworkAclAssociation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const networkAcl: ec2.NetworkAcl;\ndeclare const subnet: ec2.Subnet;\nconst subnetNetworkAclAssociationProps: ec2.SubnetNetworkAclAssociationProps = {\n  networkAcl: networkAcl,\n  subnet: subnet,\n\n  // the properties below are optional\n  subnetNetworkAclAssociationName: 'subnetNetworkAclAssociationName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 306
      },
      "name": "SubnetNetworkAclAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Network ACL this association is defined for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 322
          },
          "name": "networkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.INetworkAcl"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID of the Subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 328
          },
          "name": "subnet",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISubnet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you don't specify a SubnetNetworkAclAssociationName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name.",
            "remarks": "It is not recommended to use an explicit name.",
            "stability": "stable",
            "summary": "The name of the SubnetNetworkAclAssociation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/network-acl.ts",
            "line": 315
          },
          "name": "subnetNetworkAclAssociationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/network-acl:SubnetNetworkAclAssociationProps"
    },
    "@aws-cdk/aws-ec2.SubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specify configuration parameters for a VPC subnet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst subnetProps: ec2.SubnetProps = {\n  availabilityZone: 'availabilityZone',\n  cidrBlock: 'cidrBlock',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mapPublicIpOnLaunch: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1545
      },
      "name": "SubnetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The availability zone for the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1550
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CIDR notation for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1560
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC which this subnet is part of."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1555
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true in Subnet.Public, false in Subnet.Private or Subnet.Isolated.",
            "stability": "stable",
            "summary": "Controls if a public IP is associated to an instance at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1567
          },
          "name": "mapPublicIpOnLaunch",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc:SubnetProps"
    },
    "@aws-cdk/aws-ec2.SubnetSelection": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser', // NOTE: 'admin' is reserved by DocumentDB\n    excludeCharacters: '\\\"@/:', // optional, defaults to the set \"\\\"@/\" and is also used for eventually created rotations\n    secretName: '/myapp/mydocdb/masteruser', // optional, if you prefer to specify the secret name\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n});",
        "remarks": "Constructs that allow customization of VPC placement use parameters of this\ntype to provide placement settings.\n\nBy default, the instances are placed in the private subnets.",
        "stability": "stable",
        "summary": "Customize subnets that are selected for placement of ENIs."
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetSelection",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 252
      },
      "name": "SubnetSelection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "no filtering on AZs is done",
            "stability": "stable",
            "summary": "Select subnets only in the given AZs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 267
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "If true, return at most one subnet per AZ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 303
          },
          "name": "onePerAz",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "List of provided subnet filters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 310
          },
          "name": "subnetFilters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetFilter"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Selection by type instead of by name",
            "remarks": "Select the subnet group with the given name. This only needs\nto be used if you have multiple subnet groups of the same type\nand you need to distinguish between them. Otherwise, prefer\n`subnetType`.\n\nThis field does not select individual subnets, it selects all subnets that\nshare the given subnet group name. This is the name supplied in\n`subnetConfiguration`.\n\nAt most one of `subnetType` and `subnetGroupName` can be supplied.",
            "stability": "stable",
            "summary": "Select the subnet group with the given name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 285
          },
          "name": "subnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "Use `subnetGroupName` instead",
            "remarks": "Select the subnet group with the given name. This only needs\nto be used if you have multiple subnet groups of the same type\nand you need to distinguish between them.",
            "stability": "deprecated",
            "summary": "Alias for `subnetGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 296
          },
          "name": "subnetName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use all subnets in a selected group (all private subnets by default)",
            "remarks": "Use this if you don't want to automatically use all subnets in\na group, but have a need to control selection down to\nindividual subnets.\n\nCannot be specified together with `subnetType` or `subnetGroupName`.",
            "stability": "stable",
            "summary": "Explicitly select individual subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 323
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SubnetType.PRIVATE_WITH_NAT (or ISOLATED or PUBLIC if there are no PRIVATE_WITH_NAT subnets)",
            "remarks": "At most one of `subnetType` and `subnetGroupName` can be supplied.",
            "stability": "stable",
            "summary": "Select all subnets of the given type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 260
          },
          "name": "subnetType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetType"
          }
        }
      ],
      "symbolId": "lib/vpc:SubnetSelection"
    },
    "@aws-cdk/aws-ec2.SubnetType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const vpc: ec2.Vpc;\nconst cluster = new docdb.DatabaseCluster(this, 'Database', {\n  masterUser: {\n    username: 'myuser', // NOTE: 'admin' is reserved by DocumentDB\n    excludeCharacters: '\\\"@/:', // optional, defaults to the set \"\\\"@/\" and is also used for eventually created rotations\n    secretName: '/myapp/mydocdb/masteruser', // optional, if you prefer to specify the secret name\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n  vpc,\n});",
        "stability": "stable",
        "summary": "The type of Subnet."
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 166
      },
      "members": [
        {
          "docs": {
            "deprecated": "use `SubnetType.PRIVATE_ISOLATED`",
            "remarks": "Isolated subnets can only connect to or be connected to from other\ninstances in the same VPC. A default VPC configuration will not include\nisolated subnets.\n\nThis can be good for subnets with RDS or Elasticache instances,\nor which route Internet traffic through a peer VPC.",
            "stability": "deprecated",
            "summary": "Isolated Subnets do not route traffic to the Internet (in this VPC), and as such, do not require NAT gateways."
          },
          "name": "ISOLATED"
        },
        {
          "docs": {
            "deprecated": "use `PRIVATE_WITH_NAT`",
            "remarks": "Instances in a private subnet can connect to the Internet, but will not\nallow connections to be initiated from the Internet. NAT Gateway(s) are\nrequired with this subnet type to route the Internet traffic through.\nIf a NAT Gateway is not required or desired, use `SubnetType.PRIVATE_ISOLATED` instead.\n\nBy default, a NAT gateway is created in every public subnet for maximum availability.\nBe aware that you will be charged for NAT gateways.\n\nNormally a Private subnet will use a NAT gateway in the same AZ, but\nif `natGateways` is used to reduce the number of NAT gateways, a NAT\ngateway from another AZ will be used instead.",
            "stability": "deprecated",
            "summary": "Subnet that routes to the internet, but not vice versa."
          },
          "name": "PRIVATE"
        },
        {
          "docs": {
            "remarks": "Instances in a Public subnet can connect to the Internet and can be\nconnected to from the Internet as long as they are launched with public\nIPs (controlled on the AutoScalingGroup or other constructs that launch\ninstances).\n\nPublic subnets route outbound traffic via an Internet Gateway.",
            "stability": "stable",
            "summary": "Subnet connected to the Internet."
          },
          "name": "PUBLIC"
        }
      ],
      "name": "SubnetType",
      "symbolId": "lib/vpc:SubnetType"
    },
    "@aws-cdk/aws-ec2.TrafficDirection": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Direction of traffic the AclEntry applies to."
      },
      "fqn": "@aws-cdk/aws-ec2.TrafficDirection",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/network-acl.ts",
        "line": 188
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Traffic leaving the subnet."
          },
          "name": "EGRESS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Traffic entering the subnet."
          },
          "name": "INGRESS"
        }
      ],
      "name": "TrafficDirection",
      "symbolId": "lib/network-acl:TrafficDirection"
    },
    "@aws-cdk/aws-ec2.TransportProtocol": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Transport protocol for client VPN."
      },
      "fqn": "@aws-cdk/aws-ec2.TransportProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint-types.ts",
        "line": 37
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Transmission Control Protocol (TCP)."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "User Datagram Protocol (UDP)."
          },
          "name": "UDP"
        }
      ],
      "name": "TransportProtocol",
      "symbolId": "lib/client-vpn-endpoint-types:TransportProtocol"
    },
    "@aws-cdk/aws-ec2.UserData": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const multipartUserData = new ec2.MultipartUserData();\nconst commandsUserData = ec2.UserData.forLinux();\nmultipartUserData.addUserDataPart(commandsUserData, ec2.MultipartBody.SHELL_SCRIPT, true);\n\n// Adding commands to the multipartUserData adds them to commandsUserData, and vice-versa.\nmultipartUserData.addCommands('touch /root/multi.txt');\ncommandsUserData.addCommands('touch /root/userdata.txt');",
        "stability": "stable",
        "summary": "Instance User Data."
      },
      "fqn": "@aws-cdk/aws-ec2.UserData",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/user-data.ts",
        "line": 70
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a userdata object with custom content."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 88
          },
          "name": "custom",
          "parameters": [
            {
              "name": "content",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a userdata object for Linux hosts."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 74
          },
          "name": "forLinux",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.LinuxUserDataOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 94
          },
          "name": "forOperatingSystem",
          "parameters": [
            {
              "name": "os",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a userdata object for Windows hosts."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 81
          },
          "name": "forWindows",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.UserData"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add one or more commands to the user data."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 105
          },
          "name": "addCommands",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds commands to execute a file."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 127
          },
          "name": "addExecuteFileCommand",
          "parameters": [
            {
              "name": "params",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ExecuteFileOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add one or more commands to the user data that will run when the script exits."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 110
          },
          "name": "addOnExitCommands",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "returns": ": The local path that the file will be downloaded to",
            "stability": "stable",
            "summary": "Adds commands to download a file from S3."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 122
          },
          "name": "addS3DownloadCommand",
          "parameters": [
            {
              "name": "params",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.S3DownloadOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a command which will send a cfn-signal when the user data script ends."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 132
          },
          "name": "addSignalOnExitCommand",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/core.Resource"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the UserData for use in a construct."
          },
          "locationInModule": {
            "filename": "lib/user-data.ts",
            "line": 115
          },
          "name": "render",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "UserData",
      "symbolId": "lib/user-data:UserData"
    },
    "@aws-cdk/aws-ec2.Volume": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const instance: ec2.Instance;\ndeclare const role: iam.Role;\n\nconst volume = new ec2.Volume(this, 'Volume', {\n  availabilityZone: 'us-west-2a',\n  size: Size.gibibytes(500),\n  encrypted: true,\n});\n\nvolume.grantAttachVolume(role, [instance]);",
        "stability": "stable",
        "summary": "Creates a new EBS Volume in AWS EC2."
      },
      "fqn": "@aws-cdk/aws-ec2.Volume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/volume.ts",
          "line": 607
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VolumeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVolume"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 582
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing EBS Volume into the Stack."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 590
          },
          "name": "fromVolumeAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the scope of the import."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the ID of the imported Volume in the construct tree."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the attributes of the imported Volume."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VolumeAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "CAUTION: Granting an instance permission to attach to itself using this method will lead to\nan unresolvable circular reference between the instance role and the instance.\nUse {@link IVolume.grantAttachVolumeToSelf} to grant an instance permission to attach this\nvolume to itself.",
            "stability": "stable",
            "summary": "Grants permission to attach this Volume to an instance."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 483
          },
          "name": "grantAttachVolume",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "instances",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.IInstance"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "If you are looking to\ngrant an Instance, AutoScalingGroup, EC2-Fleet, SpotFleet, ECS host, etc the ability to attach\nthis volume to **itself** then this is the method you want to use.\n\nThis is implemented by adding a Tag with key `VolumeGrantAttach-<suffix>` to the given\nconstructs and this Volume, and then conditioning the Grant such that the grantee is only\ngiven the ability to AttachVolume if both the Volume and the destination Instance have that\ntag applied to them.",
            "stability": "stable",
            "summary": "Grants permission to attach the Volume by a ResourceTag condition."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 510
          },
          "name": "grantAttachVolumeByResourceTag",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "constructs",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "constructs.Construct"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "tagKeySuffix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "Use {@link IVolume.grantDetachVolumeFromSelf} to grant an instance permission to detach this\nvolume from itself.",
            "stability": "stable",
            "summary": "Grants permission to detach this Volume from an instance CAUTION: Granting an instance permission to detach from itself using this method will lead to an unresolvable circular reference between the instance role and the instance."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 529
          },
          "name": "grantDetachVolume",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "instances",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.IInstance"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "This is implemented via the same mechanism as {@link IVolume.grantAttachVolumeByResourceTag},\nand is subject to the same conditions.",
            "stability": "stable",
            "summary": "Grants permission to detach the Volume by a ResourceTag condition."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 539
          },
          "name": "grantDetachVolumeByResourceTag",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "constructs",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "constructs.Construct"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "name": "tagKeySuffix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 653
          },
          "name": "validateProps",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VolumeProps"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "Volume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The availability zone that the EBS Volume is contained within (ex: us-west-2a)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 604
          },
          "name": "availabilityZone",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The EBS Volume's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 603
          },
          "name": "volumeId",
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt the Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 605
          },
          "name": "encryptionKey",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IVolume",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/volume:Volume"
    },
    "@aws-cdk/aws-ec2.VolumeAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes required to import an existing EBS Volume into the Stack.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\ndeclare const key: kms.Key;\nconst volumeAttributes: ec2.VolumeAttributes = {\n  availabilityZone: 'availabilityZone',\n  volumeId: 'volumeId',\n\n  // the properties below are optional\n  encryptionKey: key,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.VolumeAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 456
      },
      "name": "VolumeAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The availability zone that the EBS Volume is contained within (ex: us-west-2a)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 465
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The EBS Volume's ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 460
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None -- The EBS Volume is not using a customer-managed KMS key for encryption.",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt the Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 472
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/volume:VolumeAttributes"
    },
    "@aws-cdk/aws-ec2.VolumeProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const instance: ec2.Instance;\ndeclare const role: iam.Role;\n\nconst volume = new ec2.Volume(this, 'Volume', {\n  availabilityZone: 'us-west-2a',\n  size: Size.gibibytes(500),\n  encrypted: true,\n});\n\nvolume.grantAttachVolume(role, [instance]);",
        "stability": "stable",
        "summary": "Properties of an EBS Volume."
      },
      "fqn": "@aws-cdk/aws-ec2.VolumeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 338
      },
      "name": "VolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Availability Zone in which to create the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 349
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "By default, Amazon EBS disables I/O to the volume from attached EC2\ninstances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and\nyou prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O.",
            "stability": "stable",
            "summary": "Indicates whether the volume is auto-enabled for I/O operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 424
          },
          "name": "autoEnableIo",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "See {@link https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html#considerations|Considerations and limitations}\nfor the constraints of multi-attach.",
            "stability": "stable",
            "summary": "Indicates whether Amazon EBS Multi-Attach is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 374
          },
          "name": "enableMultiAttach",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "The effect of setting the encryption state to true depends on the volume origin\n(new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information,\nsee {@link https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default|Encryption by Default}\nin the Amazon Elastic Compute Cloud User Guide.\n\nEncrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see\n{@link https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances|Supported Instance Types.}",
            "stability": "stable",
            "summary": "Specifies whether the volume should be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 387
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default KMS key for the account, region, and EC2 service is used.",
            "remarks": "The encrypted property must\nbe true if this is provided.\n\nNote: If using an {@link aws-kms.IKey} created from a {@link aws-kms.Key.fromKeyArn()} here,\nthen the KMS key **must** have the following in its Key policy; otherwise, the Volume\nwill fail to create.\n\n     {\n       \"Effect\": \"Allow\",\n       \"Principal\": { \"AWS\": \"<arn for your account-user> ex: arn:aws:iam::00000000000:root\" },\n       \"Resource\": \"*\",\n       \"Action\": [\n         \"kms:DescribeKey\",\n         \"kms:GenerateDataKeyWithoutPlainText\",\n       ],\n       \"Condition\": {\n         \"StringEquals\": {\n           \"kms:ViaService\": \"ec2.<Region>.amazonaws.com\", (eg: ec2.us-east-1.amazonaws.com)\n           \"kms:CallerAccount\": \"0000000000\" (your account ID)\n         }\n       }\n     }",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt the Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 415
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None -- Required for io1 and io2 volumes. The default for gp3 volumes is 3,000 IOPS if omitted.",
            "remarks": "The maximum ratio is 50 IOPS/GiB for PROVISIONED_IOPS_SSD,\nand 500 IOPS/GiB for both PROVISIONED_IOPS_SSD_IO2 and GENERAL_PURPOSE_SSD_GP3.\nSee {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html}\nfor more information.\n\nThis parameter is valid only for PROVISIONED_IOPS_SSD, PROVISIONED_IOPS_SSD_IO2 and GENERAL_PURPOSE_SSD_GP3 volumes.",
            "stability": "stable",
            "summary": "The number of I/O operations per second (IOPS) to provision for the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 443
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.RETAIN",
            "stability": "stable",
            "summary": "Policy to apply when the volume is removed from the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 450
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.",
            "remarks": "You must specify either a snapshot ID or a volume size.\nSee {@link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html}\nfor details on the allowable size for each type of volume.",
            "stability": "stable",
            "summary": "The size of the volume, in GiBs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 358
          },
          "name": "size",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The EBS volume is not created from a snapshot.",
            "remarks": "You must specify either a snapshot ID or a volume size.",
            "stability": "stable",
            "summary": "The snapshot from which to create the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 365
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The physical name will be allocated by CloudFormation at deployment time",
            "stability": "stable",
            "summary": "The value of the physicalName property of this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 344
          },
          "name": "volumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link EbsDeviceVolumeType.GENERAL_PURPOSE_SSD}",
            "remarks": "what type of storage to use to form the EBS Volume.",
            "stability": "stable",
            "summary": "The type of the volume;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 431
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.EbsDeviceVolumeType"
          }
        }
      ],
      "symbolId": "lib/volume:VolumeProps"
    },
    "@aws-cdk/aws-ec2.Vpc": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::EC2::VPC"
        },
        "example": "const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 1 });\nconst cluster = new ecs.Cluster(this, 'EcsCluster', { vpc });\nconst securityGroup = new ec2.SecurityGroup(this, 'SG', { vpc });\n\nconst scheduledFargateTask = new ecsPatterns.ScheduledFargateTask(this, 'ScheduledFargateTask', {\n  cluster,\n  scheduledFargateTaskImageOptions: {\n    image: ecs.ContainerImage.fromRegistry('amazon/amazon-ecs-sample'),\n    memoryLimitMiB: 512,\n  },\n  schedule: appscaling.Schedule.expression('rate(1 minute)'),\n  securityGroups: [securityGroup],\n});",
        "remarks": "See the package-level documentation of this package for an overview\nof the various dimensions in which you can configure your VPC.\n\nFor example:\n\n```ts\nconst vpc = new ec2.Vpc(this, 'TheVPC', {\n   cidr: \"10.0.0.0/16\"\n})\n\n// Iterate the private subnets\nconst selection = vpc.selectSubnets({\n   subnetType: ec2.SubnetType.PRIVATE_WITH_NAT\n});\n\nfor (const subnet of selection.subnets) {\n   // ...\n}\n```",
        "stability": "stable",
        "summary": "Define an AWS Virtual Private Cloud."
      },
      "fqn": "@aws-cdk/aws-ec2.Vpc",
      "initializer": {
        "docs": {
          "remarks": "It will automatically divide the provided VPC CIDR range, and create public and private subnets per Availability Zone.\nNetwork routing for the public subnets will be configured to allow outbound access directly via an Internet Gateway.\nNetwork routing for the private subnets will be configured to allow outbound access via a set of resilient NAT Gateways (one per AZ).",
          "stability": "stable",
          "summary": "Vpc creates a VPC that spans a whole region."
        },
        "locationInModule": {
          "filename": "lib/vpc.ts",
          "line": 1286
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpc"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 1071
      },
      "methods": [
        {
          "docs": {
            "remarks": "This function only needs to be used to use VPCs not defined in your CDK\napplication. If you are looking to share a VPC between stacks, you can\npass the `Vpc` object between stacks and use it as normal.\n\nCalling this method will lead to a lookup when the CDK CLI is executed.\nYou can therefore not use any values that will only be available at\nCloudFormation execution time (i.e., Tokens).\n\nThe VPC information will be cached in `cdk.context.json` and the same VPC\nwill be used on future runs. To refresh the lookup, you will have to\nevict the value from the cache using the `cdk context` command. See\nhttps://docs.aws.amazon.com/cdk/latest/guide/context.html for more information.",
            "stability": "stable",
            "summary": "Import an existing VPC from by querying the AWS environment this stack is deployed to."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1143
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcLookupOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IVpc"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "NOTE: using `fromVpcAttributes()` with deploy-time parameters (like a `Fn.importValue()` or\n`CfnParameter` to represent a list of subnet IDs) sometimes accidentally works. It happens\nto work for constructs that need a list of subnets (like `AutoScalingGroup` and `eks.Cluster`)\nbut it does not work for constructs that need individual subnets (like\n`Instance`). See https://github.com/aws/aws-cdk/issues/4118 for more\ninformation.\n\nPrefer to use `Vpc.fromLookup()` instead.",
            "stability": "stable",
            "summary": "Import a VPC by supplying all attributes directly."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1123
          },
          "name": "fromVpcAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IVpc"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new client VPN endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 499
          },
          "name": "addClientVpnEndpoint",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClientVpnEndpoint"
            }
          }
        },
        {
          "docs": {
            "deprecated": "use `addGatewayEndpoint()` instead",
            "stability": "deprecated",
            "summary": "Adds a new DynamoDB gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1430
          },
          "name": "addDynamoDbEndpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnets",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new flow log to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 529
          },
          "name": "addFlowLog",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.FlowLogOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.FlowLog"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 519
          },
          "name": "addGatewayEndpoint",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new interface endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 509
          },
          "name": "addInterfaceEndpoint",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpointOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InterfaceVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "deprecated": "use `addGatewayEndpoint()` instead",
            "stability": "deprecated",
            "summary": "Adds a new S3 gateway endpoint to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1417
          },
          "name": "addS3Endpoint",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "subnets",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpoint"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new VPN connection to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 489
          },
          "name": "addVpnConnection",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnection"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a VPN Gateway to this VPC."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 451
          },
          "name": "enableVpnGateway",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.EnableVpnGatewayOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the subnets appropriate for the placement strategy."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 546
          },
          "name": "selectSubnetObjects",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ec2.ISubnet"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns IDs of selected subnets."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 434
          },
          "name": "selectSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "parameters": [
            {
              "name": "selection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SelectedSubnets"
            }
          }
        }
      ],
      "name": "Vpc",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "This can be overridden using VpcProps when creating a VPCNetwork resource.\ne.g. new VpcResource(this, { cidr: '192.168.0.0./16' })",
            "stability": "stable",
            "summary": "The default CIDR range used when creating VPCs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1077
          },
          "name": "DEFAULT_CIDR_RANGE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "1 Public and 1 Private subnet per AZ evenly split",
            "stability": "stable",
            "summary": "The default subnet configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1084
          },
          "name": "DEFAULT_SUBNETS",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "1 Public and 1 Isolated Subnet per AZ evenly split",
            "stability": "stable",
            "summary": "The default subnet configuration if natGateways specified to be 0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1100
          },
          "name": "DEFAULT_SUBNETS_NO_NAT",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AZs for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1243
          },
          "name": "availabilityZones",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if instances launched in this VPC will have public DNS hostnames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1256
          },
          "name": "dnsHostnamesEnabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if DNS support is enabled for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1261
          },
          "name": "dnsSupportEnabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dependencies for internet connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1251
          },
          "name": "internetConnectivityEstablished",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "fqn": "@aws-cdk/core.IDependable"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List of isolated subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1238
          },
          "name": "isolatedSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "deprecated": "- This value is no longer used.",
            "stability": "deprecated",
            "summary": "Dependencies for NAT connectivity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 417
          },
          "name": "natDependencies",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IConstruct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List of private subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1233
          },
          "name": "privateSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "List of public subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1228
          },
          "name": "publicSubnets",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Arn of this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1198
          },
          "name": "vpcArn",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "CIDR range for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1203
          },
          "name": "vpcCidrBlock",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1213
          },
          "name": "vpcCidrBlockAssociations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1208
          },
          "name": "vpcDefaultNetworkAcl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1218
          },
          "name": "vpcDefaultSecurityGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Identifier for this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1193
          },
          "name": "vpcId",
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1223
          },
          "name": "vpcIpv6CidrBlocks",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that in case the VPC is configured only\nwith ISOLATED subnets, this attribute will be `undefined`.",
            "stability": "stable",
            "summary": "Internet Gateway for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 1249
          },
          "name": "internetGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the id of the VPN Gateway (if enabled)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 539
          },
          "name": "vpnGatewayId",
          "optional": true,
          "overrides": "@aws-cdk/aws-ec2.IVpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If this is set to true, don't error out on trying to select subnets."
          },
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 422
          },
          "name": "incompleteSubnetDefinition",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/vpc:Vpc"
    },
    "@aws-cdk/aws-ec2.VpcAttributes": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const sg = ec2.SecurityGroup.fromSecurityGroupId(this, 'FsxSecurityGroup', '{SECURITY-GROUP-ID}');\nconst fs = fsx.LustreFileSystem.fromLustreFileSystemAttributes(this, 'FsxLustreFileSystem', {\n  dnsName: '{FILE-SYSTEM-DNS-NAME}',\n  fileSystemId: '{FILE-SYSTEM-ID}',\n  securityGroup: sg,\n});\n\nconst vpc = ec2.Vpc.fromVpcAttributes(this, 'Vpc', {\n  availabilityZones: ['us-west-2a', 'us-west-2b'],\n  publicSubnetIds: ['{US-WEST-2A-SUBNET-ID}', '{US-WEST-2B-SUBNET-ID}'],\n  vpcId: '{VPC-ID}',\n});\n\nconst inst = new ec2.Instance(this, 'inst', {\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.LARGE),\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n  }),\n  vpc,\n  vpcSubnets: {\n    subnetType: ec2.SubnetType.PUBLIC,\n  },\n});\n\nfs.connections.allowDefaultPortFrom(inst);",
        "stability": "stable",
        "summary": "Properties that reference an external Vpc."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 662
      },
      "name": "VpcAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "List of availability zones for the subnets in this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 678
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC's identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 666
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "stable",
            "summary": "List of isolated subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 727
          },
          "name": "isolatedSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every isolated subnet group.",
            "stability": "stable",
            "summary": "List of names for the isolated subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 734
          },
          "name": "isolatedSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every isolated subnet group.",
            "stability": "stable",
            "summary": "List of IDs of routing tables for the isolated subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 741
          },
          "name": "isolatedSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "stable",
            "summary": "List of private subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 706
          },
          "name": "privateSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every private subnet group.",
            "stability": "stable",
            "summary": "List of names for the private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 713
          },
          "name": "privateSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every private subnet group.",
            "stability": "stable",
            "summary": "List of IDs of routing tables for the private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 720
          },
          "name": "privateSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or match the availability zones in length and order.",
            "stability": "stable",
            "summary": "List of public subnet IDs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 685
          },
          "name": "publicSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every public subnet group.",
            "stability": "stable",
            "summary": "List of names for the public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 692
          },
          "name": "publicSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be undefined or have a name for every public subnet group.",
            "stability": "stable",
            "summary": "List of IDs of routing tables for the public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 699
          },
          "name": "publicSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Retrieving the CIDR from the VPC will fail",
            "stability": "stable",
            "summary": "VPC's CIDR range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 673
          },
          "name": "vpcCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPN gateway's identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 746
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc:VpcAttributes"
    },
    "@aws-cdk/aws-ec2.VpcEndpoint": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 150
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 24
      },
      "methods": [
        {
          "docs": {
            "remarks": "Not all interface VPC endpoints support policy. For more information\nsee https://docs.aws.amazon.com/vpc/latest/userguide/vpce-interface.html",
            "stability": "stable",
            "summary": "Adds a statement to the policy document of the VPC endpoint. The statement must have a Principal."
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 38
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "docs": {
                "summary": "the IAM statement to add."
              },
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        }
      ],
      "name": "VpcEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC endpoint identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 25
          },
          "name": "vpcEndpointId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/vpc-endpoint.ts",
            "line": 27
          },
          "name": "policyDocument",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint:VpcEndpoint"
    },
    "@aws-cdk/aws-ec2.VpcEndpointService": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::EC2::VPCEndpointService"
        },
        "example": "declare const networkLoadBalancer1: elbv2.NetworkLoadBalancer;\ndeclare const networkLoadBalancer2: elbv2.NetworkLoadBalancer;\n\nnew ec2.VpcEndpointService(this, 'EndpointService', {\n  vpcEndpointServiceLoadBalancers: [networkLoadBalancer1, networkLoadBalancer2],\n  acceptanceRequired: true,\n  allowedPrincipals: [new iam.ArnPrincipal('arn:aws:iam::123456789012:root')]\n});",
        "stability": "stable",
        "summary": "A VPC endpoint service."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpointService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint-service.ts",
          "line": 89
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcEndpointServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpcEndpointService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service.ts",
        "line": 47
      },
      "name": "VpcEndpointService",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether to require manual acceptance of new connections to the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 59
          },
          "name": "acceptanceRequired",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "One or more Principal ARNs to allow inbound connections to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 71
          },
          "name": "allowedPrincipals",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.ArnPrincipal"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The id of the VPC Endpoint Service, like vpce-svc-xxxxxxxxxxxxxxxx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 77
          },
          "name": "vpcEndpointServiceId",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "One or more network load balancers to host the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 53
          },
          "name": "vpcEndpointServiceLoadBalancers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The service name of the VPC Endpoint Service that clients use to connect to, like com.amazonaws.vpce.<region>.vpce-svc-xxxxxxxxxxxxxxxx."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 85
          },
          "name": "vpcEndpointServiceName",
          "overrides": "@aws-cdk/aws-ec2.IVpcEndpointService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "deprecated": "use `allowedPrincipals`",
            "stability": "deprecated",
            "summary": "One or more Principal ARNs to allow inbound connections to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 65
          },
          "name": "whitelistedPrincipals",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.ArnPrincipal"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint-service:VpcEndpointService"
    },
    "@aws-cdk/aws-ec2.VpcEndpointServiceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const networkLoadBalancer1: elbv2.NetworkLoadBalancer;\ndeclare const networkLoadBalancer2: elbv2.NetworkLoadBalancer;\n\nnew ec2.VpcEndpointService(this, 'EndpointService', {\n  vpcEndpointServiceLoadBalancers: [networkLoadBalancer1, networkLoadBalancer2],\n  acceptanceRequired: true,\n  allowedPrincipals: [new iam.ArnPrincipal('arn:aws:iam::123456789012:root')]\n});",
        "stability": "stable",
        "summary": "Construction properties for a VpcEndpointService."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpointServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service.ts",
        "line": 131
      },
      "name": "VpcEndpointServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "One or more load balancers to host the VPC Endpoint Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 144
          },
          "name": "vpcEndpointServiceLoadBalancers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.IVpcEndpointServiceLoadBalancer"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether requests from service consumers to connect to the service through an endpoint must be accepted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 152
          },
          "name": "acceptanceRequired",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no principals",
            "remarks": "These principals can connect to your service using VPC endpoints. Takes a\nlist of one or more ArnPrincipal.",
            "stability": "stable",
            "summary": "IAM users, IAM roles, or AWS accounts to allow inbound connections from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 170
          },
          "name": "allowedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.ArnPrincipal"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CDK generated name",
            "deprecated": "This property is not used",
            "stability": "deprecated",
            "summary": "Name of the Vpc Endpoint Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 138
          },
          "name": "vpcEndpointServiceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no principals",
            "deprecated": "use `allowedPrincipals`",
            "remarks": "These principals can connect to your service using VPC endpoints. Takes a\nlist of one or more ArnPrincipal.",
            "stability": "deprecated",
            "summary": "IAM users, IAM roles, or AWS accounts to allow inbound connections from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service.ts",
            "line": 161
          },
          "name": "whitelistedPrincipals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.ArnPrincipal"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc-endpoint-service:VpcEndpointServiceProps"
    },
    "@aws-cdk/aws-ec2.VpcEndpointType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The type of VPC endpoint."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcEndpointType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpc-endpoint.ts",
        "line": 60
      },
      "members": [
        {
          "docs": {
            "remarks": "An interface endpoint is an elastic network interface with a private IP\naddress that serves as an entry point for traffic destined to a supported\nservice.",
            "stability": "stable",
            "summary": "Interface."
          },
          "name": "INTERFACE"
        },
        {
          "docs": {
            "remarks": "A gateway endpoint is a gateway that is a target for a specified route in\nyour route table, used for traffic destined to a supported AWS service.",
            "stability": "stable",
            "summary": "Gateway."
          },
          "name": "GATEWAY"
        }
      ],
      "name": "VpcEndpointType",
      "symbolId": "lib/vpc-endpoint:VpcEndpointType"
    },
    "@aws-cdk/aws-ec2.VpcLookupOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "// create a cloud9 ec2 environment in a new VPC\nconst vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 3});\nnew cloud9.Ec2Environment(this, 'Cloud9Env', { vpc });\n\n// or create the cloud9 environment in the default VPC with specific instanceType\nconst defaultVpc = ec2.Vpc.fromLookup(this, 'DefaultVPC', { isDefault: true });\nnew cloud9.Ec2Environment(this, 'Cloud9Env2', {\n  vpc: defaultVpc,\n  instanceType: new ec2.InstanceType('t3.large'),\n});\n\n// or specify in a different subnetSelection\nconst c9env = new cloud9.Ec2Environment(this, 'Cloud9Env3', {\n  vpc,\n  subnetSelection: {\n    subnetType: ec2.SubnetType.PRIVATE,\n  },\n});\n\n// print the Cloud9 IDE URL in the output\nnew CfnOutput(this, 'URL', { value: c9env.ideUrl });",
        "remarks": "The combination of properties must specify filter down to exactly one\nnon-default VPC, otherwise an error is raised.",
        "stability": "stable",
        "summary": "Properties for looking up an existing VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcLookupOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-lookup.ts",
        "line": 7
      },
      "name": "VpcLookupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Don't care whether we return the default VPC",
            "stability": "stable",
            "summary": "Whether to match the default VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 40
          },
          "name": "isDefault",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Current stack's environment region",
            "stability": "stable",
            "summary": "Optional to override inferred region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 57
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "aws-cdk:subnet-name",
            "remarks": "If not provided, we'll look at the aws-cdk:subnet-name tag.\nIf the subnet does not have the specified tag,\nwe'll use its type as the name.",
            "stability": "stable",
            "summary": "Optional tag for subnet group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 50
          },
          "name": "subnetGroupNameTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on tags",
            "remarks": "The VPC must have all of these tags",
            "stability": "stable",
            "summary": "Tags on the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 33
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on vpcId",
            "remarks": "If given, will import exactly this VPC.",
            "stability": "stable",
            "summary": "The ID of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 15
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Don't filter on vpcName",
            "remarks": "If given, will import the VPC with this name.",
            "stability": "stable",
            "summary": "The name of the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-lookup.ts",
            "line": 24
          },
          "name": "vpcName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpc-lookup:VpcLookupOptions"
    },
    "@aws-cdk/aws-ec2.VpcProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "// create a cloud9 ec2 environment in a new VPC\nconst vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 3});\nnew cloud9.Ec2Environment(this, 'Cloud9Env', { vpc });\n\n// or create the cloud9 environment in the default VPC with specific instanceType\nconst defaultVpc = ec2.Vpc.fromLookup(this, 'DefaultVPC', { isDefault: true });\nnew cloud9.Ec2Environment(this, 'Cloud9Env2', {\n  vpc: defaultVpc,\n  instanceType: new ec2.InstanceType('t3.large'),\n});\n\n// or specify in a different subnetSelection\nconst c9env = new cloud9.Ec2Environment(this, 'Cloud9Env3', {\n  vpc,\n  subnetSelection: {\n    subnetType: ec2.SubnetType.PRIVATE,\n  },\n});\n\n// print the Cloud9 IDE URL in the output\nnew CfnOutput(this, 'URL', { value: c9env.ideUrl });",
        "stability": "stable",
        "summary": "Configuration for Vpc."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc.ts",
        "line": 786
      },
      "name": "VpcProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Vpc.DEFAULT_CIDR_RANGE",
            "remarks": "Should be a minimum of /28 and maximum size of /16. The range will be\nsplit across all subnets per Availability Zone.",
            "stability": "stable",
            "summary": "The CIDR range to use for the VPC, e.g. '10.0.0.0/16'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 796
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DefaultInstanceTenancy.Default (shared) tenancy",
            "remarks": "By setting this to dedicated tenancy, instances will be launched on\nhardware dedicated to a single AWS customer, unless specifically specified\nat instance launch time. Please note, not all instance types are usable\nwith Dedicated tenancy.",
            "stability": "stable",
            "summary": "The default tenancy of instances launched into the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 831
          },
          "name": "defaultInstanceTenancy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.DefaultInstanceTenancy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this attribute is true, instances in the VPC get public DNS hostnames,\nbut only if the enableDnsSupport attribute is also set to true.",
            "stability": "stable",
            "summary": "Indicates whether the instances launched in the VPC get public DNS hostnames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 806
          },
          "name": "enableDnsHostnames",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this attribute is false, the Amazon-provided DNS server in the VPC that\nresolves public DNS hostnames to IP addresses is not enabled. If this\nattribute is true, queries to the Amazon provided DNS server at the\n169.254.169.253 IP address, or the reserved IP address at the base of the\nVPC IPv4 network range plus two will succeed.",
            "stability": "stable",
            "summary": "Indicates whether the DNS resolution is supported for the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 819
          },
          "name": "enableDnsSupport",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No flow logs.",
            "stability": "stable",
            "summary": "Flow logs to add to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 967
          },
          "name": "flowLogs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.FlowLogOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "Gateway endpoints to add to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 960
          },
          "name": "gatewayEndpoints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.GatewayVpcEndpointOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "If the region has more AZs than you want to use (for example, because of\nEIP limits), pick a lower number here. The AZs will be sorted and picked\nfrom the start of the list.\n\nIf you pick a higher number than the number of AZs in the region, all AZs\nin the region will be selected. To use \"all AZs\" available to your\naccount, use a high number (such as 99).\n\nBe aware that environment-agnostic stacks will be created with access to\nonly 2 AZs, so to use more than 2 AZs, be sure to specify the account and\nregion on your stack.",
            "stability": "stable",
            "summary": "Define the maximum number of AZs to use in this region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 850
          },
          "name": "maxAzs",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NatProvider.gateway()",
            "remarks": "Select between NAT gateways or NAT instances. NAT gateways\nmay not be available in all AWS regions.",
            "stability": "stable",
            "summary": "What type of NAT provider to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 887
          },
          "name": "natGatewayProvider",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.NatProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- One NAT gateway/instance per Availability Zone",
            "remarks": "The type of NAT gateway or instance will be determined by the\n`natGatewayProvider` parameter.\n\nYou can set this number lower than the number of Availability Zones in your\nVPC in order to save on NAT cost. Be aware you may be charged for\ncross-AZ data traffic instead.",
            "stability": "stable",
            "summary": "The number of NAT Gateways/Instances to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 864
          },
          "name": "natGateways",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All public subnets.",
            "remarks": "You can pick a specific group of subnets by specifying the group name;\nthe picked subnets must be public subnets.\n\nOnly necessary if you have more than one public subnet group.",
            "stability": "stable",
            "summary": "Configures the subnets which will have NAT Gateways/Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 876
          },
          "name": "natGatewaySubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The VPC CIDR will be evenly divided between 1 public and 1\nprivate subnet per AZ.",
            "remarks": "Each entry in this list configures a Subnet Group; each group will contain a\nsubnet for each Availability Zone.\n\nFor example, if you want 1 public subnet, 1 private subnet, and 1 isolated\nsubnet in each AZ provide the following:\n\n```ts\nnew ec2.Vpc(this, 'VPC', {\n   subnetConfiguration: [\n      {\n        cidrMask: 24,\n        name: 'ingress',\n        subnetType: ec2.SubnetType.PUBLIC,\n      },\n      {\n        cidrMask: 24,\n        name: 'application',\n        subnetType: ec2.SubnetType.PRIVATE_WITH_NAT,\n      },\n      {\n        cidrMask: 28,\n        name: 'rds',\n        subnetType: ec2.SubnetType.PRIVATE_ISOLATED,\n      }\n   ]\n});\n```",
            "stability": "stable",
            "summary": "Configure the subnets to build for each AZ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 923
          },
          "name": "subnetConfiguration",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "this.node.path",
            "remarks": "Since the VPC resource doesn't support providing a physical name, the value provided here will be recorded in the `Name` tag",
            "stability": "stable",
            "summary": "The VPC name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 976
          },
          "name": "vpcName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No connections.",
            "stability": "stable",
            "summary": "VPN connections to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 944
          },
          "name": "vpnConnections",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true when vpnGatewayAsn or vpnConnections is specified",
            "stability": "stable",
            "summary": "Indicates whether a VPN gateway should be created and attached to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 930
          },
          "name": "vpnGateway",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon default ASN.",
            "stability": "stable",
            "summary": "The private Autonomous System Number (ASN) for the VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 937
          },
          "name": "vpnGatewayAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- On the route tables associated with private subnets. If no\nprivate subnets exists, isolated subnets are used. If no isolated subnets\nexists, public subnets are used.",
            "stability": "stable",
            "summary": "Where to propagate VPN routes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc.ts",
            "line": 953
          },
          "name": "vpnRoutePropagation",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpc:VpcProps"
    },
    "@aws-cdk/aws-ec2.VpnConnection": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "fixture=with-vpc infused",
          "resource": "AWS::EC2::VPNConnection"
        },
        "example": "// Across all tunnels in the account/region\nconst allDataOut = ec2.VpnConnection.metricAllTunnelDataOut();\n\n// For a specific vpn connection\nconst vpnConnection = vpc.addVpnConnection('Dynamic', {\n  ip: '1.2.3.4'\n});\nconst state = vpnConnection.metricTunnelState();",
        "stability": "stable",
        "summary": "Define a VPN Connection."
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnection",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpn.ts",
          "line": 229
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnConnectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpnConnection"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 185
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 189
          },
          "name": "metricAll",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the tunnel data in of all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 211
          },
          "name": "metricAllTunnelDataIn",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the tunnel data out of all VPN connections."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 220
          },
          "name": "metricAllTunnelDataOut",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the tunnel state of all VPN connections in the account/region."
          },
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 202
          },
          "name": "metricAllTunnelState",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this VPNConnection."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 35
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The bytes received through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 47
          },
          "name": "metricTunnelDataIn",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "The bytes sent through the VPN tunnel."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 53
          },
          "name": "metricTunnelDataOut",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Average over 5 minutes",
            "stability": "stable",
            "summary": "The state of the tunnel. 0 indicates DOWN and 1 indicates UP."
          },
          "locationInModule": {
            "filename": "lib/ec2-augmentations.generated.ts",
            "line": 41
          },
          "name": "metricTunnelState",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "VpnConnection",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 227
          },
          "name": "customerGatewayAsn",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The id of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 225
          },
          "name": "customerGatewayId",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 226
          },
          "name": "customerGatewayIp",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The id of the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 224
          },
          "name": "vpnId",
          "overrides": "@aws-cdk/aws-ec2.IVpnConnection",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnConnection"
    },
    "@aws-cdk/aws-ec2.VpnConnectionOptions": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = new ec2.Vpc(this, 'MyVpc', {\n  vpnConnections: {\n    dynamic: { // Dynamic routing (BGP)\n      ip: '1.2.3.4'\n    },\n    static: { // Static routing\n      ip: '4.5.6.7',\n      staticRoutes: [\n        '192.168.10.0/24',\n        '192.168.20.0/24'\n      ]\n    }\n  }\n});",
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 78
      },
      "name": "VpnConnectionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ip address of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 82
          },
          "name": "ip",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "65000",
            "stability": "stable",
            "summary": "The ASN of the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 89
          },
          "name": "asn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Dynamic routing (BGP)",
            "stability": "stable",
            "summary": "The static routes to be routed from the VPN gateway to the customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 96
          },
          "name": "staticRoutes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Amazon generated tunnel options",
            "remarks": "At most two elements (one per tunnel).\nDuplicates not allowed.",
            "stability": "stable",
            "summary": "The tunnel options for the VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 104
          },
          "name": "tunnelOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpnTunnelOption"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/vpn:VpnConnectionOptions"
    },
    "@aws-cdk/aws-ec2.VpnConnectionProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const secretValue: cdk.SecretValue;\ndeclare const vpc: ec2.Vpc;\nconst vpnConnectionProps: ec2.VpnConnectionProps = {\n  ip: 'ip',\n  vpc: vpc,\n\n  // the properties below are optional\n  asn: 123,\n  staticRoutes: ['staticRoutes'],\n  tunnelOptions: [{\n    preSharedKey: 'preSharedKey',\n    preSharedKeySecret: secretValue,\n    tunnelInsideCidr: 'tunnelInsideCidr',\n  }],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionProps",
      "interfaces": [
        "@aws-cdk/aws-ec2.VpnConnectionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 135
      },
      "name": "VpnConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC to connect to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 139
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnConnectionProps"
    },
    "@aws-cdk/aws-ec2.VpnConnectionType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "The VPN connection type."
      },
      "fqn": "@aws-cdk/aws-ec2.VpnConnectionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 145
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The IPsec 1 VPN connection type."
          },
          "name": "IPSEC_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Dummy member TODO: remove once https://github.com/aws/jsii/issues/231 is fixed."
          },
          "name": "DUMMY"
        }
      ],
      "name": "VpnConnectionType",
      "symbolId": "lib/vpn:VpnConnectionType"
    },
    "@aws-cdk/aws-ec2.VpnGateway": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EC2::VPNGateway",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "The VPN Gateway that shall be added to the VPC.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst vpnGateway = new ec2.VpnGateway(this, 'MyVpnGateway', {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-ec2.VpnGateway",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpn.ts",
          "line": 170
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpnGatewayProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IVpnGateway"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 163
      },
      "name": "VpnGateway",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The virtual private gateway Id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 168
          },
          "name": "gatewayId",
          "overrides": "@aws-cdk/aws-ec2.IVpnGateway",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnGateway"
    },
    "@aws-cdk/aws-ec2.VpnGatewayProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The VpnGateway Properties.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nconst vpnGatewayProps: ec2.VpnGatewayProps = {\n  type: 'type',\n\n  // the properties below are optional\n  amazonSideAsn: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.VpnGatewayProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 110
      },
      "name": "VpnGatewayProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Default type ipsec.1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 115
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "65000",
            "stability": "stable",
            "summary": "Explicitly specify an Asn or let aws pick an Asn for you."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 121
          },
          "name": "amazonSideAsn",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnGatewayProps"
    },
    "@aws-cdk/aws-ec2.VpnPort": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "stability": "stable",
        "summary": "Port for client VPN."
      },
      "fqn": "@aws-cdk/aws-ec2.VpnPort",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/client-vpn-endpoint-types.ts",
        "line": 47
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTPS."
          },
          "name": "HTTPS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "OpenVPN."
          },
          "name": "OPENVPN"
        }
      ],
      "name": "VpnPort",
      "symbolId": "lib/client-vpn-endpoint-types:VpnPort"
    },
    "@aws-cdk/aws-ec2.VpnTunnelOption": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const secretValue: cdk.SecretValue;\nconst vpnTunnelOption: ec2.VpnTunnelOption = {\n  preSharedKey: 'preSharedKey',\n  preSharedKeySecret: secretValue,\n  tunnelInsideCidr: 'tunnelInsideCidr',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.VpnTunnelOption",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpn.ts",
        "line": 46
      },
      "name": "VpnTunnelOption",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "an Amazon generated pre-shared key",
            "deprecated": "Use `preSharedKeySecret` instead",
            "remarks": "Allowed characters are\nalphanumeric characters period `.` and underscores `_`. Must be between 8\nand 64 characters in length and cannot start with zero (0).",
            "stability": "deprecated",
            "summary": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 56
          },
          "name": "preSharedKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "an Amazon generated pre-shared key",
            "remarks": "Allowed characters are\nalphanumeric characters period `.` and underscores `_`. Must be between 8\nand 64 characters in length and cannot start with zero (0).",
            "stability": "stable",
            "summary": "The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 66
          },
          "name": "preSharedKeySecret",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "an Amazon generated inside IP CIDR",
            "remarks": "Any specified CIDR blocks must be\nunique across all VPN connections that use the same virtual private gateway.\nA size /30 CIDR block from the 169.254.0.0/16 range.",
            "stability": "stable",
            "summary": "The range of inside IP addresses for the tunnel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpn.ts",
            "line": 75
          },
          "name": "tunnelInsideCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/vpn:VpnTunnelOption"
    },
    "@aws-cdk/aws-ec2.WindowsImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": "@aws-cdk/aws-ec2.GenericSSMParameterImage",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "remarks": "This Machine Image automatically updates to the latest version on every\ndeployment. Be aware this will cause your instances to be replaced when a\nnew version of the image becomes available. Do not store stateful information\non the instance if you are using this image.\n\nThe AMI ID is selected using the values published to the SSM parameter store.\n\nhttps://aws.amazon.com/blogs/mt/query-for-the-latest-windows-ami-using-systems-manager-parameter-store/",
        "stability": "stable",
        "summary": "Select the latest version of the indicated Windows version."
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/machine-image.ts",
          "line": 274
        },
        "parameters": [
          {
            "name": "version",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.WindowsVersion"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ec2.WindowsImageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 273
      },
      "name": "WindowsImage",
      "symbolId": "lib/machine-image:WindowsImage"
    },
    "@aws-cdk/aws-ec2.WindowsImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for WindowsImage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const userData: ec2.UserData;\nconst windowsImageProps: ec2.WindowsImageProps = {\n  userData: userData,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/machine-image.ts",
        "line": 252
      },
      "name": "WindowsImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Empty UserData for Windows machines",
            "stability": "stable",
            "summary": "Initial user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/machine-image.ts",
            "line": 258
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/machine-image:WindowsImageProps"
    },
    "@aws-cdk/aws-ec2.WindowsVersion": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "custom": {
          "exampleMetadata": "lit=test/example.images.lit.ts infused"
        },
        "example": "// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = ec2.MachineImage.latestAmazonLinux({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n  cpuType: ec2.AmazonLinuxCpuType.X86_64,\n});\n\n// Pick a Windows edition to use\nconst windows = ec2.MachineImage.latestWindows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Read AMI id from SSM parameter store\nconst ssm = ec2.MachineImage.fromSsmParameter('/my/ami', { os: ec2.OperatingSystemType.LINUX });\n\n// Look up the most recent image matching a set of AMI filters.\n// In this case, look up the NAT instance AMI, by using a wildcard\n// in the 'name' field:\nconst natAmi = ec2.MachineImage.lookup({\n  name: 'amzn-ami-vpc-nat-*',\n  owners: ['amazon'],\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\nconst linux = ec2.MachineImage.genericLinux({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n\n// For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n// a map giving the AMI to in for each region:\nconst genericWindows = ec2.MachineImage.genericWindows({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
        "stability": "stable",
        "summary": "The Windows version to use for the WindowsImage."
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/windows-versions.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_SP2_ENGLISH_64BIT_SQL_2008_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_CHINESE_SIMPLIFIED_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_CHINESE_TRADITIONAL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_DUTCH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_HUNGARIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_CONTAINERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2016_GERMAN_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2016_GERMAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_LANGUAGE_PACKS_32BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2008_R2_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2012_SP4_EXPRESS"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_R2_SP1_PORTUGUESE_BRAZIL_64BIT_CORE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_R2_SP1_PORTUGESE_BRAZIL_64BIT_CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ITALIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_DEEP_LEARNING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ITALIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_KOREAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_FQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_KOREAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_KOREAN_FULL_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2016_PORTUGUESE_PORTUGAL_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2016_PORTUGESE_PORTUGAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2017_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_FRENCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_KOREAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_CHINESE_HONG_KONG_SAR_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_CHINESE_PRC_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_FRENCH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_CONTAINERS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_RUSSIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_CHINESE_SIMPLIFIED_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_HUNGARIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2007_R2_SP1_LANGUAGE_PACKS_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_SP2_ENGLISH_32BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2012_SP4_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_CHINESE_TRADITIONAL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_POLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_DEEP_LEARNING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_GERMAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_RUSSIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_CHINESE_TRADITIONAL_HONG_KONG_SAR_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_HUNGARIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_HYPERV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_ENGLISH_64BIT_SQL_2005_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2012_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_GERMAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2017_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_JAPANESE_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_RUSSIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ITALIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_HYPERV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_CHINESE_TRADITIONAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_SP2_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_FRENCH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_POLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2012_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_TURKISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_R2_RTM_PORTUGUESE_BRAZIL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_PORTUGESE_BRAZIL_64BIT_BASE"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_R2_RTM_PORTUGUESE_PORTUGAL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_PORTUGESE_PORTUGAL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_SWEDISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ITALIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_SPANISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2017_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_LANGUAGE_PACKS_64BIT_SQL_2005_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2007_R2_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2016_PORTUGUESE_BRAZIL_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2016_PORTUGESE_BRAZIL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_ENGLISH_32BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_CZECH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2014_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_SWEDISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_TURKISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_CORE_SQL_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_LANGUAGE_PACKS_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_CZECH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_TURKISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_DUTCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2017_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_HUNGARIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_KOREAN_FULL_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_SPANISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_LANGUAGE_PACKS_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_SP2_PORTUGUESE_BRAZIL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_SP2_PORTUGESE_BRAZIL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2014_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2017_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1709_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1803_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2012_SP4_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_SP2_ENGLISH_64BIT_SQL_2008_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_BASE"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_RTM_PORTUGUESE_BRAZIL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_RTM_PORTUGESE_BRAZIL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP1_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_P3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_LANGUAGE_PACKS_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_CHINESE_TRADITIONAL_HONG_KONG_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_CHINESE_SIMPLIFIED_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2012_SP4_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP1_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1803_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2014_SP3_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_2014_SP3_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_SWEDISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_CHINESE_SIMPLIFIED_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_POLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2008_R2_SP3_WEB"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2008_R2_SP1_PORTUGUESE_BRAZIL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_PORTUGESE_BRAZIL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2017_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_GERMAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_ENGLISH_64BIT_SQL_2005_SP4_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2012_SP4_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_JAPANESE_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_ENGLISH_64BIT_SQL_2014_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2008_R2_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_FRENCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_CZECH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1809_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1809_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2003_R2_SP2_LANGUAGE_PACKS_64BIT_SQL_2005_SP4_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_TURKISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2012_SP4_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_POLISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_SPANISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP1_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_ENGLISH_FULL_SQL_2016_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_1709_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_61BIT_SQL_2012_RTM_SP2_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2012_SP4_STANDARD"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2008_SP2_PORTUGUESE_BRAZIL_32BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2008_SP2_PORTUGESE_BRAZIL_32BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2014_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2012_SP4_EXPRESS"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2012_RTM_PORTUGUESE_PORTUGAL_64BIT_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2012_RTM_PORTUGESE_PORTUGAL_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_CZECH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_DUTCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_KOREAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_DUTCH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_64BIT_SQL_2012_SP4_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP1_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP2_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2017_STANDARD"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2019_PORTUGUESE_BRAZIL_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2019_PORTUGESE_BRAZIL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SQL_2008_R2_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2008_R2_SP1_ENGLISH_64BIT_SHAREPOINT_2010_SP2_FOUNDATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_P3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_JAPANESE_64BIT_SQL_2014_SP3_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_SPANISH_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_JAPANESE_64BIT_SQL_2014_SP3_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_CORE_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_JAPANESE_FULL_SQL_2016_SP2_STANDARD"
        },
        {
          "docs": {
            "deprecated": "- use WINDOWS_SERVER_2019_PORTUGUESE_PORTUGAL_FULL_BASE",
            "stability": "deprecated"
          },
          "name": "WINDOWS_SERVER_2019_PORTUGESE_PORTUGAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2019_SWEDISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_R2_RTM_ENGLISH_64BIT_HYPERV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_KOREAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2012_RTM_RUSSIAN_64BIT_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_CHINESE_TRADITIONAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2016_SP2_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2016_ENGLISH_FULL_SQL_2017_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_JAPANESE_FULL_SQL_2019_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_PORTUGUESE_BRAZIL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ITALIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_RUSSIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_SQL_2019_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_POLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_CORE_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_HUNGARIAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_SQL_2017_EXPRESS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_GERMAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_CORE_CONTAINERSLATEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_SQL_2019_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_JAPANESE_FULL_SQL_2017_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_SQL_2017_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_JAPANESE_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_KOREAN_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_JAPANESE_FULL_SQL_2017_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_JAPANESE_FULL_SQL_2019_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_CHINESE_SIMPLIFIED_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_SQL_2019_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_SPANISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_CORE_ECS_OPTIMIZED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_SQL_2017_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_CHINESE_TRADITIONAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_SQL_2019_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_FRENCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_JAPANESE_FULL_SQL_2017_STANDARD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_JAPANESE_FULL_SQL_2019_WEB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_TURKISH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_SQL_2017_ENTERPRISE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_PORTUGUESE_PORTUGAL_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_CZECH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_ENGLISH_FULL_ECS_OPTIMIZED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_DUTCH_FULL_BASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WINDOWS_SERVER_2022_SWEDISH_FULL_BASE"
        }
      ],
      "name": "WindowsVersion",
      "symbolId": "lib/windows-versions:WindowsVersion"
    }
  },
  "version": "1.153.1",
  "fingerprint": "**********"
}

{
  "version": "2",
  "toolVersion": "1.57.0",
  "snippets": {
    "a3fb238b791f212f2de9bf87c1625d6906fbdaac222f986c0a53ee5c652ec0b0": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyFirstBucket\")",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyFirstBucket\");",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyFirstBucket\");",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyFirstBucket\"))",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyFirstBucket');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 16
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyFirstBucket');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 3,
        "104": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "b2c1defa53aca5a152f4a8ba9307903a9cac2bcf91c996001a7ac8dce9be78c2"
    },
    "840f0fbedaca2204dcf09dea059bb2ef2fe502b028490228c9432304e628b8bf": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyEncryptedBucket\",\n    encryption=s3.BucketEncryption.KMS\n)\n\n# you can access the encryption key:\nassert(bucket.encryption_key instanceof kms.Key)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyEncryptedBucket\", new BucketProps {\n    Encryption = BucketEncryption.KMS\n});\n\n// you can access the encryption key:\nAssert(bucket.EncryptionKey instanceof Key);",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyEncryptedBucket\")\n        .encryption(BucketEncryption.KMS)\n        .build();\n\n// you can access the encryption key:\nassert(bucket.getEncryptionKey() instanceof Key);",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyEncryptedBucket\"), &bucketProps{\n\tencryption: s3.bucketEncryption_KMS,\n})\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.key)",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyEncryptedBucket', {\n  encryption: s3.BucketEncryption.KMS,\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.Key);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 45
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#encryptionKey",
        "@aws-cdk/aws-s3.BucketEncryption",
        "@aws-cdk/aws-s3.BucketEncryption#KMS",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyEncryptedBucket', {\n  encryption: s3.BucketEncryption.KMS,\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.Key);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 12,
        "98": 1,
        "104": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 1,
        "209": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "d5ecc9c9b5d14a9d69f60e06000ba204c410cbf0b0f2feddee45af4c8f08f8aa"
    },
    "49c0de2052cd3db0035ad4cb9444048954f903a12d6e30a549e7c16d1dc34436": {
      "translations": {
        "python": {
          "source": "my_kms_key = kms.Key(self, \"MyKey\")\n\nbucket = s3.Bucket(self, \"MyEncryptedBucket\",\n    encryption=s3.BucketEncryption.KMS,\n    encryption_key=my_kms_key\n)\n\nassert(bucket.encryption_key == my_kms_key)",
          "version": "2"
        },
        "csharp": {
          "source": "Key myKmsKey = new Key(this, \"MyKey\");\n\nBucket bucket = new Bucket(this, \"MyEncryptedBucket\", new BucketProps {\n    Encryption = BucketEncryption.KMS,\n    EncryptionKey = myKmsKey\n});\n\nAssert(bucket.EncryptionKey == myKmsKey);",
          "version": "1"
        },
        "java": {
          "source": "Key myKmsKey = new Key(this, \"MyKey\");\n\nBucket bucket = Bucket.Builder.create(this, \"MyEncryptedBucket\")\n        .encryption(BucketEncryption.KMS)\n        .encryptionKey(myKmsKey)\n        .build();\n\nassert(bucket.getEncryptionKey() == myKmsKey);",
          "version": "1"
        },
        "go": {
          "source": "myKmsKey := kms.NewKey(this, jsii.String(\"MyKey\"))\n\nbucket := s3.NewBucket(this, jsii.String(\"MyEncryptedBucket\"), &bucketProps{\n\tencryption: s3.bucketEncryption_KMS,\n\tencryptionKey: myKmsKey,\n})\n\nassert(bucket.encryptionKey == myKmsKey)",
          "version": "1"
        },
        "$": {
          "source": "const myKmsKey = new kms.Key(this, 'MyKey');\n\nconst bucket = new s3.Bucket(this, 'MyEncryptedBucket', {\n  encryption: s3.BucketEncryption.KMS,\n  encryptionKey: myKmsKey,\n});\n\nassert(bucket.encryptionKey === myKmsKey);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 56
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#encryptionKey",
        "@aws-cdk/aws-s3.BucketEncryption",
        "@aws-cdk/aws-s3.BucketEncryption#KMS",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myKmsKey = new kms.Key(this, 'MyKey');\n\nconst bucket = new s3.Bucket(this, 'MyEncryptedBucket', {\n  encryption: s3.BucketEncryption.KMS,\n  encryptionKey: myKmsKey,\n});\n\nassert(bucket.encryptionKey === myKmsKey);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "36": 1,
        "75": 16,
        "104": 2,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 2,
        "209": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2
      },
      "fqnsFingerprint": "652fc352bad4c90f60a1a3043640ebbba5913da2a83a71f553be073040aba27e"
    },
    "adae91f94bdd745173c12de053d30f620dfc7c396c43512eae0f74b335fc56ef": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyEncryptedBucket\",\n    encryption=s3.BucketEncryption.KMS,\n    bucket_key_enabled=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyEncryptedBucket\", new BucketProps {\n    Encryption = BucketEncryption.KMS,\n    BucketKeyEnabled = true\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyEncryptedBucket\")\n        .encryption(BucketEncryption.KMS)\n        .bucketKeyEnabled(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyEncryptedBucket\"), &bucketProps{\n\tencryption: s3.bucketEncryption_KMS,\n\tbucketKeyEnabled: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyEncryptedBucket', {\n  encryption: s3.BucketEncryption.KMS,\n  bucketKeyEnabled: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 69
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketEncryption",
        "@aws-cdk/aws-s3.BucketEncryption#KMS",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyEncryptedBucket', {\n  encryption: s3.BucketEncryption.KMS,\n  bucketKeyEnabled: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "04b4b7d5464322f17950ac32c593a2277b0209d3bf056f0f1431f85ec858d78b"
    },
    "74f2639cae4a8c7dab231af7005b571d87b86d886df53cdfcec7e0d93cca461a": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"Buck\",\n    encryption=s3.BucketEncryption.KMS_MANAGED\n)\n\nassert(bucket.encryption_key == null)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"Buck\", new BucketProps {\n    Encryption = BucketEncryption.KMS_MANAGED\n});\n\nAssert(bucket.EncryptionKey == null);",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"Buck\")\n        .encryption(BucketEncryption.KMS_MANAGED)\n        .build();\n\nassert(bucket.getEncryptionKey() == null);",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"Buck\"), &bucketProps{\n\tencryption: s3.bucketEncryption_KMS_MANAGED,\n})\n\nassert(bucket.encryptionKey == nil)",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'Buck', {\n  encryption: s3.BucketEncryption.KMS_MANAGED,\n});\n\nassert(bucket.encryptionKey == null);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 78
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#encryptionKey",
        "@aws-cdk/aws-s3.BucketEncryption",
        "@aws-cdk/aws-s3.BucketEncryption#KMS_MANAGED",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'Buck', {\n  encryption: s3.BucketEncryption.KMS_MANAGED,\n});\n\nassert(bucket.encryptionKey == null);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "34": 1,
        "75": 10,
        "100": 1,
        "104": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "197": 1,
        "209": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "a426906bd089978a73f9ca90c8320b99cea73078bf45179fb98f0919515edfd6"
    },
    "65bbb0c3f3260aa2580f4c51dfca4c685aa5fdfebe94dc3b8265e938af034ea4": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\nresult = bucket.add_to_resource_policy(iam.PolicyStatement(\n    actions=[\"s3:GetObject\"],\n    resources=[bucket.arn_for_objects(\"file.txt\")],\n    principals=[iam.AccountRootPrincipal()]\n))",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nAddToResourcePolicyResult result = bucket.AddToResourcePolicy(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"s3:GetObject\" },\n    Resources = new [] { bucket.ArnForObjects(\"file.txt\") },\n    Principals = new [] { new AccountRootPrincipal() }\n}));",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nAddToResourcePolicyResult result = bucket.addToResourcePolicy(PolicyStatement.Builder.create()\n        .actions(List.of(\"s3:GetObject\"))\n        .resources(List.of(bucket.arnForObjects(\"file.txt\")))\n        .principals(List.of(new AccountRootPrincipal()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nresult := bucket.addToResourcePolicy(iam.NewPolicyStatement(&policyStatementProps{\n\tactions: []*string{\n\t\tjsii.String(\"s3:GetObject\"),\n\t},\n\tresources: []*string{\n\t\tbucket.arnForObjects(jsii.String(\"file.txt\")),\n\t},\n\tprincipals: []iPrincipal{\n\t\tiam.NewAccountRootPrincipal(),\n\t},\n}))",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 91
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.AccountRootPrincipal",
        "@aws-cdk/aws-iam.AddToResourcePolicyResult",
        "@aws-cdk/aws-iam.PolicyStatement",
        "@aws-cdk/aws-iam.PolicyStatementProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#addToResourcePolicy",
        "@aws-cdk/aws-s3.BucketBase#arnForObjects",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 15,
        "104": 1,
        "192": 3,
        "193": 1,
        "194": 5,
        "196": 2,
        "197": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 3
      },
      "fqnsFingerprint": "498b6a013814151590484b50ef3c1c4ea1fb990fcd72e02983168cea4736e9cd"
    },
    "ead248d9a3b3802c755881c0d2052ca6854da5a21551c72b714088c6111c153e": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket.from_bucket_name(self, \"existingBucket\", \"bucket-name\")\n\n# No policy statement will be added to the resource\nresult = bucket.add_to_resource_policy(iam.PolicyStatement(\n    actions=[\"s3:GetObject\"],\n    resources=[bucket.arn_for_objects(\"file.txt\")],\n    principals=[iam.AccountRootPrincipal()]\n))",
          "version": "2"
        },
        "csharp": {
          "source": "IBucket bucket = Bucket.FromBucketName(this, \"existingBucket\", \"bucket-name\");\n\n// No policy statement will be added to the resource\nAddToResourcePolicyResult result = bucket.AddToResourcePolicy(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"s3:GetObject\" },\n    Resources = new [] { bucket.ArnForObjects(\"file.txt\") },\n    Principals = new [] { new AccountRootPrincipal() }\n}));",
          "version": "1"
        },
        "java": {
          "source": "IBucket bucket = Bucket.fromBucketName(this, \"existingBucket\", \"bucket-name\");\n\n// No policy statement will be added to the resource\nAddToResourcePolicyResult result = bucket.addToResourcePolicy(PolicyStatement.Builder.create()\n        .actions(List.of(\"s3:GetObject\"))\n        .resources(List.of(bucket.arnForObjects(\"file.txt\")))\n        .principals(List.of(new AccountRootPrincipal()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.bucket.fromBucketName(this, jsii.String(\"existingBucket\"), jsii.String(\"bucket-name\"))\n\n// No policy statement will be added to the resource\nresult := bucket.addToResourcePolicy(iam.NewPolicyStatement(&policyStatementProps{\n\tactions: []*string{\n\t\tjsii.String(\"s3:GetObject\"),\n\t},\n\tresources: []*string{\n\t\tbucket.arnForObjects(jsii.String(\"file.txt\")),\n\t},\n\tprincipals: []iPrincipal{\n\t\tiam.NewAccountRootPrincipal(),\n\t},\n}))",
          "version": "1"
        },
        "$": {
          "source": "const bucket = s3.Bucket.fromBucketName(this, 'existingBucket', 'bucket-name');\n\n// No policy statement will be added to the resource\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 103
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.AccountRootPrincipal",
        "@aws-cdk/aws-iam.AddToResourcePolicyResult",
        "@aws-cdk/aws-iam.PolicyStatement",
        "@aws-cdk/aws-iam.PolicyStatementProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketName",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.IBucket#addToResourcePolicy",
        "@aws-cdk/aws-s3.IBucket#arnForObjects",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = s3.Bucket.fromBucketName(this, 'existingBucket', 'bucket-name');\n\n// No policy statement will be added to the resource\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 16,
        "104": 1,
        "192": 3,
        "193": 1,
        "194": 6,
        "196": 3,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 3
      },
      "fqnsFingerprint": "f5e74130c2b096d1e29e071a7c8a541162a16f45243295eed918463041e201f7"
    },
    "6597b7811d64548d85268feefcea2a7dc3f7a7de20fbf2f3e7675111ef8d914d": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\nresult = bucket.add_to_resource_policy(iam.PolicyStatement(\n    actions=[\"s3:GetObject\"],\n    resources=[bucket.arn_for_objects(\"file.txt\")],\n    principals=[iam.AccountRootPrincipal()]\n))\n\nif not result.statement_added:\n    pass",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nAddToResourcePolicyResult result = bucket.AddToResourcePolicy(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"s3:GetObject\" },\n    Resources = new [] { bucket.ArnForObjects(\"file.txt\") },\n    Principals = new [] { new AccountRootPrincipal() }\n}));\n\nif (!result.StatementAdded)\n{\n}",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nAddToResourcePolicyResult result = bucket.addToResourcePolicy(PolicyStatement.Builder.create()\n        .actions(List.of(\"s3:GetObject\"))\n        .resources(List.of(bucket.arnForObjects(\"file.txt\")))\n        .principals(List.of(new AccountRootPrincipal()))\n        .build());\n\nif (!result.getStatementAdded()) {\n}",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nresult := bucket.addToResourcePolicy(iam.NewPolicyStatement(&policyStatementProps{\n\tactions: []*string{\n\t\tjsii.String(\"s3:GetObject\"),\n\t},\n\tresources: []*string{\n\t\tbucket.arnForObjects(jsii.String(\"file.txt\")),\n\t},\n\tprincipals: []iPrincipal{\n\t\tiam.NewAccountRootPrincipal(),\n\t},\n}))\n\nif !result.statementAdded {}",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));\n\nif (!result.statementAdded) {\n  // Uh-oh! Someone probably made a mistake here.\n}",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 118
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.AccountRootPrincipal",
        "@aws-cdk/aws-iam.AddToResourcePolicyResult",
        "@aws-cdk/aws-iam.AddToResourcePolicyResult#statementAdded",
        "@aws-cdk/aws-iam.PolicyStatement",
        "@aws-cdk/aws-iam.PolicyStatementProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#addToResourcePolicy",
        "@aws-cdk/aws-s3.BucketBase#arnForObjects",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\nconst result = bucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));\n\nif (!result.statementAdded) {\n  // Uh-oh! Someone probably made a mistake here.\n}\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 1,
        "192": 3,
        "193": 1,
        "194": 6,
        "196": 2,
        "197": 3,
        "207": 1,
        "223": 1,
        "225": 2,
        "227": 1,
        "242": 2,
        "243": 2,
        "281": 3
      },
      "fqnsFingerprint": "3fd7a8faf6824aaf03ec2fbbe09c936340584c602d5475899fdc0323fde7c70a"
    },
    "78cb23f0ef6e62752d3af28989750505b9ca0e2bf19e3e277a8a65d3211dfed1": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\nbucket.policy.apply_removal_policy(cdk.RemovalPolicy.RETAIN)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nbucket.Policy.ApplyRemovalPolicy(RemovalPolicy.RETAIN);",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nbucket.policy.applyRemovalPolicy(RemovalPolicy.RETAIN);",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.policy.applyRemovalPolicy(cdk.removalPolicy_RETAIN)",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\nbucket.policy?.applyRemovalPolicy(cdk.RemovalPolicy.RETAIN);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 134
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#policy",
        "@aws-cdk/aws-s3.BucketPolicy#applyRemovalPolicy",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#RETAIN",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.policy?.applyRemovalPolicy(cdk.RemovalPolicy.RETAIN);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "28": 1,
        "75": 9,
        "104": 1,
        "194": 5,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "ea476765f83b8ce8fb09bcbbb42ae94216c5f0e2a7c2a499696815e39b6d997f"
    },
    "28e512a0c62b13e5d4ba70a6731708568e4f4554372153d29c28ea8f4710ab5d": {
      "translations": {
        "python": {
          "source": "# my_lambda: lambda.Function\n\n\nbucket = s3.Bucket(self, \"MyBucket\")\nbucket.grant_read_write(my_lambda)",
          "version": "2"
        },
        "csharp": {
          "source": "Function myLambda;\n\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.GrantReadWrite(myLambda);",
          "version": "1"
        },
        "java": {
          "source": "Function myLambda;\n\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.grantReadWrite(myLambda);",
          "version": "1"
        },
        "go": {
          "source": "var myLambda function\n\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.grantReadWrite(myLambda)",
          "version": "1"
        },
        "$": {
          "source": "declare const myLambda: lambda.Function;\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.grantReadWrite(myLambda);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 143
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#grantReadWrite",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myLambda: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.grantReadWrite(myLambda);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "290": 1
      },
      "fqnsFingerprint": "df5191ffb2a7c3ef4b2e929fe742a89d27e509ab95e3153424b6e7ded68a796f"
    },
    "5b31c211e8852df24248dd8b127dc2441d939e05c3c127db3b92d973fa178603": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"Bucket\",\n    enforce_sSL=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"Bucket\", new BucketProps {\n    EnforceSSL = true\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"Bucket\")\n        .enforceSSL(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"Bucket\"), &bucketProps{\n\tenforceSSL: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'Bucket', {\n  enforceSSL: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 159
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'Bucket', {\n  enforceSSL: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "eb0dfaab3b5150668b66f7c0db7adc3307081430cdb5e34998966c0994b1aa4b"
    },
    "a179533ca40e4c0791e2c038c66c481b915033c76f8bab64b76fd79cf33670d4": {
      "translations": {
        "python": {
          "source": "#\n# Stack that defines the bucket\n#\nclass Producer(cdk.Stack):\n\n    def __init__(self, scope, id, *, description=None, env=None, stackName=None, tags=None, synthesizer=None, terminationProtection=None, analyticsReporting=None):\n        super().__init__(scope, id, description=description, env=env, stackName=stackName, tags=tags, synthesizer=synthesizer, terminationProtection=terminationProtection, analyticsReporting=analyticsReporting)\n\n        bucket = s3.Bucket(self, \"MyBucket\",\n            removal_policy=cdk.RemovalPolicy.DESTROY\n        )\n        self.my_bucket = bucket\n\n#\n# Stack that consumes the bucket\n#\nclass Consumer(cdk.Stack):\n    def __init__(self, scope, id, *, userBucket, description=None, env=None, stackName=None, tags=None, synthesizer=None, terminationProtection=None, analyticsReporting=None):\n        super().__init__(scope, id, userBucket=userBucket, description=description, env=env, stackName=stackName, tags=tags, synthesizer=synthesizer, terminationProtection=terminationProtection, analyticsReporting=analyticsReporting)\n\n        user = iam.User(self, \"MyUser\")\n        user_bucket.grant_read_write(user)\n\nproducer = Producer(app, \"ProducerStack\")\nConsumer(app, \"ConsumerStack\", user_bucket=producer.my_bucket)",
          "version": "2"
        },
        "csharp": {
          "source": "/**\n * Stack that defines the bucket\n */\nclass Producer : Stack\n{\n    public Bucket MyBucket { get; }\n\n    public Producer(App scope, string id, StackProps? props=null) : base(scope, id, props)\n    {\n\n        Bucket bucket = new Bucket(this, \"MyBucket\", new BucketProps {\n            RemovalPolicy = RemovalPolicy.DESTROY\n        });\n        MyBucket = bucket;\n    }\n}\n\nclass ConsumerProps : StackProps\n{\n    public IBucket UserBucket { get; set; }\n}\n\n/**\n * Stack that consumes the bucket\n */\nclass Consumer : Stack\n{\n    public Consumer(App scope, string id, ConsumerProps props) : base(scope, id, props)\n    {\n\n        User user = new User(this, \"MyUser\");\n        props.UserBucket.GrantReadWrite(user);\n    }\n}\n\nProducer producer = new Producer(app, \"ProducerStack\");\nnew Consumer(app, \"ConsumerStack\", new ConsumerProps { UserBucket = producer.MyBucket });",
          "version": "1"
        },
        "java": {
          "source": "/**\n * Stack that defines the bucket\n */\npublic class Producer extends Stack {\n    public final Bucket myBucket;\n\n    public Producer(App scope, String id) {\n        this(scope, id, null);\n    }\n\n    public Producer(App scope, String id, StackProps props) {\n        super(scope, id, props);\n\n        Bucket bucket = Bucket.Builder.create(this, \"MyBucket\")\n                .removalPolicy(RemovalPolicy.DESTROY)\n                .build();\n        this.myBucket = bucket;\n    }\n}\n\npublic class ConsumerProps extends StackProps {\n    private IBucket userBucket;\n    public IBucket getUserBucket() {\n        return this.userBucket;\n    }\n    public ConsumerProps userBucket(IBucket userBucket) {\n        this.userBucket = userBucket;\n        return this;\n    }\n}\n\n/**\n * Stack that consumes the bucket\n */\npublic class Consumer extends Stack {\n    public Consumer(App scope, String id, ConsumerProps props) {\n        super(scope, id, props);\n\n        User user = new User(this, \"MyUser\");\n        props.userBucket.grantReadWrite(user);\n    }\n}\n\nProducer producer = new Producer(app, \"ProducerStack\");\nnew Consumer(app, \"ConsumerStack\", new ConsumerProps().userBucket(producer.getMyBucket()));",
          "version": "1"
        },
        "go": {
          "source": "/**\n * Stack that defines the bucket\n */\ntype producer struct {\n\tstack\n\tmyBucket bucket\n}\n\nfunc newProducer(scope app, id *string, props stackProps) *producer {\n\tthis := &producer{}\n\tcdk.NewStack_Override(this, scope, id, props)\n\n\tbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\t\tremovalPolicy: cdk.removalPolicy_DESTROY,\n\t})\n\tthis.myBucket = bucket\n\treturn this\n}\n\ntype consumerProps struct {\n\tstackProps\n\tuserBucket iBucket\n}\n\n/**\n * Stack that consumes the bucket\n */\ntype consumer struct {\n\tstack\n}\n\nfunc newConsumer(scope app, id *string, props consumerProps) *consumer {\n\tthis := &consumer{}\n\tcdk.NewStack_Override(this, scope, id, props)\n\n\tuser := iam.NewUser(this, jsii.String(\"MyUser\"))\n\t*props.userBucket.grantReadWrite(user)\n\treturn this\n}\n\nproducer := NewProducer(app, jsii.String(\"ProducerStack\"))\nNewConsumer(app, jsii.String(\"ConsumerStack\"), &consumerProps{\n\tuserBucket: producer.myBucket,\n})",
          "version": "1"
        },
        "$": {
          "source": "\n/**\n * Stack that defines the bucket\n */\nclass Producer extends cdk.Stack {\n  public readonly myBucket: s3.Bucket;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const bucket = new s3.Bucket(this, 'MyBucket', {\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n    });\n    this.myBucket = bucket;\n  }\n}\n\ninterface ConsumerProps extends cdk.StackProps {\n  userBucket: s3.IBucket;\n}\n\n/**\n * Stack that consumes the bucket\n */\nclass Consumer extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: ConsumerProps) {\n    super(scope, id, props);\n\n    const user = new iam.User(this, 'MyUser');\n    props.userBucket.grantReadWrite(user);\n  }\n}\n\nconst producer = new Producer(app, 'ProducerStack');\nnew Consumer(app, 'ConsumerStack', { userBucket: producer.myBucket });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 169
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.User",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.IBucket#grantReadWrite",
        "@aws-cdk/core.App",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.StackProps",
        "constructs.Construct"
      ],
      "fullSource": "/// !cdk-integ *\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\nimport * as s3 from '../lib';\n\nconst app = new cdk.App();\n\n/// !show\n\n/**\n * Stack that defines the bucket\n */\nclass Producer extends cdk.Stack {\n  public readonly myBucket: s3.Bucket;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const bucket = new s3.Bucket(this, 'MyBucket', {\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n    });\n    this.myBucket = bucket;\n  }\n}\n\ninterface ConsumerProps extends cdk.StackProps {\n  userBucket: s3.IBucket;\n}\n\n/**\n * Stack that consumes the bucket\n */\nclass Consumer extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: ConsumerProps) {\n    super(scope, id, props);\n\n    const user = new iam.User(this, 'MyUser');\n    props.userBucket.grantReadWrite(user);\n  }\n}\n\nconst producer = new Producer(app, 'ProducerStack');\nnew Consumer(app, 'ConsumerStack', { userBucket: producer.myBucket });\n/// !hide\n\napp.synth();\n",
      "syntaxKindCounter": {
        "10": 4,
        "57": 1,
        "62": 1,
        "75": 58,
        "102": 2,
        "104": 3,
        "119": 1,
        "138": 1,
        "143": 2,
        "153": 5,
        "156": 6,
        "158": 1,
        "159": 1,
        "162": 2,
        "169": 6,
        "193": 2,
        "194": 11,
        "196": 3,
        "197": 4,
        "209": 1,
        "216": 3,
        "223": 2,
        "225": 3,
        "226": 5,
        "242": 3,
        "243": 3,
        "245": 2,
        "246": 1,
        "279": 3,
        "281": 2
      },
      "fqnsFingerprint": "1a2ff359fc5b501cc0379adc9372a314b288e988f797586b19eb12674ce1c3aa"
    },
    "ce59949be8a853213175c4947526bbd616ea7ee936cc66dbe439bec1c2f8b3cc": {
      "translations": {
        "python": {
          "source": "# my_lambda: lambda.Function\n\nbucket = s3.Bucket.from_bucket_attributes(self, \"ImportedBucket\",\n    bucket_arn=\"arn:aws:s3:::my-bucket\"\n)\n\n# now you can just call methods on the bucket\nbucket.add_event_notification(s3.EventType.OBJECT_CREATED, s3n.LambdaDestination(my_lambda), prefix=\"home/myusername/*\")",
          "version": "2"
        },
        "csharp": {
          "source": "Function myLambda;\n\nIBucket bucket = Bucket.FromBucketAttributes(this, \"ImportedBucket\", new BucketAttributes {\n    BucketArn = \"arn:aws:s3:::my-bucket\"\n});\n\n// now you can just call methods on the bucket\nbucket.AddEventNotification(EventType.OBJECT_CREATED, new LambdaDestination(myLambda), new NotificationKeyFilter { Prefix = \"home/myusername/*\" });",
          "version": "1"
        },
        "java": {
          "source": "Function myLambda;\n\nIBucket bucket = Bucket.fromBucketAttributes(this, \"ImportedBucket\", BucketAttributes.builder()\n        .bucketArn(\"arn:aws:s3:::my-bucket\")\n        .build());\n\n// now you can just call methods on the bucket\nbucket.addEventNotification(EventType.OBJECT_CREATED, new LambdaDestination(myLambda), NotificationKeyFilter.builder().prefix(\"home/myusername/*\").build());",
          "version": "1"
        },
        "go": {
          "source": "var myLambda function\nbucket := s3.bucket.fromBucketAttributes(this, jsii.String(\"ImportedBucket\"), &bucketAttributes{\n\tbucketArn: jsii.String(\"arn:aws:s3:::my-bucket\"),\n})\n\n// now you can just call methods on the bucket\nbucket.addEventNotification(s3.eventType_OBJECT_CREATED, s3n.NewLambdaDestination(myLambda), &notificationKeyFilter{\n\tprefix: jsii.String(\"home/myusername/*\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myLambda: lambda.Function;\nconst bucket = s3.Bucket.fromBucketAttributes(this, 'ImportedBucket', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n});\n\n// now you can just call methods on the bucket\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 213
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-s3-notifications.LambdaDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketAttributes",
        "@aws-cdk/aws-s3.BucketAttributes",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_CREATED",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.IBucket#addEventNotification",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-s3.NotificationKeyFilter",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myLambda: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst bucket = s3.Bucket.fromBucketAttributes(this, 'ImportedBucket', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n});\n\n// now you can just call methods on the bucket\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 6,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "dfdb607e655261c3dd45865fbc961ba9bc469172e72d6a7fe8db1f7d942a46ff"
    },
    "afb098aad002cde97de71399e05dce09ac709d431b9171aabb5f8cdf85f591b4": {
      "translations": {
        "python": {
          "source": "by_name = s3.Bucket.from_bucket_name(self, \"BucketByName\", \"my-bucket\")\nby_arn = s3.Bucket.from_bucket_arn(self, \"BucketByArn\", \"arn:aws:s3:::my-bucket\")",
          "version": "2"
        },
        "csharp": {
          "source": "IBucket byName = Bucket.FromBucketName(this, \"BucketByName\", \"my-bucket\");\nIBucket byArn = Bucket.FromBucketArn(this, \"BucketByArn\", \"arn:aws:s3:::my-bucket\");",
          "version": "1"
        },
        "java": {
          "source": "IBucket byName = Bucket.fromBucketName(this, \"BucketByName\", \"my-bucket\");\nIBucket byArn = Bucket.fromBucketArn(this, \"BucketByArn\", \"arn:aws:s3:::my-bucket\");",
          "version": "1"
        },
        "go": {
          "source": "byName := s3.bucket.fromBucketName(this, jsii.String(\"BucketByName\"), jsii.String(\"my-bucket\"))\nbyArn := s3.bucket.fromBucketArn(this, jsii.String(\"BucketByArn\"), jsii.String(\"arn:aws:s3:::my-bucket\"))",
          "version": "1"
        },
        "$": {
          "source": "const byName = s3.Bucket.fromBucketName(this, 'BucketByName', 'my-bucket');\nconst byArn  = s3.Bucket.fromBucketArn(this, 'BucketByArn', 'arn:aws:s3:::my-bucket');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 227
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketArn",
        "@aws-cdk/aws-s3.Bucket#fromBucketName",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst byName = s3.Bucket.fromBucketName(this, 'BucketByName', 'my-bucket');\nconst byArn  = s3.Bucket.fromBucketArn(this, 'BucketByArn', 'arn:aws:s3:::my-bucket');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "104": 2,
        "194": 4,
        "196": 2,
        "225": 2,
        "242": 2,
        "243": 2
      },
      "fqnsFingerprint": "1c897e348f9898c98d76326044fbf43044dd46827a6731d8b23c9b03139d07a2"
    },
    "a8c28d6c79f0c84ab82a231f0a19c69ab7860e861d9494770bf457ece86fa242": {
      "translations": {
        "python": {
          "source": "my_cross_region_bucket = s3.Bucket.from_bucket_attributes(self, \"CrossRegionImport\",\n    bucket_arn=\"arn:aws:s3:::my-bucket\",\n    region=\"us-east-1\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IBucket myCrossRegionBucket = Bucket.FromBucketAttributes(this, \"CrossRegionImport\", new BucketAttributes {\n    BucketArn = \"arn:aws:s3:::my-bucket\",\n    Region = \"us-east-1\"\n});",
          "version": "1"
        },
        "java": {
          "source": "IBucket myCrossRegionBucket = Bucket.fromBucketAttributes(this, \"CrossRegionImport\", BucketAttributes.builder()\n        .bucketArn(\"arn:aws:s3:::my-bucket\")\n        .region(\"us-east-1\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "myCrossRegionBucket := s3.bucket.fromBucketAttributes(this, jsii.String(\"CrossRegionImport\"), &bucketAttributes{\n\tbucketArn: jsii.String(\"arn:aws:s3:::my-bucket\"),\n\tregion: jsii.String(\"us-east-1\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "const myCrossRegionBucket = s3.Bucket.fromBucketAttributes(this, 'CrossRegionImport', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n  region: 'us-east-1',\n});\n// myCrossRegionBucket.bucketRegionalDomainName === 'my-bucket.s3.us-east-1.amazonaws.com'",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 235
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketAttributes",
        "@aws-cdk/aws-s3.BucketAttributes",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myCrossRegionBucket = s3.Bucket.fromBucketAttributes(this, 'CrossRegionImport', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n  region: 'us-east-1',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "c5ff011ceb6de24426baaa44ee4bc21a73aa8c158020ca992747f5e1cde09cea"
    },
    "31a9b854c09d6af88c651a6032d4b25e3828b8c3d6b9bba98609527de67dbdd1": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\ntopic = sns.Topic(self, \"MyTopic\")\nbucket.add_event_notification(s3.EventType.OBJECT_CREATED, s3n.SnsDestination(topic))",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nTopic topic = new Topic(this, \"MyTopic\");\nbucket.AddEventNotification(EventType.OBJECT_CREATED, new SnsDestination(topic));",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nTopic topic = new Topic(this, \"MyTopic\");\nbucket.addEventNotification(EventType.OBJECT_CREATED, new SnsDestination(topic));",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\ntopic := sns.NewTopic(this, jsii.String(\"MyTopic\"))\nbucket.addEventNotification(s3.eventType_OBJECT_CREATED, s3n.NewSnsDestination(topic))",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\nconst topic = new sns.Topic(this, 'MyTopic');\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.SnsDestination(topic));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 255
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3-notifications.SnsDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#addEventNotification",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_CREATED",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-sns.ITopic",
        "@aws-cdk/aws-sns.Topic",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\nconst topic = new sns.Topic(this, 'MyTopic');\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.SnsDestination(topic));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 14,
        "104": 2,
        "194": 6,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2
      },
      "fqnsFingerprint": "12426b8fa61f32b51a57c01177024215270bacd4b68ed8b6515d26d434f55a82"
    },
    "1684710021bfdb58c0d08fbc7fad26b925a70105d6825e6bb2e1dfadb021a2df": {
      "translations": {
        "python": {
          "source": "# my_queue: sqs.Queue\n\nbucket = s3.Bucket(self, \"MyBucket\")\nbucket.add_event_notification(s3.EventType.OBJECT_REMOVED,\n    s3n.SqsDestination(my_queue), prefix=\"foo/\", suffix=\".jpg\")",
          "version": "2"
        },
        "csharp": {
          "source": "Queue myQueue;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.AddEventNotification(EventType.OBJECT_REMOVED,\nnew SqsDestination(myQueue), new NotificationKeyFilter { Prefix = \"foo/\", Suffix = \".jpg\" });",
          "version": "1"
        },
        "java": {
          "source": "Queue myQueue;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.addEventNotification(EventType.OBJECT_REMOVED,\nnew SqsDestination(myQueue), NotificationKeyFilter.builder().prefix(\"foo/\").suffix(\".jpg\").build());",
          "version": "1"
        },
        "go": {
          "source": "var myQueue queue\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.addEventNotification(s3.eventType_OBJECT_REMOVED,\ns3n.NewSqsDestination(myQueue), &notificationKeyFilter{\n\tprefix: jsii.String(\"foo/\"),\n\tsuffix: jsii.String(\".jpg\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myQueue: sqs.Queue;\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.addEventNotification(s3.EventType.OBJECT_REMOVED,\n  new s3n.SqsDestination(myQueue),\n  { prefix: 'foo/', suffix: '.jpg' });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 270
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3-notifications.SqsDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#addEventNotification",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_REMOVED",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-s3.NotificationKeyFilter",
        "@aws-cdk/aws-sqs.IQueue",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myQueue: sqs.Queue;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.addEventNotification(s3.EventType.OBJECT_REMOVED,\n  new s3n.SqsDestination(myQueue),\n  { prefix: 'foo/', suffix: '.jpg' });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 16,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1ebf3274d8449ea7d48470f14a16a4409fcc82f03a24df75930f9648ede35ec0"
    },
    "cdc9b35b6b797a2cc026af25a47108aa089f3ff8cb9ac6cfdab71caddca45181": {
      "translations": {
        "python": {
          "source": "# topic: sns.Topic\n\nbucket = s3.Bucket.from_bucket_attributes(self, \"ImportedBucket\",\n    bucket_arn=\"arn:aws:s3:::my-bucket\"\n)\nbucket.add_event_notification(s3.EventType.OBJECT_CREATED, s3n.SnsDestination(topic))",
          "version": "2"
        },
        "csharp": {
          "source": "Topic topic;\n\nIBucket bucket = Bucket.FromBucketAttributes(this, \"ImportedBucket\", new BucketAttributes {\n    BucketArn = \"arn:aws:s3:::my-bucket\"\n});\nbucket.AddEventNotification(EventType.OBJECT_CREATED, new SnsDestination(topic));",
          "version": "1"
        },
        "java": {
          "source": "Topic topic;\n\nIBucket bucket = Bucket.fromBucketAttributes(this, \"ImportedBucket\", BucketAttributes.builder()\n        .bucketArn(\"arn:aws:s3:::my-bucket\")\n        .build());\nbucket.addEventNotification(EventType.OBJECT_CREATED, new SnsDestination(topic));",
          "version": "1"
        },
        "go": {
          "source": "var topic topic\nbucket := s3.bucket.fromBucketAttributes(this, jsii.String(\"ImportedBucket\"), &bucketAttributes{\n\tbucketArn: jsii.String(\"arn:aws:s3:::my-bucket\"),\n})\nbucket.addEventNotification(s3.eventType_OBJECT_CREATED, s3n.NewSnsDestination(topic))",
          "version": "1"
        },
        "$": {
          "source": "declare const topic: sns.Topic;\nconst bucket = s3.Bucket.fromBucketAttributes(this, 'ImportedBucket', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n});\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.SnsDestination(topic));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 280
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3-notifications.SnsDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketAttributes",
        "@aws-cdk/aws-s3.BucketAttributes",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_CREATED",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.IBucket#addEventNotification",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-sns.ITopic",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const topic: sns.Topic;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst bucket = s3.Bucket.fromBucketAttributes(this, 'ImportedBucket', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n});\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.SnsDestination(topic));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 16,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 6,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "40816ae3962dc152a3043abb9899f2becdbd3338096ce9a8bf9face86d385f58"
    },
    "5b4c155f86d9de0e234cc8571e615bbf99edd2835745021834ec8b7828815334": {
      "translations": {
        "python": {
          "source": "# my_role: iam.IRole\n\nbucket = s3.Bucket(self, \"MyBucket\",\n    notifications_handler_role=my_role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IRole myRole;\n\nBucket bucket = new Bucket(this, \"MyBucket\", new BucketProps {\n    NotificationsHandlerRole = myRole\n});",
          "version": "1"
        },
        "java": {
          "source": "IRole myRole;\n\nBucket bucket = Bucket.Builder.create(this, \"MyBucket\")\n        .notificationsHandlerRole(myRole)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myRole iRole\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tnotificationsHandlerRole: myRole,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myRole: iam.IRole;\nconst bucket = new s3.Bucket(this, 'MyBucket', {\n  notificationsHandlerRole: myRole,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 293
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myRole: iam.IRole;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst bucket = new s3.Bucket(this, 'MyBucket', {\n  notificationsHandlerRole: myRole,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5b80092f729eb8ef1e09c6f5ee40599befb20fb6e9cd111686afd173658c01bb"
    },
    "890ca17ff3ef8b09eb9f4ad8592682b26af8e1458d0b494b22265e14145e2176": {
      "translations": {
        "python": {
          "source": "imported_role = iam.Role.from_role_arn(self, \"role\", \"arn:aws:iam::123456789012:role/RoleName\",\n    mutable=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IRole importedRole = Role.FromRoleArn(this, \"role\", \"arn:aws:iam::123456789012:role/RoleName\", new FromRoleArnOptions {\n    Mutable = false\n});",
          "version": "1"
        },
        "java": {
          "source": "IRole importedRole = Role.fromRoleArn(this, \"role\", \"arn:aws:iam::123456789012:role/RoleName\", FromRoleArnOptions.builder()\n        .mutable(false)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "importedRole := iam.role.fromRoleArn(this, jsii.String(\"role\"), jsii.String(\"arn:aws:iam::123456789012:role/RoleName\"), &fromRoleArnOptions{\n\tmutable: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "const importedRole = iam.Role.fromRoleArn(this, 'role', 'arn:aws:iam::123456789012:role/RoleName', {\n  mutable: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 306
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.FromRoleArnOptions",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.Role#fromRoleArn",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedRole = iam.Role.fromRoleArn(this, 'role', 'arn:aws:iam::123456789012:role/RoleName', {\n  mutable: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "91": 1,
        "104": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "63f6edbd79135f6c5ad931e879bbbaa6ef0c5d18a52e97cdf6568cf72c37b438"
    },
    "6460fc5c4a273e6a2b3180acabef3c713285af61e9295b768906baa43b83b536": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyEventBridgeBucket\",\n    event_bridge_enabled=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyEventBridgeBucket\", new BucketProps {\n    EventBridgeEnabled = true\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyEventBridgeBucket\")\n        .eventBridgeEnabled(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyEventBridgeBucket\"), &bucketProps{\n\teventBridgeEnabled: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyEventBridgeBucket', {\n  eventBridgeEnabled: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 325
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyEventBridgeBucket', {\n  eventBridgeEnabled: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "eb0dfaab3b5150668b66f7c0db7adc3307081430cdb5e34998966c0994b1aa4b"
    },
    "449c32c629685a1b9aa8880b1654cf3996386ef5eee3678f8bfb37c7e3d6ae55": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBlockedBucket\",\n    block_public_access=s3.BlockPublicAccess.BLOCK_ALL\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBlockedBucket\", new BucketProps {\n    BlockPublicAccess = BlockPublicAccess.BLOCK_ALL\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyBlockedBucket\")\n        .blockPublicAccess(BlockPublicAccess.BLOCK_ALL)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBlockedBucket\"), &bucketProps{\n\tblockPublicAccess: s3.blockPublicAccess_BLOCK_ALL(),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: s3.BlockPublicAccess.BLOCK_ALL,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 339
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BlockPublicAccess",
        "@aws-cdk/aws-s3.BlockPublicAccess#BLOCK_ALL",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: s3.BlockPublicAccess.BLOCK_ALL,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "21bb3e9f44c1a5d3ea1cb88abdcad9092d9af2ca557a990eb0c4bae3f54e5d20"
    },
    "f203e2b3cdc70bfdd14e7fa086c0328295d73df05aec6e124fdcb85665cd9468": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBlockedBucket\",\n    block_public_access=s3.BlockPublicAccess.BLOCK_ACLS\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBlockedBucket\", new BucketProps {\n    BlockPublicAccess = BlockPublicAccess.BLOCK_ACLS\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyBlockedBucket\")\n        .blockPublicAccess(BlockPublicAccess.BLOCK_ACLS)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBlockedBucket\"), &bucketProps{\n\tblockPublicAccess: s3.blockPublicAccess_BLOCK_ACLS(),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: s3.BlockPublicAccess.BLOCK_ACLS,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 347
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BlockPublicAccess",
        "@aws-cdk/aws-s3.BlockPublicAccess#BLOCK_ACLS",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: s3.BlockPublicAccess.BLOCK_ACLS,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "2a3e96e52b888b20af84599000d40d016c0dcdca0385827790d2c1d602ebc0f6"
    },
    "3b33e9a3410c0717d7faeb932c3735c6ebcff58e5c6cffcabc0dddc8c9e87aa5": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBlockedBucket\",\n    block_public_access=s3.BlockPublicAccess(block_public_policy=True)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBlockedBucket\", new BucketProps {\n    BlockPublicAccess = new BlockPublicAccess(new BlockPublicAccessOptions { BlockPublicPolicy = true })\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyBlockedBucket\")\n        .blockPublicAccess(BlockPublicAccess.Builder.create().blockPublicPolicy(true).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBlockedBucket\"), &bucketProps{\n\tblockPublicAccess: s3.NewBlockPublicAccess(&blockPublicAccessOptions{\n\t\tblockPublicPolicy: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: new s3.BlockPublicAccess({ blockPublicPolicy: true }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 355
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BlockPublicAccess",
        "@aws-cdk/aws-s3.BlockPublicAccessOptions",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: new s3.BlockPublicAccess({ blockPublicPolicy: true }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "106": 1,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "8d537936facf45746d71d29575eed70ee6d4266704405407cbeb04f10b78dc22"
    },
    "3ec3c0d78960b28e4a144df7b79b669375f922a83b02fcd1e6f95eaf60a9b749": {
      "translations": {
        "python": {
          "source": "access_logs_bucket = s3.Bucket(self, \"AccessLogsBucket\")\n\nbucket = s3.Bucket(self, \"MyBucket\",\n    server_access_logs_bucket=access_logs_bucket\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket accessLogsBucket = new Bucket(this, \"AccessLogsBucket\");\n\nBucket bucket = new Bucket(this, \"MyBucket\", new BucketProps {\n    ServerAccessLogsBucket = accessLogsBucket\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket accessLogsBucket = new Bucket(this, \"AccessLogsBucket\");\n\nBucket bucket = Bucket.Builder.create(this, \"MyBucket\")\n        .serverAccessLogsBucket(accessLogsBucket)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "accessLogsBucket := s3.NewBucket(this, jsii.String(\"AccessLogsBucket\"))\n\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tserverAccessLogsBucket: accessLogsBucket,\n})",
          "version": "1"
        },
        "$": {
          "source": "const accessLogsBucket = new s3.Bucket(this, 'AccessLogsBucket');\n\nconst bucket = new s3.Bucket(this, 'MyBucket', {\n  serverAccessLogsBucket: accessLogsBucket,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 369
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst accessLogsBucket = new s3.Bucket(this, 'AccessLogsBucket');\n\nconst bucket = new s3.Bucket(this, 'MyBucket', {\n  serverAccessLogsBucket: accessLogsBucket,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "104": 2,
        "193": 1,
        "194": 2,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 1
      },
      "fqnsFingerprint": "c4fecea0fbfbadf8e733e645a64a56e8f2c9486d5d4d12733cf16668a2a84183"
    },
    "8df0a19b9ad0338c137c9efc0d9250edfaab61be12ee9ab016cdcb378119a432": {
      "translations": {
        "python": {
          "source": "access_logs_bucket = s3.Bucket(self, \"AccessLogsBucket\")\n\nbucket = s3.Bucket(self, \"MyBucket\",\n    server_access_logs_bucket=access_logs_bucket,\n    server_access_logs_prefix=\"logs\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket accessLogsBucket = new Bucket(this, \"AccessLogsBucket\");\n\nBucket bucket = new Bucket(this, \"MyBucket\", new BucketProps {\n    ServerAccessLogsBucket = accessLogsBucket,\n    ServerAccessLogsPrefix = \"logs\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket accessLogsBucket = new Bucket(this, \"AccessLogsBucket\");\n\nBucket bucket = Bucket.Builder.create(this, \"MyBucket\")\n        .serverAccessLogsBucket(accessLogsBucket)\n        .serverAccessLogsPrefix(\"logs\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "accessLogsBucket := s3.NewBucket(this, jsii.String(\"AccessLogsBucket\"))\n\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tserverAccessLogsBucket: accessLogsBucket,\n\tserverAccessLogsPrefix: jsii.String(\"logs\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "const accessLogsBucket = new s3.Bucket(this, 'AccessLogsBucket');\n\nconst bucket = new s3.Bucket(this, 'MyBucket', {\n  serverAccessLogsBucket: accessLogsBucket,\n  serverAccessLogsPrefix: 'logs',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 379
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst accessLogsBucket = new s3.Bucket(this, 'AccessLogsBucket');\n\nconst bucket = new s3.Bucket(this, 'MyBucket', {\n  serverAccessLogsBucket: accessLogsBucket,\n  serverAccessLogsPrefix: 'logs',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "104": 2,
        "193": 1,
        "194": 2,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 2
      },
      "fqnsFingerprint": "c4fecea0fbfbadf8e733e645a64a56e8f2c9486d5d4d12733cf16668a2a84183"
    },
    "1c0f4c3f1e18c3b9e499b2ab37bb943b464d006c550727732262b2af0948dcc6": {
      "translations": {
        "python": {
          "source": "inventory_bucket = s3.Bucket(self, \"InventoryBucket\")\n\ndata_bucket = s3.Bucket(self, \"DataBucket\",\n    inventories=[s3.Inventory(\n        frequency=s3.InventoryFrequency.DAILY,\n        include_object_versions=s3.InventoryObjectVersion.CURRENT,\n        destination=s3.InventoryDestination(\n            bucket=inventory_bucket\n        )\n    ), s3.Inventory(\n        frequency=s3.InventoryFrequency.WEEKLY,\n        include_object_versions=s3.InventoryObjectVersion.ALL,\n        destination=s3.InventoryDestination(\n            bucket=inventory_bucket,\n            prefix=\"with-all-versions\"\n        )\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket inventoryBucket = new Bucket(this, \"InventoryBucket\");\n\nBucket dataBucket = new Bucket(this, \"DataBucket\", new BucketProps {\n    Inventories = new [] { new Inventory {\n        Frequency = InventoryFrequency.DAILY,\n        IncludeObjectVersions = InventoryObjectVersion.CURRENT,\n        Destination = new InventoryDestination {\n            Bucket = inventoryBucket\n        }\n    }, new Inventory {\n        Frequency = InventoryFrequency.WEEKLY,\n        IncludeObjectVersions = InventoryObjectVersion.ALL,\n        Destination = new InventoryDestination {\n            Bucket = inventoryBucket,\n            Prefix = \"with-all-versions\"\n        }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket inventoryBucket = new Bucket(this, \"InventoryBucket\");\n\nBucket dataBucket = Bucket.Builder.create(this, \"DataBucket\")\n        .inventories(List.of(Inventory.builder()\n                .frequency(InventoryFrequency.DAILY)\n                .includeObjectVersions(InventoryObjectVersion.CURRENT)\n                .destination(InventoryDestination.builder()\n                        .bucket(inventoryBucket)\n                        .build())\n                .build(), Inventory.builder()\n                .frequency(InventoryFrequency.WEEKLY)\n                .includeObjectVersions(InventoryObjectVersion.ALL)\n                .destination(InventoryDestination.builder()\n                        .bucket(inventoryBucket)\n                        .prefix(\"with-all-versions\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "inventoryBucket := s3.NewBucket(this, jsii.String(\"InventoryBucket\"))\n\ndataBucket := s3.NewBucket(this, jsii.String(\"DataBucket\"), &bucketProps{\n\tinventories: []inventory{\n\t\t&inventory{\n\t\t\tfrequency: s3.inventoryFrequency_DAILY,\n\t\t\tincludeObjectVersions: s3.inventoryObjectVersion_CURRENT,\n\t\t\tdestination: &inventoryDestination{\n\t\t\t\tbucket: inventoryBucket,\n\t\t\t},\n\t\t},\n\t\t&inventory{\n\t\t\tfrequency: s3.*inventoryFrequency_WEEKLY,\n\t\t\tincludeObjectVersions: s3.*inventoryObjectVersion_ALL,\n\t\t\tdestination: &inventoryDestination{\n\t\t\t\tbucket: inventoryBucket,\n\t\t\t\tprefix: jsii.String(\"with-all-versions\"),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 396
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.InventoryDestination",
        "@aws-cdk/aws-s3.InventoryFrequency",
        "@aws-cdk/aws-s3.InventoryFrequency#DAILY",
        "@aws-cdk/aws-s3.InventoryFrequency#WEEKLY",
        "@aws-cdk/aws-s3.InventoryObjectVersion",
        "@aws-cdk/aws-s3.InventoryObjectVersion#ALL",
        "@aws-cdk/aws-s3.InventoryObjectVersion#CURRENT",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 30,
        "104": 2,
        "192": 1,
        "193": 5,
        "194": 10,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 10
      },
      "fqnsFingerprint": "90b411883ef8b2f192e2666e273c769434a67c3ca8d96a64eb3fd051346ba8cf"
    },
    "dcb5fe207b669703f0cbc3a86d321dfde36b4f17973c085df6c9e0e044416d76": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyRedirectedBucket\",\n    website_redirect=s3.RedirectTarget(host_name=\"www.example.com\")\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyRedirectedBucket\", new BucketProps {\n    WebsiteRedirect = new RedirectTarget { HostName = \"www.example.com\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyRedirectedBucket\")\n        .websiteRedirect(RedirectTarget.builder().hostName(\"www.example.com\").build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyRedirectedBucket\"), &bucketProps{\n\twebsiteRedirect: &redirectTarget{\n\t\thostName: jsii.String(\"www.example.com\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRedirect: { hostName: 'www.example.com' },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 448
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.RedirectTarget",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRedirect: { hostName: 'www.example.com' },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "d539b8cf8fa76faf09fe8601b8518de208a913a5f501be5f5b03ef70899810b8"
    },
    "9f72ba98ab02b135bb0e7a392ef1b0898911a4127190ac988ecb5b2691a6fca3": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyRedirectedBucket\",\n    website_routing_rules=[s3.RoutingRule(\n        host_name=\"www.example.com\",\n        http_redirect_code=\"302\",\n        protocol=s3.RedirectProtocol.HTTPS,\n        replace_key=s3.ReplaceKey.prefix_with(\"test/\"),\n        condition=s3.RoutingRuleCondition(\n            http_error_code_returned_equals=\"200\",\n            key_prefix_equals=\"prefix\"\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyRedirectedBucket\", new BucketProps {\n    WebsiteRoutingRules = new [] { new RoutingRule {\n        HostName = \"www.example.com\",\n        HttpRedirectCode = \"302\",\n        Protocol = RedirectProtocol.HTTPS,\n        ReplaceKey = ReplaceKey.PrefixWith(\"test/\"),\n        Condition = new RoutingRuleCondition {\n            HttpErrorCodeReturnedEquals = \"200\",\n            KeyPrefixEquals = \"prefix\"\n        }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyRedirectedBucket\")\n        .websiteRoutingRules(List.of(RoutingRule.builder()\n                .hostName(\"www.example.com\")\n                .httpRedirectCode(\"302\")\n                .protocol(RedirectProtocol.HTTPS)\n                .replaceKey(ReplaceKey.prefixWith(\"test/\"))\n                .condition(RoutingRuleCondition.builder()\n                        .httpErrorCodeReturnedEquals(\"200\")\n                        .keyPrefixEquals(\"prefix\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyRedirectedBucket\"), &bucketProps{\n\twebsiteRoutingRules: []routingRule{\n\t\t&routingRule{\n\t\t\thostName: jsii.String(\"www.example.com\"),\n\t\t\thttpRedirectCode: jsii.String(\"302\"),\n\t\t\tprotocol: s3.redirectProtocol_HTTPS,\n\t\t\treplaceKey: s3.replaceKey.prefixWith(jsii.String(\"test/\")),\n\t\t\tcondition: &routingRuleCondition{\n\t\t\t\thttpErrorCodeReturnedEquals: jsii.String(\"200\"),\n\t\t\t\tkeyPrefixEquals: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: s3.RedirectProtocol.HTTPS,\n    replaceKey: s3.ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    },\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 458
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.RedirectProtocol",
        "@aws-cdk/aws-s3.RedirectProtocol#HTTPS",
        "@aws-cdk/aws-s3.ReplaceKey",
        "@aws-cdk/aws-s3.ReplaceKey#prefixWith",
        "@aws-cdk/aws-s3.RoutingRuleCondition",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: s3.RedirectProtocol.HTTPS,\n    replaceKey: s3.ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    },\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 17,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 5,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 8
      },
      "fqnsFingerprint": "e3a7ef7ce03beb45517010e38f18fb44ecf38b45d589da3ed411f4ca510f8136"
    },
    "9a1df4b7688e0132464b9905a11808a7f3b012e21faeccb0a01d7eb6fff434ff": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\nbucket.url_for_object(\"objectname\") # Path-Style URL\nbucket.virtual_hosted_url_for_object(\"objectname\") # Virtual Hosted-Style URL\nbucket.virtual_hosted_url_for_object(\"objectname\", regional=False)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nbucket.UrlForObject(\"objectname\"); // Path-Style URL\nbucket.VirtualHostedUrlForObject(\"objectname\"); // Virtual Hosted-Style URL\nbucket.VirtualHostedUrlForObject(\"objectname\", new VirtualHostedStyleUrlOptions { Regional = false });",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nbucket.urlForObject(\"objectname\"); // Path-Style URL\nbucket.virtualHostedUrlForObject(\"objectname\"); // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject(\"objectname\", VirtualHostedStyleUrlOptions.builder().regional(false).build());",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.urlForObject(jsii.String(\"objectname\")) // Path-Style URL\nbucket.virtualHostedUrlForObject(jsii.String(\"objectname\")) // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject(jsii.String(\"objectname\"), &virtualHostedStyleUrlOptions{\n\tregional: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\nbucket.urlForObject('objectname'); // Path-Style URL\nbucket.virtualHostedUrlForObject('objectname'); // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject('objectname', { regional: false }); // Virtual Hosted-Style URL but non-regional",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 489
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#urlForObject",
        "@aws-cdk/aws-s3.BucketBase#virtualHostedUrlForObject",
        "@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.urlForObject('objectname'); // Path-Style URL\nbucket.virtualHostedUrlForObject('objectname'); // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject('objectname', { regional: false });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "91": 1,
        "104": 1,
        "193": 1,
        "194": 4,
        "196": 3,
        "197": 1,
        "225": 1,
        "226": 3,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "b020aca7ffbf7361fbc77986f59f092fabb6a277693210220592c40a195b2f74"
    },
    "0e24c5fc757895589f565befbdbcdd9754a3d2791f201e0f9dfde5d672fa1af1": {
      "translations": {
        "python": {
          "source": "s3.Bucket(self, \"MyBucket\",\n    object_ownership=s3.ObjectOwnership.OBJECT_WRITER\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Bucket(this, \"MyBucket\", new BucketProps {\n    ObjectOwnership = ObjectOwnership.OBJECT_WRITER\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket.Builder.create(this, \"MyBucket\")\n        .objectOwnership(ObjectOwnership.OBJECT_WRITER)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tobjectOwnership: s3.objectOwnership_OBJECT_WRITER,\n})",
          "version": "1"
        },
        "$": {
          "source": "new s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.OBJECT_WRITER,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 506
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.ObjectOwnership",
        "@aws-cdk/aws-s3.ObjectOwnership#OBJECT_WRITER",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.OBJECT_WRITER,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "604be30aebaef57c6480f4d3cca13521915a6841926362a9c2acc0f6ccf2fcf0"
    },
    "fdba0a3b1fc77528ad1e9a3e8448101552f1e9266e444af52380ba99d4096ee4": {
      "translations": {
        "python": {
          "source": "s3.Bucket(self, \"MyBucket\",\n    object_ownership=s3.ObjectOwnership.BUCKET_OWNER_PREFERRED\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Bucket(this, \"MyBucket\", new BucketProps {\n    ObjectOwnership = ObjectOwnership.BUCKET_OWNER_PREFERRED\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket.Builder.create(this, \"MyBucket\")\n        .objectOwnership(ObjectOwnership.BUCKET_OWNER_PREFERRED)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tobjectOwnership: s3.objectOwnership_BUCKET_OWNER_PREFERRED,\n})",
          "version": "1"
        },
        "$": {
          "source": "new s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.BUCKET_OWNER_PREFERRED,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 516
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.ObjectOwnership",
        "@aws-cdk/aws-s3.ObjectOwnership#BUCKET_OWNER_PREFERRED",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.BUCKET_OWNER_PREFERRED,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "2226d0594c5b89a56ed8be099fdecb1b4da9a86241b6cdb190ed953fa7ce7385"
    },
    "8545528d8a1dcd10784c7b6a5ee34263573542ed838560c2a193d9fc5ccd6fff": {
      "translations": {
        "python": {
          "source": "s3.Bucket(self, \"MyBucket\",\n    object_ownership=s3.ObjectOwnership.BUCKET_OWNER_ENFORCED\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Bucket(this, \"MyBucket\", new BucketProps {\n    ObjectOwnership = ObjectOwnership.BUCKET_OWNER_ENFORCED\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket.Builder.create(this, \"MyBucket\")\n        .objectOwnership(ObjectOwnership.BUCKET_OWNER_ENFORCED)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tobjectOwnership: s3.objectOwnership_BUCKET_OWNER_ENFORCED,\n})",
          "version": "1"
        },
        "$": {
          "source": "new s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.BUCKET_OWNER_ENFORCED,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 526
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.ObjectOwnership",
        "@aws-cdk/aws-s3.ObjectOwnership#BUCKET_OWNER_ENFORCED",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.BUCKET_OWNER_ENFORCED,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "5018d6b0ddefbeb36dd9a83535a82d38d4876e802c825af1f2d64a4ec89ef631"
    },
    "dc016d3a953365ca00f3ca1fff79017d34171895ba09ba2bd033ccde8fc0c438": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyTempFileBucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyTempFileBucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyTempFileBucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyTempFileBucket\"), &bucketProps{\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyTempFileBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 543
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyTempFileBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "2cb37b46e32d19f5df7190021648804bd23e11574efe0ce916e834e806bd93f5"
    },
    "adc723db3d63936d889e34a9cf3865083c8bffa31e6ada5df48715a40fcbfdc8": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\",\n    transfer_acceleration=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\", new BucketProps {\n    TransferAcceleration = true\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyBucket\")\n        .transferAcceleration(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\ttransferAcceleration: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket', {\n   transferAcceleration: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 559
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket', {\n   transferAcceleration: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "eb0dfaab3b5150668b66f7c0db7adc3307081430cdb5e34998966c0994b1aa4b"
    },
    "22263bedfc873b8ee8047882d48091094566624553d5e9239e2ec146fb3659ce": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\",\n    transfer_acceleration=True\n)\nbucket.transfer_acceleration_url_for_object(\"objectname\")",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\", new BucketProps {\n    TransferAcceleration = true\n});\nbucket.TransferAccelerationUrlForObject(\"objectname\");",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyBucket\")\n        .transferAcceleration(true)\n        .build();\nbucket.transferAccelerationUrlForObject(\"objectname\");",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\ttransferAcceleration: jsii.Boolean(true),\n})\nbucket.transferAccelerationUrlForObject(jsii.String(\"objectname\"))",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket', {\n   transferAcceleration: true,\n});\nbucket.transferAccelerationUrlForObject('objectname');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 567
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#transferAccelerationUrlForObject",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket', {\n   transferAcceleration: true,\n});\nbucket.transferAccelerationUrlForObject('objectname');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "583241aa466f05365486fb2d17ea488b222e5ee1f0d680e82c93ffbe933dc90d"
    },
    "4360b1d60834247c353d31723d200fd22034ada2587447b69be3e504619edae3": {
      "translations": {
        "python": {
          "source": "s3.Bucket(self, \"MyBucket\",\n    intelligent_tiering_configurations=[s3.IntelligentTieringConfiguration(\n        name=\"foo\",\n        prefix=\"folder/name\",\n        archive_access_tier_time=cdk.Duration.days(90),\n        deep_archive_access_tier_time=cdk.Duration.days(180),\n        tags=[s3.Tag(key=\"tagname\", value=\"tagvalue\")]\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Bucket(this, \"MyBucket\", new BucketProps {\n    IntelligentTieringConfigurations = new [] { new IntelligentTieringConfiguration {\n        Name = \"foo\",\n        Prefix = \"folder/name\",\n        ArchiveAccessTierTime = Duration.Days(90),\n        DeepArchiveAccessTierTime = Duration.Days(180),\n        Tags = new [] { new Tag { Key = \"tagname\", Value = \"tagvalue\" } }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket.Builder.create(this, \"MyBucket\")\n        .intelligentTieringConfigurations(List.of(IntelligentTieringConfiguration.builder()\n                .name(\"foo\")\n                .prefix(\"folder/name\")\n                .archiveAccessTierTime(Duration.days(90))\n                .deepArchiveAccessTierTime(Duration.days(180))\n                .tags(List.of(Tag.builder().key(\"tagname\").value(\"tagvalue\").build()))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tintelligentTieringConfigurations: []intelligentTieringConfiguration{\n\t\t&intelligentTieringConfiguration{\n\t\t\tname: jsii.String(\"foo\"),\n\t\t\tprefix: jsii.String(\"folder/name\"),\n\t\t\tarchiveAccessTierTime: cdk.duration.days(jsii.Number(90)),\n\t\t\tdeepArchiveAccessTierTime: cdk.*duration.days(jsii.Number(180)),\n\t\t\ttags: []tag{\n\t\t\t\t&tag{\n\t\t\t\t\tkey: jsii.String(\"tagname\"),\n\t\t\t\t\tvalue: jsii.String(\"tagvalue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "    new s3.Bucket(this, 'MyBucket', {\n   intelligentTieringConfigurations: [{\n      name: 'foo',\n      prefix: 'folder/name',\n      archiveAccessTierTime: cdk.Duration.days(90),\n      deepArchiveAccessTierTime: cdk.Duration.days(180),\n      tags: [{key: 'tagname', value: 'tagvalue'}]\n   }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-s3"
        },
        "field": {
          "field": "markdown",
          "line": 578
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n    new s3.Bucket(this, 'MyBucket', {\n   intelligentTieringConfigurations: [{\n      name: 'foo',\n      prefix: 'folder/name',\n      archiveAccessTierTime: cdk.Duration.days(90),\n      deepArchiveAccessTierTime: cdk.Duration.days(180),\n      tags: [{key: 'tagname', value: 'tagvalue'}]\n   }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 5,
        "75": 16,
        "104": 1,
        "192": 2,
        "193": 3,
        "194": 5,
        "196": 2,
        "197": 1,
        "226": 1,
        "281": 8
      },
      "fqnsFingerprint": "af1bc5c4c82c0db09b350ce218ad8373dae45b24dccb86a7d3c8f82fb8e17125"
    },
    "b0c69834eaffdaea4b005d4b73634b075fee7fd3dc7f0e5211b3a01c5bcb0478": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBlockedBucket\",\n    block_public_access=s3.BlockPublicAccess.BLOCK_ALL\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBlockedBucket\", new BucketProps {\n    BlockPublicAccess = BlockPublicAccess.BLOCK_ALL\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyBlockedBucket\")\n        .blockPublicAccess(BlockPublicAccess.BLOCK_ALL)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBlockedBucket\"), &bucketProps{\n\tblockPublicAccess: s3.blockPublicAccess_BLOCK_ALL(),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: s3.BlockPublicAccess.BLOCK_ALL,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BlockPublicAccess"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BlockPublicAccess",
        "@aws-cdk/aws-s3.BlockPublicAccess#BLOCK_ALL",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: s3.BlockPublicAccess.BLOCK_ALL,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "21bb3e9f44c1a5d3ea1cb88abdcad9092d9af2ca557a990eb0c4bae3f54e5d20"
    },
    "1cad386cd3026dcb4e94aaf4d7814bf66c0c776a4f25fb4f4c97b822fdd0900d": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBlockedBucket\",\n    block_public_access=s3.BlockPublicAccess(block_public_policy=True)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBlockedBucket\", new BucketProps {\n    BlockPublicAccess = new BlockPublicAccess(new BlockPublicAccessOptions { BlockPublicPolicy = true })\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyBlockedBucket\")\n        .blockPublicAccess(BlockPublicAccess.Builder.create().blockPublicPolicy(true).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBlockedBucket\"), &bucketProps{\n\tblockPublicAccess: s3.NewBlockPublicAccess(&blockPublicAccessOptions{\n\t\tblockPublicPolicy: jsii.Boolean(true),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: new s3.BlockPublicAccess({ blockPublicPolicy: true }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BlockPublicAccessOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BlockPublicAccess",
        "@aws-cdk/aws-s3.BlockPublicAccessOptions",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBlockedBucket', {\n  blockPublicAccess: new s3.BlockPublicAccess({ blockPublicPolicy: true }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "104": 1,
        "106": 1,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "8d537936facf45746d71d29575eed70ee6d4266704405407cbeb04f10b78dc22"
    },
    "fed0af595847160093dce79d6535a22af382fc2e4ccfb88b94659e38fec914ad": {
      "translations": {
        "python": {
          "source": "# ecr_repository: ecr.Repository\n\n\ncodebuild.Project(self, \"Project\",\n    environment=codebuild.BuildEnvironment(\n        build_image=codebuild.WindowsBuildImage.from_ecr_repository(ecr_repository, \"v1.0\", codebuild.WindowsImageType.SERVER_2019),\n        # optional certificate to include in the build image\n        certificate=codebuild.BuildEnvironmentCertificate(\n            bucket=s3.Bucket.from_bucket_name(self, \"Bucket\", \"my-bucket\"),\n            object_key=\"path/to/cert.pem\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Repository ecrRepository;\n\n\nnew Project(this, \"Project\", new ProjectProps {\n    Environment = new BuildEnvironment {\n        BuildImage = WindowsBuildImage.FromEcrRepository(ecrRepository, \"v1.0\", WindowsImageType.SERVER_2019),\n        // optional certificate to include in the build image\n        Certificate = new BuildEnvironmentCertificate {\n            Bucket = Bucket.FromBucketName(this, \"Bucket\", \"my-bucket\"),\n            ObjectKey = \"path/to/cert.pem\"\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Repository ecrRepository;\n\n\nProject.Builder.create(this, \"Project\")\n        .environment(BuildEnvironment.builder()\n                .buildImage(WindowsBuildImage.fromEcrRepository(ecrRepository, \"v1.0\", WindowsImageType.SERVER_2019))\n                // optional certificate to include in the build image\n                .certificate(BuildEnvironmentCertificate.builder()\n                        .bucket(Bucket.fromBucketName(this, \"Bucket\", \"my-bucket\"))\n                        .objectKey(\"path/to/cert.pem\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var ecrRepository repository\n\ncodebuild.NewProject(this, jsii.String(\"Project\"), &projectProps{\n\tenvironment: &buildEnvironment{\n\t\tbuildImage: codebuild.windowsBuildImage.fromEcrRepository(ecrRepository, jsii.String(\"v1.0\"), codebuild.windowsImageType_SERVER_2019),\n\t\t// optional certificate to include in the build image\n\t\tcertificate: &buildEnvironmentCertificate{\n\t\t\tbucket: s3.bucket.fromBucketName(this, jsii.String(\"Bucket\"), jsii.String(\"my-bucket\")),\n\t\t\tobjectKey: jsii.String(\"path/to/cert.pem\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const ecrRepository: ecr.Repository;\n\nnew codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.WindowsBuildImage.fromEcrRepository(ecrRepository, 'v1.0', codebuild.WindowsImageType.SERVER_2019),\n    // optional certificate to include in the build image\n    certificate: {\n      bucket: s3.Bucket.fromBucketName(this, 'Bucket', 'my-bucket'),\n      objectKey: 'path/to/cert.pem',\n    },\n  },\n  // ...\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.Bucket"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codebuild.BuildEnvironment",
        "@aws-cdk/aws-codebuild.BuildEnvironmentCertificate",
        "@aws-cdk/aws-codebuild.IBuildImage",
        "@aws-cdk/aws-codebuild.Project",
        "@aws-cdk/aws-codebuild.ProjectProps",
        "@aws-cdk/aws-codebuild.WindowsBuildImage",
        "@aws-cdk/aws-codebuild.WindowsBuildImage#fromEcrRepository",
        "@aws-cdk/aws-codebuild.WindowsImageType",
        "@aws-cdk/aws-codebuild.WindowsImageType#SERVER_2019",
        "@aws-cdk/aws-ecr.IRepository",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketName",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const ecrRepository: ecr.Repository;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack, Duration, SecretValue } from '@aws-cdk/core';\nimport codebuild = require('@aws-cdk/aws-codebuild');\nimport iam = require('@aws-cdk/aws-iam');\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as ecr from '@aws-cdk/aws-ecr';\nimport * as logs from '@aws-cdk/aws-logs';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.WindowsBuildImage.fromEcrRepository(ecrRepository, 'v1.0', codebuild.WindowsImageType.SERVER_2019),\n    // optional certificate to include in the build image\n    certificate: {\n      bucket: s3.Bucket.fromBucketName(this, 'Bucket', 'my-bucket'),\n      objectKey: 'path/to/cert.pem',\n    },\n  },\n  // ...\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 20,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "6c4f77f8dd61314bcde9f8a9de16b8af3cbfec14d87348c1147e71f2fc78a3ab"
    },
    "847889833f4137c7e477e51b5aa64c30ce7326956285dc1c27f2c141d6728dc9": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\n\niot.TopicRule(self, \"TopicRule\",\n    sql=iot.IotSql.from_string_as_ver20160323(\"SELECT * FROM 'device/+/data'\"),\n    actions=[\n        actions.S3PutObjectAction(bucket,\n            access_control=s3.BucketAccessControl.PUBLIC_READ\n        )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\n\nnew TopicRule(this, \"TopicRule\", new TopicRuleProps {\n    Sql = IotSql.FromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n    Actions = new [] {\n        new S3PutObjectAction(bucket, new S3PutObjectActionProps {\n            AccessControl = BucketAccessControl.PUBLIC_READ\n        }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\n\nTopicRule.Builder.create(this, \"TopicRule\")\n        .sql(IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"))\n        .actions(List.of(\n            S3PutObjectAction.Builder.create(bucket)\n                    .accessControl(BucketAccessControl.PUBLIC_READ)\n                    .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\n\niot.NewTopicRule(this, jsii.String(\"TopicRule\"), &topicRuleProps{\n\tsql: iot.iotSql.fromStringAsVer20160323(jsii.String(\"SELECT * FROM 'device/+/data'\")),\n\tactions: []iAction{\n\t\tactions.NewS3PutObjectAction(bucket, &s3PutObjectActionProps{\n\t\t\taccessControl: s3.bucketAccessControl_PUBLIC_READ,\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BucketAccessControl"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot-actions.S3PutObjectAction",
        "@aws-cdk/aws-iot-actions.S3PutObjectActionProps",
        "@aws-cdk/aws-iot.IotSql",
        "@aws-cdk/aws-iot.IotSql#fromStringAsVer20160323",
        "@aws-cdk/aws-iot.TopicRule",
        "@aws-cdk/aws-iot.TopicRuleProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketAccessControl",
        "@aws-cdk/aws-s3.BucketAccessControl#PUBLIC_READ",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-iot-actions';\nimport * as iot from '@aws-cdk/aws-iot';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 2,
        "192": 1,
        "193": 2,
        "194": 7,
        "196": 1,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "ce1b687bb2c82100a3505e91639a22cd9143e3fffaec492b1626a5387ba1e7ce"
    },
    "02a0548dea63e07b7d48b4b2ed91128801c96056e8fefa738a4c16f2724439e5": {
      "translations": {
        "python": {
          "source": "# my_lambda: lambda.Function\n\nbucket = s3.Bucket.from_bucket_attributes(self, \"ImportedBucket\",\n    bucket_arn=\"arn:aws:s3:::my-bucket\"\n)\n\n# now you can just call methods on the bucket\nbucket.add_event_notification(s3.EventType.OBJECT_CREATED, s3n.LambdaDestination(my_lambda), prefix=\"home/myusername/*\")",
          "version": "2"
        },
        "csharp": {
          "source": "Function myLambda;\n\nIBucket bucket = Bucket.FromBucketAttributes(this, \"ImportedBucket\", new BucketAttributes {\n    BucketArn = \"arn:aws:s3:::my-bucket\"\n});\n\n// now you can just call methods on the bucket\nbucket.AddEventNotification(EventType.OBJECT_CREATED, new LambdaDestination(myLambda), new NotificationKeyFilter { Prefix = \"home/myusername/*\" });",
          "version": "1"
        },
        "java": {
          "source": "Function myLambda;\n\nIBucket bucket = Bucket.fromBucketAttributes(this, \"ImportedBucket\", BucketAttributes.builder()\n        .bucketArn(\"arn:aws:s3:::my-bucket\")\n        .build());\n\n// now you can just call methods on the bucket\nbucket.addEventNotification(EventType.OBJECT_CREATED, new LambdaDestination(myLambda), NotificationKeyFilter.builder().prefix(\"home/myusername/*\").build());",
          "version": "1"
        },
        "go": {
          "source": "var myLambda function\nbucket := s3.bucket.fromBucketAttributes(this, jsii.String(\"ImportedBucket\"), &bucketAttributes{\n\tbucketArn: jsii.String(\"arn:aws:s3:::my-bucket\"),\n})\n\n// now you can just call methods on the bucket\nbucket.addEventNotification(s3.eventType_OBJECT_CREATED, s3n.NewLambdaDestination(myLambda), &notificationKeyFilter{\n\tprefix: jsii.String(\"home/myusername/*\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myLambda: lambda.Function;\nconst bucket = s3.Bucket.fromBucketAttributes(this, 'ImportedBucket', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n});\n\n// now you can just call methods on the bucket\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BucketAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-s3-notifications.LambdaDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketAttributes",
        "@aws-cdk/aws-s3.BucketAttributes",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_CREATED",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.IBucket#addEventNotification",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-s3.NotificationKeyFilter",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myLambda: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst bucket = s3.Bucket.fromBucketAttributes(this, 'ImportedBucket', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n});\n\n// now you can just call methods on the bucket\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 6,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "dfdb607e655261c3dd45865fbc961ba9bc469172e72d6a7fe8db1f7d942a46ff"
    },
    "d88688cb43478674044c1c3dd244b2cdc5078fae3d84334b715c5491145be8b1": {
      "translations": {
        "python": {
          "source": "# my_lambda: lambda.Function\n\nbucket = s3.Bucket(self, \"MyBucket\")\nbucket.add_event_notification(s3.EventType.OBJECT_CREATED, s3n.LambdaDestination(my_lambda), prefix=\"home/myusername/*\")",
          "version": "2"
        },
        "csharp": {
          "source": "Function myLambda;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.AddEventNotification(EventType.OBJECT_CREATED, new LambdaDestination(myLambda), new NotificationKeyFilter { Prefix = \"home/myusername/*\" });",
          "version": "1"
        },
        "java": {
          "source": "Function myLambda;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.addEventNotification(EventType.OBJECT_CREATED, new LambdaDestination(myLambda), NotificationKeyFilter.builder().prefix(\"home/myusername/*\").build());",
          "version": "1"
        },
        "go": {
          "source": "var myLambda function\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.addEventNotification(s3.eventType_OBJECT_CREATED, s3n.NewLambdaDestination(myLambda), &notificationKeyFilter{\n\tprefix: jsii.String(\"home/myusername/*\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "   declare const myLambda: lambda.Function;\n   const bucket = new s3.Bucket(this, 'MyBucket');\n   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "member",
          "fqn": "@aws-cdk/aws-s3.BucketBase",
          "memberName": "addEventNotification"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-s3-notifications.LambdaDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#addEventNotification",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_CREATED",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-s3.NotificationKeyFilter",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n   declare const myLambda: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n   const bucket = new s3.Bucket(this, 'MyBucket');\n   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "163b94ccb296fbc41a1d6b572c6db264327e39055f0b09ef6eb3a8e3c3e4f948"
    },
    "0d6ad90f8b8fd904bff48c044500e89d62a7897b72dcc7df84bffd914dd44175": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyEncryptedBucket\",\n    encryption=s3.BucketEncryption.KMS\n)\n\n# you can access the encryption key:\nassert(bucket.encryption_key instanceof kms.Key)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyEncryptedBucket\", new BucketProps {\n    Encryption = BucketEncryption.KMS\n});\n\n// you can access the encryption key:\nAssert(bucket.EncryptionKey instanceof Key);",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyEncryptedBucket\")\n        .encryption(BucketEncryption.KMS)\n        .build();\n\n// you can access the encryption key:\nassert(bucket.getEncryptionKey() instanceof Key);",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyEncryptedBucket\"), &bucketProps{\n\tencryption: s3.bucketEncryption_KMS,\n})\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.key)",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyEncryptedBucket', {\n  encryption: s3.BucketEncryption.KMS,\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.Key);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BucketEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#encryptionKey",
        "@aws-cdk/aws-s3.BucketEncryption",
        "@aws-cdk/aws-s3.BucketEncryption#KMS",
        "@aws-cdk/aws-s3.BucketProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyEncryptedBucket', {\n  encryption: s3.BucketEncryption.KMS,\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.Key);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 12,
        "98": 1,
        "104": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 1,
        "209": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "d5ecc9c9b5d14a9d69f60e06000ba204c410cbf0b0f2feddee45af4c8f08f8aa"
    },
    "da570904a072f0753983505fdc978db03f460b24c02ffa62b80967dbf7b3f4c7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# tag_filters: Any\n\nbucket_metrics = s3.BucketMetrics(\n    id=\"id\",\n\n    # the properties below are optional\n    prefix=\"prefix\",\n    tag_filters={\n        \"tag_filters_key\": tag_filters\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar tagFilters;\n\nBucketMetrics bucketMetrics = new BucketMetrics {\n    Id = \"id\",\n\n    // the properties below are optional\n    Prefix = \"prefix\",\n    TagFilters = new Dictionary<string, object> {\n        { \"tagFiltersKey\", tagFilters }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject tagFilters;\n\nBucketMetrics bucketMetrics = BucketMetrics.builder()\n        .id(\"id\")\n\n        // the properties below are optional\n        .prefix(\"prefix\")\n        .tagFilters(Map.of(\n                \"tagFiltersKey\", tagFilters))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar tagFilters interface{}\nbucketMetrics := &bucketMetrics{\n\tid: jsii.String(\"id\"),\n\n\t// the properties below are optional\n\tprefix: jsii.String(\"prefix\"),\n\ttagFilters: map[string]interface{}{\n\t\t\"tagFiltersKey\": tagFilters,\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const tagFilters: any;\nconst bucketMetrics: s3.BucketMetrics = {\n  id: 'id',\n\n  // the properties below are optional\n  prefix: 'prefix',\n  tagFilters: {\n    tagFiltersKey: tagFilters,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BucketMetrics"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BucketMetrics"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const tagFilters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bucketMetrics: s3.BucketMetrics = {\n  id: 'id',\n\n  // the properties below are optional\n  prefix: 'prefix',\n  tagFilters: {\n    tagFiltersKey: tagFilters,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "29e9eecde005f1b5cc0958fc3890e32a4700e77f3474ff2b5c77e386351e106b"
    },
    "af0069b490275520e4c50a93261c17ae66776d42c782b92bd0d6620a65073497": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\n\n# dependable: cdk.IDependable\n\nbucket_notification_destination_config = s3.BucketNotificationDestinationConfig(\n    arn=\"arn\",\n    type=s3.BucketNotificationDestinationType.LAMBDA,\n\n    # the properties below are optional\n    dependencies=[dependable]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\n\nIDependable dependable;\nBucketNotificationDestinationConfig bucketNotificationDestinationConfig = new BucketNotificationDestinationConfig {\n    Arn = \"arn\",\n    Type = BucketNotificationDestinationType.LAMBDA,\n\n    // the properties below are optional\n    Dependencies = new [] { dependable }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\n\nIDependable dependable;\n\nBucketNotificationDestinationConfig bucketNotificationDestinationConfig = BucketNotificationDestinationConfig.builder()\n        .arn(\"arn\")\n        .type(BucketNotificationDestinationType.LAMBDA)\n\n        // the properties below are optional\n        .dependencies(List.of(dependable))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"import cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar dependable iDependable\nbucketNotificationDestinationConfig := &bucketNotificationDestinationConfig{\n\tarn: jsii.String(\"arn\"),\n\ttype: s3.bucketNotificationDestinationType_LAMBDA,\n\n\t// the properties below are optional\n\tdependencies: []*iDependable{\n\t\tdependable,\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dependable: cdk.IDependable;\nconst bucketNotificationDestinationConfig: s3.BucketNotificationDestinationConfig = {\n  arn: 'arn',\n  type: s3.BucketNotificationDestinationType.LAMBDA,\n\n  // the properties below are optional\n  dependencies: [dependable],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BucketNotificationDestinationConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BucketNotificationDestinationConfig",
        "@aws-cdk/aws-s3.BucketNotificationDestinationType",
        "@aws-cdk/aws-s3.BucketNotificationDestinationType#LAMBDA"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dependable: cdk.IDependable;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bucketNotificationDestinationConfig: s3.BucketNotificationDestinationConfig = {\n  arn: 'arn',\n  type: s3.BucketNotificationDestinationType.LAMBDA,\n\n  // the properties below are optional\n  dependencies: [dependable],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 15,
        "130": 1,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 1,
        "194": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "12061b93584790492aa59bc8c06e2589a48fd22d3f7414e664d14bf79cce0ed1"
    },
    "f173081b35fe0e3eb1b0d5cc03d3ab3b1a2c763c537c3d04867eca5877089e28": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\n\n# bucket: s3.Bucket\n\nbucket_policy = s3.BucketPolicy(self, \"MyBucketPolicy\",\n    bucket=bucket,\n\n    # the properties below are optional\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\n\nBucket bucket;\nBucketPolicy bucketPolicy = new BucketPolicy(this, \"MyBucketPolicy\", new BucketPolicyProps {\n    Bucket = bucket,\n\n    // the properties below are optional\n    RemovalPolicy = RemovalPolicy.DESTROY\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\n\nBucket bucket;\n\nBucketPolicy bucketPolicy = BucketPolicy.Builder.create(this, \"MyBucketPolicy\")\n        .bucket(bucket)\n\n        // the properties below are optional\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"import cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar bucket bucket\nbucketPolicy := s3.NewBucketPolicy(this, jsii.String(\"MyBucketPolicy\"), &bucketPolicyProps{\n\tbucket: bucket,\n\n\t// the properties below are optional\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\nconst bucketPolicy = new s3.BucketPolicy(this, 'MyBucketPolicy', {\n  bucket: bucket,\n\n  // the properties below are optional\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BucketPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BucketPolicy",
        "@aws-cdk/aws-s3.BucketPolicyProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bucketPolicy = new s3.BucketPolicy(this, 'MyBucketPolicy', {\n  bucket: bucket,\n\n  // the properties below are optional\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 14,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "f6b1bd00d565e0c0b323855f94771d3766ac018efd35129c3f1dc2709c901e8d"
    },
    "de26bdbd5c6d854ad2192bdb7f8d5bc016a1d67ea48ba1a295d4b531623cb356": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\n\n# bucket: s3.Bucket\n\nbucket_policy_props = s3.BucketPolicyProps(\n    bucket=bucket,\n\n    # the properties below are optional\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\n\nBucket bucket;\nBucketPolicyProps bucketPolicyProps = new BucketPolicyProps {\n    Bucket = bucket,\n\n    // the properties below are optional\n    RemovalPolicy = RemovalPolicy.DESTROY\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\n\nBucket bucket;\n\nBucketPolicyProps bucketPolicyProps = BucketPolicyProps.builder()\n        .bucket(bucket)\n\n        // the properties below are optional\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"import cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar bucket bucket\nbucketPolicyProps := &bucketPolicyProps{\n\tbucket: bucket,\n\n\t// the properties below are optional\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\nconst bucketPolicyProps: s3.BucketPolicyProps = {\n  bucket: bucket,\n\n  // the properties below are optional\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BucketPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.BucketPolicyProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bucketPolicyProps: s3.BucketPolicyProps = {\n  bucket: bucket,\n\n  // the properties below are optional\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 14,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1e183477c70614a4ff3d9d993dcf3469b7ff84a6f705f052ee3ffba82faa87e0"
    },
    "7681e5882b4bb9bcd0fee687275b9643e54e2f20db2d990a26783ba837f9b4ab": {
      "translations": {
        "python": {
          "source": "source_bucket = s3.Bucket(self, \"MyBucket\",\n    versioned=True\n)\n\npipeline = codepipeline.Pipeline(self, \"MyPipeline\")\nsource_output = codepipeline.Artifact()\nsource_action = codepipeline_actions.S3SourceAction(\n    action_name=\"S3Source\",\n    bucket=source_bucket,\n    bucket_key=\"path/to/file.zip\",\n    output=source_output\n)\npipeline.add_stage(\n    stage_name=\"Source\",\n    actions=[source_action]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket sourceBucket = new Bucket(this, \"MyBucket\", new BucketProps {\n    Versioned = true\n});\n\nPipeline pipeline = new Pipeline(this, \"MyPipeline\");\nArtifact sourceOutput = new Artifact();\nS3SourceAction sourceAction = new S3SourceAction(new S3SourceActionProps {\n    ActionName = \"S3Source\",\n    Bucket = sourceBucket,\n    BucketKey = \"path/to/file.zip\",\n    Output = sourceOutput\n});\npipeline.AddStage(new StageOptions {\n    StageName = \"Source\",\n    Actions = new [] { sourceAction }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket sourceBucket = Bucket.Builder.create(this, \"MyBucket\")\n        .versioned(true)\n        .build();\n\nPipeline pipeline = new Pipeline(this, \"MyPipeline\");\nArtifact sourceOutput = new Artifact();\nS3SourceAction sourceAction = S3SourceAction.Builder.create()\n        .actionName(\"S3Source\")\n        .bucket(sourceBucket)\n        .bucketKey(\"path/to/file.zip\")\n        .output(sourceOutput)\n        .build();\npipeline.addStage(StageOptions.builder()\n        .stageName(\"Source\")\n        .actions(List.of(sourceAction))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "sourceBucket := s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tversioned: jsii.Boolean(true),\n})\n\npipeline := codepipeline.NewPipeline(this, jsii.String(\"MyPipeline\"))\nsourceOutput := codepipeline.NewArtifact()\nsourceAction := codepipeline_actions.NewS3SourceAction(&s3SourceActionProps{\n\tactionName: jsii.String(\"S3Source\"),\n\tbucket: sourceBucket,\n\tbucketKey: jsii.String(\"path/to/file.zip\"),\n\toutput: sourceOutput,\n})\npipeline.addStage(&stageOptions{\n\tstageName: jsii.String(\"Source\"),\n\tactions: []iAction{\n\t\tsourceAction,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const sourceBucket = new s3.Bucket(this, 'MyBucket', {\n  versioned: true, // a Bucket used as a source in CodePipeline must be versioned\n});\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.S3SourceAction({\n  actionName: 'S3Source',\n  bucket: sourceBucket,\n  bucketKey: 'path/to/file.zip',\n  output: sourceOutput,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [sourceAction],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.BucketProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline-actions.S3SourceAction",
        "@aws-cdk/aws-codepipeline-actions.S3SourceActionProps",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.Pipeline#addStage",
        "@aws-cdk/aws-codepipeline.StageOptions",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Arn, Construct, Duration, SecretValue, Stack } from '@aws-cdk/core';\nimport codebuild = require('@aws-cdk/aws-codebuild');\nimport codedeploy = require('@aws-cdk/aws-codedeploy');\nimport codepipeline = require('@aws-cdk/aws-codepipeline');\nimport codepipeline_actions = require('@aws-cdk/aws-codepipeline-actions');\nimport codecommit = require('@aws-cdk/aws-codecommit');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3 = require('@aws-cdk/aws-s3');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst sourceBucket = new s3.Bucket(this, 'MyBucket', {\n  versioned: true, // a Bucket used as a source in CodePipeline must be versioned\n});\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.S3SourceAction({\n  actionName: 'S3Source',\n  bucket: sourceBucket,\n  bucketKey: 'path/to/file.zip',\n  output: sourceOutput,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [sourceAction],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 24,
        "104": 2,
        "106": 1,
        "192": 1,
        "193": 3,
        "194": 5,
        "196": 1,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 7
      },
      "fqnsFingerprint": "63243a32408e7b5b17ddaadbec01d96c803959ebed36499c6c27730fac68fc72"
    },
    "ee358ea95c8b5d9b7fee17f4736e510de67111c1097e90fe215a14ab0b806762": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# policy: Any\n# policy_status: Any\n\ncfn_access_point = s3.CfnAccessPoint(self, \"MyCfnAccessPoint\",\n    bucket=\"bucket\",\n\n    # the properties below are optional\n    name=\"name\",\n    policy=policy,\n    policy_status=policy_status,\n    public_access_block_configuration=s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty(\n        block_public_acls=False,\n        block_public_policy=False,\n        ignore_public_acls=False,\n        restrict_public_buckets=False\n    ),\n    vpc_configuration=s3.CfnAccessPoint.VpcConfigurationProperty(\n        vpc_id=\"vpcId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar policy;\nvar policyStatus;\n\nCfnAccessPoint cfnAccessPoint = new CfnAccessPoint(this, \"MyCfnAccessPoint\", new CfnAccessPointProps {\n    Bucket = \"bucket\",\n\n    // the properties below are optional\n    Name = \"name\",\n    Policy = policy,\n    PolicyStatus = policyStatus,\n    PublicAccessBlockConfiguration = new PublicAccessBlockConfigurationProperty {\n        BlockPublicAcls = false,\n        BlockPublicPolicy = false,\n        IgnorePublicAcls = false,\n        RestrictPublicBuckets = false\n    },\n    VpcConfiguration = new VpcConfigurationProperty {\n        VpcId = \"vpcId\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject policy;\nObject policyStatus;\n\nCfnAccessPoint cfnAccessPoint = CfnAccessPoint.Builder.create(this, \"MyCfnAccessPoint\")\n        .bucket(\"bucket\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .policy(policy)\n        .policyStatus(policyStatus)\n        .publicAccessBlockConfiguration(PublicAccessBlockConfigurationProperty.builder()\n                .blockPublicAcls(false)\n                .blockPublicPolicy(false)\n                .ignorePublicAcls(false)\n                .restrictPublicBuckets(false)\n                .build())\n        .vpcConfiguration(VpcConfigurationProperty.builder()\n                .vpcId(\"vpcId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar policy interface{}\nvar policyStatus interface{}\ncfnAccessPoint := s3.NewCfnAccessPoint(this, jsii.String(\"MyCfnAccessPoint\"), &cfnAccessPointProps{\n\tbucket: jsii.String(\"bucket\"),\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\tpolicy: policy,\n\tpolicyStatus: policyStatus,\n\tpublicAccessBlockConfiguration: &publicAccessBlockConfigurationProperty{\n\t\tblockPublicAcls: jsii.Boolean(false),\n\t\tblockPublicPolicy: jsii.Boolean(false),\n\t\tignorePublicAcls: jsii.Boolean(false),\n\t\trestrictPublicBuckets: jsii.Boolean(false),\n\t},\n\tvpcConfiguration: &vpcConfigurationProperty{\n\t\tvpcId: jsii.String(\"vpcId\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policy: any;\ndeclare const policyStatus: any;\nconst cfnAccessPoint = new s3.CfnAccessPoint(this, 'MyCfnAccessPoint', {\n  bucket: 'bucket',\n\n  // the properties below are optional\n  name: 'name',\n  policy: policy,\n  policyStatus: policyStatus,\n  publicAccessBlockConfiguration: {\n    blockPublicAcls: false,\n    blockPublicPolicy: false,\n    ignorePublicAcls: false,\n    restrictPublicBuckets: false,\n  },\n  vpcConfiguration: {\n    vpcId: 'vpcId',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnAccessPoint"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnAccessPoint",
        "@aws-cdk/aws-s3.CfnAccessPointProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policy: any;\ndeclare const policyStatus: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAccessPoint = new s3.CfnAccessPoint(this, 'MyCfnAccessPoint', {\n  bucket: 'bucket',\n\n  // the properties below are optional\n  name: 'name',\n  policy: policy,\n  policyStatus: policyStatus,\n  publicAccessBlockConfiguration: {\n    blockPublicAcls: false,\n    blockPublicPolicy: false,\n    ignorePublicAcls: false,\n    restrictPublicBuckets: false,\n  },\n  vpcConfiguration: {\n    vpcId: 'vpcId',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 19,
        "91": 4,
        "104": 1,
        "125": 2,
        "130": 2,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "ee3edc394c6d55b2cd588e83ef27a94a22b39e87c366994ca3e9d9a9187f4d1c"
    },
    "23f52e77e74c12c2f5624f9190794d33833f80b6e40ef29ee4c51daba45d2e08": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\npublic_access_block_configuration_property = s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty(\n    block_public_acls=False,\n    block_public_policy=False,\n    ignore_public_acls=False,\n    restrict_public_buckets=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nPublicAccessBlockConfigurationProperty publicAccessBlockConfigurationProperty = new PublicAccessBlockConfigurationProperty {\n    BlockPublicAcls = false,\n    BlockPublicPolicy = false,\n    IgnorePublicAcls = false,\n    RestrictPublicBuckets = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nPublicAccessBlockConfigurationProperty publicAccessBlockConfigurationProperty = PublicAccessBlockConfigurationProperty.builder()\n        .blockPublicAcls(false)\n        .blockPublicPolicy(false)\n        .ignorePublicAcls(false)\n        .restrictPublicBuckets(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\npublicAccessBlockConfigurationProperty := &publicAccessBlockConfigurationProperty{\n\tblockPublicAcls: jsii.Boolean(false),\n\tblockPublicPolicy: jsii.Boolean(false),\n\tignorePublicAcls: jsii.Boolean(false),\n\trestrictPublicBuckets: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst publicAccessBlockConfigurationProperty: s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty = {\n  blockPublicAcls: false,\n  blockPublicPolicy: false,\n  ignorePublicAcls: false,\n  restrictPublicBuckets: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst publicAccessBlockConfigurationProperty: s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty = {\n  blockPublicAcls: false,\n  blockPublicPolicy: false,\n  ignorePublicAcls: false,\n  restrictPublicBuckets: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "aa4f9d58b3026275eff4c5bf6b8a831ddd8ef6d36bc765cb089941ab3ac80c0a"
    },
    "a0711d153cad3a3853f07f391f8ddc2a43d96396cdeea8d9e9e766a1b33f8823": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nvpc_configuration_property = s3.CfnAccessPoint.VpcConfigurationProperty(\n    vpc_id=\"vpcId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nVpcConfigurationProperty vpcConfigurationProperty = new VpcConfigurationProperty {\n    VpcId = \"vpcId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nVpcConfigurationProperty vpcConfigurationProperty = VpcConfigurationProperty.builder()\n        .vpcId(\"vpcId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nvpcConfigurationProperty := &vpcConfigurationProperty{\n\tvpcId: jsii.String(\"vpcId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst vpcConfigurationProperty: s3.CfnAccessPoint.VpcConfigurationProperty = {\n  vpcId: 'vpcId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnAccessPoint.VpcConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnAccessPoint.VpcConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigurationProperty: s3.CfnAccessPoint.VpcConfigurationProperty = {\n  vpcId: 'vpcId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "c97b5f4bd0826ba296ce50796cd464f64aae426902e839e8505089bf1e973848"
    },
    "18e5e0d165534771c65cd646b46a4935c54dba2328e5148b6e13dc7b17082310": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# policy: Any\n# policy_status: Any\n\ncfn_access_point_props = s3.CfnAccessPointProps(\n    bucket=\"bucket\",\n\n    # the properties below are optional\n    name=\"name\",\n    policy=policy,\n    policy_status=policy_status,\n    public_access_block_configuration=s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty(\n        block_public_acls=False,\n        block_public_policy=False,\n        ignore_public_acls=False,\n        restrict_public_buckets=False\n    ),\n    vpc_configuration=s3.CfnAccessPoint.VpcConfigurationProperty(\n        vpc_id=\"vpcId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar policy;\nvar policyStatus;\n\nCfnAccessPointProps cfnAccessPointProps = new CfnAccessPointProps {\n    Bucket = \"bucket\",\n\n    // the properties below are optional\n    Name = \"name\",\n    Policy = policy,\n    PolicyStatus = policyStatus,\n    PublicAccessBlockConfiguration = new PublicAccessBlockConfigurationProperty {\n        BlockPublicAcls = false,\n        BlockPublicPolicy = false,\n        IgnorePublicAcls = false,\n        RestrictPublicBuckets = false\n    },\n    VpcConfiguration = new VpcConfigurationProperty {\n        VpcId = \"vpcId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject policy;\nObject policyStatus;\n\nCfnAccessPointProps cfnAccessPointProps = CfnAccessPointProps.builder()\n        .bucket(\"bucket\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .policy(policy)\n        .policyStatus(policyStatus)\n        .publicAccessBlockConfiguration(PublicAccessBlockConfigurationProperty.builder()\n                .blockPublicAcls(false)\n                .blockPublicPolicy(false)\n                .ignorePublicAcls(false)\n                .restrictPublicBuckets(false)\n                .build())\n        .vpcConfiguration(VpcConfigurationProperty.builder()\n                .vpcId(\"vpcId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar policy interface{}\nvar policyStatus interface{}\ncfnAccessPointProps := &cfnAccessPointProps{\n\tbucket: jsii.String(\"bucket\"),\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\tpolicy: policy,\n\tpolicyStatus: policyStatus,\n\tpublicAccessBlockConfiguration: &publicAccessBlockConfigurationProperty{\n\t\tblockPublicAcls: jsii.Boolean(false),\n\t\tblockPublicPolicy: jsii.Boolean(false),\n\t\tignorePublicAcls: jsii.Boolean(false),\n\t\trestrictPublicBuckets: jsii.Boolean(false),\n\t},\n\tvpcConfiguration: &vpcConfigurationProperty{\n\t\tvpcId: jsii.String(\"vpcId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policy: any;\ndeclare const policyStatus: any;\nconst cfnAccessPointProps: s3.CfnAccessPointProps = {\n  bucket: 'bucket',\n\n  // the properties below are optional\n  name: 'name',\n  policy: policy,\n  policyStatus: policyStatus,\n  publicAccessBlockConfiguration: {\n    blockPublicAcls: false,\n    blockPublicPolicy: false,\n    ignorePublicAcls: false,\n    restrictPublicBuckets: false,\n  },\n  vpcConfiguration: {\n    vpcId: 'vpcId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnAccessPointProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnAccessPointProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policy: any;\ndeclare const policyStatus: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAccessPointProps: s3.CfnAccessPointProps = {\n  bucket: 'bucket',\n\n  // the properties below are optional\n  name: 'name',\n  policy: policy,\n  policyStatus: policyStatus,\n  publicAccessBlockConfiguration: {\n    blockPublicAcls: false,\n    blockPublicPolicy: false,\n    ignorePublicAcls: false,\n    restrictPublicBuckets: false,\n  },\n  vpcConfiguration: {\n    vpcId: 'vpcId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 19,
        "91": 4,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "193": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "7c44e6864cd0e27304fc01a87106595d0be28faac7748bb0a61967c587ee8ecd"
    },
    "7eaa1927ee66da20f1560a62dcba995af86891941c12a2c3f4523120b48f6a09": {
      "translations": {
        "python": {
          "source": "# cfn_template: cfn_inc.CfnInclude\n\ncfn_bucket = cfn_template.get_resource(\"Bucket\")\n\nrole = iam.Role(self, \"Role\",\n    assumed_by=iam.AnyPrincipal()\n)\nrole.add_to_policy(iam.PolicyStatement(\n    actions=[\"s3:*\"],\n    resources=[cfn_bucket.attr_arn]\n))",
          "version": "2"
        },
        "csharp": {
          "source": "CfnInclude cfnTemplate;\n\nCfnBucket cfnBucket = (CfnBucket)cfnTemplate.GetResource(\"Bucket\");\n\nRole role = new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new AnyPrincipal()\n});\nrole.AddToPolicy(new PolicyStatement(new PolicyStatementProps {\n    Actions = new [] { \"s3:*\" },\n    Resources = new [] { cfnBucket.AttrArn }\n}));",
          "version": "1"
        },
        "java": {
          "source": "CfnInclude cfnTemplate;\n\nCfnBucket cfnBucket = (CfnBucket)cfnTemplate.getResource(\"Bucket\");\n\nRole role = Role.Builder.create(this, \"Role\")\n        .assumedBy(new AnyPrincipal())\n        .build();\nrole.addToPolicy(PolicyStatement.Builder.create()\n        .actions(List.of(\"s3:*\"))\n        .resources(List.of(cfnBucket.getAttrArn()))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var cfnTemplate cfnInclude\ncfnBucket := cfnTemplate.getResource(jsii.String(\"Bucket\")).(cfnBucket)\n\nrole := iam.NewRole(this, jsii.String(\"Role\"), &roleProps{\n\tassumedBy: iam.NewAnyPrincipal(),\n})\nrole.addToPolicy(iam.NewPolicyStatement(&policyStatementProps{\n\tactions: []*string{\n\t\tjsii.String(\"s3:*\"),\n\t},\n\tresources: []*string{\n\t\tcfnBucket.attrArn,\n\t},\n}))",
          "version": "1"
        },
        "$": {
          "source": "declare const cfnTemplate: cfn_inc.CfnInclude;\nconst cfnBucket = cfnTemplate.getResource('Bucket') as s3.CfnBucket;\n\nconst role = new iam.Role(this, 'Role', {\n  assumedBy: new iam.AnyPrincipal(),\n});\nrole.addToPolicy(new iam.PolicyStatement({\n  actions: ['s3:*'],\n  resources: [cfnBucket.attrArn],\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.AnyPrincipal",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.PolicyStatement",
        "@aws-cdk/aws-iam.PolicyStatementProps",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.Role#addToPolicy",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-s3.CfnBucket",
        "@aws-cdk/aws-s3.CfnBucket#attrArn",
        "@aws-cdk/cloudformation-include.CfnInclude#getResource",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const cfnTemplate: cfn_inc.CfnInclude;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as core from '@aws-cdk/core';\nimport * as path from 'path';\nimport * as cfn_inc from '@aws-cdk/cloudformation-include';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst cfnBucket = cfnTemplate.getResource('Bucket') as s3.CfnBucket;\n\nconst role = new iam.Role(this, 'Role', {\n  assumedBy: new iam.AnyPrincipal(),\n});\nrole.addToPolicy(new iam.PolicyStatement({\n  actions: ['s3:*'],\n  resources: [cfnBucket.attrArn],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 22,
        "104": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "192": 2,
        "193": 2,
        "194": 6,
        "196": 2,
        "197": 3,
        "217": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "666207a29c2930c45eef95c9771a1652ce2b7fc3ec5412c4004e8a59415ac14a"
    },
    "dedc852e09bb2b88571fd940a18704ea32f979342d06140134632e27b8582346": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nabort_incomplete_multipart_upload_property = s3.CfnBucket.AbortIncompleteMultipartUploadProperty(\n    days_after_initiation=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nAbortIncompleteMultipartUploadProperty abortIncompleteMultipartUploadProperty = new AbortIncompleteMultipartUploadProperty {\n    DaysAfterInitiation = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nAbortIncompleteMultipartUploadProperty abortIncompleteMultipartUploadProperty = AbortIncompleteMultipartUploadProperty.builder()\n        .daysAfterInitiation(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nabortIncompleteMultipartUploadProperty := &abortIncompleteMultipartUploadProperty{\n\tdaysAfterInitiation: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst abortIncompleteMultipartUploadProperty: s3.CfnBucket.AbortIncompleteMultipartUploadProperty = {\n  daysAfterInitiation: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst abortIncompleteMultipartUploadProperty: s3.CfnBucket.AbortIncompleteMultipartUploadProperty = {\n  daysAfterInitiation: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "2d1f57bf9c858f817239a0ff7a64c26b259a21af8f67d0123a82e54e37ece096"
    },
    "f1d68ef29dbee46117bb2266c534b5374be782f65c2bc90c4d08178949fc25b6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\naccelerate_configuration_property = s3.CfnBucket.AccelerateConfigurationProperty(\n    acceleration_status=\"accelerationStatus\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nAccelerateConfigurationProperty accelerateConfigurationProperty = new AccelerateConfigurationProperty {\n    AccelerationStatus = \"accelerationStatus\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nAccelerateConfigurationProperty accelerateConfigurationProperty = AccelerateConfigurationProperty.builder()\n        .accelerationStatus(\"accelerationStatus\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\naccelerateConfigurationProperty := &accelerateConfigurationProperty{\n\taccelerationStatus: jsii.String(\"accelerationStatus\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst accelerateConfigurationProperty: s3.CfnBucket.AccelerateConfigurationProperty = {\n  accelerationStatus: 'accelerationStatus',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accelerateConfigurationProperty: s3.CfnBucket.AccelerateConfigurationProperty = {\n  accelerationStatus: 'accelerationStatus',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "52981ac7e30b5d2ff4a06bbeb143ab7a7254cdca188930a86e1ef5e3c1da66ed"
    },
    "6e5244ef224ec83303713fe3d4284167a29e8452ba2d2fe80dd03c83083a3bc2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\naccess_control_translation_property = s3.CfnBucket.AccessControlTranslationProperty(\n    owner=\"owner\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nAccessControlTranslationProperty accessControlTranslationProperty = new AccessControlTranslationProperty {\n    Owner = \"owner\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nAccessControlTranslationProperty accessControlTranslationProperty = AccessControlTranslationProperty.builder()\n        .owner(\"owner\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\naccessControlTranslationProperty := &accessControlTranslationProperty{\n\towner: jsii.String(\"owner\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst accessControlTranslationProperty: s3.CfnBucket.AccessControlTranslationProperty = {\n  owner: 'owner',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accessControlTranslationProperty: s3.CfnBucket.AccessControlTranslationProperty = {\n  owner: 'owner',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "44aa2d286c24cd2c667ba1d9273c2840c40d7cc34248e0f99f4691ab3f952afb"
    },
    "2fd714cd97e899857b7f537726587fbdfb2a952c19e66ef55841263c095bb925": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nanalytics_configuration_property = s3.CfnBucket.AnalyticsConfigurationProperty(\n    id=\"id\",\n    storage_class_analysis=s3.CfnBucket.StorageClassAnalysisProperty(\n        data_export=s3.CfnBucket.DataExportProperty(\n            destination=s3.CfnBucket.DestinationProperty(\n                bucket_arn=\"bucketArn\",\n                format=\"format\",\n\n                # the properties below are optional\n                bucket_account_id=\"bucketAccountId\",\n                prefix=\"prefix\"\n            ),\n            output_schema_version=\"outputSchemaVersion\"\n        )\n    ),\n\n    # the properties below are optional\n    prefix=\"prefix\",\n    tag_filters=[s3.CfnBucket.TagFilterProperty(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nAnalyticsConfigurationProperty analyticsConfigurationProperty = new AnalyticsConfigurationProperty {\n    Id = \"id\",\n    StorageClassAnalysis = new StorageClassAnalysisProperty {\n        DataExport = new DataExportProperty {\n            Destination = new DestinationProperty {\n                BucketArn = \"bucketArn\",\n                Format = \"format\",\n\n                // the properties below are optional\n                BucketAccountId = \"bucketAccountId\",\n                Prefix = \"prefix\"\n            },\n            OutputSchemaVersion = \"outputSchemaVersion\"\n        }\n    },\n\n    // the properties below are optional\n    Prefix = \"prefix\",\n    TagFilters = new [] { new TagFilterProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nAnalyticsConfigurationProperty analyticsConfigurationProperty = AnalyticsConfigurationProperty.builder()\n        .id(\"id\")\n        .storageClassAnalysis(StorageClassAnalysisProperty.builder()\n                .dataExport(DataExportProperty.builder()\n                        .destination(DestinationProperty.builder()\n                                .bucketArn(\"bucketArn\")\n                                .format(\"format\")\n\n                                // the properties below are optional\n                                .bucketAccountId(\"bucketAccountId\")\n                                .prefix(\"prefix\")\n                                .build())\n                        .outputSchemaVersion(\"outputSchemaVersion\")\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .prefix(\"prefix\")\n        .tagFilters(List.of(TagFilterProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nanalyticsConfigurationProperty := &analyticsConfigurationProperty{\n\tid: jsii.String(\"id\"),\n\tstorageClassAnalysis: &storageClassAnalysisProperty{\n\t\tdataExport: &dataExportProperty{\n\t\t\tdestination: &destinationProperty{\n\t\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\t\tformat: jsii.String(\"format\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbucketAccountId: jsii.String(\"bucketAccountId\"),\n\t\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t\toutputSchemaVersion: jsii.String(\"outputSchemaVersion\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tprefix: jsii.String(\"prefix\"),\n\ttagFilters: []interface{}{\n\t\t&tagFilterProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst analyticsConfigurationProperty: s3.CfnBucket.AnalyticsConfigurationProperty = {\n  id: 'id',\n  storageClassAnalysis: {\n    dataExport: {\n      destination: {\n        bucketArn: 'bucketArn',\n        format: 'format',\n\n        // the properties below are optional\n        bucketAccountId: 'bucketAccountId',\n        prefix: 'prefix',\n      },\n      outputSchemaVersion: 'outputSchemaVersion',\n    },\n  },\n\n  // the properties below are optional\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst analyticsConfigurationProperty: s3.CfnBucket.AnalyticsConfigurationProperty = {\n  id: 'id',\n  storageClassAnalysis: {\n    dataExport: {\n      destination: {\n        bucketArn: 'bucketArn',\n        format: 'format',\n\n        // the properties below are optional\n        bucketAccountId: 'bucketAccountId',\n        prefix: 'prefix',\n      },\n      outputSchemaVersion: 'outputSchemaVersion',\n    },\n  },\n\n  // the properties below are optional\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 18,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "e0b12189763b27f072cceb884cc654a538e57c92183ec46bc805134663846daf"
    },
    "c66424b1e224a6ebb496dc9d73d8593e0bdf264b7eedc2507e192723ec473898": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nbucket_encryption_property = s3.CfnBucket.BucketEncryptionProperty(\n    server_side_encryption_configuration=[s3.CfnBucket.ServerSideEncryptionRuleProperty(\n        bucket_key_enabled=False,\n        server_side_encryption_by_default=s3.CfnBucket.ServerSideEncryptionByDefaultProperty(\n            sse_algorithm=\"sseAlgorithm\",\n\n            # the properties below are optional\n            kms_master_key_id=\"kmsMasterKeyId\"\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nBucketEncryptionProperty bucketEncryptionProperty = new BucketEncryptionProperty {\n    ServerSideEncryptionConfiguration = new [] { new ServerSideEncryptionRuleProperty {\n        BucketKeyEnabled = false,\n        ServerSideEncryptionByDefault = new ServerSideEncryptionByDefaultProperty {\n            SseAlgorithm = \"sseAlgorithm\",\n\n            // the properties below are optional\n            KmsMasterKeyId = \"kmsMasterKeyId\"\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nBucketEncryptionProperty bucketEncryptionProperty = BucketEncryptionProperty.builder()\n        .serverSideEncryptionConfiguration(List.of(ServerSideEncryptionRuleProperty.builder()\n                .bucketKeyEnabled(false)\n                .serverSideEncryptionByDefault(ServerSideEncryptionByDefaultProperty.builder()\n                        .sseAlgorithm(\"sseAlgorithm\")\n\n                        // the properties below are optional\n                        .kmsMasterKeyId(\"kmsMasterKeyId\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nbucketEncryptionProperty := &bucketEncryptionProperty{\n\tserverSideEncryptionConfiguration: []interface{}{\n\t\t&serverSideEncryptionRuleProperty{\n\t\t\tbucketKeyEnabled: jsii.Boolean(false),\n\t\t\tserverSideEncryptionByDefault: &serverSideEncryptionByDefaultProperty{\n\t\t\t\tsseAlgorithm: jsii.String(\"sseAlgorithm\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tkmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst bucketEncryptionProperty: s3.CfnBucket.BucketEncryptionProperty = {\n  serverSideEncryptionConfiguration: [{\n    bucketKeyEnabled: false,\n    serverSideEncryptionByDefault: {\n      sseAlgorithm: 'sseAlgorithm',\n\n      // the properties below are optional\n      kmsMasterKeyId: 'kmsMasterKeyId',\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bucketEncryptionProperty: s3.CfnBucket.BucketEncryptionProperty = {\n  serverSideEncryptionConfiguration: [{\n    bucketKeyEnabled: false,\n    serverSideEncryptionByDefault: {\n      sseAlgorithm: 'sseAlgorithm',\n\n      // the properties below are optional\n      kmsMasterKeyId: 'kmsMasterKeyId',\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "93503358f627602bfe598a3e5bb47c28efaa451fa6552f42b1a9f0cd71f15c89"
    },
    "60e47cae771f3a22f242be48514dc84b9b11ee2fcb0496f0c4ddfa0ae599d5e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ncors_configuration_property = s3.CfnBucket.CorsConfigurationProperty(\n    cors_rules=[s3.CfnBucket.CorsRuleProperty(\n        allowed_methods=[\"allowedMethods\"],\n        allowed_origins=[\"allowedOrigins\"],\n\n        # the properties below are optional\n        allowed_headers=[\"allowedHeaders\"],\n        exposed_headers=[\"exposedHeaders\"],\n        id=\"id\",\n        max_age=123\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nCorsConfigurationProperty corsConfigurationProperty = new CorsConfigurationProperty {\n    CorsRules = new [] { new CorsRuleProperty {\n        AllowedMethods = new [] { \"allowedMethods\" },\n        AllowedOrigins = new [] { \"allowedOrigins\" },\n\n        // the properties below are optional\n        AllowedHeaders = new [] { \"allowedHeaders\" },\n        ExposedHeaders = new [] { \"exposedHeaders\" },\n        Id = \"id\",\n        MaxAge = 123\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nCorsConfigurationProperty corsConfigurationProperty = CorsConfigurationProperty.builder()\n        .corsRules(List.of(CorsRuleProperty.builder()\n                .allowedMethods(List.of(\"allowedMethods\"))\n                .allowedOrigins(List.of(\"allowedOrigins\"))\n\n                // the properties below are optional\n                .allowedHeaders(List.of(\"allowedHeaders\"))\n                .exposedHeaders(List.of(\"exposedHeaders\"))\n                .id(\"id\")\n                .maxAge(123)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ncorsConfigurationProperty := &corsConfigurationProperty{\n\tcorsRules: []interface{}{\n\t\t&corsRuleProperty{\n\t\t\tallowedMethods: []*string{\n\t\t\t\tjsii.String(\"allowedMethods\"),\n\t\t\t},\n\t\t\tallowedOrigins: []*string{\n\t\t\t\tjsii.String(\"allowedOrigins\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tallowedHeaders: []*string{\n\t\t\t\tjsii.String(\"allowedHeaders\"),\n\t\t\t},\n\t\t\texposedHeaders: []*string{\n\t\t\t\tjsii.String(\"exposedHeaders\"),\n\t\t\t},\n\t\t\tid: jsii.String(\"id\"),\n\t\t\tmaxAge: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst corsConfigurationProperty: s3.CfnBucket.CorsConfigurationProperty = {\n  corsRules: [{\n    allowedMethods: ['allowedMethods'],\n    allowedOrigins: ['allowedOrigins'],\n\n    // the properties below are optional\n    allowedHeaders: ['allowedHeaders'],\n    exposedHeaders: ['exposedHeaders'],\n    id: 'id',\n    maxAge: 123,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst corsConfigurationProperty: s3.CfnBucket.CorsConfigurationProperty = {\n  corsRules: [{\n    allowedMethods: ['allowedMethods'],\n    allowedOrigins: ['allowedOrigins'],\n\n    // the properties below are optional\n    allowedHeaders: ['allowedHeaders'],\n    exposedHeaders: ['exposedHeaders'],\n    id: 'id',\n    maxAge: 123,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 5,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "9b5af21dd79377574302cd336d0273d35e206eefac17e8469df65394e685d3aa"
    },
    "d40f65d1c07def977a924f1631e8c7f57ba17a24bac71243fe7ec330ac9bb40c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ncors_rule_property = s3.CfnBucket.CorsRuleProperty(\n    allowed_methods=[\"allowedMethods\"],\n    allowed_origins=[\"allowedOrigins\"],\n\n    # the properties below are optional\n    allowed_headers=[\"allowedHeaders\"],\n    exposed_headers=[\"exposedHeaders\"],\n    id=\"id\",\n    max_age=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nCorsRuleProperty corsRuleProperty = new CorsRuleProperty {\n    AllowedMethods = new [] { \"allowedMethods\" },\n    AllowedOrigins = new [] { \"allowedOrigins\" },\n\n    // the properties below are optional\n    AllowedHeaders = new [] { \"allowedHeaders\" },\n    ExposedHeaders = new [] { \"exposedHeaders\" },\n    Id = \"id\",\n    MaxAge = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nCorsRuleProperty corsRuleProperty = CorsRuleProperty.builder()\n        .allowedMethods(List.of(\"allowedMethods\"))\n        .allowedOrigins(List.of(\"allowedOrigins\"))\n\n        // the properties below are optional\n        .allowedHeaders(List.of(\"allowedHeaders\"))\n        .exposedHeaders(List.of(\"exposedHeaders\"))\n        .id(\"id\")\n        .maxAge(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ncorsRuleProperty := &corsRuleProperty{\n\tallowedMethods: []*string{\n\t\tjsii.String(\"allowedMethods\"),\n\t},\n\tallowedOrigins: []*string{\n\t\tjsii.String(\"allowedOrigins\"),\n\t},\n\n\t// the properties below are optional\n\tallowedHeaders: []*string{\n\t\tjsii.String(\"allowedHeaders\"),\n\t},\n\texposedHeaders: []*string{\n\t\tjsii.String(\"exposedHeaders\"),\n\t},\n\tid: jsii.String(\"id\"),\n\tmaxAge: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst corsRuleProperty: s3.CfnBucket.CorsRuleProperty = {\n  allowedMethods: ['allowedMethods'],\n  allowedOrigins: ['allowedOrigins'],\n\n  // the properties below are optional\n  allowedHeaders: ['allowedHeaders'],\n  exposedHeaders: ['exposedHeaders'],\n  id: 'id',\n  maxAge: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst corsRuleProperty: s3.CfnBucket.CorsRuleProperty = {\n  allowedMethods: ['allowedMethods'],\n  allowedOrigins: ['allowedOrigins'],\n\n  // the properties below are optional\n  allowedHeaders: ['allowedHeaders'],\n  exposedHeaders: ['exposedHeaders'],\n  id: 'id',\n  maxAge: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4cd1d3a2a323eb647786c76751f85fe53c450e0fbc8abfd4565ae33c041c4b43"
    },
    "78c908ef2ce6a9814cc5c5d65b9332b8eb3fea1ba3b16ea352092dbb545fdf0c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ndata_export_property = s3.CfnBucket.DataExportProperty(\n    destination=s3.CfnBucket.DestinationProperty(\n        bucket_arn=\"bucketArn\",\n        format=\"format\",\n\n        # the properties below are optional\n        bucket_account_id=\"bucketAccountId\",\n        prefix=\"prefix\"\n    ),\n    output_schema_version=\"outputSchemaVersion\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nDataExportProperty dataExportProperty = new DataExportProperty {\n    Destination = new DestinationProperty {\n        BucketArn = \"bucketArn\",\n        Format = \"format\",\n\n        // the properties below are optional\n        BucketAccountId = \"bucketAccountId\",\n        Prefix = \"prefix\"\n    },\n    OutputSchemaVersion = \"outputSchemaVersion\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nDataExportProperty dataExportProperty = DataExportProperty.builder()\n        .destination(DestinationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .format(\"format\")\n\n                // the properties below are optional\n                .bucketAccountId(\"bucketAccountId\")\n                .prefix(\"prefix\")\n                .build())\n        .outputSchemaVersion(\"outputSchemaVersion\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ndataExportProperty := &dataExportProperty{\n\tdestination: &destinationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\tformat: jsii.String(\"format\"),\n\n\t\t// the properties below are optional\n\t\tbucketAccountId: jsii.String(\"bucketAccountId\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\toutputSchemaVersion: jsii.String(\"outputSchemaVersion\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst dataExportProperty: s3.CfnBucket.DataExportProperty = {\n  destination: {\n    bucketArn: 'bucketArn',\n    format: 'format',\n\n    // the properties below are optional\n    bucketAccountId: 'bucketAccountId',\n    prefix: 'prefix',\n  },\n  outputSchemaVersion: 'outputSchemaVersion',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.DataExportProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.DataExportProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataExportProperty: s3.CfnBucket.DataExportProperty = {\n  destination: {\n    bucketArn: 'bucketArn',\n    format: 'format',\n\n    // the properties below are optional\n    bucketAccountId: 'bucketAccountId',\n    prefix: 'prefix',\n  },\n  outputSchemaVersion: 'outputSchemaVersion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "54a1dc94fc1b0070dbb591e071f8618d58839ad54551defa8f8028f3145a87b2"
    },
    "e9a4c484ed3c5e4abe7f407daed96362560f6cefb4e3abd75706459a2e1db122": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ndefault_retention_property = s3.CfnBucket.DefaultRetentionProperty(\n    days=123,\n    mode=\"mode\",\n    years=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nDefaultRetentionProperty defaultRetentionProperty = new DefaultRetentionProperty {\n    Days = 123,\n    Mode = \"mode\",\n    Years = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nDefaultRetentionProperty defaultRetentionProperty = DefaultRetentionProperty.builder()\n        .days(123)\n        .mode(\"mode\")\n        .years(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ndefaultRetentionProperty := &defaultRetentionProperty{\n\tdays: jsii.Number(123),\n\tmode: jsii.String(\"mode\"),\n\tyears: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst defaultRetentionProperty: s3.CfnBucket.DefaultRetentionProperty = {\n  days: 123,\n  mode: 'mode',\n  years: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.DefaultRetentionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.DefaultRetentionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst defaultRetentionProperty: s3.CfnBucket.DefaultRetentionProperty = {\n  days: 123,\n  mode: 'mode',\n  years: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "22a30088b7da9a931fd1abac0dcf844bb72a56847ece540f3b876fece67d38ba"
    },
    "54928c745a2836deb81ef1cd4b86d0086ac7dd8d2fb94cf36dfdb2a6be0f3e4d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ndelete_marker_replication_property = s3.CfnBucket.DeleteMarkerReplicationProperty(\n    status=\"status\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nDeleteMarkerReplicationProperty deleteMarkerReplicationProperty = new DeleteMarkerReplicationProperty {\n    Status = \"status\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nDeleteMarkerReplicationProperty deleteMarkerReplicationProperty = DeleteMarkerReplicationProperty.builder()\n        .status(\"status\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ndeleteMarkerReplicationProperty := &deleteMarkerReplicationProperty{\n\tstatus: jsii.String(\"status\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst deleteMarkerReplicationProperty: s3.CfnBucket.DeleteMarkerReplicationProperty = {\n  status: 'status',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.DeleteMarkerReplicationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.DeleteMarkerReplicationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deleteMarkerReplicationProperty: s3.CfnBucket.DeleteMarkerReplicationProperty = {\n  status: 'status',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5953f118787c7e3216e6b05afe37f33181260d7a215fbebc697613cd85db269d"
    },
    "08a2ea4021d50f19e66bc7bf17e98e822559e01c254f0136281e548f52cff348": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ndestination_property = s3.CfnBucket.DestinationProperty(\n    bucket_arn=\"bucketArn\",\n    format=\"format\",\n\n    # the properties below are optional\n    bucket_account_id=\"bucketAccountId\",\n    prefix=\"prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nDestinationProperty destinationProperty = new DestinationProperty {\n    BucketArn = \"bucketArn\",\n    Format = \"format\",\n\n    // the properties below are optional\n    BucketAccountId = \"bucketAccountId\",\n    Prefix = \"prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nDestinationProperty destinationProperty = DestinationProperty.builder()\n        .bucketArn(\"bucketArn\")\n        .format(\"format\")\n\n        // the properties below are optional\n        .bucketAccountId(\"bucketAccountId\")\n        .prefix(\"prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ndestinationProperty := &destinationProperty{\n\tbucketArn: jsii.String(\"bucketArn\"),\n\tformat: jsii.String(\"format\"),\n\n\t// the properties below are optional\n\tbucketAccountId: jsii.String(\"bucketAccountId\"),\n\tprefix: jsii.String(\"prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst destinationProperty: s3.CfnBucket.DestinationProperty = {\n  bucketArn: 'bucketArn',\n  format: 'format',\n\n  // the properties below are optional\n  bucketAccountId: 'bucketAccountId',\n  prefix: 'prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.DestinationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst destinationProperty: s3.CfnBucket.DestinationProperty = {\n  bucketArn: 'bucketArn',\n  format: 'format',\n\n  // the properties below are optional\n  bucketAccountId: 'bucketAccountId',\n  prefix: 'prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "b0b7db2da66776b5c251d5006077a7e31bd248cf94befd18edc4ea2676e7413e"
    },
    "70795bc2c2af470d7e4c285b5c07018507247acad8f4b207e3649a9de0870553": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nencryption_configuration_property = s3.CfnBucket.EncryptionConfigurationProperty(\n    replica_kms_key_id=\"replicaKmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nEncryptionConfigurationProperty encryptionConfigurationProperty = new EncryptionConfigurationProperty {\n    ReplicaKmsKeyId = \"replicaKmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nEncryptionConfigurationProperty encryptionConfigurationProperty = EncryptionConfigurationProperty.builder()\n        .replicaKmsKeyId(\"replicaKmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nencryptionConfigurationProperty := &encryptionConfigurationProperty{\n\treplicaKmsKeyId: jsii.String(\"replicaKmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst encryptionConfigurationProperty: s3.CfnBucket.EncryptionConfigurationProperty = {\n  replicaKmsKeyId: 'replicaKmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionConfigurationProperty: s3.CfnBucket.EncryptionConfigurationProperty = {\n  replicaKmsKeyId: 'replicaKmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "a9a7920f92fe39384ba7ba23b9c14d9544866094836607e947eb9819815b27ba"
    },
    "de9466ce4d73b0c5d1e0c91aad11fa00a61499ccb607317a652fe64992f84125": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nevent_bridge_configuration_property = s3.CfnBucket.EventBridgeConfigurationProperty(\n    event_bridge_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nEventBridgeConfigurationProperty eventBridgeConfigurationProperty = new EventBridgeConfigurationProperty {\n    EventBridgeEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nEventBridgeConfigurationProperty eventBridgeConfigurationProperty = EventBridgeConfigurationProperty.builder()\n        .eventBridgeEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\neventBridgeConfigurationProperty := &eventBridgeConfigurationProperty{\n\teventBridgeEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst eventBridgeConfigurationProperty: s3.CfnBucket.EventBridgeConfigurationProperty = {\n  eventBridgeEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.EventBridgeConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.EventBridgeConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst eventBridgeConfigurationProperty: s3.CfnBucket.EventBridgeConfigurationProperty = {\n  eventBridgeEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "138b537060ed71175016c5d3c2c311a260e21ca8fb87545e682a7629e3eb6867"
    },
    "c7f3c060c99c6aa5495f7d1662eb5ef367174e920f367ec47940b2dc8d6894aa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nfilter_rule_property = s3.CfnBucket.FilterRuleProperty(\n    name=\"name\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nFilterRuleProperty filterRuleProperty = new FilterRuleProperty {\n    Name = \"name\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nFilterRuleProperty filterRuleProperty = FilterRuleProperty.builder()\n        .name(\"name\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nfilterRuleProperty := &filterRuleProperty{\n\tname: jsii.String(\"name\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst filterRuleProperty: s3.CfnBucket.FilterRuleProperty = {\n  name: 'name',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst filterRuleProperty: s3.CfnBucket.FilterRuleProperty = {\n  name: 'name',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2f54c1bf29d8438addad83de489991c069deabb50d3cc95a2fe38326111f1152"
    },
    "2812052b528b367e260478e6b9bf9a1f5898d18a513055e0edc39ac1657e0f05": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nintelligent_tiering_configuration_property = s3.CfnBucket.IntelligentTieringConfigurationProperty(\n    id=\"id\",\n    status=\"status\",\n    tierings=[s3.CfnBucket.TieringProperty(\n        access_tier=\"accessTier\",\n        days=123\n    )],\n\n    # the properties below are optional\n    prefix=\"prefix\",\n    tag_filters=[s3.CfnBucket.TagFilterProperty(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nIntelligentTieringConfigurationProperty intelligentTieringConfigurationProperty = new IntelligentTieringConfigurationProperty {\n    Id = \"id\",\n    Status = \"status\",\n    Tierings = new [] { new TieringProperty {\n        AccessTier = \"accessTier\",\n        Days = 123\n    } },\n\n    // the properties below are optional\n    Prefix = \"prefix\",\n    TagFilters = new [] { new TagFilterProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nIntelligentTieringConfigurationProperty intelligentTieringConfigurationProperty = IntelligentTieringConfigurationProperty.builder()\n        .id(\"id\")\n        .status(\"status\")\n        .tierings(List.of(TieringProperty.builder()\n                .accessTier(\"accessTier\")\n                .days(123)\n                .build()))\n\n        // the properties below are optional\n        .prefix(\"prefix\")\n        .tagFilters(List.of(TagFilterProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nintelligentTieringConfigurationProperty := &intelligentTieringConfigurationProperty{\n\tid: jsii.String(\"id\"),\n\tstatus: jsii.String(\"status\"),\n\ttierings: []interface{}{\n\t\t&tieringProperty{\n\t\t\taccessTier: jsii.String(\"accessTier\"),\n\t\t\tdays: jsii.Number(123),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tprefix: jsii.String(\"prefix\"),\n\ttagFilters: []interface{}{\n\t\t&tagFilterProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst intelligentTieringConfigurationProperty: s3.CfnBucket.IntelligentTieringConfigurationProperty = {\n  id: 'id',\n  status: 'status',\n  tierings: [{\n    accessTier: 'accessTier',\n    days: 123,\n  }],\n\n  // the properties below are optional\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.IntelligentTieringConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.IntelligentTieringConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst intelligentTieringConfigurationProperty: s3.CfnBucket.IntelligentTieringConfigurationProperty = {\n  id: 'id',\n  status: 'status',\n  tierings: [{\n    accessTier: 'accessTier',\n    days: 123,\n  }],\n\n  // the properties below are optional\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 7,
        "75": 14,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "3aee9c9fa249a8f4b816b80ca8434441e88ab9ff59429bfc0331d013411e94aa"
    },
    "a046f3b33cbab240383afc9cf5ebe31468015c183d413e93dc757fd7bfd0a919": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ninventory_configuration_property = s3.CfnBucket.InventoryConfigurationProperty(\n    destination=s3.CfnBucket.DestinationProperty(\n        bucket_arn=\"bucketArn\",\n        format=\"format\",\n\n        # the properties below are optional\n        bucket_account_id=\"bucketAccountId\",\n        prefix=\"prefix\"\n    ),\n    enabled=False,\n    id=\"id\",\n    included_object_versions=\"includedObjectVersions\",\n    schedule_frequency=\"scheduleFrequency\",\n\n    # the properties below are optional\n    optional_fields=[\"optionalFields\"],\n    prefix=\"prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nInventoryConfigurationProperty inventoryConfigurationProperty = new InventoryConfigurationProperty {\n    Destination = new DestinationProperty {\n        BucketArn = \"bucketArn\",\n        Format = \"format\",\n\n        // the properties below are optional\n        BucketAccountId = \"bucketAccountId\",\n        Prefix = \"prefix\"\n    },\n    Enabled = false,\n    Id = \"id\",\n    IncludedObjectVersions = \"includedObjectVersions\",\n    ScheduleFrequency = \"scheduleFrequency\",\n\n    // the properties below are optional\n    OptionalFields = new [] { \"optionalFields\" },\n    Prefix = \"prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nInventoryConfigurationProperty inventoryConfigurationProperty = InventoryConfigurationProperty.builder()\n        .destination(DestinationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .format(\"format\")\n\n                // the properties below are optional\n                .bucketAccountId(\"bucketAccountId\")\n                .prefix(\"prefix\")\n                .build())\n        .enabled(false)\n        .id(\"id\")\n        .includedObjectVersions(\"includedObjectVersions\")\n        .scheduleFrequency(\"scheduleFrequency\")\n\n        // the properties below are optional\n        .optionalFields(List.of(\"optionalFields\"))\n        .prefix(\"prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ninventoryConfigurationProperty := &inventoryConfigurationProperty{\n\tdestination: &destinationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\tformat: jsii.String(\"format\"),\n\n\t\t// the properties below are optional\n\t\tbucketAccountId: jsii.String(\"bucketAccountId\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\tenabled: jsii.Boolean(false),\n\tid: jsii.String(\"id\"),\n\tincludedObjectVersions: jsii.String(\"includedObjectVersions\"),\n\tscheduleFrequency: jsii.String(\"scheduleFrequency\"),\n\n\t// the properties below are optional\n\toptionalFields: []*string{\n\t\tjsii.String(\"optionalFields\"),\n\t},\n\tprefix: jsii.String(\"prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst inventoryConfigurationProperty: s3.CfnBucket.InventoryConfigurationProperty = {\n  destination: {\n    bucketArn: 'bucketArn',\n    format: 'format',\n\n    // the properties below are optional\n    bucketAccountId: 'bucketAccountId',\n    prefix: 'prefix',\n  },\n  enabled: false,\n  id: 'id',\n  includedObjectVersions: 'includedObjectVersions',\n  scheduleFrequency: 'scheduleFrequency',\n\n  // the properties below are optional\n  optionalFields: ['optionalFields'],\n  prefix: 'prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inventoryConfigurationProperty: s3.CfnBucket.InventoryConfigurationProperty = {\n  destination: {\n    bucketArn: 'bucketArn',\n    format: 'format',\n\n    // the properties below are optional\n    bucketAccountId: 'bucketAccountId',\n    prefix: 'prefix',\n  },\n  enabled: false,\n  id: 'id',\n  includedObjectVersions: 'includedObjectVersions',\n  scheduleFrequency: 'scheduleFrequency',\n\n  // the properties below are optional\n  optionalFields: ['optionalFields'],\n  prefix: 'prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 16,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "bffcbcb1f88dd92dc98cc41b0d81eb574f3246e125be44e5ceaa99a3c3eac43c"
    },
    "4099cbd4af7674cb4cd7b0537b7ac8d20ab852834b2aeafcdb4a5911c38ee269": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nlambda_configuration_property = s3.CfnBucket.LambdaConfigurationProperty(\n    event=\"event\",\n    function=\"function\",\n\n    # the properties below are optional\n    filter=s3.CfnBucket.NotificationFilterProperty(\n        s3_key=s3.CfnBucket.S3KeyFilterProperty(\n            rules=[s3.CfnBucket.FilterRuleProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nLambdaConfigurationProperty lambdaConfigurationProperty = new LambdaConfigurationProperty {\n    Event = \"event\",\n    Function = \"function\",\n\n    // the properties below are optional\n    Filter = new NotificationFilterProperty {\n        S3Key = new S3KeyFilterProperty {\n            Rules = new [] { new FilterRuleProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nLambdaConfigurationProperty lambdaConfigurationProperty = LambdaConfigurationProperty.builder()\n        .event(\"event\")\n        .function(\"function\")\n\n        // the properties below are optional\n        .filter(NotificationFilterProperty.builder()\n                .s3Key(S3KeyFilterProperty.builder()\n                        .rules(List.of(FilterRuleProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nlambdaConfigurationProperty := &lambdaConfigurationProperty{\n\tevent: jsii.String(\"event\"),\n\tfunction: jsii.String(\"function\"),\n\n\t// the properties below are optional\n\tfilter: &notificationFilterProperty{\n\t\ts3Key: &s3KeyFilterProperty{\n\t\t\trules: []interface{}{\n\t\t\t\t&filterRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst lambdaConfigurationProperty: s3.CfnBucket.LambdaConfigurationProperty = {\n  event: 'event',\n  function: 'function',\n\n  // the properties below are optional\n  filter: {\n    s3Key: {\n      rules: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lambdaConfigurationProperty: s3.CfnBucket.LambdaConfigurationProperty = {\n  event: 'event',\n  function: 'function',\n\n  // the properties below are optional\n  filter: {\n    s3Key: {\n      rules: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "c77307513550869c8d3a24f80c221bc54651515ed32a7217de9aa0ed1b94b49c"
    },
    "a7666a9b64fb5b815d201ce30fab0238527f484a328aa41b6da8e978d5a7c92e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nlifecycle_configuration_property = s3.CfnBucket.LifecycleConfigurationProperty(\n    rules=[s3.CfnBucket.RuleProperty(\n        status=\"status\",\n\n        # the properties below are optional\n        abort_incomplete_multipart_upload=s3.CfnBucket.AbortIncompleteMultipartUploadProperty(\n            days_after_initiation=123\n        ),\n        expiration_date=Date(),\n        expiration_in_days=123,\n        expired_object_delete_marker=False,\n        id=\"id\",\n        noncurrent_version_expiration=s3.CfnBucket.NoncurrentVersionExpirationProperty(\n            noncurrent_days=123,\n\n            # the properties below are optional\n            newer_noncurrent_versions=123\n        ),\n        noncurrent_version_expiration_in_days=123,\n        noncurrent_version_transition=s3.CfnBucket.NoncurrentVersionTransitionProperty(\n            storage_class=\"storageClass\",\n            transition_in_days=123,\n\n            # the properties below are optional\n            newer_noncurrent_versions=123\n        ),\n        noncurrent_version_transitions=[s3.CfnBucket.NoncurrentVersionTransitionProperty(\n            storage_class=\"storageClass\",\n            transition_in_days=123,\n\n            # the properties below are optional\n            newer_noncurrent_versions=123\n        )],\n        object_size_greater_than=123,\n        object_size_less_than=123,\n        prefix=\"prefix\",\n        tag_filters=[s3.CfnBucket.TagFilterProperty(\n            key=\"key\",\n            value=\"value\"\n        )],\n        transition=s3.CfnBucket.TransitionProperty(\n            storage_class=\"storageClass\",\n\n            # the properties below are optional\n            transition_date=Date(),\n            transition_in_days=123\n        ),\n        transitions=[s3.CfnBucket.TransitionProperty(\n            storage_class=\"storageClass\",\n\n            # the properties below are optional\n            transition_date=Date(),\n            transition_in_days=123\n        )]\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nLifecycleConfigurationProperty lifecycleConfigurationProperty = new LifecycleConfigurationProperty {\n    Rules = new [] { new RuleProperty {\n        Status = \"status\",\n\n        // the properties below are optional\n        AbortIncompleteMultipartUpload = new AbortIncompleteMultipartUploadProperty {\n            DaysAfterInitiation = 123\n        },\n        ExpirationDate = new Date(),\n        ExpirationInDays = 123,\n        ExpiredObjectDeleteMarker = false,\n        Id = \"id\",\n        NoncurrentVersionExpiration = new NoncurrentVersionExpirationProperty {\n            NoncurrentDays = 123,\n\n            // the properties below are optional\n            NewerNoncurrentVersions = 123\n        },\n        NoncurrentVersionExpirationInDays = 123,\n        NoncurrentVersionTransition = new NoncurrentVersionTransitionProperty {\n            StorageClass = \"storageClass\",\n            TransitionInDays = 123,\n\n            // the properties below are optional\n            NewerNoncurrentVersions = 123\n        },\n        NoncurrentVersionTransitions = new [] { new NoncurrentVersionTransitionProperty {\n            StorageClass = \"storageClass\",\n            TransitionInDays = 123,\n\n            // the properties below are optional\n            NewerNoncurrentVersions = 123\n        } },\n        ObjectSizeGreaterThan = 123,\n        ObjectSizeLessThan = 123,\n        Prefix = \"prefix\",\n        TagFilters = new [] { new TagFilterProperty {\n            Key = \"key\",\n            Value = \"value\"\n        } },\n        Transition = new TransitionProperty {\n            StorageClass = \"storageClass\",\n\n            // the properties below are optional\n            TransitionDate = new Date(),\n            TransitionInDays = 123\n        },\n        Transitions = new [] { new TransitionProperty {\n            StorageClass = \"storageClass\",\n\n            // the properties below are optional\n            TransitionDate = new Date(),\n            TransitionInDays = 123\n        } }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nLifecycleConfigurationProperty lifecycleConfigurationProperty = LifecycleConfigurationProperty.builder()\n        .rules(List.of(RuleProperty.builder()\n                .status(\"status\")\n\n                // the properties below are optional\n                .abortIncompleteMultipartUpload(AbortIncompleteMultipartUploadProperty.builder()\n                        .daysAfterInitiation(123)\n                        .build())\n                .expirationDate(new Date())\n                .expirationInDays(123)\n                .expiredObjectDeleteMarker(false)\n                .id(\"id\")\n                .noncurrentVersionExpiration(NoncurrentVersionExpirationProperty.builder()\n                        .noncurrentDays(123)\n\n                        // the properties below are optional\n                        .newerNoncurrentVersions(123)\n                        .build())\n                .noncurrentVersionExpirationInDays(123)\n                .noncurrentVersionTransition(NoncurrentVersionTransitionProperty.builder()\n                        .storageClass(\"storageClass\")\n                        .transitionInDays(123)\n\n                        // the properties below are optional\n                        .newerNoncurrentVersions(123)\n                        .build())\n                .noncurrentVersionTransitions(List.of(NoncurrentVersionTransitionProperty.builder()\n                        .storageClass(\"storageClass\")\n                        .transitionInDays(123)\n\n                        // the properties below are optional\n                        .newerNoncurrentVersions(123)\n                        .build()))\n                .objectSizeGreaterThan(123)\n                .objectSizeLessThan(123)\n                .prefix(\"prefix\")\n                .tagFilters(List.of(TagFilterProperty.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .transition(TransitionProperty.builder()\n                        .storageClass(\"storageClass\")\n\n                        // the properties below are optional\n                        .transitionDate(new Date())\n                        .transitionInDays(123)\n                        .build())\n                .transitions(List.of(TransitionProperty.builder()\n                        .storageClass(\"storageClass\")\n\n                        // the properties below are optional\n                        .transitionDate(new Date())\n                        .transitionInDays(123)\n                        .build()))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nlifecycleConfigurationProperty := &lifecycleConfigurationProperty{\n\trules: []interface{}{\n\t\t&ruleProperty{\n\t\t\tstatus: jsii.String(\"status\"),\n\n\t\t\t// the properties below are optional\n\t\t\tabortIncompleteMultipartUpload: &abortIncompleteMultipartUploadProperty{\n\t\t\t\tdaysAfterInitiation: jsii.Number(123),\n\t\t\t},\n\t\t\texpirationDate: NewDate(),\n\t\t\texpirationInDays: jsii.Number(123),\n\t\t\texpiredObjectDeleteMarker: jsii.Boolean(false),\n\t\t\tid: jsii.String(\"id\"),\n\t\t\tnoncurrentVersionExpiration: &noncurrentVersionExpirationProperty{\n\t\t\t\tnoncurrentDays: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tnewerNoncurrentVersions: jsii.Number(123),\n\t\t\t},\n\t\t\tnoncurrentVersionExpirationInDays: jsii.Number(123),\n\t\t\tnoncurrentVersionTransition: &noncurrentVersionTransitionProperty{\n\t\t\t\tstorageClass: jsii.String(\"storageClass\"),\n\t\t\t\ttransitionInDays: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tnewerNoncurrentVersions: jsii.Number(123),\n\t\t\t},\n\t\t\tnoncurrentVersionTransitions: []interface{}{\n\t\t\t\t&noncurrentVersionTransitionProperty{\n\t\t\t\t\tstorageClass: jsii.String(\"storageClass\"),\n\t\t\t\t\ttransitionInDays: jsii.Number(123),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tnewerNoncurrentVersions: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tobjectSizeGreaterThan: jsii.Number(123),\n\t\t\tobjectSizeLessThan: jsii.Number(123),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\ttagFilters: []interface{}{\n\t\t\t\t&tagFilterProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\ttransition: &transitionProperty{\n\t\t\t\tstorageClass: jsii.String(\"storageClass\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ttransitionDate: NewDate(),\n\t\t\t\ttransitionInDays: jsii.Number(123),\n\t\t\t},\n\t\t\ttransitions: []interface{}{\n\t\t\t\t&transitionProperty{\n\t\t\t\t\tstorageClass: jsii.String(\"storageClass\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ttransitionDate: NewDate(),\n\t\t\t\t\ttransitionInDays: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst lifecycleConfigurationProperty: s3.CfnBucket.LifecycleConfigurationProperty = {\n  rules: [{\n    status: 'status',\n\n    // the properties below are optional\n    abortIncompleteMultipartUpload: {\n      daysAfterInitiation: 123,\n    },\n    expirationDate: new Date(),\n    expirationInDays: 123,\n    expiredObjectDeleteMarker: false,\n    id: 'id',\n    noncurrentVersionExpiration: {\n      noncurrentDays: 123,\n\n      // the properties below are optional\n      newerNoncurrentVersions: 123,\n    },\n    noncurrentVersionExpirationInDays: 123,\n    noncurrentVersionTransition: {\n      storageClass: 'storageClass',\n      transitionInDays: 123,\n\n      // the properties below are optional\n      newerNoncurrentVersions: 123,\n    },\n    noncurrentVersionTransitions: [{\n      storageClass: 'storageClass',\n      transitionInDays: 123,\n\n      // the properties below are optional\n      newerNoncurrentVersions: 123,\n    }],\n    objectSizeGreaterThan: 123,\n    objectSizeLessThan: 123,\n    prefix: 'prefix',\n    tagFilters: [{\n      key: 'key',\n      value: 'value',\n    }],\n    transition: {\n      storageClass: 'storageClass',\n\n      // the properties below are optional\n      transitionDate: new Date(),\n      transitionInDays: 123,\n    },\n    transitions: [{\n      storageClass: 'storageClass',\n\n      // the properties below are optional\n      transitionDate: new Date(),\n      transitionInDays: 123,\n    }],\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lifecycleConfigurationProperty: s3.CfnBucket.LifecycleConfigurationProperty = {\n  rules: [{\n    status: 'status',\n\n    // the properties below are optional\n    abortIncompleteMultipartUpload: {\n      daysAfterInitiation: 123,\n    },\n    expirationDate: new Date(),\n    expirationInDays: 123,\n    expiredObjectDeleteMarker: false,\n    id: 'id',\n    noncurrentVersionExpiration: {\n      noncurrentDays: 123,\n\n      // the properties below are optional\n      newerNoncurrentVersions: 123,\n    },\n    noncurrentVersionExpirationInDays: 123,\n    noncurrentVersionTransition: {\n      storageClass: 'storageClass',\n      transitionInDays: 123,\n\n      // the properties below are optional\n      newerNoncurrentVersions: 123,\n    },\n    noncurrentVersionTransitions: [{\n      storageClass: 'storageClass',\n      transitionInDays: 123,\n\n      // the properties below are optional\n      newerNoncurrentVersions: 123,\n    }],\n    objectSizeGreaterThan: 123,\n    objectSizeLessThan: 123,\n    prefix: 'prefix',\n    tagFilters: [{\n      key: 'key',\n      value: 'value',\n    }],\n    transition: {\n      storageClass: 'storageClass',\n\n      // the properties below are optional\n      transitionDate: new Date(),\n      transitionInDays: 123,\n    },\n    transitions: [{\n      storageClass: 'storageClass',\n\n      // the properties below are optional\n      transitionDate: new Date(),\n      transitionInDays: 123,\n    }],\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 13,
        "10": 10,
        "75": 42,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 9,
        "197": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "b732f324d8fb2c9e7544a8a76110abdb93da5e5eb644fb6593abcabb8754190b"
    },
    "19ffecb1b9c62e9be11aa6f908c00928643a9962ebf2039669807ff6901c05d9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nlogging_configuration_property = s3.CfnBucket.LoggingConfigurationProperty(\n    destination_bucket_name=\"destinationBucketName\",\n    log_file_prefix=\"logFilePrefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nLoggingConfigurationProperty loggingConfigurationProperty = new LoggingConfigurationProperty {\n    DestinationBucketName = \"destinationBucketName\",\n    LogFilePrefix = \"logFilePrefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nLoggingConfigurationProperty loggingConfigurationProperty = LoggingConfigurationProperty.builder()\n        .destinationBucketName(\"destinationBucketName\")\n        .logFilePrefix(\"logFilePrefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nloggingConfigurationProperty := &loggingConfigurationProperty{\n\tdestinationBucketName: jsii.String(\"destinationBucketName\"),\n\tlogFilePrefix: jsii.String(\"logFilePrefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst loggingConfigurationProperty: s3.CfnBucket.LoggingConfigurationProperty = {\n  destinationBucketName: 'destinationBucketName',\n  logFilePrefix: 'logFilePrefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loggingConfigurationProperty: s3.CfnBucket.LoggingConfigurationProperty = {\n  destinationBucketName: 'destinationBucketName',\n  logFilePrefix: 'logFilePrefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "7ade70989ff53ab24ea20958a22820f7ff0aec559899daac7a8cbf7fc4f2ab23"
    },
    "85ee74d883acae1f043304e3d38c806558e63713ceae5a0b0a4b5c4e15d241e7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nmetrics_configuration_property = s3.CfnBucket.MetricsConfigurationProperty(\n    id=\"id\",\n\n    # the properties below are optional\n    access_point_arn=\"accessPointArn\",\n    prefix=\"prefix\",\n    tag_filters=[s3.CfnBucket.TagFilterProperty(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nMetricsConfigurationProperty metricsConfigurationProperty = new MetricsConfigurationProperty {\n    Id = \"id\",\n\n    // the properties below are optional\n    AccessPointArn = \"accessPointArn\",\n    Prefix = \"prefix\",\n    TagFilters = new [] { new TagFilterProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nMetricsConfigurationProperty metricsConfigurationProperty = MetricsConfigurationProperty.builder()\n        .id(\"id\")\n\n        // the properties below are optional\n        .accessPointArn(\"accessPointArn\")\n        .prefix(\"prefix\")\n        .tagFilters(List.of(TagFilterProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nmetricsConfigurationProperty := &metricsConfigurationProperty{\n\tid: jsii.String(\"id\"),\n\n\t// the properties below are optional\n\taccessPointArn: jsii.String(\"accessPointArn\"),\n\tprefix: jsii.String(\"prefix\"),\n\ttagFilters: []interface{}{\n\t\t&tagFilterProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst metricsConfigurationProperty: s3.CfnBucket.MetricsConfigurationProperty = {\n  id: 'id',\n\n  // the properties below are optional\n  accessPointArn: 'accessPointArn',\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricsConfigurationProperty: s3.CfnBucket.MetricsConfigurationProperty = {\n  id: 'id',\n\n  // the properties below are optional\n  accessPointArn: 'accessPointArn',\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "2a9e9844c076eb96f0eb7d08fb51f280f01fea7ab57b4986cb75fcdc90bd272e"
    },
    "61d16501084d933b61787b21c357ec58966886c798db915b87289faf7974b17f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nmetrics_property = s3.CfnBucket.MetricsProperty(\n    status=\"status\",\n\n    # the properties below are optional\n    event_threshold=s3.CfnBucket.ReplicationTimeValueProperty(\n        minutes=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nMetricsProperty metricsProperty = new MetricsProperty {\n    Status = \"status\",\n\n    // the properties below are optional\n    EventThreshold = new ReplicationTimeValueProperty {\n        Minutes = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nMetricsProperty metricsProperty = MetricsProperty.builder()\n        .status(\"status\")\n\n        // the properties below are optional\n        .eventThreshold(ReplicationTimeValueProperty.builder()\n                .minutes(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nmetricsProperty := &metricsProperty{\n\tstatus: jsii.String(\"status\"),\n\n\t// the properties below are optional\n\teventThreshold: &replicationTimeValueProperty{\n\t\tminutes: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst metricsProperty: s3.CfnBucket.MetricsProperty = {\n  status: 'status',\n\n  // the properties below are optional\n  eventThreshold: {\n    minutes: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.MetricsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricsProperty: s3.CfnBucket.MetricsProperty = {\n  status: 'status',\n\n  // the properties below are optional\n  eventThreshold: {\n    minutes: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "3ab9fe16748d7c103f2c68a31020dddd32b538e72f87df66fadd31201648c173"
    },
    "ccd2bdc91abdd43211d86d35bf346dae5b2b57addd282e0ac1b6b91a4899cb22": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nnoncurrent_version_expiration_property = s3.CfnBucket.NoncurrentVersionExpirationProperty(\n    noncurrent_days=123,\n\n    # the properties below are optional\n    newer_noncurrent_versions=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nNoncurrentVersionExpirationProperty noncurrentVersionExpirationProperty = new NoncurrentVersionExpirationProperty {\n    NoncurrentDays = 123,\n\n    // the properties below are optional\n    NewerNoncurrentVersions = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nNoncurrentVersionExpirationProperty noncurrentVersionExpirationProperty = NoncurrentVersionExpirationProperty.builder()\n        .noncurrentDays(123)\n\n        // the properties below are optional\n        .newerNoncurrentVersions(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nnoncurrentVersionExpirationProperty := &noncurrentVersionExpirationProperty{\n\tnoncurrentDays: jsii.Number(123),\n\n\t// the properties below are optional\n\tnewerNoncurrentVersions: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst noncurrentVersionExpirationProperty: s3.CfnBucket.NoncurrentVersionExpirationProperty = {\n  noncurrentDays: 123,\n\n  // the properties below are optional\n  newerNoncurrentVersions: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionExpirationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionExpirationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst noncurrentVersionExpirationProperty: s3.CfnBucket.NoncurrentVersionExpirationProperty = {\n  noncurrentDays: 123,\n\n  // the properties below are optional\n  newerNoncurrentVersions: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "0cdaf0c54715a8fa96eb5e73bf95cf4bb9590608938dd4c4bb1d127de55d3591"
    },
    "f474b14752fa35cf6479a1b5cfc97b601531cbc38061e19098d6d7080365fc14": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nnoncurrent_version_transition_property = s3.CfnBucket.NoncurrentVersionTransitionProperty(\n    storage_class=\"storageClass\",\n    transition_in_days=123,\n\n    # the properties below are optional\n    newer_noncurrent_versions=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nNoncurrentVersionTransitionProperty noncurrentVersionTransitionProperty = new NoncurrentVersionTransitionProperty {\n    StorageClass = \"storageClass\",\n    TransitionInDays = 123,\n\n    // the properties below are optional\n    NewerNoncurrentVersions = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nNoncurrentVersionTransitionProperty noncurrentVersionTransitionProperty = NoncurrentVersionTransitionProperty.builder()\n        .storageClass(\"storageClass\")\n        .transitionInDays(123)\n\n        // the properties below are optional\n        .newerNoncurrentVersions(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nnoncurrentVersionTransitionProperty := &noncurrentVersionTransitionProperty{\n\tstorageClass: jsii.String(\"storageClass\"),\n\ttransitionInDays: jsii.Number(123),\n\n\t// the properties below are optional\n\tnewerNoncurrentVersions: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst noncurrentVersionTransitionProperty: s3.CfnBucket.NoncurrentVersionTransitionProperty = {\n  storageClass: 'storageClass',\n  transitionInDays: 123,\n\n  // the properties below are optional\n  newerNoncurrentVersions: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst noncurrentVersionTransitionProperty: s3.CfnBucket.NoncurrentVersionTransitionProperty = {\n  storageClass: 'storageClass',\n  transitionInDays: 123,\n\n  // the properties below are optional\n  newerNoncurrentVersions: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "b2629351116fd6401060410aac54f90e9364486cc2fde9a2f4d7cd6e910dd406"
    },
    "2818a2d810e3f47a88f1080a8d73c5ff108f635c18b78cb51f6ee8f7a874828d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nnotification_configuration_property = s3.CfnBucket.NotificationConfigurationProperty(\n    event_bridge_configuration=s3.CfnBucket.EventBridgeConfigurationProperty(\n        event_bridge_enabled=False\n    ),\n    lambda_configurations=[s3.CfnBucket.LambdaConfigurationProperty(\n        event=\"event\",\n        function=\"function\",\n\n        # the properties below are optional\n        filter=s3.CfnBucket.NotificationFilterProperty(\n            s3_key=s3.CfnBucket.S3KeyFilterProperty(\n                rules=[s3.CfnBucket.FilterRuleProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        )\n    )],\n    queue_configurations=[s3.CfnBucket.QueueConfigurationProperty(\n        event=\"event\",\n        queue=\"queue\",\n\n        # the properties below are optional\n        filter=s3.CfnBucket.NotificationFilterProperty(\n            s3_key=s3.CfnBucket.S3KeyFilterProperty(\n                rules=[s3.CfnBucket.FilterRuleProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        )\n    )],\n    topic_configurations=[s3.CfnBucket.TopicConfigurationProperty(\n        event=\"event\",\n        topic=\"topic\",\n\n        # the properties below are optional\n        filter=s3.CfnBucket.NotificationFilterProperty(\n            s3_key=s3.CfnBucket.S3KeyFilterProperty(\n                rules=[s3.CfnBucket.FilterRuleProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            )\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nNotificationConfigurationProperty notificationConfigurationProperty = new NotificationConfigurationProperty {\n    EventBridgeConfiguration = new EventBridgeConfigurationProperty {\n        EventBridgeEnabled = false\n    },\n    LambdaConfigurations = new [] { new LambdaConfigurationProperty {\n        Event = \"event\",\n        Function = \"function\",\n\n        // the properties below are optional\n        Filter = new NotificationFilterProperty {\n            S3Key = new S3KeyFilterProperty {\n                Rules = new [] { new FilterRuleProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        }\n    } },\n    QueueConfigurations = new [] { new QueueConfigurationProperty {\n        Event = \"event\",\n        Queue = \"queue\",\n\n        // the properties below are optional\n        Filter = new NotificationFilterProperty {\n            S3Key = new S3KeyFilterProperty {\n                Rules = new [] { new FilterRuleProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        }\n    } },\n    TopicConfigurations = new [] { new TopicConfigurationProperty {\n        Event = \"event\",\n        Topic = \"topic\",\n\n        // the properties below are optional\n        Filter = new NotificationFilterProperty {\n            S3Key = new S3KeyFilterProperty {\n                Rules = new [] { new FilterRuleProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            }\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nNotificationConfigurationProperty notificationConfigurationProperty = NotificationConfigurationProperty.builder()\n        .eventBridgeConfiguration(EventBridgeConfigurationProperty.builder()\n                .eventBridgeEnabled(false)\n                .build())\n        .lambdaConfigurations(List.of(LambdaConfigurationProperty.builder()\n                .event(\"event\")\n                .function(\"function\")\n\n                // the properties below are optional\n                .filter(NotificationFilterProperty.builder()\n                        .s3Key(S3KeyFilterProperty.builder()\n                                .rules(List.of(FilterRuleProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build()))\n        .queueConfigurations(List.of(QueueConfigurationProperty.builder()\n                .event(\"event\")\n                .queue(\"queue\")\n\n                // the properties below are optional\n                .filter(NotificationFilterProperty.builder()\n                        .s3Key(S3KeyFilterProperty.builder()\n                                .rules(List.of(FilterRuleProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build()))\n        .topicConfigurations(List.of(TopicConfigurationProperty.builder()\n                .event(\"event\")\n                .topic(\"topic\")\n\n                // the properties below are optional\n                .filter(NotificationFilterProperty.builder()\n                        .s3Key(S3KeyFilterProperty.builder()\n                                .rules(List.of(FilterRuleProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nnotificationConfigurationProperty := &notificationConfigurationProperty{\n\teventBridgeConfiguration: &eventBridgeConfigurationProperty{\n\t\teventBridgeEnabled: jsii.Boolean(false),\n\t},\n\tlambdaConfigurations: []interface{}{\n\t\t&lambdaConfigurationProperty{\n\t\t\tevent: jsii.String(\"event\"),\n\t\t\tfunction: jsii.String(\"function\"),\n\n\t\t\t// the properties below are optional\n\t\t\tfilter: &notificationFilterProperty{\n\t\t\t\ts3Key: &s3KeyFilterProperty{\n\t\t\t\t\trules: []interface{}{\n\t\t\t\t\t\t&filterRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tqueueConfigurations: []interface{}{\n\t\t&queueConfigurationProperty{\n\t\t\tevent: jsii.String(\"event\"),\n\t\t\tqueue: jsii.String(\"queue\"),\n\n\t\t\t// the properties below are optional\n\t\t\tfilter: &notificationFilterProperty{\n\t\t\t\ts3Key: &s3KeyFilterProperty{\n\t\t\t\t\trules: []interface{}{\n\t\t\t\t\t\t&filterRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\ttopicConfigurations: []interface{}{\n\t\t&topicConfigurationProperty{\n\t\t\tevent: jsii.String(\"event\"),\n\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t// the properties below are optional\n\t\t\tfilter: &notificationFilterProperty{\n\t\t\t\ts3Key: &s3KeyFilterProperty{\n\t\t\t\t\trules: []interface{}{\n\t\t\t\t\t\t&filterRuleProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst notificationConfigurationProperty: s3.CfnBucket.NotificationConfigurationProperty = {\n  eventBridgeConfiguration: {\n    eventBridgeEnabled: false,\n  },\n  lambdaConfigurations: [{\n    event: 'event',\n    function: 'function',\n\n    // the properties below are optional\n    filter: {\n      s3Key: {\n        rules: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  }],\n  queueConfigurations: [{\n    event: 'event',\n    queue: 'queue',\n\n    // the properties below are optional\n    filter: {\n      s3Key: {\n        rules: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  }],\n  topicConfigurations: [{\n    event: 'event',\n    topic: 'topic',\n\n    // the properties below are optional\n    filter: {\n      s3Key: {\n        rules: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationConfigurationProperty: s3.CfnBucket.NotificationConfigurationProperty = {\n  eventBridgeConfiguration: {\n    eventBridgeEnabled: false,\n  },\n  lambdaConfigurations: [{\n    event: 'event',\n    function: 'function',\n\n    // the properties below are optional\n    filter: {\n      s3Key: {\n        rules: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  }],\n  queueConfigurations: [{\n    event: 'event',\n    queue: 'queue',\n\n    // the properties below are optional\n    filter: {\n      s3Key: {\n        rules: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  }],\n  topicConfigurations: [{\n    event: 'event',\n    topic: 'topic',\n\n    // the properties below are optional\n    filter: {\n      s3Key: {\n        rules: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 13,
        "75": 31,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 14,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 26,
        "290": 1
      },
      "fqnsFingerprint": "e4abac30104ef83565980f8b462713bb75143b15429419795f07c179515266d1"
    },
    "338788b645e96f1cb22796a5e520d8abc6cbf06a9a71d5cfa10556f27f8adf98": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nnotification_filter_property = s3.CfnBucket.NotificationFilterProperty(\n    s3_key=s3.CfnBucket.S3KeyFilterProperty(\n        rules=[s3.CfnBucket.FilterRuleProperty(\n            name=\"name\",\n            value=\"value\"\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nNotificationFilterProperty notificationFilterProperty = new NotificationFilterProperty {\n    S3Key = new S3KeyFilterProperty {\n        Rules = new [] { new FilterRuleProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nNotificationFilterProperty notificationFilterProperty = NotificationFilterProperty.builder()\n        .s3Key(S3KeyFilterProperty.builder()\n                .rules(List.of(FilterRuleProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nnotificationFilterProperty := &notificationFilterProperty{\n\ts3Key: &s3KeyFilterProperty{\n\t\trules: []interface{}{\n\t\t\t&filterRuleProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst notificationFilterProperty: s3.CfnBucket.NotificationFilterProperty = {\n  s3Key: {\n    rules: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationFilterProperty: s3.CfnBucket.NotificationFilterProperty = {\n  s3Key: {\n    rules: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "3bea4e580b9d1e00cab4091932cb34a0c104814e7ce32093cbad0276922c0d52"
    },
    "6f6cb6c2b827262473b07d7530b034f09944ba1e4ee8753710abd8ab4e78c075": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nobject_lock_configuration_property = s3.CfnBucket.ObjectLockConfigurationProperty(\n    object_lock_enabled=\"objectLockEnabled\",\n    rule=s3.CfnBucket.ObjectLockRuleProperty(\n        default_retention=s3.CfnBucket.DefaultRetentionProperty(\n            days=123,\n            mode=\"mode\",\n            years=123\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nObjectLockConfigurationProperty objectLockConfigurationProperty = new ObjectLockConfigurationProperty {\n    ObjectLockEnabled = \"objectLockEnabled\",\n    Rule = new ObjectLockRuleProperty {\n        DefaultRetention = new DefaultRetentionProperty {\n            Days = 123,\n            Mode = \"mode\",\n            Years = 123\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObjectLockConfigurationProperty objectLockConfigurationProperty = ObjectLockConfigurationProperty.builder()\n        .objectLockEnabled(\"objectLockEnabled\")\n        .rule(ObjectLockRuleProperty.builder()\n                .defaultRetention(DefaultRetentionProperty.builder()\n                        .days(123)\n                        .mode(\"mode\")\n                        .years(123)\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nobjectLockConfigurationProperty := &objectLockConfigurationProperty{\n\tobjectLockEnabled: jsii.String(\"objectLockEnabled\"),\n\trule: &objectLockRuleProperty{\n\t\tdefaultRetention: &defaultRetentionProperty{\n\t\t\tdays: jsii.Number(123),\n\t\t\tmode: jsii.String(\"mode\"),\n\t\t\tyears: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst objectLockConfigurationProperty: s3.CfnBucket.ObjectLockConfigurationProperty = {\n  objectLockEnabled: 'objectLockEnabled',\n  rule: {\n    defaultRetention: {\n      days: 123,\n      mode: 'mode',\n      years: 123,\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ObjectLockConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ObjectLockConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst objectLockConfigurationProperty: s3.CfnBucket.ObjectLockConfigurationProperty = {\n  objectLockEnabled: 'objectLockEnabled',\n  rule: {\n    defaultRetention: {\n      days: 123,\n      mode: 'mode',\n      years: 123,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "a35cb5dec7cd24c026fedbacb91802dc6f2d56578ea389ab03714e3a22ac128b"
    },
    "0df5cbc76357a1b1933fb3764a3fb9ad772b904537933aaaba69e2c410cb481d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nobject_lock_rule_property = s3.CfnBucket.ObjectLockRuleProperty(\n    default_retention=s3.CfnBucket.DefaultRetentionProperty(\n        days=123,\n        mode=\"mode\",\n        years=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nObjectLockRuleProperty objectLockRuleProperty = new ObjectLockRuleProperty {\n    DefaultRetention = new DefaultRetentionProperty {\n        Days = 123,\n        Mode = \"mode\",\n        Years = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObjectLockRuleProperty objectLockRuleProperty = ObjectLockRuleProperty.builder()\n        .defaultRetention(DefaultRetentionProperty.builder()\n                .days(123)\n                .mode(\"mode\")\n                .years(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nobjectLockRuleProperty := &objectLockRuleProperty{\n\tdefaultRetention: &defaultRetentionProperty{\n\t\tdays: jsii.Number(123),\n\t\tmode: jsii.String(\"mode\"),\n\t\tyears: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst objectLockRuleProperty: s3.CfnBucket.ObjectLockRuleProperty = {\n  defaultRetention: {\n    days: 123,\n    mode: 'mode',\n    years: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ObjectLockRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ObjectLockRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst objectLockRuleProperty: s3.CfnBucket.ObjectLockRuleProperty = {\n  defaultRetention: {\n    days: 123,\n    mode: 'mode',\n    years: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "52180db2748d3df6865f2c64531c41c360afee71083088c24100203d782def45"
    },
    "98f04467cdbd387753e03f5c470e96610e322e305bf8a0240ac820b0015f9d88": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nownership_controls_property = s3.CfnBucket.OwnershipControlsProperty(\n    rules=[s3.CfnBucket.OwnershipControlsRuleProperty(\n        object_ownership=\"objectOwnership\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nOwnershipControlsProperty ownershipControlsProperty = new OwnershipControlsProperty {\n    Rules = new [] { new OwnershipControlsRuleProperty {\n        ObjectOwnership = \"objectOwnership\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nOwnershipControlsProperty ownershipControlsProperty = OwnershipControlsProperty.builder()\n        .rules(List.of(OwnershipControlsRuleProperty.builder()\n                .objectOwnership(\"objectOwnership\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nownershipControlsProperty := &ownershipControlsProperty{\n\trules: []interface{}{\n\t\t&ownershipControlsRuleProperty{\n\t\t\tobjectOwnership: jsii.String(\"objectOwnership\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst ownershipControlsProperty: s3.CfnBucket.OwnershipControlsProperty = {\n  rules: [{\n    objectOwnership: 'objectOwnership',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ownershipControlsProperty: s3.CfnBucket.OwnershipControlsProperty = {\n  rules: [{\n    objectOwnership: 'objectOwnership',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "afd7ae53ea7a01b60634ddf99f1c7008e53d2cef7a65f2ed01726d4a875a38b6"
    },
    "9d0eb52d5f51a2548e8284dec3cff95798d383365933e7894d931a54c8900a9d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nownership_controls_rule_property = s3.CfnBucket.OwnershipControlsRuleProperty(\n    object_ownership=\"objectOwnership\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nOwnershipControlsRuleProperty ownershipControlsRuleProperty = new OwnershipControlsRuleProperty {\n    ObjectOwnership = \"objectOwnership\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nOwnershipControlsRuleProperty ownershipControlsRuleProperty = OwnershipControlsRuleProperty.builder()\n        .objectOwnership(\"objectOwnership\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nownershipControlsRuleProperty := &ownershipControlsRuleProperty{\n\tobjectOwnership: jsii.String(\"objectOwnership\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst ownershipControlsRuleProperty: s3.CfnBucket.OwnershipControlsRuleProperty = {\n  objectOwnership: 'objectOwnership',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ownershipControlsRuleProperty: s3.CfnBucket.OwnershipControlsRuleProperty = {\n  objectOwnership: 'objectOwnership',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "e8f11243cce7dc2dc8ed45139caa55e4e318f1139d28a215ba8e3f03a809e351"
    },
    "47373a92331abe605d484de4cceb2427f25fde02ee8863de378d7da11db7fcfc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\npublic_access_block_configuration_property = s3.CfnBucket.PublicAccessBlockConfigurationProperty(\n    block_public_acls=False,\n    block_public_policy=False,\n    ignore_public_acls=False,\n    restrict_public_buckets=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nPublicAccessBlockConfigurationProperty publicAccessBlockConfigurationProperty = new PublicAccessBlockConfigurationProperty {\n    BlockPublicAcls = false,\n    BlockPublicPolicy = false,\n    IgnorePublicAcls = false,\n    RestrictPublicBuckets = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nPublicAccessBlockConfigurationProperty publicAccessBlockConfigurationProperty = PublicAccessBlockConfigurationProperty.builder()\n        .blockPublicAcls(false)\n        .blockPublicPolicy(false)\n        .ignorePublicAcls(false)\n        .restrictPublicBuckets(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\npublicAccessBlockConfigurationProperty := &publicAccessBlockConfigurationProperty{\n\tblockPublicAcls: jsii.Boolean(false),\n\tblockPublicPolicy: jsii.Boolean(false),\n\tignorePublicAcls: jsii.Boolean(false),\n\trestrictPublicBuckets: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst publicAccessBlockConfigurationProperty: s3.CfnBucket.PublicAccessBlockConfigurationProperty = {\n  blockPublicAcls: false,\n  blockPublicPolicy: false,\n  ignorePublicAcls: false,\n  restrictPublicBuckets: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst publicAccessBlockConfigurationProperty: s3.CfnBucket.PublicAccessBlockConfigurationProperty = {\n  blockPublicAcls: false,\n  blockPublicPolicy: false,\n  ignorePublicAcls: false,\n  restrictPublicBuckets: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "fd1f04c585f356f9816c89d320e1748a3586d22f32ac09ffd33e642101d598d8"
    },
    "b60e5a12fec838ccc9829b181c9115b8a992c382de76e2d2f014885b6fc41ec1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nqueue_configuration_property = s3.CfnBucket.QueueConfigurationProperty(\n    event=\"event\",\n    queue=\"queue\",\n\n    # the properties below are optional\n    filter=s3.CfnBucket.NotificationFilterProperty(\n        s3_key=s3.CfnBucket.S3KeyFilterProperty(\n            rules=[s3.CfnBucket.FilterRuleProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nQueueConfigurationProperty queueConfigurationProperty = new QueueConfigurationProperty {\n    Event = \"event\",\n    Queue = \"queue\",\n\n    // the properties below are optional\n    Filter = new NotificationFilterProperty {\n        S3Key = new S3KeyFilterProperty {\n            Rules = new [] { new FilterRuleProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nQueueConfigurationProperty queueConfigurationProperty = QueueConfigurationProperty.builder()\n        .event(\"event\")\n        .queue(\"queue\")\n\n        // the properties below are optional\n        .filter(NotificationFilterProperty.builder()\n                .s3Key(S3KeyFilterProperty.builder()\n                        .rules(List.of(FilterRuleProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nqueueConfigurationProperty := &queueConfigurationProperty{\n\tevent: jsii.String(\"event\"),\n\tqueue: jsii.String(\"queue\"),\n\n\t// the properties below are optional\n\tfilter: &notificationFilterProperty{\n\t\ts3Key: &s3KeyFilterProperty{\n\t\t\trules: []interface{}{\n\t\t\t\t&filterRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst queueConfigurationProperty: s3.CfnBucket.QueueConfigurationProperty = {\n  event: 'event',\n  queue: 'queue',\n\n  // the properties below are optional\n  filter: {\n    s3Key: {\n      rules: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst queueConfigurationProperty: s3.CfnBucket.QueueConfigurationProperty = {\n  event: 'event',\n  queue: 'queue',\n\n  // the properties below are optional\n  filter: {\n    s3Key: {\n      rules: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "846d56831f81f41ee593c22c89e4c8af01dbdb42b4a58a6b0305463af36c1424"
    },
    "ba0e06c171b9e646a7fa4601ecbca5f8f20e30018a601778485f057bc9050af0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nredirect_all_requests_to_property = s3.CfnBucket.RedirectAllRequestsToProperty(\n    host_name=\"hostName\",\n\n    # the properties below are optional\n    protocol=\"protocol\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nRedirectAllRequestsToProperty redirectAllRequestsToProperty = new RedirectAllRequestsToProperty {\n    HostName = \"hostName\",\n\n    // the properties below are optional\n    Protocol = \"protocol\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nRedirectAllRequestsToProperty redirectAllRequestsToProperty = RedirectAllRequestsToProperty.builder()\n        .hostName(\"hostName\")\n\n        // the properties below are optional\n        .protocol(\"protocol\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nredirectAllRequestsToProperty := &redirectAllRequestsToProperty{\n\thostName: jsii.String(\"hostName\"),\n\n\t// the properties below are optional\n\tprotocol: jsii.String(\"protocol\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst redirectAllRequestsToProperty: s3.CfnBucket.RedirectAllRequestsToProperty = {\n  hostName: 'hostName',\n\n  // the properties below are optional\n  protocol: 'protocol',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redirectAllRequestsToProperty: s3.CfnBucket.RedirectAllRequestsToProperty = {\n  hostName: 'hostName',\n\n  // the properties below are optional\n  protocol: 'protocol',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "04d5f6c450bf7366445840d8d571e50913f05019203adf6b20ff8e02ad87d588"
    },
    "53894ce963193d754cea1567018287391ba134df3e920dc6458e74b99ad3f20b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nredirect_rule_property = s3.CfnBucket.RedirectRuleProperty(\n    host_name=\"hostName\",\n    http_redirect_code=\"httpRedirectCode\",\n    protocol=\"protocol\",\n    replace_key_prefix_with=\"replaceKeyPrefixWith\",\n    replace_key_with=\"replaceKeyWith\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nRedirectRuleProperty redirectRuleProperty = new RedirectRuleProperty {\n    HostName = \"hostName\",\n    HttpRedirectCode = \"httpRedirectCode\",\n    Protocol = \"protocol\",\n    ReplaceKeyPrefixWith = \"replaceKeyPrefixWith\",\n    ReplaceKeyWith = \"replaceKeyWith\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nRedirectRuleProperty redirectRuleProperty = RedirectRuleProperty.builder()\n        .hostName(\"hostName\")\n        .httpRedirectCode(\"httpRedirectCode\")\n        .protocol(\"protocol\")\n        .replaceKeyPrefixWith(\"replaceKeyPrefixWith\")\n        .replaceKeyWith(\"replaceKeyWith\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nredirectRuleProperty := &redirectRuleProperty{\n\thostName: jsii.String(\"hostName\"),\n\thttpRedirectCode: jsii.String(\"httpRedirectCode\"),\n\tprotocol: jsii.String(\"protocol\"),\n\treplaceKeyPrefixWith: jsii.String(\"replaceKeyPrefixWith\"),\n\treplaceKeyWith: jsii.String(\"replaceKeyWith\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst redirectRuleProperty: s3.CfnBucket.RedirectRuleProperty = {\n  hostName: 'hostName',\n  httpRedirectCode: 'httpRedirectCode',\n  protocol: 'protocol',\n  replaceKeyPrefixWith: 'replaceKeyPrefixWith',\n  replaceKeyWith: 'replaceKeyWith',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redirectRuleProperty: s3.CfnBucket.RedirectRuleProperty = {\n  hostName: 'hostName',\n  httpRedirectCode: 'httpRedirectCode',\n  protocol: 'protocol',\n  replaceKeyPrefixWith: 'replaceKeyPrefixWith',\n  replaceKeyWith: 'replaceKeyWith',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "268a529c68e0b426e5bf4ed42a9dc5566911e33d98a8f480bae7176ae645c299"
    },
    "2866ba1d6380d092b0726b79b21880c0d4827bd64526ef9724c9a7aa529d30a5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nreplica_modifications_property = s3.CfnBucket.ReplicaModificationsProperty(\n    status=\"status\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplicaModificationsProperty replicaModificationsProperty = new ReplicaModificationsProperty {\n    Status = \"status\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplicaModificationsProperty replicaModificationsProperty = ReplicaModificationsProperty.builder()\n        .status(\"status\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nreplicaModificationsProperty := &replicaModificationsProperty{\n\tstatus: jsii.String(\"status\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst replicaModificationsProperty: s3.CfnBucket.ReplicaModificationsProperty = {\n  status: 'status',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicaModificationsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ReplicaModificationsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicaModificationsProperty: s3.CfnBucket.ReplicaModificationsProperty = {\n  status: 'status',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "961cce8ec6eecc22880c8b714f67734da4618aa70032ec49169fa55dd0fd9cca"
    },
    "c4ed65f6555c1f95d737bdc183c0a82aeaf7293fbb86f521dcf1a74e6a20e997": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nreplication_configuration_property = s3.CfnBucket.ReplicationConfigurationProperty(\n    role=\"role\",\n    rules=[s3.CfnBucket.ReplicationRuleProperty(\n        destination=s3.CfnBucket.ReplicationDestinationProperty(\n            bucket=\"bucket\",\n\n            # the properties below are optional\n            access_control_translation=s3.CfnBucket.AccessControlTranslationProperty(\n                owner=\"owner\"\n            ),\n            account=\"account\",\n            encryption_configuration=s3.CfnBucket.EncryptionConfigurationProperty(\n                replica_kms_key_id=\"replicaKmsKeyId\"\n            ),\n            metrics=s3.CfnBucket.MetricsProperty(\n                status=\"status\",\n\n                # the properties below are optional\n                event_threshold=s3.CfnBucket.ReplicationTimeValueProperty(\n                    minutes=123\n                )\n            ),\n            replication_time=s3.CfnBucket.ReplicationTimeProperty(\n                status=\"status\",\n                time=s3.CfnBucket.ReplicationTimeValueProperty(\n                    minutes=123\n                )\n            ),\n            storage_class=\"storageClass\"\n        ),\n        status=\"status\",\n\n        # the properties below are optional\n        delete_marker_replication=s3.CfnBucket.DeleteMarkerReplicationProperty(\n            status=\"status\"\n        ),\n        filter=s3.CfnBucket.ReplicationRuleFilterProperty(\n            and=s3.CfnBucket.ReplicationRuleAndOperatorProperty(\n                prefix=\"prefix\",\n                tag_filters=[s3.CfnBucket.TagFilterProperty(\n                    key=\"key\",\n                    value=\"value\"\n                )]\n            ),\n            prefix=\"prefix\",\n            tag_filter=s3.CfnBucket.TagFilterProperty(\n                key=\"key\",\n                value=\"value\"\n            )\n        ),\n        id=\"id\",\n        prefix=\"prefix\",\n        priority=123,\n        source_selection_criteria=s3.CfnBucket.SourceSelectionCriteriaProperty(\n            replica_modifications=s3.CfnBucket.ReplicaModificationsProperty(\n                status=\"status\"\n            ),\n            sse_kms_encrypted_objects=s3.CfnBucket.SseKmsEncryptedObjectsProperty(\n                status=\"status\"\n            )\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplicationConfigurationProperty replicationConfigurationProperty = new ReplicationConfigurationProperty {\n    Role = \"role\",\n    Rules = new [] { new ReplicationRuleProperty {\n        Destination = new ReplicationDestinationProperty {\n            Bucket = \"bucket\",\n\n            // the properties below are optional\n            AccessControlTranslation = new AccessControlTranslationProperty {\n                Owner = \"owner\"\n            },\n            Account = \"account\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                ReplicaKmsKeyId = \"replicaKmsKeyId\"\n            },\n            Metrics = new MetricsProperty {\n                Status = \"status\",\n\n                // the properties below are optional\n                EventThreshold = new ReplicationTimeValueProperty {\n                    Minutes = 123\n                }\n            },\n            ReplicationTime = new ReplicationTimeProperty {\n                Status = \"status\",\n                Time = new ReplicationTimeValueProperty {\n                    Minutes = 123\n                }\n            },\n            StorageClass = \"storageClass\"\n        },\n        Status = \"status\",\n\n        // the properties below are optional\n        DeleteMarkerReplication = new DeleteMarkerReplicationProperty {\n            Status = \"status\"\n        },\n        Filter = new ReplicationRuleFilterProperty {\n            And = new ReplicationRuleAndOperatorProperty {\n                Prefix = \"prefix\",\n                TagFilters = new [] { new TagFilterProperty {\n                    Key = \"key\",\n                    Value = \"value\"\n                } }\n            },\n            Prefix = \"prefix\",\n            TagFilter = new TagFilterProperty {\n                Key = \"key\",\n                Value = \"value\"\n            }\n        },\n        Id = \"id\",\n        Prefix = \"prefix\",\n        Priority = 123,\n        SourceSelectionCriteria = new SourceSelectionCriteriaProperty {\n            ReplicaModifications = new ReplicaModificationsProperty {\n                Status = \"status\"\n            },\n            SseKmsEncryptedObjects = new SseKmsEncryptedObjectsProperty {\n                Status = \"status\"\n            }\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplicationConfigurationProperty replicationConfigurationProperty = ReplicationConfigurationProperty.builder()\n        .role(\"role\")\n        .rules(List.of(ReplicationRuleProperty.builder()\n                .destination(ReplicationDestinationProperty.builder()\n                        .bucket(\"bucket\")\n\n                        // the properties below are optional\n                        .accessControlTranslation(AccessControlTranslationProperty.builder()\n                                .owner(\"owner\")\n                                .build())\n                        .account(\"account\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .replicaKmsKeyId(\"replicaKmsKeyId\")\n                                .build())\n                        .metrics(MetricsProperty.builder()\n                                .status(\"status\")\n\n                                // the properties below are optional\n                                .eventThreshold(ReplicationTimeValueProperty.builder()\n                                        .minutes(123)\n                                        .build())\n                                .build())\n                        .replicationTime(ReplicationTimeProperty.builder()\n                                .status(\"status\")\n                                .time(ReplicationTimeValueProperty.builder()\n                                        .minutes(123)\n                                        .build())\n                                .build())\n                        .storageClass(\"storageClass\")\n                        .build())\n                .status(\"status\")\n\n                // the properties below are optional\n                .deleteMarkerReplication(DeleteMarkerReplicationProperty.builder()\n                        .status(\"status\")\n                        .build())\n                .filter(ReplicationRuleFilterProperty.builder()\n                        .and(ReplicationRuleAndOperatorProperty.builder()\n                                .prefix(\"prefix\")\n                                .tagFilters(List.of(TagFilterProperty.builder()\n                                        .key(\"key\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .prefix(\"prefix\")\n                        .tagFilter(TagFilterProperty.builder()\n                                .key(\"key\")\n                                .value(\"value\")\n                                .build())\n                        .build())\n                .id(\"id\")\n                .prefix(\"prefix\")\n                .priority(123)\n                .sourceSelectionCriteria(SourceSelectionCriteriaProperty.builder()\n                        .replicaModifications(ReplicaModificationsProperty.builder()\n                                .status(\"status\")\n                                .build())\n                        .sseKmsEncryptedObjects(SseKmsEncryptedObjectsProperty.builder()\n                                .status(\"status\")\n                                .build())\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nreplicationConfigurationProperty := &replicationConfigurationProperty{\n\trole: jsii.String(\"role\"),\n\trules: []interface{}{\n\t\t&replicationRuleProperty{\n\t\t\tdestination: &replicationDestinationProperty{\n\t\t\t\tbucket: jsii.String(\"bucket\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\taccessControlTranslation: &accessControlTranslationProperty{\n\t\t\t\t\towner: jsii.String(\"owner\"),\n\t\t\t\t},\n\t\t\t\taccount: jsii.String(\"account\"),\n\t\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\t\treplicaKmsKeyId: jsii.String(\"replicaKmsKeyId\"),\n\t\t\t\t},\n\t\t\t\tmetrics: &metricsProperty{\n\t\t\t\t\tstatus: jsii.String(\"status\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\teventThreshold: &replicationTimeValueProperty{\n\t\t\t\t\t\tminutes: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\treplicationTime: &replicationTimeProperty{\n\t\t\t\t\tstatus: jsii.String(\"status\"),\n\t\t\t\t\ttime: &replicationTimeValueProperty{\n\t\t\t\t\t\tminutes: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tstorageClass: jsii.String(\"storageClass\"),\n\t\t\t},\n\t\t\tstatus: jsii.String(\"status\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdeleteMarkerReplication: &deleteMarkerReplicationProperty{\n\t\t\t\tstatus: jsii.String(\"status\"),\n\t\t\t},\n\t\t\tfilter: &replicationRuleFilterProperty{\n\t\t\t\tand: &replicationRuleAndOperatorProperty{\n\t\t\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\t\t\ttagFilters: []interface{}{\n\t\t\t\t\t\t&tagFilterProperty{\n\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\t\ttagFilter: &tagFilterProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tid: jsii.String(\"id\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\tpriority: jsii.Number(123),\n\t\t\tsourceSelectionCriteria: &sourceSelectionCriteriaProperty{\n\t\t\t\treplicaModifications: &replicaModificationsProperty{\n\t\t\t\t\tstatus: jsii.String(\"status\"),\n\t\t\t\t},\n\t\t\t\tsseKmsEncryptedObjects: &sseKmsEncryptedObjectsProperty{\n\t\t\t\t\tstatus: jsii.String(\"status\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst replicationConfigurationProperty: s3.CfnBucket.ReplicationConfigurationProperty = {\n  role: 'role',\n  rules: [{\n    destination: {\n      bucket: 'bucket',\n\n      // the properties below are optional\n      accessControlTranslation: {\n        owner: 'owner',\n      },\n      account: 'account',\n      encryptionConfiguration: {\n        replicaKmsKeyId: 'replicaKmsKeyId',\n      },\n      metrics: {\n        status: 'status',\n\n        // the properties below are optional\n        eventThreshold: {\n          minutes: 123,\n        },\n      },\n      replicationTime: {\n        status: 'status',\n        time: {\n          minutes: 123,\n        },\n      },\n      storageClass: 'storageClass',\n    },\n    status: 'status',\n\n    // the properties below are optional\n    deleteMarkerReplication: {\n      status: 'status',\n    },\n    filter: {\n      and: {\n        prefix: 'prefix',\n        tagFilters: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      prefix: 'prefix',\n      tagFilter: {\n        key: 'key',\n        value: 'value',\n      },\n    },\n    id: 'id',\n    prefix: 'prefix',\n    priority: 123,\n    sourceSelectionCriteria: {\n      replicaModifications: {\n        status: 'status',\n      },\n      sseKmsEncryptedObjects: {\n        status: 'status',\n      },\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationConfigurationProperty: s3.CfnBucket.ReplicationConfigurationProperty = {\n  role: 'role',\n  rules: [{\n    destination: {\n      bucket: 'bucket',\n\n      // the properties below are optional\n      accessControlTranslation: {\n        owner: 'owner',\n      },\n      account: 'account',\n      encryptionConfiguration: {\n        replicaKmsKeyId: 'replicaKmsKeyId',\n      },\n      metrics: {\n        status: 'status',\n\n        // the properties below are optional\n        eventThreshold: {\n          minutes: 123,\n        },\n      },\n      replicationTime: {\n        status: 'status',\n        time: {\n          minutes: 123,\n        },\n      },\n      storageClass: 'storageClass',\n    },\n    status: 'status',\n\n    // the properties below are optional\n    deleteMarkerReplication: {\n      status: 'status',\n    },\n    filter: {\n      and: {\n        prefix: 'prefix',\n        tagFilters: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      prefix: 'prefix',\n      tagFilter: {\n        key: 'key',\n        value: 'value',\n      },\n    },\n    id: 'id',\n    prefix: 'prefix',\n    priority: 123,\n    sourceSelectionCriteria: {\n      replicaModifications: {\n        status: 'status',\n      },\n      sseKmsEncryptedObjects: {\n        status: 'status',\n      },\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 21,
        "75": 44,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 17,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 39,
        "290": 1
      },
      "fqnsFingerprint": "09ca554dd402e7fa97f13dcd97f9feaf610103be2d9f5989a84b6b42dcaacb1b"
    },
    "a5b330add78b7e54fee39fed0d427552b74f8430761c15babcc0f8093c0e60cd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nreplication_destination_property = s3.CfnBucket.ReplicationDestinationProperty(\n    bucket=\"bucket\",\n\n    # the properties below are optional\n    access_control_translation=s3.CfnBucket.AccessControlTranslationProperty(\n        owner=\"owner\"\n    ),\n    account=\"account\",\n    encryption_configuration=s3.CfnBucket.EncryptionConfigurationProperty(\n        replica_kms_key_id=\"replicaKmsKeyId\"\n    ),\n    metrics=s3.CfnBucket.MetricsProperty(\n        status=\"status\",\n\n        # the properties below are optional\n        event_threshold=s3.CfnBucket.ReplicationTimeValueProperty(\n            minutes=123\n        )\n    ),\n    replication_time=s3.CfnBucket.ReplicationTimeProperty(\n        status=\"status\",\n        time=s3.CfnBucket.ReplicationTimeValueProperty(\n            minutes=123\n        )\n    ),\n    storage_class=\"storageClass\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplicationDestinationProperty replicationDestinationProperty = new ReplicationDestinationProperty {\n    Bucket = \"bucket\",\n\n    // the properties below are optional\n    AccessControlTranslation = new AccessControlTranslationProperty {\n        Owner = \"owner\"\n    },\n    Account = \"account\",\n    EncryptionConfiguration = new EncryptionConfigurationProperty {\n        ReplicaKmsKeyId = \"replicaKmsKeyId\"\n    },\n    Metrics = new MetricsProperty {\n        Status = \"status\",\n\n        // the properties below are optional\n        EventThreshold = new ReplicationTimeValueProperty {\n            Minutes = 123\n        }\n    },\n    ReplicationTime = new ReplicationTimeProperty {\n        Status = \"status\",\n        Time = new ReplicationTimeValueProperty {\n            Minutes = 123\n        }\n    },\n    StorageClass = \"storageClass\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplicationDestinationProperty replicationDestinationProperty = ReplicationDestinationProperty.builder()\n        .bucket(\"bucket\")\n\n        // the properties below are optional\n        .accessControlTranslation(AccessControlTranslationProperty.builder()\n                .owner(\"owner\")\n                .build())\n        .account(\"account\")\n        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                .replicaKmsKeyId(\"replicaKmsKeyId\")\n                .build())\n        .metrics(MetricsProperty.builder()\n                .status(\"status\")\n\n                // the properties below are optional\n                .eventThreshold(ReplicationTimeValueProperty.builder()\n                        .minutes(123)\n                        .build())\n                .build())\n        .replicationTime(ReplicationTimeProperty.builder()\n                .status(\"status\")\n                .time(ReplicationTimeValueProperty.builder()\n                        .minutes(123)\n                        .build())\n                .build())\n        .storageClass(\"storageClass\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nreplicationDestinationProperty := &replicationDestinationProperty{\n\tbucket: jsii.String(\"bucket\"),\n\n\t// the properties below are optional\n\taccessControlTranslation: &accessControlTranslationProperty{\n\t\towner: jsii.String(\"owner\"),\n\t},\n\taccount: jsii.String(\"account\"),\n\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\treplicaKmsKeyId: jsii.String(\"replicaKmsKeyId\"),\n\t},\n\tmetrics: &metricsProperty{\n\t\tstatus: jsii.String(\"status\"),\n\n\t\t// the properties below are optional\n\t\teventThreshold: &replicationTimeValueProperty{\n\t\t\tminutes: jsii.Number(123),\n\t\t},\n\t},\n\treplicationTime: &replicationTimeProperty{\n\t\tstatus: jsii.String(\"status\"),\n\t\ttime: &replicationTimeValueProperty{\n\t\t\tminutes: jsii.Number(123),\n\t\t},\n\t},\n\tstorageClass: jsii.String(\"storageClass\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst replicationDestinationProperty: s3.CfnBucket.ReplicationDestinationProperty = {\n  bucket: 'bucket',\n\n  // the properties below are optional\n  accessControlTranslation: {\n    owner: 'owner',\n  },\n  account: 'account',\n  encryptionConfiguration: {\n    replicaKmsKeyId: 'replicaKmsKeyId',\n  },\n  metrics: {\n    status: 'status',\n\n    // the properties below are optional\n    eventThreshold: {\n      minutes: 123,\n    },\n  },\n  replicationTime: {\n    status: 'status',\n    time: {\n      minutes: 123,\n    },\n  },\n  storageClass: 'storageClass',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationDestinationProperty: s3.CfnBucket.ReplicationDestinationProperty = {\n  bucket: 'bucket',\n\n  // the properties below are optional\n  accessControlTranslation: {\n    owner: 'owner',\n  },\n  account: 'account',\n  encryptionConfiguration: {\n    replicaKmsKeyId: 'replicaKmsKeyId',\n  },\n  metrics: {\n    status: 'status',\n\n    // the properties below are optional\n    eventThreshold: {\n      minutes: 123,\n    },\n  },\n  replicationTime: {\n    status: 'status',\n    time: {\n      minutes: 123,\n    },\n  },\n  storageClass: 'storageClass',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 8,
        "75": 20,
        "153": 2,
        "169": 1,
        "193": 7,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "b476f5f20a94aa7986c7e80f398ef6cf6ba682465b033eee7b3ce66be9bd3273"
    },
    "9dc60c1d3bc088f91b490b428d906ce2855797a9e34a653e1a4885f7d951953b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nreplication_rule_and_operator_property = s3.CfnBucket.ReplicationRuleAndOperatorProperty(\n    prefix=\"prefix\",\n    tag_filters=[s3.CfnBucket.TagFilterProperty(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplicationRuleAndOperatorProperty replicationRuleAndOperatorProperty = new ReplicationRuleAndOperatorProperty {\n    Prefix = \"prefix\",\n    TagFilters = new [] { new TagFilterProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplicationRuleAndOperatorProperty replicationRuleAndOperatorProperty = ReplicationRuleAndOperatorProperty.builder()\n        .prefix(\"prefix\")\n        .tagFilters(List.of(TagFilterProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nreplicationRuleAndOperatorProperty := &replicationRuleAndOperatorProperty{\n\tprefix: jsii.String(\"prefix\"),\n\ttagFilters: []interface{}{\n\t\t&tagFilterProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst replicationRuleAndOperatorProperty: s3.CfnBucket.ReplicationRuleAndOperatorProperty = {\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleAndOperatorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleAndOperatorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationRuleAndOperatorProperty: s3.CfnBucket.ReplicationRuleAndOperatorProperty = {\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "b0516b3f30c3b5218c79d7188c0b76a757f3286aef78043f05b179af2485ee9e"
    },
    "bf5b15d0e0e1bcdba8921ce123d99162b07ef81b3c2a9d93fdfa3038b30b7f94": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nreplication_rule_filter_property = s3.CfnBucket.ReplicationRuleFilterProperty(\n    and=s3.CfnBucket.ReplicationRuleAndOperatorProperty(\n        prefix=\"prefix\",\n        tag_filters=[s3.CfnBucket.TagFilterProperty(\n            key=\"key\",\n            value=\"value\"\n        )]\n    ),\n    prefix=\"prefix\",\n    tag_filter=s3.CfnBucket.TagFilterProperty(\n        key=\"key\",\n        value=\"value\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplicationRuleFilterProperty replicationRuleFilterProperty = new ReplicationRuleFilterProperty {\n    And = new ReplicationRuleAndOperatorProperty {\n        Prefix = \"prefix\",\n        TagFilters = new [] { new TagFilterProperty {\n            Key = \"key\",\n            Value = \"value\"\n        } }\n    },\n    Prefix = \"prefix\",\n    TagFilter = new TagFilterProperty {\n        Key = \"key\",\n        Value = \"value\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplicationRuleFilterProperty replicationRuleFilterProperty = ReplicationRuleFilterProperty.builder()\n        .and(ReplicationRuleAndOperatorProperty.builder()\n                .prefix(\"prefix\")\n                .tagFilters(List.of(TagFilterProperty.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .prefix(\"prefix\")\n        .tagFilter(TagFilterProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nreplicationRuleFilterProperty := &replicationRuleFilterProperty{\n\tand: &replicationRuleAndOperatorProperty{\n\t\tprefix: jsii.String(\"prefix\"),\n\t\ttagFilters: []interface{}{\n\t\t\t&tagFilterProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n\tprefix: jsii.String(\"prefix\"),\n\ttagFilter: &tagFilterProperty{\n\t\tkey: jsii.String(\"key\"),\n\t\tvalue: jsii.String(\"value\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst replicationRuleFilterProperty: s3.CfnBucket.ReplicationRuleFilterProperty = {\n  and: {\n    prefix: 'prefix',\n    tagFilters: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  prefix: 'prefix',\n  tagFilter: {\n    key: 'key',\n    value: 'value',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleFilterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleFilterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationRuleFilterProperty: s3.CfnBucket.ReplicationRuleFilterProperty = {\n  and: {\n    prefix: 'prefix',\n    tagFilters: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  prefix: 'prefix',\n  tagFilter: {\n    key: 'key',\n    value: 'value',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 14,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "f1e7da912bd23465ebbe7647aec4cd2e33d6dc38d0370432bd18b1b1c724c492"
    },
    "9c9045bd3302603a30c885c255cfbaf6cef4d89539c5f9214c3a5bbb5b7ead3f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nreplication_rule_property = s3.CfnBucket.ReplicationRuleProperty(\n    destination=s3.CfnBucket.ReplicationDestinationProperty(\n        bucket=\"bucket\",\n\n        # the properties below are optional\n        access_control_translation=s3.CfnBucket.AccessControlTranslationProperty(\n            owner=\"owner\"\n        ),\n        account=\"account\",\n        encryption_configuration=s3.CfnBucket.EncryptionConfigurationProperty(\n            replica_kms_key_id=\"replicaKmsKeyId\"\n        ),\n        metrics=s3.CfnBucket.MetricsProperty(\n            status=\"status\",\n\n            # the properties below are optional\n            event_threshold=s3.CfnBucket.ReplicationTimeValueProperty(\n                minutes=123\n            )\n        ),\n        replication_time=s3.CfnBucket.ReplicationTimeProperty(\n            status=\"status\",\n            time=s3.CfnBucket.ReplicationTimeValueProperty(\n                minutes=123\n            )\n        ),\n        storage_class=\"storageClass\"\n    ),\n    status=\"status\",\n\n    # the properties below are optional\n    delete_marker_replication=s3.CfnBucket.DeleteMarkerReplicationProperty(\n        status=\"status\"\n    ),\n    filter=s3.CfnBucket.ReplicationRuleFilterProperty(\n        and=s3.CfnBucket.ReplicationRuleAndOperatorProperty(\n            prefix=\"prefix\",\n            tag_filters=[s3.CfnBucket.TagFilterProperty(\n                key=\"key\",\n                value=\"value\"\n            )]\n        ),\n        prefix=\"prefix\",\n        tag_filter=s3.CfnBucket.TagFilterProperty(\n            key=\"key\",\n            value=\"value\"\n        )\n    ),\n    id=\"id\",\n    prefix=\"prefix\",\n    priority=123,\n    source_selection_criteria=s3.CfnBucket.SourceSelectionCriteriaProperty(\n        replica_modifications=s3.CfnBucket.ReplicaModificationsProperty(\n            status=\"status\"\n        ),\n        sse_kms_encrypted_objects=s3.CfnBucket.SseKmsEncryptedObjectsProperty(\n            status=\"status\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplicationRuleProperty replicationRuleProperty = new ReplicationRuleProperty {\n    Destination = new ReplicationDestinationProperty {\n        Bucket = \"bucket\",\n\n        // the properties below are optional\n        AccessControlTranslation = new AccessControlTranslationProperty {\n            Owner = \"owner\"\n        },\n        Account = \"account\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            ReplicaKmsKeyId = \"replicaKmsKeyId\"\n        },\n        Metrics = new MetricsProperty {\n            Status = \"status\",\n\n            // the properties below are optional\n            EventThreshold = new ReplicationTimeValueProperty {\n                Minutes = 123\n            }\n        },\n        ReplicationTime = new ReplicationTimeProperty {\n            Status = \"status\",\n            Time = new ReplicationTimeValueProperty {\n                Minutes = 123\n            }\n        },\n        StorageClass = \"storageClass\"\n    },\n    Status = \"status\",\n\n    // the properties below are optional\n    DeleteMarkerReplication = new DeleteMarkerReplicationProperty {\n        Status = \"status\"\n    },\n    Filter = new ReplicationRuleFilterProperty {\n        And = new ReplicationRuleAndOperatorProperty {\n            Prefix = \"prefix\",\n            TagFilters = new [] { new TagFilterProperty {\n                Key = \"key\",\n                Value = \"value\"\n            } }\n        },\n        Prefix = \"prefix\",\n        TagFilter = new TagFilterProperty {\n            Key = \"key\",\n            Value = \"value\"\n        }\n    },\n    Id = \"id\",\n    Prefix = \"prefix\",\n    Priority = 123,\n    SourceSelectionCriteria = new SourceSelectionCriteriaProperty {\n        ReplicaModifications = new ReplicaModificationsProperty {\n            Status = \"status\"\n        },\n        SseKmsEncryptedObjects = new SseKmsEncryptedObjectsProperty {\n            Status = \"status\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplicationRuleProperty replicationRuleProperty = ReplicationRuleProperty.builder()\n        .destination(ReplicationDestinationProperty.builder()\n                .bucket(\"bucket\")\n\n                // the properties below are optional\n                .accessControlTranslation(AccessControlTranslationProperty.builder()\n                        .owner(\"owner\")\n                        .build())\n                .account(\"account\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .replicaKmsKeyId(\"replicaKmsKeyId\")\n                        .build())\n                .metrics(MetricsProperty.builder()\n                        .status(\"status\")\n\n                        // the properties below are optional\n                        .eventThreshold(ReplicationTimeValueProperty.builder()\n                                .minutes(123)\n                                .build())\n                        .build())\n                .replicationTime(ReplicationTimeProperty.builder()\n                        .status(\"status\")\n                        .time(ReplicationTimeValueProperty.builder()\n                                .minutes(123)\n                                .build())\n                        .build())\n                .storageClass(\"storageClass\")\n                .build())\n        .status(\"status\")\n\n        // the properties below are optional\n        .deleteMarkerReplication(DeleteMarkerReplicationProperty.builder()\n                .status(\"status\")\n                .build())\n        .filter(ReplicationRuleFilterProperty.builder()\n                .and(ReplicationRuleAndOperatorProperty.builder()\n                        .prefix(\"prefix\")\n                        .tagFilters(List.of(TagFilterProperty.builder()\n                                .key(\"key\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .prefix(\"prefix\")\n                .tagFilter(TagFilterProperty.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build())\n                .build())\n        .id(\"id\")\n        .prefix(\"prefix\")\n        .priority(123)\n        .sourceSelectionCriteria(SourceSelectionCriteriaProperty.builder()\n                .replicaModifications(ReplicaModificationsProperty.builder()\n                        .status(\"status\")\n                        .build())\n                .sseKmsEncryptedObjects(SseKmsEncryptedObjectsProperty.builder()\n                        .status(\"status\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nreplicationRuleProperty := &replicationRuleProperty{\n\tdestination: &replicationDestinationProperty{\n\t\tbucket: jsii.String(\"bucket\"),\n\n\t\t// the properties below are optional\n\t\taccessControlTranslation: &accessControlTranslationProperty{\n\t\t\towner: jsii.String(\"owner\"),\n\t\t},\n\t\taccount: jsii.String(\"account\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\treplicaKmsKeyId: jsii.String(\"replicaKmsKeyId\"),\n\t\t},\n\t\tmetrics: &metricsProperty{\n\t\t\tstatus: jsii.String(\"status\"),\n\n\t\t\t// the properties below are optional\n\t\t\teventThreshold: &replicationTimeValueProperty{\n\t\t\t\tminutes: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\treplicationTime: &replicationTimeProperty{\n\t\t\tstatus: jsii.String(\"status\"),\n\t\t\ttime: &replicationTimeValueProperty{\n\t\t\t\tminutes: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tstorageClass: jsii.String(\"storageClass\"),\n\t},\n\tstatus: jsii.String(\"status\"),\n\n\t// the properties below are optional\n\tdeleteMarkerReplication: &deleteMarkerReplicationProperty{\n\t\tstatus: jsii.String(\"status\"),\n\t},\n\tfilter: &replicationRuleFilterProperty{\n\t\tand: &replicationRuleAndOperatorProperty{\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\ttagFilters: []interface{}{\n\t\t\t\t&tagFilterProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tprefix: jsii.String(\"prefix\"),\n\t\ttagFilter: &tagFilterProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tid: jsii.String(\"id\"),\n\tprefix: jsii.String(\"prefix\"),\n\tpriority: jsii.Number(123),\n\tsourceSelectionCriteria: &sourceSelectionCriteriaProperty{\n\t\treplicaModifications: &replicaModificationsProperty{\n\t\t\tstatus: jsii.String(\"status\"),\n\t\t},\n\t\tsseKmsEncryptedObjects: &sseKmsEncryptedObjectsProperty{\n\t\t\tstatus: jsii.String(\"status\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst replicationRuleProperty: s3.CfnBucket.ReplicationRuleProperty = {\n  destination: {\n    bucket: 'bucket',\n\n    // the properties below are optional\n    accessControlTranslation: {\n      owner: 'owner',\n    },\n    account: 'account',\n    encryptionConfiguration: {\n      replicaKmsKeyId: 'replicaKmsKeyId',\n    },\n    metrics: {\n      status: 'status',\n\n      // the properties below are optional\n      eventThreshold: {\n        minutes: 123,\n      },\n    },\n    replicationTime: {\n      status: 'status',\n      time: {\n        minutes: 123,\n      },\n    },\n    storageClass: 'storageClass',\n  },\n  status: 'status',\n\n  // the properties below are optional\n  deleteMarkerReplication: {\n    status: 'status',\n  },\n  filter: {\n    and: {\n      prefix: 'prefix',\n      tagFilters: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    prefix: 'prefix',\n    tagFilter: {\n      key: 'key',\n      value: 'value',\n    },\n  },\n  id: 'id',\n  prefix: 'prefix',\n  priority: 123,\n  sourceSelectionCriteria: {\n    replicaModifications: {\n      status: 'status',\n    },\n    sseKmsEncryptedObjects: {\n      status: 'status',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationRuleProperty: s3.CfnBucket.ReplicationRuleProperty = {\n  destination: {\n    bucket: 'bucket',\n\n    // the properties below are optional\n    accessControlTranslation: {\n      owner: 'owner',\n    },\n    account: 'account',\n    encryptionConfiguration: {\n      replicaKmsKeyId: 'replicaKmsKeyId',\n    },\n    metrics: {\n      status: 'status',\n\n      // the properties below are optional\n      eventThreshold: {\n        minutes: 123,\n      },\n    },\n    replicationTime: {\n      status: 'status',\n      time: {\n        minutes: 123,\n      },\n    },\n    storageClass: 'storageClass',\n  },\n  status: 'status',\n\n  // the properties below are optional\n  deleteMarkerReplication: {\n    status: 'status',\n  },\n  filter: {\n    and: {\n      prefix: 'prefix',\n      tagFilters: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    prefix: 'prefix',\n    tagFilter: {\n      key: 'key',\n      value: 'value',\n    },\n  },\n  id: 'id',\n  prefix: 'prefix',\n  priority: 123,\n  sourceSelectionCriteria: {\n    replicaModifications: {\n      status: 'status',\n    },\n    sseKmsEncryptedObjects: {\n      status: 'status',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 20,
        "75": 42,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 16,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 37,
        "290": 1
      },
      "fqnsFingerprint": "b98a592d5bacacbded12f849a7cc96b0e3a7208a6ce94c5e55211b9dfbb78252"
    },
    "bd4bd3276608583e842413f15b5d678861d70710910b89c3a871816381790596": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nreplication_time_property = s3.CfnBucket.ReplicationTimeProperty(\n    status=\"status\",\n    time=s3.CfnBucket.ReplicationTimeValueProperty(\n        minutes=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplicationTimeProperty replicationTimeProperty = new ReplicationTimeProperty {\n    Status = \"status\",\n    Time = new ReplicationTimeValueProperty {\n        Minutes = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplicationTimeProperty replicationTimeProperty = ReplicationTimeProperty.builder()\n        .status(\"status\")\n        .time(ReplicationTimeValueProperty.builder()\n                .minutes(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nreplicationTimeProperty := &replicationTimeProperty{\n\tstatus: jsii.String(\"status\"),\n\ttime: &replicationTimeValueProperty{\n\t\tminutes: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst replicationTimeProperty: s3.CfnBucket.ReplicationTimeProperty = {\n  status: 'status',\n  time: {\n    minutes: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationTimeProperty: s3.CfnBucket.ReplicationTimeProperty = {\n  status: 'status',\n  time: {\n    minutes: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "dee165bafb722f87ef5fb5b5e8f9ebb512a990ba2cb358972afb442eac09b9f4"
    },
    "22458cb9c051616a3d3187f2fc83351548f0af47277e6e5509d37542f749800e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nreplication_time_value_property = s3.CfnBucket.ReplicationTimeValueProperty(\n    minutes=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplicationTimeValueProperty replicationTimeValueProperty = new ReplicationTimeValueProperty {\n    Minutes = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplicationTimeValueProperty replicationTimeValueProperty = ReplicationTimeValueProperty.builder()\n        .minutes(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nreplicationTimeValueProperty := &replicationTimeValueProperty{\n\tminutes: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst replicationTimeValueProperty: s3.CfnBucket.ReplicationTimeValueProperty = {\n  minutes: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeValueProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeValueProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replicationTimeValueProperty: s3.CfnBucket.ReplicationTimeValueProperty = {\n  minutes: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "e68e5711450d563230fdc27b5eb817ecbdaa8ca52d1f7087e292be95672c3620"
    },
    "b410015e0281a139b31f41603c43dfd289ecad9ef26bbd296b05ec72676402a2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nrouting_rule_condition_property = s3.CfnBucket.RoutingRuleConditionProperty(\n    http_error_code_returned_equals=\"httpErrorCodeReturnedEquals\",\n    key_prefix_equals=\"keyPrefixEquals\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nRoutingRuleConditionProperty routingRuleConditionProperty = new RoutingRuleConditionProperty {\n    HttpErrorCodeReturnedEquals = \"httpErrorCodeReturnedEquals\",\n    KeyPrefixEquals = \"keyPrefixEquals\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nRoutingRuleConditionProperty routingRuleConditionProperty = RoutingRuleConditionProperty.builder()\n        .httpErrorCodeReturnedEquals(\"httpErrorCodeReturnedEquals\")\n        .keyPrefixEquals(\"keyPrefixEquals\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nroutingRuleConditionProperty := &routingRuleConditionProperty{\n\thttpErrorCodeReturnedEquals: jsii.String(\"httpErrorCodeReturnedEquals\"),\n\tkeyPrefixEquals: jsii.String(\"keyPrefixEquals\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst routingRuleConditionProperty: s3.CfnBucket.RoutingRuleConditionProperty = {\n  httpErrorCodeReturnedEquals: 'httpErrorCodeReturnedEquals',\n  keyPrefixEquals: 'keyPrefixEquals',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst routingRuleConditionProperty: s3.CfnBucket.RoutingRuleConditionProperty = {\n  httpErrorCodeReturnedEquals: 'httpErrorCodeReturnedEquals',\n  keyPrefixEquals: 'keyPrefixEquals',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "5eb7b702b468bd97b45a209b4077d8dae351c8f45dbf9cd8326f6b81a5c2148a"
    },
    "4eb323a00c0762040f27abd8fad01c20bd029e486a6b72bd45bb09fc9b3cceeb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nrouting_rule_property = s3.CfnBucket.RoutingRuleProperty(\n    redirect_rule=s3.CfnBucket.RedirectRuleProperty(\n        host_name=\"hostName\",\n        http_redirect_code=\"httpRedirectCode\",\n        protocol=\"protocol\",\n        replace_key_prefix_with=\"replaceKeyPrefixWith\",\n        replace_key_with=\"replaceKeyWith\"\n    ),\n\n    # the properties below are optional\n    routing_rule_condition=s3.CfnBucket.RoutingRuleConditionProperty(\n        http_error_code_returned_equals=\"httpErrorCodeReturnedEquals\",\n        key_prefix_equals=\"keyPrefixEquals\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nRoutingRuleProperty routingRuleProperty = new RoutingRuleProperty {\n    RedirectRule = new RedirectRuleProperty {\n        HostName = \"hostName\",\n        HttpRedirectCode = \"httpRedirectCode\",\n        Protocol = \"protocol\",\n        ReplaceKeyPrefixWith = \"replaceKeyPrefixWith\",\n        ReplaceKeyWith = \"replaceKeyWith\"\n    },\n\n    // the properties below are optional\n    RoutingRuleCondition = new RoutingRuleConditionProperty {\n        HttpErrorCodeReturnedEquals = \"httpErrorCodeReturnedEquals\",\n        KeyPrefixEquals = \"keyPrefixEquals\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nRoutingRuleProperty routingRuleProperty = RoutingRuleProperty.builder()\n        .redirectRule(RedirectRuleProperty.builder()\n                .hostName(\"hostName\")\n                .httpRedirectCode(\"httpRedirectCode\")\n                .protocol(\"protocol\")\n                .replaceKeyPrefixWith(\"replaceKeyPrefixWith\")\n                .replaceKeyWith(\"replaceKeyWith\")\n                .build())\n\n        // the properties below are optional\n        .routingRuleCondition(RoutingRuleConditionProperty.builder()\n                .httpErrorCodeReturnedEquals(\"httpErrorCodeReturnedEquals\")\n                .keyPrefixEquals(\"keyPrefixEquals\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nroutingRuleProperty := &routingRuleProperty{\n\tredirectRule: &redirectRuleProperty{\n\t\thostName: jsii.String(\"hostName\"),\n\t\thttpRedirectCode: jsii.String(\"httpRedirectCode\"),\n\t\tprotocol: jsii.String(\"protocol\"),\n\t\treplaceKeyPrefixWith: jsii.String(\"replaceKeyPrefixWith\"),\n\t\treplaceKeyWith: jsii.String(\"replaceKeyWith\"),\n\t},\n\n\t// the properties below are optional\n\troutingRuleCondition: &routingRuleConditionProperty{\n\t\thttpErrorCodeReturnedEquals: jsii.String(\"httpErrorCodeReturnedEquals\"),\n\t\tkeyPrefixEquals: jsii.String(\"keyPrefixEquals\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst routingRuleProperty: s3.CfnBucket.RoutingRuleProperty = {\n  redirectRule: {\n    hostName: 'hostName',\n    httpRedirectCode: 'httpRedirectCode',\n    protocol: 'protocol',\n    replaceKeyPrefixWith: 'replaceKeyPrefixWith',\n    replaceKeyWith: 'replaceKeyWith',\n  },\n\n  // the properties below are optional\n  routingRuleCondition: {\n    httpErrorCodeReturnedEquals: 'httpErrorCodeReturnedEquals',\n    keyPrefixEquals: 'keyPrefixEquals',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst routingRuleProperty: s3.CfnBucket.RoutingRuleProperty = {\n  redirectRule: {\n    hostName: 'hostName',\n    httpRedirectCode: 'httpRedirectCode',\n    protocol: 'protocol',\n    replaceKeyPrefixWith: 'replaceKeyPrefixWith',\n    replaceKeyWith: 'replaceKeyWith',\n  },\n\n  // the properties below are optional\n  routingRuleCondition: {\n    httpErrorCodeReturnedEquals: 'httpErrorCodeReturnedEquals',\n    keyPrefixEquals: 'keyPrefixEquals',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "805686ea0d285be19e0a80dea8ab2a22baa76ce7ee0edaa6b81722c1c4bd5733"
    },
    "e676ba5be3f7d374926dba51c44a6a11ab3941f00a5726cec54c4e5215870952": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nrule_property = s3.CfnBucket.RuleProperty(\n    status=\"status\",\n\n    # the properties below are optional\n    abort_incomplete_multipart_upload=s3.CfnBucket.AbortIncompleteMultipartUploadProperty(\n        days_after_initiation=123\n    ),\n    expiration_date=Date(),\n    expiration_in_days=123,\n    expired_object_delete_marker=False,\n    id=\"id\",\n    noncurrent_version_expiration=s3.CfnBucket.NoncurrentVersionExpirationProperty(\n        noncurrent_days=123,\n\n        # the properties below are optional\n        newer_noncurrent_versions=123\n    ),\n    noncurrent_version_expiration_in_days=123,\n    noncurrent_version_transition=s3.CfnBucket.NoncurrentVersionTransitionProperty(\n        storage_class=\"storageClass\",\n        transition_in_days=123,\n\n        # the properties below are optional\n        newer_noncurrent_versions=123\n    ),\n    noncurrent_version_transitions=[s3.CfnBucket.NoncurrentVersionTransitionProperty(\n        storage_class=\"storageClass\",\n        transition_in_days=123,\n\n        # the properties below are optional\n        newer_noncurrent_versions=123\n    )],\n    object_size_greater_than=123,\n    object_size_less_than=123,\n    prefix=\"prefix\",\n    tag_filters=[s3.CfnBucket.TagFilterProperty(\n        key=\"key\",\n        value=\"value\"\n    )],\n    transition=s3.CfnBucket.TransitionProperty(\n        storage_class=\"storageClass\",\n\n        # the properties below are optional\n        transition_date=Date(),\n        transition_in_days=123\n    ),\n    transitions=[s3.CfnBucket.TransitionProperty(\n        storage_class=\"storageClass\",\n\n        # the properties below are optional\n        transition_date=Date(),\n        transition_in_days=123\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nRuleProperty ruleProperty = new RuleProperty {\n    Status = \"status\",\n\n    // the properties below are optional\n    AbortIncompleteMultipartUpload = new AbortIncompleteMultipartUploadProperty {\n        DaysAfterInitiation = 123\n    },\n    ExpirationDate = new Date(),\n    ExpirationInDays = 123,\n    ExpiredObjectDeleteMarker = false,\n    Id = \"id\",\n    NoncurrentVersionExpiration = new NoncurrentVersionExpirationProperty {\n        NoncurrentDays = 123,\n\n        // the properties below are optional\n        NewerNoncurrentVersions = 123\n    },\n    NoncurrentVersionExpirationInDays = 123,\n    NoncurrentVersionTransition = new NoncurrentVersionTransitionProperty {\n        StorageClass = \"storageClass\",\n        TransitionInDays = 123,\n\n        // the properties below are optional\n        NewerNoncurrentVersions = 123\n    },\n    NoncurrentVersionTransitions = new [] { new NoncurrentVersionTransitionProperty {\n        StorageClass = \"storageClass\",\n        TransitionInDays = 123,\n\n        // the properties below are optional\n        NewerNoncurrentVersions = 123\n    } },\n    ObjectSizeGreaterThan = 123,\n    ObjectSizeLessThan = 123,\n    Prefix = \"prefix\",\n    TagFilters = new [] { new TagFilterProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Transition = new TransitionProperty {\n        StorageClass = \"storageClass\",\n\n        // the properties below are optional\n        TransitionDate = new Date(),\n        TransitionInDays = 123\n    },\n    Transitions = new [] { new TransitionProperty {\n        StorageClass = \"storageClass\",\n\n        // the properties below are optional\n        TransitionDate = new Date(),\n        TransitionInDays = 123\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nRuleProperty ruleProperty = RuleProperty.builder()\n        .status(\"status\")\n\n        // the properties below are optional\n        .abortIncompleteMultipartUpload(AbortIncompleteMultipartUploadProperty.builder()\n                .daysAfterInitiation(123)\n                .build())\n        .expirationDate(new Date())\n        .expirationInDays(123)\n        .expiredObjectDeleteMarker(false)\n        .id(\"id\")\n        .noncurrentVersionExpiration(NoncurrentVersionExpirationProperty.builder()\n                .noncurrentDays(123)\n\n                // the properties below are optional\n                .newerNoncurrentVersions(123)\n                .build())\n        .noncurrentVersionExpirationInDays(123)\n        .noncurrentVersionTransition(NoncurrentVersionTransitionProperty.builder()\n                .storageClass(\"storageClass\")\n                .transitionInDays(123)\n\n                // the properties below are optional\n                .newerNoncurrentVersions(123)\n                .build())\n        .noncurrentVersionTransitions(List.of(NoncurrentVersionTransitionProperty.builder()\n                .storageClass(\"storageClass\")\n                .transitionInDays(123)\n\n                // the properties below are optional\n                .newerNoncurrentVersions(123)\n                .build()))\n        .objectSizeGreaterThan(123)\n        .objectSizeLessThan(123)\n        .prefix(\"prefix\")\n        .tagFilters(List.of(TagFilterProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .transition(TransitionProperty.builder()\n                .storageClass(\"storageClass\")\n\n                // the properties below are optional\n                .transitionDate(new Date())\n                .transitionInDays(123)\n                .build())\n        .transitions(List.of(TransitionProperty.builder()\n                .storageClass(\"storageClass\")\n\n                // the properties below are optional\n                .transitionDate(new Date())\n                .transitionInDays(123)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nruleProperty := &ruleProperty{\n\tstatus: jsii.String(\"status\"),\n\n\t// the properties below are optional\n\tabortIncompleteMultipartUpload: &abortIncompleteMultipartUploadProperty{\n\t\tdaysAfterInitiation: jsii.Number(123),\n\t},\n\texpirationDate: NewDate(),\n\texpirationInDays: jsii.Number(123),\n\texpiredObjectDeleteMarker: jsii.Boolean(false),\n\tid: jsii.String(\"id\"),\n\tnoncurrentVersionExpiration: &noncurrentVersionExpirationProperty{\n\t\tnoncurrentDays: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tnewerNoncurrentVersions: jsii.Number(123),\n\t},\n\tnoncurrentVersionExpirationInDays: jsii.Number(123),\n\tnoncurrentVersionTransition: &noncurrentVersionTransitionProperty{\n\t\tstorageClass: jsii.String(\"storageClass\"),\n\t\ttransitionInDays: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tnewerNoncurrentVersions: jsii.Number(123),\n\t},\n\tnoncurrentVersionTransitions: []interface{}{\n\t\t&noncurrentVersionTransitionProperty{\n\t\t\tstorageClass: jsii.String(\"storageClass\"),\n\t\t\ttransitionInDays: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tnewerNoncurrentVersions: jsii.Number(123),\n\t\t},\n\t},\n\tobjectSizeGreaterThan: jsii.Number(123),\n\tobjectSizeLessThan: jsii.Number(123),\n\tprefix: jsii.String(\"prefix\"),\n\ttagFilters: []interface{}{\n\t\t&tagFilterProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttransition: &transitionProperty{\n\t\tstorageClass: jsii.String(\"storageClass\"),\n\n\t\t// the properties below are optional\n\t\ttransitionDate: NewDate(),\n\t\ttransitionInDays: jsii.Number(123),\n\t},\n\ttransitions: []interface{}{\n\t\t&transitionProperty{\n\t\t\tstorageClass: jsii.String(\"storageClass\"),\n\n\t\t\t// the properties below are optional\n\t\t\ttransitionDate: NewDate(),\n\t\t\ttransitionInDays: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst ruleProperty: s3.CfnBucket.RuleProperty = {\n  status: 'status',\n\n  // the properties below are optional\n  abortIncompleteMultipartUpload: {\n    daysAfterInitiation: 123,\n  },\n  expirationDate: new Date(),\n  expirationInDays: 123,\n  expiredObjectDeleteMarker: false,\n  id: 'id',\n  noncurrentVersionExpiration: {\n    noncurrentDays: 123,\n\n    // the properties below are optional\n    newerNoncurrentVersions: 123,\n  },\n  noncurrentVersionExpirationInDays: 123,\n  noncurrentVersionTransition: {\n    storageClass: 'storageClass',\n    transitionInDays: 123,\n\n    // the properties below are optional\n    newerNoncurrentVersions: 123,\n  },\n  noncurrentVersionTransitions: [{\n    storageClass: 'storageClass',\n    transitionInDays: 123,\n\n    // the properties below are optional\n    newerNoncurrentVersions: 123,\n  }],\n  objectSizeGreaterThan: 123,\n  objectSizeLessThan: 123,\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transition: {\n    storageClass: 'storageClass',\n\n    // the properties below are optional\n    transitionDate: new Date(),\n    transitionInDays: 123,\n  },\n  transitions: [{\n    storageClass: 'storageClass',\n\n    // the properties below are optional\n    transitionDate: new Date(),\n    transitionInDays: 123,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.RuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.RuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleProperty: s3.CfnBucket.RuleProperty = {\n  status: 'status',\n\n  // the properties below are optional\n  abortIncompleteMultipartUpload: {\n    daysAfterInitiation: 123,\n  },\n  expirationDate: new Date(),\n  expirationInDays: 123,\n  expiredObjectDeleteMarker: false,\n  id: 'id',\n  noncurrentVersionExpiration: {\n    noncurrentDays: 123,\n\n    // the properties below are optional\n    newerNoncurrentVersions: 123,\n  },\n  noncurrentVersionExpirationInDays: 123,\n  noncurrentVersionTransition: {\n    storageClass: 'storageClass',\n    transitionInDays: 123,\n\n    // the properties below are optional\n    newerNoncurrentVersions: 123,\n  },\n  noncurrentVersionTransitions: [{\n    storageClass: 'storageClass',\n    transitionInDays: 123,\n\n    // the properties below are optional\n    newerNoncurrentVersions: 123,\n  }],\n  objectSizeGreaterThan: 123,\n  objectSizeLessThan: 123,\n  prefix: 'prefix',\n  tagFilters: [{\n    key: 'key',\n    value: 'value',\n  }],\n  transition: {\n    storageClass: 'storageClass',\n\n    // the properties below are optional\n    transitionDate: new Date(),\n    transitionInDays: 123,\n  },\n  transitions: [{\n    storageClass: 'storageClass',\n\n    // the properties below are optional\n    transitionDate: new Date(),\n    transitionInDays: 123,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 13,
        "10": 10,
        "75": 41,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 3,
        "193": 8,
        "197": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 33,
        "290": 1
      },
      "fqnsFingerprint": "f67bdf9e647dd25592ceb6b8a060a19d3d3e8de77cbbce6e69708ba29792d547"
    },
    "d50404e968324a02a376823a9dfe89c1854c6dc044c50faadbc073862a0e0cfe": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ns3_key_filter_property = s3.CfnBucket.S3KeyFilterProperty(\n    rules=[s3.CfnBucket.FilterRuleProperty(\n        name=\"name\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nS3KeyFilterProperty s3KeyFilterProperty = new S3KeyFilterProperty {\n    Rules = new [] { new FilterRuleProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nS3KeyFilterProperty s3KeyFilterProperty = S3KeyFilterProperty.builder()\n        .rules(List.of(FilterRuleProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ns3KeyFilterProperty := &s3KeyFilterProperty{\n\trules: []interface{}{\n\t\t&filterRuleProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst s3KeyFilterProperty: s3.CfnBucket.S3KeyFilterProperty = {\n  rules: [{\n    name: 'name',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3KeyFilterProperty: s3.CfnBucket.S3KeyFilterProperty = {\n  rules: [{\n    name: 'name',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "dbebb12cfade0d62dd79eb7d112dd2018fd7049ffb208100dc46c2797d100ff8"
    },
    "a21f951fe613c02406604cd27c5eafb427bbb46aeb40d148f7ca283545b0991b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nserver_side_encryption_by_default_property = s3.CfnBucket.ServerSideEncryptionByDefaultProperty(\n    sse_algorithm=\"sseAlgorithm\",\n\n    # the properties below are optional\n    kms_master_key_id=\"kmsMasterKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nServerSideEncryptionByDefaultProperty serverSideEncryptionByDefaultProperty = new ServerSideEncryptionByDefaultProperty {\n    SseAlgorithm = \"sseAlgorithm\",\n\n    // the properties below are optional\n    KmsMasterKeyId = \"kmsMasterKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nServerSideEncryptionByDefaultProperty serverSideEncryptionByDefaultProperty = ServerSideEncryptionByDefaultProperty.builder()\n        .sseAlgorithm(\"sseAlgorithm\")\n\n        // the properties below are optional\n        .kmsMasterKeyId(\"kmsMasterKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nserverSideEncryptionByDefaultProperty := &serverSideEncryptionByDefaultProperty{\n\tsseAlgorithm: jsii.String(\"sseAlgorithm\"),\n\n\t// the properties below are optional\n\tkmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst serverSideEncryptionByDefaultProperty: s3.CfnBucket.ServerSideEncryptionByDefaultProperty = {\n  sseAlgorithm: 'sseAlgorithm',\n\n  // the properties below are optional\n  kmsMasterKeyId: 'kmsMasterKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst serverSideEncryptionByDefaultProperty: s3.CfnBucket.ServerSideEncryptionByDefaultProperty = {\n  sseAlgorithm: 'sseAlgorithm',\n\n  // the properties below are optional\n  kmsMasterKeyId: 'kmsMasterKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "3ce574a5012b4fed1613801bbec1fdb3c53fe0d83dce2612c8cbbcea332405d2"
    },
    "01eb2e9e3fa5b654ea3133e04e65491104c87673b4f20b15166604c8067d0c22": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nserver_side_encryption_rule_property = s3.CfnBucket.ServerSideEncryptionRuleProperty(\n    bucket_key_enabled=False,\n    server_side_encryption_by_default=s3.CfnBucket.ServerSideEncryptionByDefaultProperty(\n        sse_algorithm=\"sseAlgorithm\",\n\n        # the properties below are optional\n        kms_master_key_id=\"kmsMasterKeyId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nServerSideEncryptionRuleProperty serverSideEncryptionRuleProperty = new ServerSideEncryptionRuleProperty {\n    BucketKeyEnabled = false,\n    ServerSideEncryptionByDefault = new ServerSideEncryptionByDefaultProperty {\n        SseAlgorithm = \"sseAlgorithm\",\n\n        // the properties below are optional\n        KmsMasterKeyId = \"kmsMasterKeyId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nServerSideEncryptionRuleProperty serverSideEncryptionRuleProperty = ServerSideEncryptionRuleProperty.builder()\n        .bucketKeyEnabled(false)\n        .serverSideEncryptionByDefault(ServerSideEncryptionByDefaultProperty.builder()\n                .sseAlgorithm(\"sseAlgorithm\")\n\n                // the properties below are optional\n                .kmsMasterKeyId(\"kmsMasterKeyId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nserverSideEncryptionRuleProperty := &serverSideEncryptionRuleProperty{\n\tbucketKeyEnabled: jsii.Boolean(false),\n\tserverSideEncryptionByDefault: &serverSideEncryptionByDefaultProperty{\n\t\tsseAlgorithm: jsii.String(\"sseAlgorithm\"),\n\n\t\t// the properties below are optional\n\t\tkmsMasterKeyId: jsii.String(\"kmsMasterKeyId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst serverSideEncryptionRuleProperty: s3.CfnBucket.ServerSideEncryptionRuleProperty = {\n  bucketKeyEnabled: false,\n  serverSideEncryptionByDefault: {\n    sseAlgorithm: 'sseAlgorithm',\n\n    // the properties below are optional\n    kmsMasterKeyId: 'kmsMasterKeyId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst serverSideEncryptionRuleProperty: s3.CfnBucket.ServerSideEncryptionRuleProperty = {\n  bucketKeyEnabled: false,\n  serverSideEncryptionByDefault: {\n    sseAlgorithm: 'sseAlgorithm',\n\n    // the properties below are optional\n    kmsMasterKeyId: 'kmsMasterKeyId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "9d598a32b3003f1ee2668471c8f0de59ae66d88da43852740d0420bbe4a05211"
    },
    "d2ae90e39361b2d08c6669f7be33dc572edbe87edb85b9bc280f55861ea4e104": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nsource_selection_criteria_property = s3.CfnBucket.SourceSelectionCriteriaProperty(\n    replica_modifications=s3.CfnBucket.ReplicaModificationsProperty(\n        status=\"status\"\n    ),\n    sse_kms_encrypted_objects=s3.CfnBucket.SseKmsEncryptedObjectsProperty(\n        status=\"status\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nSourceSelectionCriteriaProperty sourceSelectionCriteriaProperty = new SourceSelectionCriteriaProperty {\n    ReplicaModifications = new ReplicaModificationsProperty {\n        Status = \"status\"\n    },\n    SseKmsEncryptedObjects = new SseKmsEncryptedObjectsProperty {\n        Status = \"status\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nSourceSelectionCriteriaProperty sourceSelectionCriteriaProperty = SourceSelectionCriteriaProperty.builder()\n        .replicaModifications(ReplicaModificationsProperty.builder()\n                .status(\"status\")\n                .build())\n        .sseKmsEncryptedObjects(SseKmsEncryptedObjectsProperty.builder()\n                .status(\"status\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nsourceSelectionCriteriaProperty := &sourceSelectionCriteriaProperty{\n\treplicaModifications: &replicaModificationsProperty{\n\t\tstatus: jsii.String(\"status\"),\n\t},\n\tsseKmsEncryptedObjects: &sseKmsEncryptedObjectsProperty{\n\t\tstatus: jsii.String(\"status\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst sourceSelectionCriteriaProperty: s3.CfnBucket.SourceSelectionCriteriaProperty = {\n  replicaModifications: {\n    status: 'status',\n  },\n  sseKmsEncryptedObjects: {\n    status: 'status',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sourceSelectionCriteriaProperty: s3.CfnBucket.SourceSelectionCriteriaProperty = {\n  replicaModifications: {\n    status: 'status',\n  },\n  sseKmsEncryptedObjects: {\n    status: 'status',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "a13aaaf13e15808d06074868bb46e89f2964a843308f41294b472892577807e3"
    },
    "86ec0fb53ab995f5861dc7a015b8d581eb48736917dab92e4ef9839c74adb015": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nsse_kms_encrypted_objects_property = s3.CfnBucket.SseKmsEncryptedObjectsProperty(\n    status=\"status\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nSseKmsEncryptedObjectsProperty sseKmsEncryptedObjectsProperty = new SseKmsEncryptedObjectsProperty {\n    Status = \"status\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nSseKmsEncryptedObjectsProperty sseKmsEncryptedObjectsProperty = SseKmsEncryptedObjectsProperty.builder()\n        .status(\"status\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nsseKmsEncryptedObjectsProperty := &sseKmsEncryptedObjectsProperty{\n\tstatus: jsii.String(\"status\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst sseKmsEncryptedObjectsProperty: s3.CfnBucket.SseKmsEncryptedObjectsProperty = {\n  status: 'status',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sseKmsEncryptedObjectsProperty: s3.CfnBucket.SseKmsEncryptedObjectsProperty = {\n  status: 'status',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "b3ba54fceea8cb8a60d832d72624d867a3d38b7b10967596f4d128c84c78db82"
    },
    "89a98ae75e04f1ea31df045906194c488483c5446760aca425c425fa54b50ab6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nstorage_class_analysis_property = s3.CfnBucket.StorageClassAnalysisProperty(\n    data_export=s3.CfnBucket.DataExportProperty(\n        destination=s3.CfnBucket.DestinationProperty(\n            bucket_arn=\"bucketArn\",\n            format=\"format\",\n\n            # the properties below are optional\n            bucket_account_id=\"bucketAccountId\",\n            prefix=\"prefix\"\n        ),\n        output_schema_version=\"outputSchemaVersion\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nStorageClassAnalysisProperty storageClassAnalysisProperty = new StorageClassAnalysisProperty {\n    DataExport = new DataExportProperty {\n        Destination = new DestinationProperty {\n            BucketArn = \"bucketArn\",\n            Format = \"format\",\n\n            // the properties below are optional\n            BucketAccountId = \"bucketAccountId\",\n            Prefix = \"prefix\"\n        },\n        OutputSchemaVersion = \"outputSchemaVersion\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nStorageClassAnalysisProperty storageClassAnalysisProperty = StorageClassAnalysisProperty.builder()\n        .dataExport(DataExportProperty.builder()\n                .destination(DestinationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .format(\"format\")\n\n                        // the properties below are optional\n                        .bucketAccountId(\"bucketAccountId\")\n                        .prefix(\"prefix\")\n                        .build())\n                .outputSchemaVersion(\"outputSchemaVersion\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nstorageClassAnalysisProperty := &storageClassAnalysisProperty{\n\tdataExport: &dataExportProperty{\n\t\tdestination: &destinationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\tformat: jsii.String(\"format\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbucketAccountId: jsii.String(\"bucketAccountId\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t\toutputSchemaVersion: jsii.String(\"outputSchemaVersion\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst storageClassAnalysisProperty: s3.CfnBucket.StorageClassAnalysisProperty = {\n  dataExport: {\n    destination: {\n      bucketArn: 'bucketArn',\n      format: 'format',\n\n      // the properties below are optional\n      bucketAccountId: 'bucketAccountId',\n      prefix: 'prefix',\n    },\n    outputSchemaVersion: 'outputSchemaVersion',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst storageClassAnalysisProperty: s3.CfnBucket.StorageClassAnalysisProperty = {\n  dataExport: {\n    destination: {\n      bucketArn: 'bucketArn',\n      format: 'format',\n\n      // the properties below are optional\n      bucketAccountId: 'bucketAccountId',\n      prefix: 'prefix',\n    },\n    outputSchemaVersion: 'outputSchemaVersion',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "f2b2622ba5d9419c685d21e0236bc9bba588ec1bdd7bb728859a0151e2d717fa"
    },
    "d5a908c1e9c856515e7990eb85a65123f5a114da791f6f1a3dc600876407acfe": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ntag_filter_property = s3.CfnBucket.TagFilterProperty(\n    key=\"key\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nTagFilterProperty tagFilterProperty = new TagFilterProperty {\n    Key = \"key\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nTagFilterProperty tagFilterProperty = TagFilterProperty.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ntagFilterProperty := &tagFilterProperty{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst tagFilterProperty: s3.CfnBucket.TagFilterProperty = {\n  key: 'key',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tagFilterProperty: s3.CfnBucket.TagFilterProperty = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "09214e50fa345113cc4bc6591a941e7258d9b9b942933608218e1b4fd4b81023"
    },
    "ea55e80c29bbc40d2c34aabe53aa9fe4859477a137782a2d1b9ea0a5e4755cb2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ntiering_property = s3.CfnBucket.TieringProperty(\n    access_tier=\"accessTier\",\n    days=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nTieringProperty tieringProperty = new TieringProperty {\n    AccessTier = \"accessTier\",\n    Days = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nTieringProperty tieringProperty = TieringProperty.builder()\n        .accessTier(\"accessTier\")\n        .days(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ntieringProperty := &tieringProperty{\n\taccessTier: jsii.String(\"accessTier\"),\n\tdays: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst tieringProperty: s3.CfnBucket.TieringProperty = {\n  accessTier: 'accessTier',\n  days: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.TieringProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.TieringProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tieringProperty: s3.CfnBucket.TieringProperty = {\n  accessTier: 'accessTier',\n  days: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "fb98b48cc55ded31deae175f47d10abb4804b1b41290fbc9813a5cd1a63d2340"
    },
    "0e6213e13c02ec080928edf6f86c835b18a7f88f1f1817b8937d0850fc8f05ec": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ntopic_configuration_property = s3.CfnBucket.TopicConfigurationProperty(\n    event=\"event\",\n    topic=\"topic\",\n\n    # the properties below are optional\n    filter=s3.CfnBucket.NotificationFilterProperty(\n        s3_key=s3.CfnBucket.S3KeyFilterProperty(\n            rules=[s3.CfnBucket.FilterRuleProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nTopicConfigurationProperty topicConfigurationProperty = new TopicConfigurationProperty {\n    Event = \"event\",\n    Topic = \"topic\",\n\n    // the properties below are optional\n    Filter = new NotificationFilterProperty {\n        S3Key = new S3KeyFilterProperty {\n            Rules = new [] { new FilterRuleProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nTopicConfigurationProperty topicConfigurationProperty = TopicConfigurationProperty.builder()\n        .event(\"event\")\n        .topic(\"topic\")\n\n        // the properties below are optional\n        .filter(NotificationFilterProperty.builder()\n                .s3Key(S3KeyFilterProperty.builder()\n                        .rules(List.of(FilterRuleProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ntopicConfigurationProperty := &topicConfigurationProperty{\n\tevent: jsii.String(\"event\"),\n\ttopic: jsii.String(\"topic\"),\n\n\t// the properties below are optional\n\tfilter: &notificationFilterProperty{\n\t\ts3Key: &s3KeyFilterProperty{\n\t\t\trules: []interface{}{\n\t\t\t\t&filterRuleProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst topicConfigurationProperty: s3.CfnBucket.TopicConfigurationProperty = {\n  event: 'event',\n  topic: 'topic',\n\n  // the properties below are optional\n  filter: {\n    s3Key: {\n      rules: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst topicConfigurationProperty: s3.CfnBucket.TopicConfigurationProperty = {\n  event: 'event',\n  topic: 'topic',\n\n  // the properties below are optional\n  filter: {\n    s3Key: {\n      rules: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "e05a71c0e1c0a13a774c2e2b985fa5437eac1e78a52c730a222e4487abd490d4"
    },
    "da64b1b46d19a557e9c0d2f0592fee4788509dc73c4e44a2a952eeea9a63707e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ntransition_property = s3.CfnBucket.TransitionProperty(\n    storage_class=\"storageClass\",\n\n    # the properties below are optional\n    transition_date=Date(),\n    transition_in_days=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nTransitionProperty transitionProperty = new TransitionProperty {\n    StorageClass = \"storageClass\",\n\n    // the properties below are optional\n    TransitionDate = new Date(),\n    TransitionInDays = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nTransitionProperty transitionProperty = TransitionProperty.builder()\n        .storageClass(\"storageClass\")\n\n        // the properties below are optional\n        .transitionDate(new Date())\n        .transitionInDays(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ntransitionProperty := &transitionProperty{\n\tstorageClass: jsii.String(\"storageClass\"),\n\n\t// the properties below are optional\n\ttransitionDate: NewDate(),\n\ttransitionInDays: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst transitionProperty: s3.CfnBucket.TransitionProperty = {\n  storageClass: 'storageClass',\n\n  // the properties below are optional\n  transitionDate: new Date(),\n  transitionInDays: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.TransitionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst transitionProperty: s3.CfnBucket.TransitionProperty = {\n  storageClass: 'storageClass',\n\n  // the properties below are optional\n  transitionDate: new Date(),\n  transitionInDays: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "16abf3e51c691b54a95a653a6ec4dfb3360ddd10419ef2b47f2a0047d7204ab5"
    },
    "e308ed35cd4c834f521ed4f27c8d555cf4110afbe9423c5122eb686644f28589": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nversioning_configuration_property = s3.CfnBucket.VersioningConfigurationProperty(\n    status=\"status\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nVersioningConfigurationProperty versioningConfigurationProperty = new VersioningConfigurationProperty {\n    Status = \"status\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nVersioningConfigurationProperty versioningConfigurationProperty = VersioningConfigurationProperty.builder()\n        .status(\"status\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nversioningConfigurationProperty := &versioningConfigurationProperty{\n\tstatus: jsii.String(\"status\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst versioningConfigurationProperty: s3.CfnBucket.VersioningConfigurationProperty = {\n  status: 'status',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst versioningConfigurationProperty: s3.CfnBucket.VersioningConfigurationProperty = {\n  status: 'status',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "9086cd634a5783d0ac71e136ba3e29f14baf16063981d1ab905f18db299187cf"
    },
    "5cdf8840e557b161b8bcda6b9a8f9d571cff1e2e1d3ece6f98ab0d04cc53817e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nwebsite_configuration_property = s3.CfnBucket.WebsiteConfigurationProperty(\n    error_document=\"errorDocument\",\n    index_document=\"indexDocument\",\n    redirect_all_requests_to=s3.CfnBucket.RedirectAllRequestsToProperty(\n        host_name=\"hostName\",\n\n        # the properties below are optional\n        protocol=\"protocol\"\n    ),\n    routing_rules=[s3.CfnBucket.RoutingRuleProperty(\n        redirect_rule=s3.CfnBucket.RedirectRuleProperty(\n            host_name=\"hostName\",\n            http_redirect_code=\"httpRedirectCode\",\n            protocol=\"protocol\",\n            replace_key_prefix_with=\"replaceKeyPrefixWith\",\n            replace_key_with=\"replaceKeyWith\"\n        ),\n\n        # the properties below are optional\n        routing_rule_condition=s3.CfnBucket.RoutingRuleConditionProperty(\n            http_error_code_returned_equals=\"httpErrorCodeReturnedEquals\",\n            key_prefix_equals=\"keyPrefixEquals\"\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nWebsiteConfigurationProperty websiteConfigurationProperty = new WebsiteConfigurationProperty {\n    ErrorDocument = \"errorDocument\",\n    IndexDocument = \"indexDocument\",\n    RedirectAllRequestsTo = new RedirectAllRequestsToProperty {\n        HostName = \"hostName\",\n\n        // the properties below are optional\n        Protocol = \"protocol\"\n    },\n    RoutingRules = new [] { new RoutingRuleProperty {\n        RedirectRule = new RedirectRuleProperty {\n            HostName = \"hostName\",\n            HttpRedirectCode = \"httpRedirectCode\",\n            Protocol = \"protocol\",\n            ReplaceKeyPrefixWith = \"replaceKeyPrefixWith\",\n            ReplaceKeyWith = \"replaceKeyWith\"\n        },\n\n        // the properties below are optional\n        RoutingRuleCondition = new RoutingRuleConditionProperty {\n            HttpErrorCodeReturnedEquals = \"httpErrorCodeReturnedEquals\",\n            KeyPrefixEquals = \"keyPrefixEquals\"\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nWebsiteConfigurationProperty websiteConfigurationProperty = WebsiteConfigurationProperty.builder()\n        .errorDocument(\"errorDocument\")\n        .indexDocument(\"indexDocument\")\n        .redirectAllRequestsTo(RedirectAllRequestsToProperty.builder()\n                .hostName(\"hostName\")\n\n                // the properties below are optional\n                .protocol(\"protocol\")\n                .build())\n        .routingRules(List.of(RoutingRuleProperty.builder()\n                .redirectRule(RedirectRuleProperty.builder()\n                        .hostName(\"hostName\")\n                        .httpRedirectCode(\"httpRedirectCode\")\n                        .protocol(\"protocol\")\n                        .replaceKeyPrefixWith(\"replaceKeyPrefixWith\")\n                        .replaceKeyWith(\"replaceKeyWith\")\n                        .build())\n\n                // the properties below are optional\n                .routingRuleCondition(RoutingRuleConditionProperty.builder()\n                        .httpErrorCodeReturnedEquals(\"httpErrorCodeReturnedEquals\")\n                        .keyPrefixEquals(\"keyPrefixEquals\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nwebsiteConfigurationProperty := &websiteConfigurationProperty{\n\terrorDocument: jsii.String(\"errorDocument\"),\n\tindexDocument: jsii.String(\"indexDocument\"),\n\tredirectAllRequestsTo: &redirectAllRequestsToProperty{\n\t\thostName: jsii.String(\"hostName\"),\n\n\t\t// the properties below are optional\n\t\tprotocol: jsii.String(\"protocol\"),\n\t},\n\troutingRules: []interface{}{\n\t\t&routingRuleProperty{\n\t\t\tredirectRule: &redirectRuleProperty{\n\t\t\t\thostName: jsii.String(\"hostName\"),\n\t\t\t\thttpRedirectCode: jsii.String(\"httpRedirectCode\"),\n\t\t\t\tprotocol: jsii.String(\"protocol\"),\n\t\t\t\treplaceKeyPrefixWith: jsii.String(\"replaceKeyPrefixWith\"),\n\t\t\t\treplaceKeyWith: jsii.String(\"replaceKeyWith\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\troutingRuleCondition: &routingRuleConditionProperty{\n\t\t\t\thttpErrorCodeReturnedEquals: jsii.String(\"httpErrorCodeReturnedEquals\"),\n\t\t\t\tkeyPrefixEquals: jsii.String(\"keyPrefixEquals\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst websiteConfigurationProperty: s3.CfnBucket.WebsiteConfigurationProperty = {\n  errorDocument: 'errorDocument',\n  indexDocument: 'indexDocument',\n  redirectAllRequestsTo: {\n    hostName: 'hostName',\n\n    // the properties below are optional\n    protocol: 'protocol',\n  },\n  routingRules: [{\n    redirectRule: {\n      hostName: 'hostName',\n      httpRedirectCode: 'httpRedirectCode',\n      protocol: 'protocol',\n      replaceKeyPrefixWith: 'replaceKeyPrefixWith',\n      replaceKeyWith: 'replaceKeyWith',\n    },\n\n    // the properties below are optional\n    routingRuleCondition: {\n      httpErrorCodeReturnedEquals: 'httpErrorCodeReturnedEquals',\n      keyPrefixEquals: 'keyPrefixEquals',\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst websiteConfigurationProperty: s3.CfnBucket.WebsiteConfigurationProperty = {\n  errorDocument: 'errorDocument',\n  indexDocument: 'indexDocument',\n  redirectAllRequestsTo: {\n    hostName: 'hostName',\n\n    // the properties below are optional\n    protocol: 'protocol',\n  },\n  routingRules: [{\n    redirectRule: {\n      hostName: 'hostName',\n      httpRedirectCode: 'httpRedirectCode',\n      protocol: 'protocol',\n      replaceKeyPrefixWith: 'replaceKeyPrefixWith',\n      replaceKeyWith: 'replaceKeyWith',\n    },\n\n    // the properties below are optional\n    routingRuleCondition: {\n      httpErrorCodeReturnedEquals: 'httpErrorCodeReturnedEquals',\n      keyPrefixEquals: 'keyPrefixEquals',\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 20,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "97f488b117fde7e9cd3a5c30d83c0a2abb88b2e5f2e62fa353312730a99c4146"
    },
    "987fb71b56059dab5baaaeed560b321488c825b1b8c700d9f0812fcecec585fb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# policy_document: Any\n\ncfn_bucket_policy = s3.CfnBucketPolicy(self, \"MyCfnBucketPolicy\",\n    bucket=\"bucket\",\n    policy_document=policy_document\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar policyDocument;\n\nCfnBucketPolicy cfnBucketPolicy = new CfnBucketPolicy(this, \"MyCfnBucketPolicy\", new CfnBucketPolicyProps {\n    Bucket = \"bucket\",\n    PolicyDocument = policyDocument\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject policyDocument;\n\nCfnBucketPolicy cfnBucketPolicy = CfnBucketPolicy.Builder.create(this, \"MyCfnBucketPolicy\")\n        .bucket(\"bucket\")\n        .policyDocument(policyDocument)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar policyDocument interface{}\ncfnBucketPolicy := s3.NewCfnBucketPolicy(this, jsii.String(\"MyCfnBucketPolicy\"), &cfnBucketPolicyProps{\n\tbucket: jsii.String(\"bucket\"),\n\tpolicyDocument: policyDocument,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policyDocument: any;\nconst cfnBucketPolicy = new s3.CfnBucketPolicy(this, 'MyCfnBucketPolicy', {\n  bucket: 'bucket',\n  policyDocument: policyDocument,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucketPolicy",
        "@aws-cdk/aws-s3.CfnBucketPolicyProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBucketPolicy = new s3.CfnBucketPolicy(this, 'MyCfnBucketPolicy', {\n  bucket: 'bucket',\n  policyDocument: policyDocument,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "104": 1,
        "125": 1,
        "130": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "bc07948c6acc5431d7a9e087a6b388184c127f29bc7bddb3dabbf7a6a544011f"
    },
    "036e779bf902d91b055a6d119b701cef6314b80d839428993b332ed2153ec882": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# policy_document: Any\n\ncfn_bucket_policy_props = s3.CfnBucketPolicyProps(\n    bucket=\"bucket\",\n    policy_document=policy_document\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar policyDocument;\n\nCfnBucketPolicyProps cfnBucketPolicyProps = new CfnBucketPolicyProps {\n    Bucket = \"bucket\",\n    PolicyDocument = policyDocument\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject policyDocument;\n\nCfnBucketPolicyProps cfnBucketPolicyProps = CfnBucketPolicyProps.builder()\n        .bucket(\"bucket\")\n        .policyDocument(policyDocument)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar policyDocument interface{}\ncfnBucketPolicyProps := &cfnBucketPolicyProps{\n\tbucket: jsii.String(\"bucket\"),\n\tpolicyDocument: policyDocument,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policyDocument: any;\nconst cfnBucketPolicyProps: s3.CfnBucketPolicyProps = {\n  bucket: 'bucket',\n  policyDocument: policyDocument,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucketPolicyProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnBucketPolicyProps: s3.CfnBucketPolicyProps = {\n  bucket: 'bucket',\n  policyDocument: policyDocument,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "52a7535cb731f3ecb1b274a912a3613208e2686a13b8c39339637df0221c61cc"
    },
    "7d40a5be00b45be6cf0b004a273024dd390059ecb0dc5408b4ee29ab6d1fa135": {
      "translations": {
        "python": {
          "source": "raw_bucket = s3.CfnBucket(self, \"Bucket\")\n# -or-\nraw_bucket_alt = my_bucket.node.default_child\n\n# then\nraw_bucket.cfn_options.condition = CfnCondition(self, \"EnableBucket\")\nraw_bucket.cfn_options.metadata = {\n    \"metadata_key\": \"MetadataValue\"\n}",
          "version": "2"
        },
        "csharp": {
          "source": "CfnBucket rawBucket = new CfnBucket(this, \"Bucket\", new CfnBucketProps { });\n// -or-\nCfnBucket rawBucketAlt = (CfnBucket)myBucket.Node.DefaultChild;\n\n// then\nrawBucket.CfnOptions.Condition = new CfnCondition(this, \"EnableBucket\", new CfnConditionProps { });\nrawBucket.CfnOptions.Metadata = new Dictionary<string, object> {\n    { \"metadataKey\", \"MetadataValue\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "CfnBucket rawBucket = CfnBucket.Builder.create(this, \"Bucket\").build();\n// -or-\nCfnBucket rawBucketAlt = (CfnBucket)myBucket.getNode().getDefaultChild();\n\n// then\nrawBucket.getCfnOptions().getCondition() = CfnCondition.Builder.create(this, \"EnableBucket\").build();\nrawBucket.getCfnOptions().getMetadata() = Map.of(\n        \"metadataKey\", \"MetadataValue\");",
          "version": "1"
        },
        "go": {
          "source": "rawBucket := s3.NewCfnBucket(this, jsii.String(\"Bucket\"), &cfnBucketProps{\n})\n// -or-\nrawBucketAlt := myBucket.node.defaultChild.(cfnBucket)\n\n// then\nrawBucket.cfnOptions.condition = NewCfnCondition(this, jsii.String(\"EnableBucket\"), &cfnConditionProps{\n})\nrawBucket.cfnOptions.metadata = map[string]interface{}{\n\t\"metadataKey\": jsii.String(\"MetadataValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "const rawBucket = new s3.CfnBucket(this, 'Bucket', { /* ... */ });\n// -or-\nconst rawBucketAlt = myBucket.node.defaultChild as s3.CfnBucket;\n\n// then\nrawBucket.cfnOptions.condition = new CfnCondition(this, 'EnableBucket', { /* ... */ });\nrawBucket.cfnOptions.metadata = {\n  metadataKey: 'MetadataValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnBucketProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnBucket",
        "@aws-cdk/aws-s3.CfnBucketProps",
        "@aws-cdk/core.CfnCondition",
        "@aws-cdk/core.CfnConditionProps",
        "@aws-cdk/core.CfnResource#cfnOptions",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.ICfnResourceOptions#condition",
        "@aws-cdk/core.ICfnResourceOptions#metadata",
        "@aws-cdk/core.IConstruct#node",
        "constructs.Construct"
      ],
      "fullSource": "import * as cfn from '@aws-cdk/aws-cloudformation';\nimport * as customresources from '@aws-cdk/custom-resources';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport {\n  App,\n  Aws,\n  CfnCondition,\n  CfnDynamicReference,\n  CfnDynamicReferenceService,\n  CfnInclude,\n  CfnJson,\n  CfnMapping,\n  CfnOutput,\n  CfnParameter,\n  CfnResource,\n  CfnResourceProps,\n  ConcreteDependable,\n  Construct,\n  CustomResource,\n  CustomResourceProvider,\n  CustomResourceProviderRuntime,\n  DefaultStackSynthesizer,\n  DependableTrait,\n  Duration,\n  Fn,\n  IConstruct,\n  RemovalPolicy,\n  SecretValue,\n  Size,\n  SizeRoundingBehavior,\n  Stack,\n  StackProps,\n  Stage,\n  Token,\n} from '@aws-cdk/core';\n\ndeclare const app: App;\ndeclare const arn: 'arn:partition:service:region:account-id:resource-id';\ndeclare const cfnResource: CfnResource;\ndeclare const construct: Construct;\ndeclare const constructA: Construct;\ndeclare const constructB: Construct;\ndeclare const constructC: Construct;\ndeclare const functionProps: lambda.FunctionProps;\ndeclare const isCompleteHandler: lambda.Function;\ndeclare const myBucket: s3.IBucket;\ndeclare const myFunction: lambda.IFunction;\ndeclare const myTopic: sns.ITopic;\ndeclare const onEventHandler: lambda.Function;\ndeclare const resourceProps: CfnResourceProps;\n\ndeclare class MyStack extends Stack {}\ndeclare class YourStack extends Stack {}\n\nclass StackThatProvidesABucket extends Stack {\n  public readonly bucket!: s3.IBucket;\n}\n\ninterface StackThatExpectsABucketProps extends StackProps {\n  readonly bucket: s3.IBucket;\n}\n\nclass StackThatExpectsABucket extends Stack {\n  constructor(scope: Construct, id: string, props: StackThatExpectsABucketProps) {\n    super(scope, id, props);\n  }\n}\n\nclass fixture$construct extends Construct {\n  public constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst rawBucket = new s3.CfnBucket(this, 'Bucket', { /* ... */ });\n// -or-\nconst rawBucketAlt = myBucket.node.defaultChild as s3.CfnBucket;\n\n// then\nrawBucket.cfnOptions.condition = new CfnCondition(this, 'EnableBucket', { /* ... */ });\nrawBucket.cfnOptions.metadata = {\n  metadataKey: 'MetadataValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "62": 2,
        "75": 17,
        "104": 2,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 7,
        "197": 2,
        "209": 2,
        "217": 1,
        "225": 2,
        "226": 2,
        "242": 2,
        "243": 2,
        "281": 1
      },
      "fqnsFingerprint": "8cfa6d22d7e3fb9050eac6b342fc8b118ea2fa99814465cd9c5ff2b7bc2c8ba5"
    },
    "1e93b38925f92c3999903bd40b464c164553000bbddc0537e26cd901afd5ae32": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ncfn_multi_region_access_point = s3.CfnMultiRegionAccessPoint(self, \"MyCfnMultiRegionAccessPoint\",\n    regions=[s3.CfnMultiRegionAccessPoint.RegionProperty(\n        bucket=\"bucket\"\n    )],\n\n    # the properties below are optional\n    name=\"name\",\n    public_access_block_configuration=s3.CfnMultiRegionAccessPoint.PublicAccessBlockConfigurationProperty(\n        block_public_acls=False,\n        block_public_policy=False,\n        ignore_public_acls=False,\n        restrict_public_buckets=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nCfnMultiRegionAccessPoint cfnMultiRegionAccessPoint = new CfnMultiRegionAccessPoint(this, \"MyCfnMultiRegionAccessPoint\", new CfnMultiRegionAccessPointProps {\n    Regions = new [] { new RegionProperty {\n        Bucket = \"bucket\"\n    } },\n\n    // the properties below are optional\n    Name = \"name\",\n    PublicAccessBlockConfiguration = new PublicAccessBlockConfigurationProperty {\n        BlockPublicAcls = false,\n        BlockPublicPolicy = false,\n        IgnorePublicAcls = false,\n        RestrictPublicBuckets = false\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nCfnMultiRegionAccessPoint cfnMultiRegionAccessPoint = CfnMultiRegionAccessPoint.Builder.create(this, \"MyCfnMultiRegionAccessPoint\")\n        .regions(List.of(RegionProperty.builder()\n                .bucket(\"bucket\")\n                .build()))\n\n        // the properties below are optional\n        .name(\"name\")\n        .publicAccessBlockConfiguration(PublicAccessBlockConfigurationProperty.builder()\n                .blockPublicAcls(false)\n                .blockPublicPolicy(false)\n                .ignorePublicAcls(false)\n                .restrictPublicBuckets(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ncfnMultiRegionAccessPoint := s3.NewCfnMultiRegionAccessPoint(this, jsii.String(\"MyCfnMultiRegionAccessPoint\"), &cfnMultiRegionAccessPointProps{\n\tregions: []interface{}{\n\t\t&regionProperty{\n\t\t\tbucket: jsii.String(\"bucket\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\tpublicAccessBlockConfiguration: &publicAccessBlockConfigurationProperty{\n\t\tblockPublicAcls: jsii.Boolean(false),\n\t\tblockPublicPolicy: jsii.Boolean(false),\n\t\tignorePublicAcls: jsii.Boolean(false),\n\t\trestrictPublicBuckets: jsii.Boolean(false),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst cfnMultiRegionAccessPoint = new s3.CfnMultiRegionAccessPoint(this, 'MyCfnMultiRegionAccessPoint', {\n  regions: [{\n    bucket: 'bucket',\n  }],\n\n  // the properties below are optional\n  name: 'name',\n  publicAccessBlockConfiguration: {\n    blockPublicAcls: false,\n    blockPublicPolicy: false,\n    ignorePublicAcls: false,\n    restrictPublicBuckets: false,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnMultiRegionAccessPoint"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnMultiRegionAccessPoint",
        "@aws-cdk/aws-s3.CfnMultiRegionAccessPointProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMultiRegionAccessPoint = new s3.CfnMultiRegionAccessPoint(this, 'MyCfnMultiRegionAccessPoint', {\n  regions: [{\n    bucket: 'bucket',\n  }],\n\n  // the properties below are optional\n  name: 'name',\n  publicAccessBlockConfiguration: {\n    blockPublicAcls: false,\n    blockPublicPolicy: false,\n    ignorePublicAcls: false,\n    restrictPublicBuckets: false,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "91": 4,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "b7598f154e170a642f74397eded7d1e61486ebe15bf4c1a8f11a6d7a65b9f20c"
    },
    "53c5c1ad979b1219f4b5dae8da3d44342e91ba06f0d0023a73afe7050f901279": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\npublic_access_block_configuration_property = s3.CfnMultiRegionAccessPoint.PublicAccessBlockConfigurationProperty(\n    block_public_acls=False,\n    block_public_policy=False,\n    ignore_public_acls=False,\n    restrict_public_buckets=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nPublicAccessBlockConfigurationProperty publicAccessBlockConfigurationProperty = new PublicAccessBlockConfigurationProperty {\n    BlockPublicAcls = false,\n    BlockPublicPolicy = false,\n    IgnorePublicAcls = false,\n    RestrictPublicBuckets = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nPublicAccessBlockConfigurationProperty publicAccessBlockConfigurationProperty = PublicAccessBlockConfigurationProperty.builder()\n        .blockPublicAcls(false)\n        .blockPublicPolicy(false)\n        .ignorePublicAcls(false)\n        .restrictPublicBuckets(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\npublicAccessBlockConfigurationProperty := &publicAccessBlockConfigurationProperty{\n\tblockPublicAcls: jsii.Boolean(false),\n\tblockPublicPolicy: jsii.Boolean(false),\n\tignorePublicAcls: jsii.Boolean(false),\n\trestrictPublicBuckets: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst publicAccessBlockConfigurationProperty: s3.CfnMultiRegionAccessPoint.PublicAccessBlockConfigurationProperty = {\n  blockPublicAcls: false,\n  blockPublicPolicy: false,\n  ignorePublicAcls: false,\n  restrictPublicBuckets: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnMultiRegionAccessPoint.PublicAccessBlockConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnMultiRegionAccessPoint.PublicAccessBlockConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst publicAccessBlockConfigurationProperty: s3.CfnMultiRegionAccessPoint.PublicAccessBlockConfigurationProperty = {\n  blockPublicAcls: false,\n  blockPublicPolicy: false,\n  ignorePublicAcls: false,\n  restrictPublicBuckets: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "b36747bd4407ac53632ba6779b428af03060479685f2cd883a7a219bc19bbcd3"
    },
    "35aefdc1772b120431f1e64f7aa86bc2841c905f2f8ff8ce2a2e4c8d3ffa75a7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nregion_property = s3.CfnMultiRegionAccessPoint.RegionProperty(\n    bucket=\"bucket\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nRegionProperty regionProperty = new RegionProperty {\n    Bucket = \"bucket\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nRegionProperty regionProperty = RegionProperty.builder()\n        .bucket(\"bucket\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nregionProperty := &regionProperty{\n\tbucket: jsii.String(\"bucket\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst regionProperty: s3.CfnMultiRegionAccessPoint.RegionProperty = {\n  bucket: 'bucket',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnMultiRegionAccessPoint.RegionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnMultiRegionAccessPoint.RegionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst regionProperty: s3.CfnMultiRegionAccessPoint.RegionProperty = {\n  bucket: 'bucket',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "4e6833f88ee48ae0024a2caec8ed801b444b874a0f4c88d23398beadcf47be3d"
    },
    "91d345450c216df95ac5d4775ecc57e8404b47776ad11500e4514b5489123ce3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# policy: Any\n\ncfn_multi_region_access_point_policy = s3.CfnMultiRegionAccessPointPolicy(self, \"MyCfnMultiRegionAccessPointPolicy\",\n    mrap_name=\"mrapName\",\n    policy=policy\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar policy;\n\nCfnMultiRegionAccessPointPolicy cfnMultiRegionAccessPointPolicy = new CfnMultiRegionAccessPointPolicy(this, \"MyCfnMultiRegionAccessPointPolicy\", new CfnMultiRegionAccessPointPolicyProps {\n    MrapName = \"mrapName\",\n    Policy = policy\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject policy;\n\nCfnMultiRegionAccessPointPolicy cfnMultiRegionAccessPointPolicy = CfnMultiRegionAccessPointPolicy.Builder.create(this, \"MyCfnMultiRegionAccessPointPolicy\")\n        .mrapName(\"mrapName\")\n        .policy(policy)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar policy interface{}\ncfnMultiRegionAccessPointPolicy := s3.NewCfnMultiRegionAccessPointPolicy(this, jsii.String(\"MyCfnMultiRegionAccessPointPolicy\"), &cfnMultiRegionAccessPointPolicyProps{\n\tmrapName: jsii.String(\"mrapName\"),\n\tpolicy: policy,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policy: any;\nconst cfnMultiRegionAccessPointPolicy = new s3.CfnMultiRegionAccessPointPolicy(this, 'MyCfnMultiRegionAccessPointPolicy', {\n  mrapName: 'mrapName',\n  policy: policy,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnMultiRegionAccessPointPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnMultiRegionAccessPointPolicy",
        "@aws-cdk/aws-s3.CfnMultiRegionAccessPointPolicyProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMultiRegionAccessPointPolicy = new s3.CfnMultiRegionAccessPointPolicy(this, 'MyCfnMultiRegionAccessPointPolicy', {\n  mrapName: 'mrapName',\n  policy: policy,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "104": 1,
        "125": 1,
        "130": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2fe841c0e4c97d7dd29ab717d0917ce57ce05a6485788c0dc3421c7e709d0c14"
    },
    "78c0107d373a6db96a0a2b4b392ca612929b31d7944c4cd3d47fa7ed33b0f423": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# policy: Any\n\ncfn_multi_region_access_point_policy_props = s3.CfnMultiRegionAccessPointPolicyProps(\n    mrap_name=\"mrapName\",\n    policy=policy\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar policy;\n\nCfnMultiRegionAccessPointPolicyProps cfnMultiRegionAccessPointPolicyProps = new CfnMultiRegionAccessPointPolicyProps {\n    MrapName = \"mrapName\",\n    Policy = policy\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject policy;\n\nCfnMultiRegionAccessPointPolicyProps cfnMultiRegionAccessPointPolicyProps = CfnMultiRegionAccessPointPolicyProps.builder()\n        .mrapName(\"mrapName\")\n        .policy(policy)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar policy interface{}\ncfnMultiRegionAccessPointPolicyProps := &cfnMultiRegionAccessPointPolicyProps{\n\tmrapName: jsii.String(\"mrapName\"),\n\tpolicy: policy,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policy: any;\nconst cfnMultiRegionAccessPointPolicyProps: s3.CfnMultiRegionAccessPointPolicyProps = {\n  mrapName: 'mrapName',\n  policy: policy,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnMultiRegionAccessPointPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnMultiRegionAccessPointPolicyProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const policy: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMultiRegionAccessPointPolicyProps: s3.CfnMultiRegionAccessPointPolicyProps = {\n  mrapName: 'mrapName',\n  policy: policy,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e49932565c751774443687c91cc49af80bf51334fa4af8d19e3bc0a29250838e"
    },
    "7a9db6b542714a30a8ac20725e50224aad98ebeb36ef48f36988c6003b5b30ff": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ncfn_multi_region_access_point_props = s3.CfnMultiRegionAccessPointProps(\n    regions=[s3.CfnMultiRegionAccessPoint.RegionProperty(\n        bucket=\"bucket\"\n    )],\n\n    # the properties below are optional\n    name=\"name\",\n    public_access_block_configuration=s3.CfnMultiRegionAccessPoint.PublicAccessBlockConfigurationProperty(\n        block_public_acls=False,\n        block_public_policy=False,\n        ignore_public_acls=False,\n        restrict_public_buckets=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nCfnMultiRegionAccessPointProps cfnMultiRegionAccessPointProps = new CfnMultiRegionAccessPointProps {\n    Regions = new [] { new RegionProperty {\n        Bucket = \"bucket\"\n    } },\n\n    // the properties below are optional\n    Name = \"name\",\n    PublicAccessBlockConfiguration = new PublicAccessBlockConfigurationProperty {\n        BlockPublicAcls = false,\n        BlockPublicPolicy = false,\n        IgnorePublicAcls = false,\n        RestrictPublicBuckets = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nCfnMultiRegionAccessPointProps cfnMultiRegionAccessPointProps = CfnMultiRegionAccessPointProps.builder()\n        .regions(List.of(RegionProperty.builder()\n                .bucket(\"bucket\")\n                .build()))\n\n        // the properties below are optional\n        .name(\"name\")\n        .publicAccessBlockConfiguration(PublicAccessBlockConfigurationProperty.builder()\n                .blockPublicAcls(false)\n                .blockPublicPolicy(false)\n                .ignorePublicAcls(false)\n                .restrictPublicBuckets(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ncfnMultiRegionAccessPointProps := &cfnMultiRegionAccessPointProps{\n\tregions: []interface{}{\n\t\t&regionProperty{\n\t\t\tbucket: jsii.String(\"bucket\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\tpublicAccessBlockConfiguration: &publicAccessBlockConfigurationProperty{\n\t\tblockPublicAcls: jsii.Boolean(false),\n\t\tblockPublicPolicy: jsii.Boolean(false),\n\t\tignorePublicAcls: jsii.Boolean(false),\n\t\trestrictPublicBuckets: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst cfnMultiRegionAccessPointProps: s3.CfnMultiRegionAccessPointProps = {\n  regions: [{\n    bucket: 'bucket',\n  }],\n\n  // the properties below are optional\n  name: 'name',\n  publicAccessBlockConfiguration: {\n    blockPublicAcls: false,\n    blockPublicPolicy: false,\n    ignorePublicAcls: false,\n    restrictPublicBuckets: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnMultiRegionAccessPointProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnMultiRegionAccessPointProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMultiRegionAccessPointProps: s3.CfnMultiRegionAccessPointProps = {\n  regions: [{\n    bucket: 'bucket',\n  }],\n\n  // the properties below are optional\n  name: 'name',\n  publicAccessBlockConfiguration: {\n    blockPublicAcls: false,\n    blockPublicPolicy: false,\n    ignorePublicAcls: false,\n    restrictPublicBuckets: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 12,
        "91": 4,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "2678ad48e7ff066240d5f1feafa4dc4db75aa5eadd2f2888d2fe48997cd51f0c"
    },
    "c5f429f86a10601e3b5a63fa06702bad2c2fae980269fa06d78f87fc3147abc4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# encryption: Any\n\ncfn_storage_lens = s3.CfnStorageLens(self, \"MyCfnStorageLens\",\n    storage_lens_configuration=s3.CfnStorageLens.StorageLensConfigurationProperty(\n        account_level=s3.CfnStorageLens.AccountLevelProperty(\n            bucket_level=s3.CfnStorageLens.BucketLevelProperty(\n                activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n                    is_enabled=False\n                ),\n                prefix_level=s3.CfnStorageLens.PrefixLevelProperty(\n                    storage_metrics=s3.CfnStorageLens.PrefixLevelStorageMetricsProperty(\n                        is_enabled=False,\n                        selection_criteria=s3.CfnStorageLens.SelectionCriteriaProperty(\n                            delimiter=\"delimiter\",\n                            max_depth=123,\n                            min_storage_bytes_percentage=123\n                        )\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n                is_enabled=False\n            )\n        ),\n        id=\"id\",\n        is_enabled=False,\n\n        # the properties below are optional\n        aws_org=s3.CfnStorageLens.AwsOrgProperty(\n            arn=\"arn\"\n        ),\n        data_export=s3.CfnStorageLens.DataExportProperty(\n            cloud_watch_metrics=s3.CfnStorageLens.CloudWatchMetricsProperty(\n                is_enabled=False\n            ),\n            s3_bucket_destination=s3.CfnStorageLens.S3BucketDestinationProperty(\n                account_id=\"accountId\",\n                arn=\"arn\",\n                format=\"format\",\n                output_schema_version=\"outputSchemaVersion\",\n\n                # the properties below are optional\n                encryption=encryption,\n                prefix=\"prefix\"\n            )\n        ),\n        exclude=s3.CfnStorageLens.BucketsAndRegionsProperty(\n            buckets=[\"buckets\"],\n            regions=[\"regions\"]\n        ),\n        include=s3.CfnStorageLens.BucketsAndRegionsProperty(\n            buckets=[\"buckets\"],\n            regions=[\"regions\"]\n        ),\n        storage_lens_arn=\"storageLensArn\"\n    ),\n\n    # the properties below are optional\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar encryption;\n\nCfnStorageLens cfnStorageLens = new CfnStorageLens(this, \"MyCfnStorageLens\", new CfnStorageLensProps {\n    StorageLensConfiguration = new StorageLensConfigurationProperty {\n        AccountLevel = new AccountLevelProperty {\n            BucketLevel = new BucketLevelProperty {\n                ActivityMetrics = new ActivityMetricsProperty {\n                    IsEnabled = false\n                },\n                PrefixLevel = new PrefixLevelProperty {\n                    StorageMetrics = new PrefixLevelStorageMetricsProperty {\n                        IsEnabled = false,\n                        SelectionCriteria = new SelectionCriteriaProperty {\n                            Delimiter = \"delimiter\",\n                            MaxDepth = 123,\n                            MinStorageBytesPercentage = 123\n                        }\n                    }\n                }\n            },\n\n            // the properties below are optional\n            ActivityMetrics = new ActivityMetricsProperty {\n                IsEnabled = false\n            }\n        },\n        Id = \"id\",\n        IsEnabled = false,\n\n        // the properties below are optional\n        AwsOrg = new AwsOrgProperty {\n            Arn = \"arn\"\n        },\n        DataExport = new DataExportProperty {\n            CloudWatchMetrics = new CloudWatchMetricsProperty {\n                IsEnabled = false\n            },\n            S3BucketDestination = new S3BucketDestinationProperty {\n                AccountId = \"accountId\",\n                Arn = \"arn\",\n                Format = \"format\",\n                OutputSchemaVersion = \"outputSchemaVersion\",\n\n                // the properties below are optional\n                Encryption = encryption,\n                Prefix = \"prefix\"\n            }\n        },\n        Exclude = new BucketsAndRegionsProperty {\n            Buckets = new [] { \"buckets\" },\n            Regions = new [] { \"regions\" }\n        },\n        Include = new BucketsAndRegionsProperty {\n            Buckets = new [] { \"buckets\" },\n            Regions = new [] { \"regions\" }\n        },\n        StorageLensArn = \"storageLensArn\"\n    },\n\n    // the properties below are optional\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject encryption;\n\nCfnStorageLens cfnStorageLens = CfnStorageLens.Builder.create(this, \"MyCfnStorageLens\")\n        .storageLensConfiguration(StorageLensConfigurationProperty.builder()\n                .accountLevel(AccountLevelProperty.builder()\n                        .bucketLevel(BucketLevelProperty.builder()\n                                .activityMetrics(ActivityMetricsProperty.builder()\n                                        .isEnabled(false)\n                                        .build())\n                                .prefixLevel(PrefixLevelProperty.builder()\n                                        .storageMetrics(PrefixLevelStorageMetricsProperty.builder()\n                                                .isEnabled(false)\n                                                .selectionCriteria(SelectionCriteriaProperty.builder()\n                                                        .delimiter(\"delimiter\")\n                                                        .maxDepth(123)\n                                                        .minStorageBytesPercentage(123)\n                                                        .build())\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .activityMetrics(ActivityMetricsProperty.builder()\n                                .isEnabled(false)\n                                .build())\n                        .build())\n                .id(\"id\")\n                .isEnabled(false)\n\n                // the properties below are optional\n                .awsOrg(AwsOrgProperty.builder()\n                        .arn(\"arn\")\n                        .build())\n                .dataExport(DataExportProperty.builder()\n                        .cloudWatchMetrics(CloudWatchMetricsProperty.builder()\n                                .isEnabled(false)\n                                .build())\n                        .s3BucketDestination(S3BucketDestinationProperty.builder()\n                                .accountId(\"accountId\")\n                                .arn(\"arn\")\n                                .format(\"format\")\n                                .outputSchemaVersion(\"outputSchemaVersion\")\n\n                                // the properties below are optional\n                                .encryption(encryption)\n                                .prefix(\"prefix\")\n                                .build())\n                        .build())\n                .exclude(BucketsAndRegionsProperty.builder()\n                        .buckets(List.of(\"buckets\"))\n                        .regions(List.of(\"regions\"))\n                        .build())\n                .include(BucketsAndRegionsProperty.builder()\n                        .buckets(List.of(\"buckets\"))\n                        .regions(List.of(\"regions\"))\n                        .build())\n                .storageLensArn(\"storageLensArn\")\n                .build())\n\n        // the properties below are optional\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar encryption interface{}\ncfnStorageLens := s3.NewCfnStorageLens(this, jsii.String(\"MyCfnStorageLens\"), &cfnStorageLensProps{\n\tstorageLensConfiguration: &storageLensConfigurationProperty{\n\t\taccountLevel: &accountLevelProperty{\n\t\t\tbucketLevel: &bucketLevelProperty{\n\t\t\t\tactivityMetrics: &activityMetricsProperty{\n\t\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\tprefixLevel: &prefixLevelProperty{\n\t\t\t\t\tstorageMetrics: &prefixLevelStorageMetricsProperty{\n\t\t\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t\t\t\tselectionCriteria: &selectionCriteriaProperty{\n\t\t\t\t\t\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\t\t\t\t\t\tmaxDepth: jsii.Number(123),\n\t\t\t\t\t\t\tminStorageBytesPercentage: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tactivityMetrics: &activityMetricsProperty{\n\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t\tid: jsii.String(\"id\"),\n\t\tisEnabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tawsOrg: &awsOrgProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t},\n\t\tdataExport: &dataExportProperty{\n\t\t\tcloudWatchMetrics: &cloudWatchMetricsProperty{\n\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\ts3BucketDestination: &s3BucketDestinationProperty{\n\t\t\t\taccountId: jsii.String(\"accountId\"),\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tformat: jsii.String(\"format\"),\n\t\t\t\toutputSchemaVersion: jsii.String(\"outputSchemaVersion\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tencryption: encryption,\n\t\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t},\n\t\texclude: &bucketsAndRegionsProperty{\n\t\t\tbuckets: []*string{\n\t\t\t\tjsii.String(\"buckets\"),\n\t\t\t},\n\t\t\tregions: []*string{\n\t\t\t\tjsii.String(\"regions\"),\n\t\t\t},\n\t\t},\n\t\tinclude: &bucketsAndRegionsProperty{\n\t\t\tbuckets: []*string{\n\t\t\t\tjsii.String(\"buckets\"),\n\t\t\t},\n\t\t\tregions: []*string{\n\t\t\t\tjsii.String(\"regions\"),\n\t\t\t},\n\t\t},\n\t\tstorageLensArn: jsii.String(\"storageLensArn\"),\n\t},\n\n\t// the properties below are optional\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\nconst cfnStorageLens = new s3.CfnStorageLens(this, 'MyCfnStorageLens', {\n  storageLensConfiguration: {\n    accountLevel: {\n      bucketLevel: {\n        activityMetrics: {\n          isEnabled: false,\n        },\n        prefixLevel: {\n          storageMetrics: {\n            isEnabled: false,\n            selectionCriteria: {\n              delimiter: 'delimiter',\n              maxDepth: 123,\n              minStorageBytesPercentage: 123,\n            },\n          },\n        },\n      },\n\n      // the properties below are optional\n      activityMetrics: {\n        isEnabled: false,\n      },\n    },\n    id: 'id',\n    isEnabled: false,\n\n    // the properties below are optional\n    awsOrg: {\n      arn: 'arn',\n    },\n    dataExport: {\n      cloudWatchMetrics: {\n        isEnabled: false,\n      },\n      s3BucketDestination: {\n        accountId: 'accountId',\n        arn: 'arn',\n        format: 'format',\n        outputSchemaVersion: 'outputSchemaVersion',\n\n        // the properties below are optional\n        encryption: encryption,\n        prefix: 'prefix',\n      },\n    },\n    exclude: {\n      buckets: ['buckets'],\n      regions: ['regions'],\n    },\n    include: {\n      buckets: ['buckets'],\n      regions: ['regions'],\n    },\n    storageLensArn: 'storageLensArn',\n  },\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens",
        "@aws-cdk/aws-s3.CfnStorageLensProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnStorageLens = new s3.CfnStorageLens(this, 'MyCfnStorageLens', {\n  storageLensConfiguration: {\n    accountLevel: {\n      bucketLevel: {\n        activityMetrics: {\n          isEnabled: false,\n        },\n        prefixLevel: {\n          storageMetrics: {\n            isEnabled: false,\n            selectionCriteria: {\n              delimiter: 'delimiter',\n              maxDepth: 123,\n              minStorageBytesPercentage: 123,\n            },\n          },\n        },\n      },\n\n      // the properties below are optional\n      activityMetrics: {\n        isEnabled: false,\n      },\n    },\n    id: 'id',\n    isEnabled: false,\n\n    // the properties below are optional\n    awsOrg: {\n      arn: 'arn',\n    },\n    dataExport: {\n      cloudWatchMetrics: {\n        isEnabled: false,\n      },\n      s3BucketDestination: {\n        accountId: 'accountId',\n        arn: 'arn',\n        format: 'format',\n        outputSchemaVersion: 'outputSchemaVersion',\n\n        // the properties below are optional\n        encryption: encryption,\n        prefix: 'prefix',\n      },\n    },\n    exclude: {\n      buckets: ['buckets'],\n      regions: ['regions'],\n    },\n    include: {\n      buckets: ['buckets'],\n      regions: ['regions'],\n    },\n    storageLensArn: 'storageLensArn',\n  },\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 17,
        "75": 44,
        "91": 5,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 5,
        "193": 16,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 38,
        "290": 1
      },
      "fqnsFingerprint": "0fcc047f470c6c439e9a470d9459678443def79796a33fdb4a017a76aaf6eba4"
    },
    "08d7798bc8ae67db5c6557adf5060f12af1494e77a9acd9b39cfb40bf52b1e5e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\naccount_level_property = s3.CfnStorageLens.AccountLevelProperty(\n    bucket_level=s3.CfnStorageLens.BucketLevelProperty(\n        activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n            is_enabled=False\n        ),\n        prefix_level=s3.CfnStorageLens.PrefixLevelProperty(\n            storage_metrics=s3.CfnStorageLens.PrefixLevelStorageMetricsProperty(\n                is_enabled=False,\n                selection_criteria=s3.CfnStorageLens.SelectionCriteriaProperty(\n                    delimiter=\"delimiter\",\n                    max_depth=123,\n                    min_storage_bytes_percentage=123\n                )\n            )\n        )\n    ),\n\n    # the properties below are optional\n    activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n        is_enabled=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nAccountLevelProperty accountLevelProperty = new AccountLevelProperty {\n    BucketLevel = new BucketLevelProperty {\n        ActivityMetrics = new ActivityMetricsProperty {\n            IsEnabled = false\n        },\n        PrefixLevel = new PrefixLevelProperty {\n            StorageMetrics = new PrefixLevelStorageMetricsProperty {\n                IsEnabled = false,\n                SelectionCriteria = new SelectionCriteriaProperty {\n                    Delimiter = \"delimiter\",\n                    MaxDepth = 123,\n                    MinStorageBytesPercentage = 123\n                }\n            }\n        }\n    },\n\n    // the properties below are optional\n    ActivityMetrics = new ActivityMetricsProperty {\n        IsEnabled = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nAccountLevelProperty accountLevelProperty = AccountLevelProperty.builder()\n        .bucketLevel(BucketLevelProperty.builder()\n                .activityMetrics(ActivityMetricsProperty.builder()\n                        .isEnabled(false)\n                        .build())\n                .prefixLevel(PrefixLevelProperty.builder()\n                        .storageMetrics(PrefixLevelStorageMetricsProperty.builder()\n                                .isEnabled(false)\n                                .selectionCriteria(SelectionCriteriaProperty.builder()\n                                        .delimiter(\"delimiter\")\n                                        .maxDepth(123)\n                                        .minStorageBytesPercentage(123)\n                                        .build())\n                                .build())\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .activityMetrics(ActivityMetricsProperty.builder()\n                .isEnabled(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\naccountLevelProperty := &accountLevelProperty{\n\tbucketLevel: &bucketLevelProperty{\n\t\tactivityMetrics: &activityMetricsProperty{\n\t\t\tisEnabled: jsii.Boolean(false),\n\t\t},\n\t\tprefixLevel: &prefixLevelProperty{\n\t\t\tstorageMetrics: &prefixLevelStorageMetricsProperty{\n\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t\tselectionCriteria: &selectionCriteriaProperty{\n\t\t\t\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\t\t\t\tmaxDepth: jsii.Number(123),\n\t\t\t\t\tminStorageBytesPercentage: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tactivityMetrics: &activityMetricsProperty{\n\t\tisEnabled: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst accountLevelProperty: s3.CfnStorageLens.AccountLevelProperty = {\n  bucketLevel: {\n    activityMetrics: {\n      isEnabled: false,\n    },\n    prefixLevel: {\n      storageMetrics: {\n        isEnabled: false,\n        selectionCriteria: {\n          delimiter: 'delimiter',\n          maxDepth: 123,\n          minStorageBytesPercentage: 123,\n        },\n      },\n    },\n  },\n\n  // the properties below are optional\n  activityMetrics: {\n    isEnabled: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.AccountLevelProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.AccountLevelProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountLevelProperty: s3.CfnStorageLens.AccountLevelProperty = {\n  bucketLevel: {\n    activityMetrics: {\n      isEnabled: false,\n    },\n    prefixLevel: {\n      storageMetrics: {\n        isEnabled: false,\n        selectionCriteria: {\n          delimiter: 'delimiter',\n          maxDepth: 123,\n          minStorageBytesPercentage: 123,\n        },\n      },\n    },\n  },\n\n  // the properties below are optional\n  activityMetrics: {\n    isEnabled: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 17,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 7,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "9ca05ad93939fba5fd1af89d4206f97d8ade579a6ab46745bfef4fcb6c9ed7d9"
    },
    "311ab68ca12b525ebd6b829a87971fd7e87b276c930402702e40d33d49c17d41": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nactivity_metrics_property = s3.CfnStorageLens.ActivityMetricsProperty(\n    is_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nActivityMetricsProperty activityMetricsProperty = new ActivityMetricsProperty {\n    IsEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nActivityMetricsProperty activityMetricsProperty = ActivityMetricsProperty.builder()\n        .isEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nactivityMetricsProperty := &activityMetricsProperty{\n\tisEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst activityMetricsProperty: s3.CfnStorageLens.ActivityMetricsProperty = {\n  isEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.ActivityMetricsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.ActivityMetricsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst activityMetricsProperty: s3.CfnStorageLens.ActivityMetricsProperty = {\n  isEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "b5e6abc663eaca102300cfb9a3761a690472ab2daf666b8a712fea263de33a16"
    },
    "2f2b85e29469507d9e7c61a58394797bf200b935437bb12482a085d5222f243d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\naws_org_property = s3.CfnStorageLens.AwsOrgProperty(\n    arn=\"arn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nAwsOrgProperty awsOrgProperty = new AwsOrgProperty {\n    Arn = \"arn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nAwsOrgProperty awsOrgProperty = AwsOrgProperty.builder()\n        .arn(\"arn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nawsOrgProperty := &awsOrgProperty{\n\tarn: jsii.String(\"arn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst awsOrgProperty: s3.CfnStorageLens.AwsOrgProperty = {\n  arn: 'arn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.AwsOrgProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.AwsOrgProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst awsOrgProperty: s3.CfnStorageLens.AwsOrgProperty = {\n  arn: 'arn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "2f848b15ee24c74e658546fb3677d012a4167a78aa88655ca48d88d2b40931b7"
    },
    "3a007be30ffc012bb2b18c3347c99b8623461dee76f2a02d8c4d03a393737152": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nbucket_level_property = s3.CfnStorageLens.BucketLevelProperty(\n    activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n        is_enabled=False\n    ),\n    prefix_level=s3.CfnStorageLens.PrefixLevelProperty(\n        storage_metrics=s3.CfnStorageLens.PrefixLevelStorageMetricsProperty(\n            is_enabled=False,\n            selection_criteria=s3.CfnStorageLens.SelectionCriteriaProperty(\n                delimiter=\"delimiter\",\n                max_depth=123,\n                min_storage_bytes_percentage=123\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nBucketLevelProperty bucketLevelProperty = new BucketLevelProperty {\n    ActivityMetrics = new ActivityMetricsProperty {\n        IsEnabled = false\n    },\n    PrefixLevel = new PrefixLevelProperty {\n        StorageMetrics = new PrefixLevelStorageMetricsProperty {\n            IsEnabled = false,\n            SelectionCriteria = new SelectionCriteriaProperty {\n                Delimiter = \"delimiter\",\n                MaxDepth = 123,\n                MinStorageBytesPercentage = 123\n            }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nBucketLevelProperty bucketLevelProperty = BucketLevelProperty.builder()\n        .activityMetrics(ActivityMetricsProperty.builder()\n                .isEnabled(false)\n                .build())\n        .prefixLevel(PrefixLevelProperty.builder()\n                .storageMetrics(PrefixLevelStorageMetricsProperty.builder()\n                        .isEnabled(false)\n                        .selectionCriteria(SelectionCriteriaProperty.builder()\n                                .delimiter(\"delimiter\")\n                                .maxDepth(123)\n                                .minStorageBytesPercentage(123)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nbucketLevelProperty := &bucketLevelProperty{\n\tactivityMetrics: &activityMetricsProperty{\n\t\tisEnabled: jsii.Boolean(false),\n\t},\n\tprefixLevel: &prefixLevelProperty{\n\t\tstorageMetrics: &prefixLevelStorageMetricsProperty{\n\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\tselectionCriteria: &selectionCriteriaProperty{\n\t\t\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\t\t\tmaxDepth: jsii.Number(123),\n\t\t\t\tminStorageBytesPercentage: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst bucketLevelProperty: s3.CfnStorageLens.BucketLevelProperty = {\n  activityMetrics: {\n    isEnabled: false,\n  },\n  prefixLevel: {\n    storageMetrics: {\n      isEnabled: false,\n      selectionCriteria: {\n        delimiter: 'delimiter',\n        maxDepth: 123,\n        minStorageBytesPercentage: 123,\n      },\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.BucketLevelProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.BucketLevelProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bucketLevelProperty: s3.CfnStorageLens.BucketLevelProperty = {\n  activityMetrics: {\n    isEnabled: false,\n  },\n  prefixLevel: {\n    storageMetrics: {\n      isEnabled: false,\n      selectionCriteria: {\n        delimiter: 'delimiter',\n        maxDepth: 123,\n        minStorageBytesPercentage: 123,\n      },\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 14,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "474e4f93c3aa79eaf45ebd2857842024b375c8faa0988a502b897fe288dc5e80"
    },
    "6843bc4b47e0cba175bea1ff7f64aa1313aaf4db232798023afdee77fd8c688f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nbuckets_and_regions_property = s3.CfnStorageLens.BucketsAndRegionsProperty(\n    buckets=[\"buckets\"],\n    regions=[\"regions\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nBucketsAndRegionsProperty bucketsAndRegionsProperty = new BucketsAndRegionsProperty {\n    Buckets = new [] { \"buckets\" },\n    Regions = new [] { \"regions\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nBucketsAndRegionsProperty bucketsAndRegionsProperty = BucketsAndRegionsProperty.builder()\n        .buckets(List.of(\"buckets\"))\n        .regions(List.of(\"regions\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nbucketsAndRegionsProperty := &bucketsAndRegionsProperty{\n\tbuckets: []*string{\n\t\tjsii.String(\"buckets\"),\n\t},\n\tregions: []*string{\n\t\tjsii.String(\"regions\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst bucketsAndRegionsProperty: s3.CfnStorageLens.BucketsAndRegionsProperty = {\n  buckets: ['buckets'],\n  regions: ['regions'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.BucketsAndRegionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.BucketsAndRegionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bucketsAndRegionsProperty: s3.CfnStorageLens.BucketsAndRegionsProperty = {\n  buckets: ['buckets'],\n  regions: ['regions'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d6fbbed371eb364ae003a10d65b3d8b052fdfba6eb61d12c53cadc04a05a09dc"
    },
    "4fbdf4757d347a13d745beeb4a9776374d2609347e78909d80b8c923ad2848a5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ncloud_watch_metrics_property = s3.CfnStorageLens.CloudWatchMetricsProperty(\n    is_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nCloudWatchMetricsProperty cloudWatchMetricsProperty = new CloudWatchMetricsProperty {\n    IsEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nCloudWatchMetricsProperty cloudWatchMetricsProperty = CloudWatchMetricsProperty.builder()\n        .isEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ncloudWatchMetricsProperty := &cloudWatchMetricsProperty{\n\tisEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst cloudWatchMetricsProperty: s3.CfnStorageLens.CloudWatchMetricsProperty = {\n  isEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.CloudWatchMetricsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.CloudWatchMetricsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudWatchMetricsProperty: s3.CfnStorageLens.CloudWatchMetricsProperty = {\n  isEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "d754397da1357f62d53d37e492de85f6b978fa60a4deb228c0d52ba53855e1e2"
    },
    "67c8620b5324b867fa76aedf04b40c7355f0eaec51cac821c14b37e7899f28b5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# encryption: Any\n\ndata_export_property = s3.CfnStorageLens.DataExportProperty(\n    cloud_watch_metrics=s3.CfnStorageLens.CloudWatchMetricsProperty(\n        is_enabled=False\n    ),\n    s3_bucket_destination=s3.CfnStorageLens.S3BucketDestinationProperty(\n        account_id=\"accountId\",\n        arn=\"arn\",\n        format=\"format\",\n        output_schema_version=\"outputSchemaVersion\",\n\n        # the properties below are optional\n        encryption=encryption,\n        prefix=\"prefix\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar encryption;\n\nDataExportProperty dataExportProperty = new DataExportProperty {\n    CloudWatchMetrics = new CloudWatchMetricsProperty {\n        IsEnabled = false\n    },\n    S3BucketDestination = new S3BucketDestinationProperty {\n        AccountId = \"accountId\",\n        Arn = \"arn\",\n        Format = \"format\",\n        OutputSchemaVersion = \"outputSchemaVersion\",\n\n        // the properties below are optional\n        Encryption = encryption,\n        Prefix = \"prefix\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject encryption;\n\nDataExportProperty dataExportProperty = DataExportProperty.builder()\n        .cloudWatchMetrics(CloudWatchMetricsProperty.builder()\n                .isEnabled(false)\n                .build())\n        .s3BucketDestination(S3BucketDestinationProperty.builder()\n                .accountId(\"accountId\")\n                .arn(\"arn\")\n                .format(\"format\")\n                .outputSchemaVersion(\"outputSchemaVersion\")\n\n                // the properties below are optional\n                .encryption(encryption)\n                .prefix(\"prefix\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar encryption interface{}\ndataExportProperty := &dataExportProperty{\n\tcloudWatchMetrics: &cloudWatchMetricsProperty{\n\t\tisEnabled: jsii.Boolean(false),\n\t},\n\ts3BucketDestination: &s3BucketDestinationProperty{\n\t\taccountId: jsii.String(\"accountId\"),\n\t\tarn: jsii.String(\"arn\"),\n\t\tformat: jsii.String(\"format\"),\n\t\toutputSchemaVersion: jsii.String(\"outputSchemaVersion\"),\n\n\t\t// the properties below are optional\n\t\tencryption: encryption,\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\nconst dataExportProperty: s3.CfnStorageLens.DataExportProperty = {\n  cloudWatchMetrics: {\n    isEnabled: false,\n  },\n  s3BucketDestination: {\n    accountId: 'accountId',\n    arn: 'arn',\n    format: 'format',\n    outputSchemaVersion: 'outputSchemaVersion',\n\n    // the properties below are optional\n    encryption: encryption,\n    prefix: 'prefix',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.DataExportProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.DataExportProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataExportProperty: s3.CfnStorageLens.DataExportProperty = {\n  cloudWatchMetrics: {\n    isEnabled: false,\n  },\n  s3BucketDestination: {\n    accountId: 'accountId',\n    arn: 'arn',\n    format: 'format',\n    outputSchemaVersion: 'outputSchemaVersion',\n\n    // the properties below are optional\n    encryption: encryption,\n    prefix: 'prefix',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 16,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "1bd84c9b974162cfadf178b02dec265d869aebdb635b91aa56cacfb9ce61652f"
    },
    "c17cadeb0c08ee8a2fc99021e30cc486ddf063cd82381881ae9a3b97d1f1ffd7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nprefix_level_property = s3.CfnStorageLens.PrefixLevelProperty(\n    storage_metrics=s3.CfnStorageLens.PrefixLevelStorageMetricsProperty(\n        is_enabled=False,\n        selection_criteria=s3.CfnStorageLens.SelectionCriteriaProperty(\n            delimiter=\"delimiter\",\n            max_depth=123,\n            min_storage_bytes_percentage=123\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nPrefixLevelProperty prefixLevelProperty = new PrefixLevelProperty {\n    StorageMetrics = new PrefixLevelStorageMetricsProperty {\n        IsEnabled = false,\n        SelectionCriteria = new SelectionCriteriaProperty {\n            Delimiter = \"delimiter\",\n            MaxDepth = 123,\n            MinStorageBytesPercentage = 123\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nPrefixLevelProperty prefixLevelProperty = PrefixLevelProperty.builder()\n        .storageMetrics(PrefixLevelStorageMetricsProperty.builder()\n                .isEnabled(false)\n                .selectionCriteria(SelectionCriteriaProperty.builder()\n                        .delimiter(\"delimiter\")\n                        .maxDepth(123)\n                        .minStorageBytesPercentage(123)\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nprefixLevelProperty := &prefixLevelProperty{\n\tstorageMetrics: &prefixLevelStorageMetricsProperty{\n\t\tisEnabled: jsii.Boolean(false),\n\t\tselectionCriteria: &selectionCriteriaProperty{\n\t\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\t\tmaxDepth: jsii.Number(123),\n\t\t\tminStorageBytesPercentage: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst prefixLevelProperty: s3.CfnStorageLens.PrefixLevelProperty = {\n  storageMetrics: {\n    isEnabled: false,\n    selectionCriteria: {\n      delimiter: 'delimiter',\n      maxDepth: 123,\n      minStorageBytesPercentage: 123,\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst prefixLevelProperty: s3.CfnStorageLens.PrefixLevelProperty = {\n  storageMetrics: {\n    isEnabled: false,\n    selectionCriteria: {\n      delimiter: 'delimiter',\n      maxDepth: 123,\n      minStorageBytesPercentage: 123,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "00f383d5ac65e00209ac3e72d29311878a46419d238d8c11bf0e7b42dff85e0d"
    },
    "f31cdfc104a644ab877b9884135ac12a0c8c55f20aeb77a4641ed446c82c025e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nprefix_level_storage_metrics_property = s3.CfnStorageLens.PrefixLevelStorageMetricsProperty(\n    is_enabled=False,\n    selection_criteria=s3.CfnStorageLens.SelectionCriteriaProperty(\n        delimiter=\"delimiter\",\n        max_depth=123,\n        min_storage_bytes_percentage=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nPrefixLevelStorageMetricsProperty prefixLevelStorageMetricsProperty = new PrefixLevelStorageMetricsProperty {\n    IsEnabled = false,\n    SelectionCriteria = new SelectionCriteriaProperty {\n        Delimiter = \"delimiter\",\n        MaxDepth = 123,\n        MinStorageBytesPercentage = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nPrefixLevelStorageMetricsProperty prefixLevelStorageMetricsProperty = PrefixLevelStorageMetricsProperty.builder()\n        .isEnabled(false)\n        .selectionCriteria(SelectionCriteriaProperty.builder()\n                .delimiter(\"delimiter\")\n                .maxDepth(123)\n                .minStorageBytesPercentage(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nprefixLevelStorageMetricsProperty := &prefixLevelStorageMetricsProperty{\n\tisEnabled: jsii.Boolean(false),\n\tselectionCriteria: &selectionCriteriaProperty{\n\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\tmaxDepth: jsii.Number(123),\n\t\tminStorageBytesPercentage: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst prefixLevelStorageMetricsProperty: s3.CfnStorageLens.PrefixLevelStorageMetricsProperty = {\n  isEnabled: false,\n  selectionCriteria: {\n    delimiter: 'delimiter',\n    maxDepth: 123,\n    minStorageBytesPercentage: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelStorageMetricsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelStorageMetricsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst prefixLevelStorageMetricsProperty: s3.CfnStorageLens.PrefixLevelStorageMetricsProperty = {\n  isEnabled: false,\n  selectionCriteria: {\n    delimiter: 'delimiter',\n    maxDepth: 123,\n    minStorageBytesPercentage: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 10,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "3bad838f2725e805eab7480fcc39e0522116e622de4710c858d4c4ffbf6fe25d"
    },
    "0a77665bd206312f5f785be019fbb27450864161f02011f9cd77eddc3c86b42a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# encryption: Any\n\ns3_bucket_destination_property = s3.CfnStorageLens.S3BucketDestinationProperty(\n    account_id=\"accountId\",\n    arn=\"arn\",\n    format=\"format\",\n    output_schema_version=\"outputSchemaVersion\",\n\n    # the properties below are optional\n    encryption=encryption,\n    prefix=\"prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar encryption;\n\nS3BucketDestinationProperty s3BucketDestinationProperty = new S3BucketDestinationProperty {\n    AccountId = \"accountId\",\n    Arn = \"arn\",\n    Format = \"format\",\n    OutputSchemaVersion = \"outputSchemaVersion\",\n\n    // the properties below are optional\n    Encryption = encryption,\n    Prefix = \"prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject encryption;\n\nS3BucketDestinationProperty s3BucketDestinationProperty = S3BucketDestinationProperty.builder()\n        .accountId(\"accountId\")\n        .arn(\"arn\")\n        .format(\"format\")\n        .outputSchemaVersion(\"outputSchemaVersion\")\n\n        // the properties below are optional\n        .encryption(encryption)\n        .prefix(\"prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar encryption interface{}\ns3BucketDestinationProperty := &s3BucketDestinationProperty{\n\taccountId: jsii.String(\"accountId\"),\n\tarn: jsii.String(\"arn\"),\n\tformat: jsii.String(\"format\"),\n\toutputSchemaVersion: jsii.String(\"outputSchemaVersion\"),\n\n\t// the properties below are optional\n\tencryption: encryption,\n\tprefix: jsii.String(\"prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\nconst s3BucketDestinationProperty: s3.CfnStorageLens.S3BucketDestinationProperty = {\n  accountId: 'accountId',\n  arn: 'arn',\n  format: 'format',\n  outputSchemaVersion: 'outputSchemaVersion',\n\n  // the properties below are optional\n  encryption: encryption,\n  prefix: 'prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.S3BucketDestinationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.S3BucketDestinationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3BucketDestinationProperty: s3.CfnStorageLens.S3BucketDestinationProperty = {\n  accountId: 'accountId',\n  arn: 'arn',\n  format: 'format',\n  outputSchemaVersion: 'outputSchemaVersion',\n\n  // the properties below are optional\n  encryption: encryption,\n  prefix: 'prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 13,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "cc4e92916e0f4b5bd5a66bcb9473af730418c72dc75da661a9595d71f8318fcc"
    },
    "70d3a331ab08479ef27f0c57800da2aff41792b0c1ff8bd2dfd6acf0af296576": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nselection_criteria_property = s3.CfnStorageLens.SelectionCriteriaProperty(\n    delimiter=\"delimiter\",\n    max_depth=123,\n    min_storage_bytes_percentage=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nSelectionCriteriaProperty selectionCriteriaProperty = new SelectionCriteriaProperty {\n    Delimiter = \"delimiter\",\n    MaxDepth = 123,\n    MinStorageBytesPercentage = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nSelectionCriteriaProperty selectionCriteriaProperty = SelectionCriteriaProperty.builder()\n        .delimiter(\"delimiter\")\n        .maxDepth(123)\n        .minStorageBytesPercentage(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nselectionCriteriaProperty := &selectionCriteriaProperty{\n\tdelimiter: jsii.String(\"delimiter\"),\n\tmaxDepth: jsii.Number(123),\n\tminStorageBytesPercentage: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst selectionCriteriaProperty: s3.CfnStorageLens.SelectionCriteriaProperty = {\n  delimiter: 'delimiter',\n  maxDepth: 123,\n  minStorageBytesPercentage: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.SelectionCriteriaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.SelectionCriteriaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst selectionCriteriaProperty: s3.CfnStorageLens.SelectionCriteriaProperty = {\n  delimiter: 'delimiter',\n  maxDepth: 123,\n  minStorageBytesPercentage: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "5ffbdc28440332d7ee6bebafd4754f23acbdc607f3893d87428d28247371e870"
    },
    "ad4351dc4568e891c0099dd6f1ee0be68aa795665095ad613f1adbc814c35938": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# encryption: Any\n\nstorage_lens_configuration_property = s3.CfnStorageLens.StorageLensConfigurationProperty(\n    account_level=s3.CfnStorageLens.AccountLevelProperty(\n        bucket_level=s3.CfnStorageLens.BucketLevelProperty(\n            activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n                is_enabled=False\n            ),\n            prefix_level=s3.CfnStorageLens.PrefixLevelProperty(\n                storage_metrics=s3.CfnStorageLens.PrefixLevelStorageMetricsProperty(\n                    is_enabled=False,\n                    selection_criteria=s3.CfnStorageLens.SelectionCriteriaProperty(\n                        delimiter=\"delimiter\",\n                        max_depth=123,\n                        min_storage_bytes_percentage=123\n                    )\n                )\n            )\n        ),\n\n        # the properties below are optional\n        activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n            is_enabled=False\n        )\n    ),\n    id=\"id\",\n    is_enabled=False,\n\n    # the properties below are optional\n    aws_org=s3.CfnStorageLens.AwsOrgProperty(\n        arn=\"arn\"\n    ),\n    data_export=s3.CfnStorageLens.DataExportProperty(\n        cloud_watch_metrics=s3.CfnStorageLens.CloudWatchMetricsProperty(\n            is_enabled=False\n        ),\n        s3_bucket_destination=s3.CfnStorageLens.S3BucketDestinationProperty(\n            account_id=\"accountId\",\n            arn=\"arn\",\n            format=\"format\",\n            output_schema_version=\"outputSchemaVersion\",\n\n            # the properties below are optional\n            encryption=encryption,\n            prefix=\"prefix\"\n        )\n    ),\n    exclude=s3.CfnStorageLens.BucketsAndRegionsProperty(\n        buckets=[\"buckets\"],\n        regions=[\"regions\"]\n    ),\n    include=s3.CfnStorageLens.BucketsAndRegionsProperty(\n        buckets=[\"buckets\"],\n        regions=[\"regions\"]\n    ),\n    storage_lens_arn=\"storageLensArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar encryption;\n\nStorageLensConfigurationProperty storageLensConfigurationProperty = new StorageLensConfigurationProperty {\n    AccountLevel = new AccountLevelProperty {\n        BucketLevel = new BucketLevelProperty {\n            ActivityMetrics = new ActivityMetricsProperty {\n                IsEnabled = false\n            },\n            PrefixLevel = new PrefixLevelProperty {\n                StorageMetrics = new PrefixLevelStorageMetricsProperty {\n                    IsEnabled = false,\n                    SelectionCriteria = new SelectionCriteriaProperty {\n                        Delimiter = \"delimiter\",\n                        MaxDepth = 123,\n                        MinStorageBytesPercentage = 123\n                    }\n                }\n            }\n        },\n\n        // the properties below are optional\n        ActivityMetrics = new ActivityMetricsProperty {\n            IsEnabled = false\n        }\n    },\n    Id = \"id\",\n    IsEnabled = false,\n\n    // the properties below are optional\n    AwsOrg = new AwsOrgProperty {\n        Arn = \"arn\"\n    },\n    DataExport = new DataExportProperty {\n        CloudWatchMetrics = new CloudWatchMetricsProperty {\n            IsEnabled = false\n        },\n        S3BucketDestination = new S3BucketDestinationProperty {\n            AccountId = \"accountId\",\n            Arn = \"arn\",\n            Format = \"format\",\n            OutputSchemaVersion = \"outputSchemaVersion\",\n\n            // the properties below are optional\n            Encryption = encryption,\n            Prefix = \"prefix\"\n        }\n    },\n    Exclude = new BucketsAndRegionsProperty {\n        Buckets = new [] { \"buckets\" },\n        Regions = new [] { \"regions\" }\n    },\n    Include = new BucketsAndRegionsProperty {\n        Buckets = new [] { \"buckets\" },\n        Regions = new [] { \"regions\" }\n    },\n    StorageLensArn = \"storageLensArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject encryption;\n\nStorageLensConfigurationProperty storageLensConfigurationProperty = StorageLensConfigurationProperty.builder()\n        .accountLevel(AccountLevelProperty.builder()\n                .bucketLevel(BucketLevelProperty.builder()\n                        .activityMetrics(ActivityMetricsProperty.builder()\n                                .isEnabled(false)\n                                .build())\n                        .prefixLevel(PrefixLevelProperty.builder()\n                                .storageMetrics(PrefixLevelStorageMetricsProperty.builder()\n                                        .isEnabled(false)\n                                        .selectionCriteria(SelectionCriteriaProperty.builder()\n                                                .delimiter(\"delimiter\")\n                                                .maxDepth(123)\n                                                .minStorageBytesPercentage(123)\n                                                .build())\n                                        .build())\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .activityMetrics(ActivityMetricsProperty.builder()\n                        .isEnabled(false)\n                        .build())\n                .build())\n        .id(\"id\")\n        .isEnabled(false)\n\n        // the properties below are optional\n        .awsOrg(AwsOrgProperty.builder()\n                .arn(\"arn\")\n                .build())\n        .dataExport(DataExportProperty.builder()\n                .cloudWatchMetrics(CloudWatchMetricsProperty.builder()\n                        .isEnabled(false)\n                        .build())\n                .s3BucketDestination(S3BucketDestinationProperty.builder()\n                        .accountId(\"accountId\")\n                        .arn(\"arn\")\n                        .format(\"format\")\n                        .outputSchemaVersion(\"outputSchemaVersion\")\n\n                        // the properties below are optional\n                        .encryption(encryption)\n                        .prefix(\"prefix\")\n                        .build())\n                .build())\n        .exclude(BucketsAndRegionsProperty.builder()\n                .buckets(List.of(\"buckets\"))\n                .regions(List.of(\"regions\"))\n                .build())\n        .include(BucketsAndRegionsProperty.builder()\n                .buckets(List.of(\"buckets\"))\n                .regions(List.of(\"regions\"))\n                .build())\n        .storageLensArn(\"storageLensArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar encryption interface{}\nstorageLensConfigurationProperty := &storageLensConfigurationProperty{\n\taccountLevel: &accountLevelProperty{\n\t\tbucketLevel: &bucketLevelProperty{\n\t\t\tactivityMetrics: &activityMetricsProperty{\n\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tprefixLevel: &prefixLevelProperty{\n\t\t\t\tstorageMetrics: &prefixLevelStorageMetricsProperty{\n\t\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t\t\tselectionCriteria: &selectionCriteriaProperty{\n\t\t\t\t\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\t\t\t\t\tmaxDepth: jsii.Number(123),\n\t\t\t\t\t\tminStorageBytesPercentage: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tactivityMetrics: &activityMetricsProperty{\n\t\t\tisEnabled: jsii.Boolean(false),\n\t\t},\n\t},\n\tid: jsii.String(\"id\"),\n\tisEnabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tawsOrg: &awsOrgProperty{\n\t\tarn: jsii.String(\"arn\"),\n\t},\n\tdataExport: &dataExportProperty{\n\t\tcloudWatchMetrics: &cloudWatchMetricsProperty{\n\t\t\tisEnabled: jsii.Boolean(false),\n\t\t},\n\t\ts3BucketDestination: &s3BucketDestinationProperty{\n\t\t\taccountId: jsii.String(\"accountId\"),\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t\tformat: jsii.String(\"format\"),\n\t\t\toutputSchemaVersion: jsii.String(\"outputSchemaVersion\"),\n\n\t\t\t// the properties below are optional\n\t\t\tencryption: encryption,\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t},\n\texclude: &bucketsAndRegionsProperty{\n\t\tbuckets: []*string{\n\t\t\tjsii.String(\"buckets\"),\n\t\t},\n\t\tregions: []*string{\n\t\t\tjsii.String(\"regions\"),\n\t\t},\n\t},\n\tinclude: &bucketsAndRegionsProperty{\n\t\tbuckets: []*string{\n\t\t\tjsii.String(\"buckets\"),\n\t\t},\n\t\tregions: []*string{\n\t\t\tjsii.String(\"regions\"),\n\t\t},\n\t},\n\tstorageLensArn: jsii.String(\"storageLensArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\nconst storageLensConfigurationProperty: s3.CfnStorageLens.StorageLensConfigurationProperty = {\n  accountLevel: {\n    bucketLevel: {\n      activityMetrics: {\n        isEnabled: false,\n      },\n      prefixLevel: {\n        storageMetrics: {\n          isEnabled: false,\n          selectionCriteria: {\n            delimiter: 'delimiter',\n            maxDepth: 123,\n            minStorageBytesPercentage: 123,\n          },\n        },\n      },\n    },\n\n    // the properties below are optional\n    activityMetrics: {\n      isEnabled: false,\n    },\n  },\n  id: 'id',\n  isEnabled: false,\n\n  // the properties below are optional\n  awsOrg: {\n    arn: 'arn',\n  },\n  dataExport: {\n    cloudWatchMetrics: {\n      isEnabled: false,\n    },\n    s3BucketDestination: {\n      accountId: 'accountId',\n      arn: 'arn',\n      format: 'format',\n      outputSchemaVersion: 'outputSchemaVersion',\n\n      // the properties below are optional\n      encryption: encryption,\n      prefix: 'prefix',\n    },\n  },\n  exclude: {\n    buckets: ['buckets'],\n    regions: ['regions'],\n  },\n  include: {\n    buckets: ['buckets'],\n    regions: ['regions'],\n  },\n  storageLensArn: 'storageLensArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLens.StorageLensConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLens.StorageLensConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst storageLensConfigurationProperty: s3.CfnStorageLens.StorageLensConfigurationProperty = {\n  accountLevel: {\n    bucketLevel: {\n      activityMetrics: {\n        isEnabled: false,\n      },\n      prefixLevel: {\n        storageMetrics: {\n          isEnabled: false,\n          selectionCriteria: {\n            delimiter: 'delimiter',\n            maxDepth: 123,\n            minStorageBytesPercentage: 123,\n          },\n        },\n      },\n    },\n\n    // the properties below are optional\n    activityMetrics: {\n      isEnabled: false,\n    },\n  },\n  id: 'id',\n  isEnabled: false,\n\n  // the properties below are optional\n  awsOrg: {\n    arn: 'arn',\n  },\n  dataExport: {\n    cloudWatchMetrics: {\n      isEnabled: false,\n    },\n    s3BucketDestination: {\n      accountId: 'accountId',\n      arn: 'arn',\n      format: 'format',\n      outputSchemaVersion: 'outputSchemaVersion',\n\n      // the properties below are optional\n      encryption: encryption,\n      prefix: 'prefix',\n    },\n  },\n  exclude: {\n    buckets: ['buckets'],\n    regions: ['regions'],\n  },\n  include: {\n    buckets: ['buckets'],\n    regions: ['regions'],\n  },\n  storageLensArn: 'storageLensArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 14,
        "75": 41,
        "91": 5,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 14,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 34,
        "290": 1
      },
      "fqnsFingerprint": "47aa6925716f600f26e9813ab5453cddebbc9764c05fc65bd220cfdc8e41125b"
    },
    "6aa5ad7c972a502a097fcfd9bd610f6d31a8dfb0b68fff7f7d8b3d9403684b23": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# encryption: Any\n\ncfn_storage_lens_props = s3.CfnStorageLensProps(\n    storage_lens_configuration=s3.CfnStorageLens.StorageLensConfigurationProperty(\n        account_level=s3.CfnStorageLens.AccountLevelProperty(\n            bucket_level=s3.CfnStorageLens.BucketLevelProperty(\n                activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n                    is_enabled=False\n                ),\n                prefix_level=s3.CfnStorageLens.PrefixLevelProperty(\n                    storage_metrics=s3.CfnStorageLens.PrefixLevelStorageMetricsProperty(\n                        is_enabled=False,\n                        selection_criteria=s3.CfnStorageLens.SelectionCriteriaProperty(\n                            delimiter=\"delimiter\",\n                            max_depth=123,\n                            min_storage_bytes_percentage=123\n                        )\n                    )\n                )\n            ),\n\n            # the properties below are optional\n            activity_metrics=s3.CfnStorageLens.ActivityMetricsProperty(\n                is_enabled=False\n            )\n        ),\n        id=\"id\",\n        is_enabled=False,\n\n        # the properties below are optional\n        aws_org=s3.CfnStorageLens.AwsOrgProperty(\n            arn=\"arn\"\n        ),\n        data_export=s3.CfnStorageLens.DataExportProperty(\n            cloud_watch_metrics=s3.CfnStorageLens.CloudWatchMetricsProperty(\n                is_enabled=False\n            ),\n            s3_bucket_destination=s3.CfnStorageLens.S3BucketDestinationProperty(\n                account_id=\"accountId\",\n                arn=\"arn\",\n                format=\"format\",\n                output_schema_version=\"outputSchemaVersion\",\n\n                # the properties below are optional\n                encryption=encryption,\n                prefix=\"prefix\"\n            )\n        ),\n        exclude=s3.CfnStorageLens.BucketsAndRegionsProperty(\n            buckets=[\"buckets\"],\n            regions=[\"regions\"]\n        ),\n        include=s3.CfnStorageLens.BucketsAndRegionsProperty(\n            buckets=[\"buckets\"],\n            regions=[\"regions\"]\n        ),\n        storage_lens_arn=\"storageLensArn\"\n    ),\n\n    # the properties below are optional\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nvar encryption;\n\nCfnStorageLensProps cfnStorageLensProps = new CfnStorageLensProps {\n    StorageLensConfiguration = new StorageLensConfigurationProperty {\n        AccountLevel = new AccountLevelProperty {\n            BucketLevel = new BucketLevelProperty {\n                ActivityMetrics = new ActivityMetricsProperty {\n                    IsEnabled = false\n                },\n                PrefixLevel = new PrefixLevelProperty {\n                    StorageMetrics = new PrefixLevelStorageMetricsProperty {\n                        IsEnabled = false,\n                        SelectionCriteria = new SelectionCriteriaProperty {\n                            Delimiter = \"delimiter\",\n                            MaxDepth = 123,\n                            MinStorageBytesPercentage = 123\n                        }\n                    }\n                }\n            },\n\n            // the properties below are optional\n            ActivityMetrics = new ActivityMetricsProperty {\n                IsEnabled = false\n            }\n        },\n        Id = \"id\",\n        IsEnabled = false,\n\n        // the properties below are optional\n        AwsOrg = new AwsOrgProperty {\n            Arn = \"arn\"\n        },\n        DataExport = new DataExportProperty {\n            CloudWatchMetrics = new CloudWatchMetricsProperty {\n                IsEnabled = false\n            },\n            S3BucketDestination = new S3BucketDestinationProperty {\n                AccountId = \"accountId\",\n                Arn = \"arn\",\n                Format = \"format\",\n                OutputSchemaVersion = \"outputSchemaVersion\",\n\n                // the properties below are optional\n                Encryption = encryption,\n                Prefix = \"prefix\"\n            }\n        },\n        Exclude = new BucketsAndRegionsProperty {\n            Buckets = new [] { \"buckets\" },\n            Regions = new [] { \"regions\" }\n        },\n        Include = new BucketsAndRegionsProperty {\n            Buckets = new [] { \"buckets\" },\n            Regions = new [] { \"regions\" }\n        },\n        StorageLensArn = \"storageLensArn\"\n    },\n\n    // the properties below are optional\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nObject encryption;\n\nCfnStorageLensProps cfnStorageLensProps = CfnStorageLensProps.builder()\n        .storageLensConfiguration(StorageLensConfigurationProperty.builder()\n                .accountLevel(AccountLevelProperty.builder()\n                        .bucketLevel(BucketLevelProperty.builder()\n                                .activityMetrics(ActivityMetricsProperty.builder()\n                                        .isEnabled(false)\n                                        .build())\n                                .prefixLevel(PrefixLevelProperty.builder()\n                                        .storageMetrics(PrefixLevelStorageMetricsProperty.builder()\n                                                .isEnabled(false)\n                                                .selectionCriteria(SelectionCriteriaProperty.builder()\n                                                        .delimiter(\"delimiter\")\n                                                        .maxDepth(123)\n                                                        .minStorageBytesPercentage(123)\n                                                        .build())\n                                                .build())\n                                        .build())\n                                .build())\n\n                        // the properties below are optional\n                        .activityMetrics(ActivityMetricsProperty.builder()\n                                .isEnabled(false)\n                                .build())\n                        .build())\n                .id(\"id\")\n                .isEnabled(false)\n\n                // the properties below are optional\n                .awsOrg(AwsOrgProperty.builder()\n                        .arn(\"arn\")\n                        .build())\n                .dataExport(DataExportProperty.builder()\n                        .cloudWatchMetrics(CloudWatchMetricsProperty.builder()\n                                .isEnabled(false)\n                                .build())\n                        .s3BucketDestination(S3BucketDestinationProperty.builder()\n                                .accountId(\"accountId\")\n                                .arn(\"arn\")\n                                .format(\"format\")\n                                .outputSchemaVersion(\"outputSchemaVersion\")\n\n                                // the properties below are optional\n                                .encryption(encryption)\n                                .prefix(\"prefix\")\n                                .build())\n                        .build())\n                .exclude(BucketsAndRegionsProperty.builder()\n                        .buckets(List.of(\"buckets\"))\n                        .regions(List.of(\"regions\"))\n                        .build())\n                .include(BucketsAndRegionsProperty.builder()\n                        .buckets(List.of(\"buckets\"))\n                        .regions(List.of(\"regions\"))\n                        .build())\n                .storageLensArn(\"storageLensArn\")\n                .build())\n\n        // the properties below are optional\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar encryption interface{}\ncfnStorageLensProps := &cfnStorageLensProps{\n\tstorageLensConfiguration: &storageLensConfigurationProperty{\n\t\taccountLevel: &accountLevelProperty{\n\t\t\tbucketLevel: &bucketLevelProperty{\n\t\t\t\tactivityMetrics: &activityMetricsProperty{\n\t\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\tprefixLevel: &prefixLevelProperty{\n\t\t\t\t\tstorageMetrics: &prefixLevelStorageMetricsProperty{\n\t\t\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t\t\t\tselectionCriteria: &selectionCriteriaProperty{\n\t\t\t\t\t\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\t\t\t\t\t\tmaxDepth: jsii.Number(123),\n\t\t\t\t\t\t\tminStorageBytesPercentage: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tactivityMetrics: &activityMetricsProperty{\n\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t\tid: jsii.String(\"id\"),\n\t\tisEnabled: jsii.Boolean(false),\n\n\t\t// the properties below are optional\n\t\tawsOrg: &awsOrgProperty{\n\t\t\tarn: jsii.String(\"arn\"),\n\t\t},\n\t\tdataExport: &dataExportProperty{\n\t\t\tcloudWatchMetrics: &cloudWatchMetricsProperty{\n\t\t\t\tisEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\ts3BucketDestination: &s3BucketDestinationProperty{\n\t\t\t\taccountId: jsii.String(\"accountId\"),\n\t\t\t\tarn: jsii.String(\"arn\"),\n\t\t\t\tformat: jsii.String(\"format\"),\n\t\t\t\toutputSchemaVersion: jsii.String(\"outputSchemaVersion\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tencryption: encryption,\n\t\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t},\n\t\texclude: &bucketsAndRegionsProperty{\n\t\t\tbuckets: []*string{\n\t\t\t\tjsii.String(\"buckets\"),\n\t\t\t},\n\t\t\tregions: []*string{\n\t\t\t\tjsii.String(\"regions\"),\n\t\t\t},\n\t\t},\n\t\tinclude: &bucketsAndRegionsProperty{\n\t\t\tbuckets: []*string{\n\t\t\t\tjsii.String(\"buckets\"),\n\t\t\t},\n\t\t\tregions: []*string{\n\t\t\t\tjsii.String(\"regions\"),\n\t\t\t},\n\t\t},\n\t\tstorageLensArn: jsii.String(\"storageLensArn\"),\n\t},\n\n\t// the properties below are optional\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\nconst cfnStorageLensProps: s3.CfnStorageLensProps = {\n  storageLensConfiguration: {\n    accountLevel: {\n      bucketLevel: {\n        activityMetrics: {\n          isEnabled: false,\n        },\n        prefixLevel: {\n          storageMetrics: {\n            isEnabled: false,\n            selectionCriteria: {\n              delimiter: 'delimiter',\n              maxDepth: 123,\n              minStorageBytesPercentage: 123,\n            },\n          },\n        },\n      },\n\n      // the properties below are optional\n      activityMetrics: {\n        isEnabled: false,\n      },\n    },\n    id: 'id',\n    isEnabled: false,\n\n    // the properties below are optional\n    awsOrg: {\n      arn: 'arn',\n    },\n    dataExport: {\n      cloudWatchMetrics: {\n        isEnabled: false,\n      },\n      s3BucketDestination: {\n        accountId: 'accountId',\n        arn: 'arn',\n        format: 'format',\n        outputSchemaVersion: 'outputSchemaVersion',\n\n        // the properties below are optional\n        encryption: encryption,\n        prefix: 'prefix',\n      },\n    },\n    exclude: {\n      buckets: ['buckets'],\n      regions: ['regions'],\n    },\n    include: {\n      buckets: ['buckets'],\n      regions: ['regions'],\n    },\n    storageLensArn: 'storageLensArn',\n  },\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CfnStorageLensProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CfnStorageLensProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const encryption: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnStorageLensProps: s3.CfnStorageLensProps = {\n  storageLensConfiguration: {\n    accountLevel: {\n      bucketLevel: {\n        activityMetrics: {\n          isEnabled: false,\n        },\n        prefixLevel: {\n          storageMetrics: {\n            isEnabled: false,\n            selectionCriteria: {\n              delimiter: 'delimiter',\n              maxDepth: 123,\n              minStorageBytesPercentage: 123,\n            },\n          },\n        },\n      },\n\n      // the properties below are optional\n      activityMetrics: {\n        isEnabled: false,\n      },\n    },\n    id: 'id',\n    isEnabled: false,\n\n    // the properties below are optional\n    awsOrg: {\n      arn: 'arn',\n    },\n    dataExport: {\n      cloudWatchMetrics: {\n        isEnabled: false,\n      },\n      s3BucketDestination: {\n        accountId: 'accountId',\n        arn: 'arn',\n        format: 'format',\n        outputSchemaVersion: 'outputSchemaVersion',\n\n        // the properties below are optional\n        encryption: encryption,\n        prefix: 'prefix',\n      },\n    },\n    exclude: {\n      buckets: ['buckets'],\n      regions: ['regions'],\n    },\n    include: {\n      buckets: ['buckets'],\n      regions: ['regions'],\n    },\n    storageLensArn: 'storageLensArn',\n  },\n\n  // the properties below are optional\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 16,
        "75": 44,
        "91": 5,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 5,
        "193": 16,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 38,
        "290": 1
      },
      "fqnsFingerprint": "fcb68daae0a3d526ef4e6f777f704f23385d8635049595767d439d1c3cbe22f1"
    },
    "cb3e987432672d4919d336500702c64267e87beb1bdce7a58e388b7d2cc901e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ncors_rule = s3.CorsRule(\n    allowed_methods=[s3.HttpMethods.GET],\n    allowed_origins=[\"allowedOrigins\"],\n\n    # the properties below are optional\n    allowed_headers=[\"allowedHeaders\"],\n    exposed_headers=[\"exposedHeaders\"],\n    id=\"id\",\n    max_age=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nCorsRule corsRule = new CorsRule {\n    AllowedMethods = new [] { HttpMethods.GET },\n    AllowedOrigins = new [] { \"allowedOrigins\" },\n\n    // the properties below are optional\n    AllowedHeaders = new [] { \"allowedHeaders\" },\n    ExposedHeaders = new [] { \"exposedHeaders\" },\n    Id = \"id\",\n    MaxAge = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nCorsRule corsRule = CorsRule.builder()\n        .allowedMethods(List.of(HttpMethods.GET))\n        .allowedOrigins(List.of(\"allowedOrigins\"))\n\n        // the properties below are optional\n        .allowedHeaders(List.of(\"allowedHeaders\"))\n        .exposedHeaders(List.of(\"exposedHeaders\"))\n        .id(\"id\")\n        .maxAge(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ncorsRule := &corsRule{\n\tallowedMethods: []httpMethods{\n\t\ts3.*httpMethods_GET,\n\t},\n\tallowedOrigins: []*string{\n\t\tjsii.String(\"allowedOrigins\"),\n\t},\n\n\t// the properties below are optional\n\tallowedHeaders: []*string{\n\t\tjsii.String(\"allowedHeaders\"),\n\t},\n\texposedHeaders: []*string{\n\t\tjsii.String(\"exposedHeaders\"),\n\t},\n\tid: jsii.String(\"id\"),\n\tmaxAge: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst corsRule: s3.CorsRule = {\n  allowedMethods: [s3.HttpMethods.GET],\n  allowedOrigins: ['allowedOrigins'],\n\n  // the properties below are optional\n  allowedHeaders: ['allowedHeaders'],\n  exposedHeaders: ['exposedHeaders'],\n  id: 'id',\n  maxAge: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.CorsRule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.CorsRule",
        "@aws-cdk/aws-s3.HttpMethods",
        "@aws-cdk/aws-s3.HttpMethods#GET"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst corsRule: s3.CorsRule = {\n  allowedMethods: [s3.HttpMethods.GET],\n  allowedOrigins: ['allowedOrigins'],\n\n  // the properties below are optional\n  allowedHeaders: ['allowedHeaders'],\n  exposedHeaders: ['exposedHeaders'],\n  id: 'id',\n  maxAge: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 13,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "7858be631b398a69ce3b37ad27d9bd0d8dad43ad3c2b141a708e32721e0e7ca2"
    },
    "d25135a362e595abbeca70b13dd66ff851a0637cb0bbd9ce27f0d3c680862416": {
      "translations": {
        "python": {
          "source": "# my_queue: sqs.Queue\n\nbucket = s3.Bucket(self, \"MyBucket\")\nbucket.add_event_notification(s3.EventType.OBJECT_REMOVED,\n    s3n.SqsDestination(my_queue), prefix=\"foo/\", suffix=\".jpg\")",
          "version": "2"
        },
        "csharp": {
          "source": "Queue myQueue;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.AddEventNotification(EventType.OBJECT_REMOVED,\nnew SqsDestination(myQueue), new NotificationKeyFilter { Prefix = \"foo/\", Suffix = \".jpg\" });",
          "version": "1"
        },
        "java": {
          "source": "Queue myQueue;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.addEventNotification(EventType.OBJECT_REMOVED,\nnew SqsDestination(myQueue), NotificationKeyFilter.builder().prefix(\"foo/\").suffix(\".jpg\").build());",
          "version": "1"
        },
        "go": {
          "source": "var myQueue queue\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.addEventNotification(s3.eventType_OBJECT_REMOVED,\ns3n.NewSqsDestination(myQueue), &notificationKeyFilter{\n\tprefix: jsii.String(\"foo/\"),\n\tsuffix: jsii.String(\".jpg\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myQueue: sqs.Queue;\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.addEventNotification(s3.EventType.OBJECT_REMOVED,\n  new s3n.SqsDestination(myQueue),\n  { prefix: 'foo/', suffix: '.jpg' });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.EventType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3-notifications.SqsDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#addEventNotification",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_REMOVED",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-s3.NotificationKeyFilter",
        "@aws-cdk/aws-sqs.IQueue",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myQueue: sqs.Queue;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.addEventNotification(s3.EventType.OBJECT_REMOVED,\n  new s3n.SqsDestination(myQueue),\n  { prefix: 'foo/', suffix: '.jpg' });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 16,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1ebf3274d8449ea7d48470f14a16a4409fcc82f03a24df75930f9648ede35ec0"
    },
    "5cc213ea77bcb79dce3a840c8d0b613fc00fad7aa955c25f2744529adb60ac35": {
      "translations": {
        "python": {
          "source": "# my_lambda: lambda.Function\n\nbucket = s3.Bucket(self, \"MyBucket\")\nbucket.add_event_notification(s3.EventType.OBJECT_CREATED, s3n.LambdaDestination(my_lambda), prefix=\"home/myusername/*\")",
          "version": "2"
        },
        "csharp": {
          "source": "Function myLambda;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.AddEventNotification(EventType.OBJECT_CREATED, new LambdaDestination(myLambda), new NotificationKeyFilter { Prefix = \"home/myusername/*\" });",
          "version": "1"
        },
        "java": {
          "source": "Function myLambda;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.addEventNotification(EventType.OBJECT_CREATED, new LambdaDestination(myLambda), NotificationKeyFilter.builder().prefix(\"home/myusername/*\").build());",
          "version": "1"
        },
        "go": {
          "source": "var myLambda function\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.addEventNotification(s3.eventType_OBJECT_CREATED, s3n.NewLambdaDestination(myLambda), &notificationKeyFilter{\n\tprefix: jsii.String(\"home/myusername/*\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "   declare const myLambda: lambda.Function;\n   const bucket = new s3.Bucket(this, 'MyBucket');\n   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "member",
          "fqn": "@aws-cdk/aws-s3.IBucket",
          "memberName": "addEventNotification"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-s3-notifications.LambdaDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#addEventNotification",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_CREATED",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-s3.NotificationKeyFilter",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n   declare const myLambda: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n   const bucket = new s3.Bucket(this, 'MyBucket');\n   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "163b94ccb296fbc41a1d6b572c6db264327e39055f0b09ef6eb3a8e3c3e4f948"
    },
    "99efa71e18f6df399eb09d98813804889ab4551170e5bb0b064a5b7e34e054f9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\n\nintelligent_tiering_configuration = s3.IntelligentTieringConfiguration(\n    name=\"name\",\n\n    # the properties below are optional\n    archive_access_tier_time=cdk.Duration.minutes(30),\n    deep_archive_access_tier_time=cdk.Duration.minutes(30),\n    prefix=\"prefix\",\n    tags=[s3.Tag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\nIntelligentTieringConfiguration intelligentTieringConfiguration = new IntelligentTieringConfiguration {\n    Name = \"name\",\n\n    // the properties below are optional\n    ArchiveAccessTierTime = Duration.Minutes(30),\n    DeepArchiveAccessTierTime = Duration.Minutes(30),\n    Prefix = \"prefix\",\n    Tags = new [] { new Tag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\n\nIntelligentTieringConfiguration intelligentTieringConfiguration = IntelligentTieringConfiguration.builder()\n        .name(\"name\")\n\n        // the properties below are optional\n        .archiveAccessTierTime(Duration.minutes(30))\n        .deepArchiveAccessTierTime(Duration.minutes(30))\n        .prefix(\"prefix\")\n        .tags(List.of(Tag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"import cdk \"github.com/aws-samples/dummy/awscdkcore\"\nintelligentTieringConfiguration := &intelligentTieringConfiguration{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tarchiveAccessTierTime: cdk.duration.minutes(jsii.Number(30)),\n\tdeepArchiveAccessTierTime: cdk.*duration.minutes(jsii.Number(30)),\n\tprefix: jsii.String(\"prefix\"),\n\ttags: []tag{\n\t\t&tag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\nconst intelligentTieringConfiguration: s3.IntelligentTieringConfiguration = {\n  name: 'name',\n\n  // the properties below are optional\n  archiveAccessTierTime: cdk.Duration.minutes(30),\n  deepArchiveAccessTierTime: cdk.Duration.minutes(30),\n  prefix: 'prefix',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.IntelligentTieringConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.IntelligentTieringConfiguration",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst intelligentTieringConfiguration: s3.IntelligentTieringConfiguration = {\n  name: 'name',\n\n  // the properties below are optional\n  archiveAccessTierTime: cdk.Duration.minutes(30),\n  deepArchiveAccessTierTime: cdk.Duration.minutes(30),\n  prefix: 'prefix',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 6,
        "75": 18,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 4,
        "196": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "091931084937be0f7c5291cf33f34a140c863b57503d77732458d23448b28675"
    },
    "b886113eabfd6a162f85c936c3ccada3708c9428270b9f1e2ac98395efd63398": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# bucket: s3.Bucket\n\ninventory = s3.Inventory(\n    destination=s3.InventoryDestination(\n        bucket=bucket,\n\n        # the properties below are optional\n        bucket_owner=\"bucketOwner\",\n        prefix=\"prefix\"\n    ),\n\n    # the properties below are optional\n    enabled=False,\n    format=s3.InventoryFormat.CSV,\n    frequency=s3.InventoryFrequency.DAILY,\n    include_object_versions=s3.InventoryObjectVersion.ALL,\n    inventory_id=\"inventoryId\",\n    objects_prefix=\"objectsPrefix\",\n    optional_fields=[\"optionalFields\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nBucket bucket;\n\nInventory inventory = new Inventory {\n    Destination = new InventoryDestination {\n        Bucket = bucket,\n\n        // the properties below are optional\n        BucketOwner = \"bucketOwner\",\n        Prefix = \"prefix\"\n    },\n\n    // the properties below are optional\n    Enabled = false,\n    Format = InventoryFormat.CSV,\n    Frequency = InventoryFrequency.DAILY,\n    IncludeObjectVersions = InventoryObjectVersion.ALL,\n    InventoryId = \"inventoryId\",\n    ObjectsPrefix = \"objectsPrefix\",\n    OptionalFields = new [] { \"optionalFields\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nBucket bucket;\n\nInventory inventory = Inventory.builder()\n        .destination(InventoryDestination.builder()\n                .bucket(bucket)\n\n                // the properties below are optional\n                .bucketOwner(\"bucketOwner\")\n                .prefix(\"prefix\")\n                .build())\n\n        // the properties below are optional\n        .enabled(false)\n        .format(InventoryFormat.CSV)\n        .frequency(InventoryFrequency.DAILY)\n        .includeObjectVersions(InventoryObjectVersion.ALL)\n        .inventoryId(\"inventoryId\")\n        .objectsPrefix(\"objectsPrefix\")\n        .optionalFields(List.of(\"optionalFields\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar bucket bucket\ninventory := &inventory{\n\tdestination: &inventoryDestination{\n\t\tbucket: bucket,\n\n\t\t// the properties below are optional\n\t\tbucketOwner: jsii.String(\"bucketOwner\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\n\t// the properties below are optional\n\tenabled: jsii.Boolean(false),\n\tformat: s3.inventoryFormat_CSV,\n\tfrequency: s3.inventoryFrequency_DAILY,\n\tincludeObjectVersions: s3.inventoryObjectVersion_ALL,\n\tinventoryId: jsii.String(\"inventoryId\"),\n\tobjectsPrefix: jsii.String(\"objectsPrefix\"),\n\toptionalFields: []*string{\n\t\tjsii.String(\"optionalFields\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst inventory: s3.Inventory = {\n  destination: {\n    bucket: bucket,\n\n    // the properties below are optional\n    bucketOwner: 'bucketOwner',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  enabled: false,\n  format: s3.InventoryFormat.CSV,\n  frequency: s3.InventoryFrequency.DAILY,\n  includeObjectVersions: s3.InventoryObjectVersion.ALL,\n  inventoryId: 'inventoryId',\n  objectsPrefix: 'objectsPrefix',\n  optionalFields: ['optionalFields'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.Inventory"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.Inventory",
        "@aws-cdk/aws-s3.InventoryDestination",
        "@aws-cdk/aws-s3.InventoryFormat",
        "@aws-cdk/aws-s3.InventoryFormat#CSV",
        "@aws-cdk/aws-s3.InventoryFrequency",
        "@aws-cdk/aws-s3.InventoryFrequency#DAILY",
        "@aws-cdk/aws-s3.InventoryObjectVersion",
        "@aws-cdk/aws-s3.InventoryObjectVersion#ALL"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inventory: s3.Inventory = {\n  destination: {\n    bucket: bucket,\n\n    // the properties below are optional\n    bucketOwner: 'bucketOwner',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  enabled: false,\n  format: s3.InventoryFormat.CSV,\n  frequency: s3.InventoryFrequency.DAILY,\n  includeObjectVersions: s3.InventoryObjectVersion.ALL,\n  inventoryId: 'inventoryId',\n  objectsPrefix: 'objectsPrefix',\n  optionalFields: ['optionalFields'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 28,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 6,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "d64d51c10366155ab77f3f34ab7a5370571ada321e8ff53aa781ce02c779d73a"
    },
    "81b3cf62686784b8ae32f1a438bbb778a908ad8cc9cf6e4831342605b8fcef83": {
      "translations": {
        "python": {
          "source": "inventory_bucket = s3.Bucket(self, \"InventoryBucket\")\n\ndata_bucket = s3.Bucket(self, \"DataBucket\",\n    inventories=[s3.Inventory(\n        frequency=s3.InventoryFrequency.DAILY,\n        include_object_versions=s3.InventoryObjectVersion.CURRENT,\n        destination=s3.InventoryDestination(\n            bucket=inventory_bucket\n        )\n    ), s3.Inventory(\n        frequency=s3.InventoryFrequency.WEEKLY,\n        include_object_versions=s3.InventoryObjectVersion.ALL,\n        destination=s3.InventoryDestination(\n            bucket=inventory_bucket,\n            prefix=\"with-all-versions\"\n        )\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket inventoryBucket = new Bucket(this, \"InventoryBucket\");\n\nBucket dataBucket = new Bucket(this, \"DataBucket\", new BucketProps {\n    Inventories = new [] { new Inventory {\n        Frequency = InventoryFrequency.DAILY,\n        IncludeObjectVersions = InventoryObjectVersion.CURRENT,\n        Destination = new InventoryDestination {\n            Bucket = inventoryBucket\n        }\n    }, new Inventory {\n        Frequency = InventoryFrequency.WEEKLY,\n        IncludeObjectVersions = InventoryObjectVersion.ALL,\n        Destination = new InventoryDestination {\n            Bucket = inventoryBucket,\n            Prefix = \"with-all-versions\"\n        }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket inventoryBucket = new Bucket(this, \"InventoryBucket\");\n\nBucket dataBucket = Bucket.Builder.create(this, \"DataBucket\")\n        .inventories(List.of(Inventory.builder()\n                .frequency(InventoryFrequency.DAILY)\n                .includeObjectVersions(InventoryObjectVersion.CURRENT)\n                .destination(InventoryDestination.builder()\n                        .bucket(inventoryBucket)\n                        .build())\n                .build(), Inventory.builder()\n                .frequency(InventoryFrequency.WEEKLY)\n                .includeObjectVersions(InventoryObjectVersion.ALL)\n                .destination(InventoryDestination.builder()\n                        .bucket(inventoryBucket)\n                        .prefix(\"with-all-versions\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "inventoryBucket := s3.NewBucket(this, jsii.String(\"InventoryBucket\"))\n\ndataBucket := s3.NewBucket(this, jsii.String(\"DataBucket\"), &bucketProps{\n\tinventories: []inventory{\n\t\t&inventory{\n\t\t\tfrequency: s3.inventoryFrequency_DAILY,\n\t\t\tincludeObjectVersions: s3.inventoryObjectVersion_CURRENT,\n\t\t\tdestination: &inventoryDestination{\n\t\t\t\tbucket: inventoryBucket,\n\t\t\t},\n\t\t},\n\t\t&inventory{\n\t\t\tfrequency: s3.*inventoryFrequency_WEEKLY,\n\t\t\tincludeObjectVersions: s3.*inventoryObjectVersion_ALL,\n\t\t\tdestination: &inventoryDestination{\n\t\t\t\tbucket: inventoryBucket,\n\t\t\t\tprefix: jsii.String(\"with-all-versions\"),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.InventoryDestination"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.InventoryDestination",
        "@aws-cdk/aws-s3.InventoryFrequency",
        "@aws-cdk/aws-s3.InventoryFrequency#DAILY",
        "@aws-cdk/aws-s3.InventoryFrequency#WEEKLY",
        "@aws-cdk/aws-s3.InventoryObjectVersion",
        "@aws-cdk/aws-s3.InventoryObjectVersion#ALL",
        "@aws-cdk/aws-s3.InventoryObjectVersion#CURRENT",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 30,
        "104": 2,
        "192": 1,
        "193": 5,
        "194": 10,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 10
      },
      "fqnsFingerprint": "90b411883ef8b2f192e2666e273c769434a67c3ca8d96a64eb3fd051346ba8cf"
    },
    "bf1dbf75038acd40783f0bd5c8d75e1deadb3384d95e2781d447743e8b4f3e74": {
      "translations": {
        "python": {
          "source": "inventory_bucket = s3.Bucket(self, \"InventoryBucket\")\n\ndata_bucket = s3.Bucket(self, \"DataBucket\",\n    inventories=[s3.Inventory(\n        frequency=s3.InventoryFrequency.DAILY,\n        include_object_versions=s3.InventoryObjectVersion.CURRENT,\n        destination=s3.InventoryDestination(\n            bucket=inventory_bucket\n        )\n    ), s3.Inventory(\n        frequency=s3.InventoryFrequency.WEEKLY,\n        include_object_versions=s3.InventoryObjectVersion.ALL,\n        destination=s3.InventoryDestination(\n            bucket=inventory_bucket,\n            prefix=\"with-all-versions\"\n        )\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket inventoryBucket = new Bucket(this, \"InventoryBucket\");\n\nBucket dataBucket = new Bucket(this, \"DataBucket\", new BucketProps {\n    Inventories = new [] { new Inventory {\n        Frequency = InventoryFrequency.DAILY,\n        IncludeObjectVersions = InventoryObjectVersion.CURRENT,\n        Destination = new InventoryDestination {\n            Bucket = inventoryBucket\n        }\n    }, new Inventory {\n        Frequency = InventoryFrequency.WEEKLY,\n        IncludeObjectVersions = InventoryObjectVersion.ALL,\n        Destination = new InventoryDestination {\n            Bucket = inventoryBucket,\n            Prefix = \"with-all-versions\"\n        }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket inventoryBucket = new Bucket(this, \"InventoryBucket\");\n\nBucket dataBucket = Bucket.Builder.create(this, \"DataBucket\")\n        .inventories(List.of(Inventory.builder()\n                .frequency(InventoryFrequency.DAILY)\n                .includeObjectVersions(InventoryObjectVersion.CURRENT)\n                .destination(InventoryDestination.builder()\n                        .bucket(inventoryBucket)\n                        .build())\n                .build(), Inventory.builder()\n                .frequency(InventoryFrequency.WEEKLY)\n                .includeObjectVersions(InventoryObjectVersion.ALL)\n                .destination(InventoryDestination.builder()\n                        .bucket(inventoryBucket)\n                        .prefix(\"with-all-versions\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "inventoryBucket := s3.NewBucket(this, jsii.String(\"InventoryBucket\"))\n\ndataBucket := s3.NewBucket(this, jsii.String(\"DataBucket\"), &bucketProps{\n\tinventories: []inventory{\n\t\t&inventory{\n\t\t\tfrequency: s3.inventoryFrequency_DAILY,\n\t\t\tincludeObjectVersions: s3.inventoryObjectVersion_CURRENT,\n\t\t\tdestination: &inventoryDestination{\n\t\t\t\tbucket: inventoryBucket,\n\t\t\t},\n\t\t},\n\t\t&inventory{\n\t\t\tfrequency: s3.*inventoryFrequency_WEEKLY,\n\t\t\tincludeObjectVersions: s3.*inventoryObjectVersion_ALL,\n\t\t\tdestination: &inventoryDestination{\n\t\t\t\tbucket: inventoryBucket,\n\t\t\t\tprefix: jsii.String(\"with-all-versions\"),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.InventoryFrequency"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.InventoryDestination",
        "@aws-cdk/aws-s3.InventoryFrequency",
        "@aws-cdk/aws-s3.InventoryFrequency#DAILY",
        "@aws-cdk/aws-s3.InventoryFrequency#WEEKLY",
        "@aws-cdk/aws-s3.InventoryObjectVersion",
        "@aws-cdk/aws-s3.InventoryObjectVersion#ALL",
        "@aws-cdk/aws-s3.InventoryObjectVersion#CURRENT",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 30,
        "104": 2,
        "192": 1,
        "193": 5,
        "194": 10,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 10
      },
      "fqnsFingerprint": "90b411883ef8b2f192e2666e273c769434a67c3ca8d96a64eb3fd051346ba8cf"
    },
    "696ea489cf6ebe25396f8ecd217157c06a128daf5a99f934f63e587fb5070ce1": {
      "translations": {
        "python": {
          "source": "inventory_bucket = s3.Bucket(self, \"InventoryBucket\")\n\ndata_bucket = s3.Bucket(self, \"DataBucket\",\n    inventories=[s3.Inventory(\n        frequency=s3.InventoryFrequency.DAILY,\n        include_object_versions=s3.InventoryObjectVersion.CURRENT,\n        destination=s3.InventoryDestination(\n            bucket=inventory_bucket\n        )\n    ), s3.Inventory(\n        frequency=s3.InventoryFrequency.WEEKLY,\n        include_object_versions=s3.InventoryObjectVersion.ALL,\n        destination=s3.InventoryDestination(\n            bucket=inventory_bucket,\n            prefix=\"with-all-versions\"\n        )\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket inventoryBucket = new Bucket(this, \"InventoryBucket\");\n\nBucket dataBucket = new Bucket(this, \"DataBucket\", new BucketProps {\n    Inventories = new [] { new Inventory {\n        Frequency = InventoryFrequency.DAILY,\n        IncludeObjectVersions = InventoryObjectVersion.CURRENT,\n        Destination = new InventoryDestination {\n            Bucket = inventoryBucket\n        }\n    }, new Inventory {\n        Frequency = InventoryFrequency.WEEKLY,\n        IncludeObjectVersions = InventoryObjectVersion.ALL,\n        Destination = new InventoryDestination {\n            Bucket = inventoryBucket,\n            Prefix = \"with-all-versions\"\n        }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket inventoryBucket = new Bucket(this, \"InventoryBucket\");\n\nBucket dataBucket = Bucket.Builder.create(this, \"DataBucket\")\n        .inventories(List.of(Inventory.builder()\n                .frequency(InventoryFrequency.DAILY)\n                .includeObjectVersions(InventoryObjectVersion.CURRENT)\n                .destination(InventoryDestination.builder()\n                        .bucket(inventoryBucket)\n                        .build())\n                .build(), Inventory.builder()\n                .frequency(InventoryFrequency.WEEKLY)\n                .includeObjectVersions(InventoryObjectVersion.ALL)\n                .destination(InventoryDestination.builder()\n                        .bucket(inventoryBucket)\n                        .prefix(\"with-all-versions\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "inventoryBucket := s3.NewBucket(this, jsii.String(\"InventoryBucket\"))\n\ndataBucket := s3.NewBucket(this, jsii.String(\"DataBucket\"), &bucketProps{\n\tinventories: []inventory{\n\t\t&inventory{\n\t\t\tfrequency: s3.inventoryFrequency_DAILY,\n\t\t\tincludeObjectVersions: s3.inventoryObjectVersion_CURRENT,\n\t\t\tdestination: &inventoryDestination{\n\t\t\t\tbucket: inventoryBucket,\n\t\t\t},\n\t\t},\n\t\t&inventory{\n\t\t\tfrequency: s3.*inventoryFrequency_WEEKLY,\n\t\t\tincludeObjectVersions: s3.*inventoryObjectVersion_ALL,\n\t\t\tdestination: &inventoryDestination{\n\t\t\t\tbucket: inventoryBucket,\n\t\t\t\tprefix: jsii.String(\"with-all-versions\"),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.InventoryObjectVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/aws-s3.InventoryDestination",
        "@aws-cdk/aws-s3.InventoryFrequency",
        "@aws-cdk/aws-s3.InventoryFrequency#DAILY",
        "@aws-cdk/aws-s3.InventoryFrequency#WEEKLY",
        "@aws-cdk/aws-s3.InventoryObjectVersion",
        "@aws-cdk/aws-s3.InventoryObjectVersion#ALL",
        "@aws-cdk/aws-s3.InventoryObjectVersion#CURRENT",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 30,
        "104": 2,
        "192": 1,
        "193": 5,
        "194": 10,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 10
      },
      "fqnsFingerprint": "90b411883ef8b2f192e2666e273c769434a67c3ca8d96a64eb3fd051346ba8cf"
    },
    "775f08e18b230c36af1e34c40a4a8bcedd173a10a4068fcef006122c24597f99": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\n\n# storage_class: s3.StorageClass\n# tag_filters: Any\n\nlifecycle_rule = s3.LifecycleRule(\n    abort_incomplete_multipart_upload_after=cdk.Duration.minutes(30),\n    enabled=False,\n    expiration=cdk.Duration.minutes(30),\n    expiration_date=Date(),\n    expired_object_delete_marker=False,\n    id=\"id\",\n    noncurrent_version_expiration=cdk.Duration.minutes(30),\n    noncurrent_version_transitions=[s3.NoncurrentVersionTransition(\n        storage_class=storage_class,\n        transition_after=cdk.Duration.minutes(30),\n\n        # the properties below are optional\n        noncurrent_versions_to_retain=123\n    )],\n    prefix=\"prefix\",\n    tag_filters={\n        \"tag_filters_key\": tag_filters\n    },\n    transitions=[s3.Transition(\n        storage_class=storage_class,\n\n        # the properties below are optional\n        transition_after=cdk.Duration.minutes(30),\n        transition_date=Date()\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\n\nStorageClass storageClass;\nvar tagFilters;\nLifecycleRule lifecycleRule = new LifecycleRule {\n    AbortIncompleteMultipartUploadAfter = Duration.Minutes(30),\n    Enabled = false,\n    Expiration = Duration.Minutes(30),\n    ExpirationDate = new Date(),\n    ExpiredObjectDeleteMarker = false,\n    Id = \"id\",\n    NoncurrentVersionExpiration = Duration.Minutes(30),\n    NoncurrentVersionTransitions = new [] { new NoncurrentVersionTransition {\n        StorageClass = storageClass,\n        TransitionAfter = Duration.Minutes(30),\n\n        // the properties below are optional\n        NoncurrentVersionsToRetain = 123\n    } },\n    Prefix = \"prefix\",\n    TagFilters = new Dictionary<string, object> {\n        { \"tagFiltersKey\", tagFilters }\n    },\n    Transitions = new [] { new Transition {\n        StorageClass = storageClass,\n\n        // the properties below are optional\n        TransitionAfter = Duration.Minutes(30),\n        TransitionDate = new Date()\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\n\nStorageClass storageClass;\nObject tagFilters;\n\nLifecycleRule lifecycleRule = LifecycleRule.builder()\n        .abortIncompleteMultipartUploadAfter(Duration.minutes(30))\n        .enabled(false)\n        .expiration(Duration.minutes(30))\n        .expirationDate(new Date())\n        .expiredObjectDeleteMarker(false)\n        .id(\"id\")\n        .noncurrentVersionExpiration(Duration.minutes(30))\n        .noncurrentVersionTransitions(List.of(NoncurrentVersionTransition.builder()\n                .storageClass(storageClass)\n                .transitionAfter(Duration.minutes(30))\n\n                // the properties below are optional\n                .noncurrentVersionsToRetain(123)\n                .build()))\n        .prefix(\"prefix\")\n        .tagFilters(Map.of(\n                \"tagFiltersKey\", tagFilters))\n        .transitions(List.of(Transition.builder()\n                .storageClass(storageClass)\n\n                // the properties below are optional\n                .transitionAfter(Duration.minutes(30))\n                .transitionDate(new Date())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"import cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar storageClass storageClass\nvar tagFilters interface{}\nlifecycleRule := &lifecycleRule{\n\tabortIncompleteMultipartUploadAfter: cdk.duration.minutes(jsii.Number(30)),\n\tenabled: jsii.Boolean(false),\n\texpiration: cdk.*duration.minutes(jsii.Number(30)),\n\texpirationDate: NewDate(),\n\texpiredObjectDeleteMarker: jsii.Boolean(false),\n\tid: jsii.String(\"id\"),\n\tnoncurrentVersionExpiration: cdk.*duration.minutes(jsii.Number(30)),\n\tnoncurrentVersionTransitions: []noncurrentVersionTransition{\n\t\t&noncurrentVersionTransition{\n\t\t\tstorageClass: storageClass,\n\t\t\ttransitionAfter: cdk.*duration.minutes(jsii.Number(30)),\n\n\t\t\t// the properties below are optional\n\t\t\tnoncurrentVersionsToRetain: jsii.Number(123),\n\t\t},\n\t},\n\tprefix: jsii.String(\"prefix\"),\n\ttagFilters: map[string]interface{}{\n\t\t\"tagFiltersKey\": tagFilters,\n\t},\n\ttransitions: []transition{\n\t\t&transition{\n\t\t\tstorageClass: storageClass,\n\n\t\t\t// the properties below are optional\n\t\t\ttransitionAfter: cdk.*duration.minutes(jsii.Number(30)),\n\t\t\ttransitionDate: NewDate(),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const storageClass: s3.StorageClass;\ndeclare const tagFilters: any;\nconst lifecycleRule: s3.LifecycleRule = {\n  abortIncompleteMultipartUploadAfter: cdk.Duration.minutes(30),\n  enabled: false,\n  expiration: cdk.Duration.minutes(30),\n  expirationDate: new Date(),\n  expiredObjectDeleteMarker: false,\n  id: 'id',\n  noncurrentVersionExpiration: cdk.Duration.minutes(30),\n  noncurrentVersionTransitions: [{\n    storageClass: storageClass,\n    transitionAfter: cdk.Duration.minutes(30),\n\n    // the properties below are optional\n    noncurrentVersionsToRetain: 123,\n  }],\n  prefix: 'prefix',\n  tagFilters: {\n    tagFiltersKey: tagFilters,\n  },\n  transitions: [{\n    storageClass: storageClass,\n\n    // the properties below are optional\n    transitionAfter: cdk.Duration.minutes(30),\n    transitionDate: new Date(),\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.LifecycleRule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.LifecycleRule",
        "@aws-cdk/aws-s3.StorageClass",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const storageClass: s3.StorageClass;\ndeclare const tagFilters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lifecycleRule: s3.LifecycleRule = {\n  abortIncompleteMultipartUploadAfter: cdk.Duration.minutes(30),\n  enabled: false,\n  expiration: cdk.Duration.minutes(30),\n  expirationDate: new Date(),\n  expiredObjectDeleteMarker: false,\n  id: 'id',\n  noncurrentVersionExpiration: cdk.Duration.minutes(30),\n  noncurrentVersionTransitions: [{\n    storageClass: storageClass,\n    transitionAfter: cdk.Duration.minutes(30),\n\n    // the properties below are optional\n    noncurrentVersionsToRetain: 123,\n  }],\n  prefix: 'prefix',\n  tagFilters: {\n    tagFiltersKey: tagFilters,\n  },\n  transitions: [{\n    storageClass: storageClass,\n\n    // the properties below are optional\n    transitionAfter: cdk.Duration.minutes(30),\n    transitionDate: new Date(),\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 4,
        "75": 47,
        "91": 2,
        "125": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 2,
        "193": 4,
        "194": 10,
        "196": 5,
        "197": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "f54ac4a19f3b05579497eecfc73e41aed5560e113ed53ba6a18ed4bbf3b98dd1"
    },
    "d12c7adf4eb8a452d8ddb0c43b1330615386942cddc964f1f63c299d08605376": {
      "translations": {
        "python": {
          "source": "start_query_execution_job = tasks.AthenaStartQueryExecution(self, \"Athena Start Query\",\n    query_string=sfn.JsonPath.format(\"select contacts where year={};\", sfn.JsonPath.string_at(\"$.year\")),\n    query_execution_context=tasks.QueryExecutionContext(\n        database_name=\"interactions\"\n    ),\n    result_configuration=tasks.ResultConfiguration(\n        encryption_configuration=tasks.EncryptionConfiguration(\n            encryption_option=tasks.EncryptionOption.S3_MANAGED\n        ),\n        output_location=s3.Location(\n            bucket_name=\"mybucket\",\n            object_key=\"myprefix\"\n        )\n    ),\n    integration_pattern=sfn.IntegrationPattern.RUN_JOB\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AthenaStartQueryExecution startQueryExecutionJob = new AthenaStartQueryExecution(this, \"Athena Start Query\", new AthenaStartQueryExecutionProps {\n    QueryString = JsonPath.Format(\"select contacts where year={};\", JsonPath.StringAt(\"$.year\")),\n    QueryExecutionContext = new QueryExecutionContext {\n        DatabaseName = \"interactions\"\n    },\n    ResultConfiguration = new ResultConfiguration {\n        EncryptionConfiguration = new EncryptionConfiguration {\n            EncryptionOption = EncryptionOption.S3_MANAGED\n        },\n        OutputLocation = new Location {\n            BucketName = \"mybucket\",\n            ObjectKey = \"myprefix\"\n        }\n    },\n    IntegrationPattern = IntegrationPattern.RUN_JOB\n});",
          "version": "1"
        },
        "java": {
          "source": "AthenaStartQueryExecution startQueryExecutionJob = AthenaStartQueryExecution.Builder.create(this, \"Athena Start Query\")\n        .queryString(JsonPath.format(\"select contacts where year={};\", JsonPath.stringAt(\"$.year\")))\n        .queryExecutionContext(QueryExecutionContext.builder()\n                .databaseName(\"interactions\")\n                .build())\n        .resultConfiguration(ResultConfiguration.builder()\n                .encryptionConfiguration(EncryptionConfiguration.builder()\n                        .encryptionOption(EncryptionOption.S3_MANAGED)\n                        .build())\n                .outputLocation(Location.builder()\n                        .bucketName(\"mybucket\")\n                        .objectKey(\"myprefix\")\n                        .build())\n                .build())\n        .integrationPattern(IntegrationPattern.RUN_JOB)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "startQueryExecutionJob := tasks.NewAthenaStartQueryExecution(this, jsii.String(\"Athena Start Query\"), &athenaStartQueryExecutionProps{\n\tqueryString: sfn.jsonPath.format(jsii.String(\"select contacts where year={};\"), sfn.*jsonPath.stringAt(jsii.String(\"$.year\"))),\n\tqueryExecutionContext: &queryExecutionContext{\n\t\tdatabaseName: jsii.String(\"interactions\"),\n\t},\n\tresultConfiguration: &resultConfiguration{\n\t\tencryptionConfiguration: &encryptionConfiguration{\n\t\t\tencryptionOption: tasks.encryptionOption_S3_MANAGED,\n\t\t},\n\t\toutputLocation: &location{\n\t\t\tbucketName: jsii.String(\"mybucket\"),\n\t\t\tobjectKey: jsii.String(\"myprefix\"),\n\t\t},\n\t},\n\tintegrationPattern: sfn.integrationPattern_RUN_JOB,\n})",
          "version": "1"
        },
        "$": {
          "source": "const startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.Location"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Location",
        "@aws-cdk/aws-stepfunctions-tasks.AthenaStartQueryExecution",
        "@aws-cdk/aws-stepfunctions-tasks.AthenaStartQueryExecutionProps",
        "@aws-cdk/aws-stepfunctions-tasks.EncryptionConfiguration",
        "@aws-cdk/aws-stepfunctions-tasks.EncryptionOption",
        "@aws-cdk/aws-stepfunctions-tasks.EncryptionOption#S3_MANAGED",
        "@aws-cdk/aws-stepfunctions-tasks.QueryExecutionContext",
        "@aws-cdk/aws-stepfunctions-tasks.ResultConfiguration",
        "@aws-cdk/aws-stepfunctions.IntegrationPattern",
        "@aws-cdk/aws-stepfunctions.IntegrationPattern#RUN_JOB",
        "@aws-cdk/aws-stepfunctions.JsonPath",
        "@aws-cdk/aws-stepfunctions.JsonPath#format",
        "@aws-cdk/aws-stepfunctions.JsonPath#stringAt",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, RemovalPolicy, Size, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as sfn from '@aws-cdk/aws-stepfunctions';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 25,
        "104": 1,
        "193": 5,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 10
      },
      "fqnsFingerprint": "a7627d3b978859a56b2154768e6c09920ff940e71bbaa8dffc0c252ab5d42e08"
    },
    "7dcd6be00758fa8ba6e04a9703235785dbb505344a064b10b2755d9fb43b419b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\n\n# storage_class: s3.StorageClass\n\nnoncurrent_version_transition = s3.NoncurrentVersionTransition(\n    storage_class=storage_class,\n    transition_after=cdk.Duration.minutes(30),\n\n    # the properties below are optional\n    noncurrent_versions_to_retain=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\n\nStorageClass storageClass;\nNoncurrentVersionTransition noncurrentVersionTransition = new NoncurrentVersionTransition {\n    StorageClass = storageClass,\n    TransitionAfter = Duration.Minutes(30),\n\n    // the properties below are optional\n    NoncurrentVersionsToRetain = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\n\nStorageClass storageClass;\n\nNoncurrentVersionTransition noncurrentVersionTransition = NoncurrentVersionTransition.builder()\n        .storageClass(storageClass)\n        .transitionAfter(Duration.minutes(30))\n\n        // the properties below are optional\n        .noncurrentVersionsToRetain(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"import cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar storageClass storageClass\nnoncurrentVersionTransition := &noncurrentVersionTransition{\n\tstorageClass: storageClass,\n\ttransitionAfter: cdk.duration.minutes(jsii.Number(30)),\n\n\t// the properties below are optional\n\tnoncurrentVersionsToRetain: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const storageClass: s3.StorageClass;\nconst noncurrentVersionTransition: s3.NoncurrentVersionTransition = {\n  storageClass: storageClass,\n  transitionAfter: cdk.Duration.minutes(30),\n\n  // the properties below are optional\n  noncurrentVersionsToRetain: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.NoncurrentVersionTransition",
        "@aws-cdk/aws-s3.StorageClass",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const storageClass: s3.StorageClass;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst noncurrentVersionTransition: s3.NoncurrentVersionTransition = {\n  storageClass: storageClass,\n  transitionAfter: cdk.Duration.minutes(30),\n\n  // the properties below are optional\n  noncurrentVersionsToRetain: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 15,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "055322886cba77844195e9eafc1f2bfff16950faba95a8aba128b39ccbd02785"
    },
    "ab6776e714163112e5cdd249d58abde19110fcb281fe5e33d741c8d80dc960fc": {
      "translations": {
        "python": {
          "source": "# my_queue: sqs.Queue\n\nbucket = s3.Bucket(self, \"MyBucket\")\nbucket.add_event_notification(s3.EventType.OBJECT_REMOVED,\n    s3n.SqsDestination(my_queue), prefix=\"foo/\", suffix=\".jpg\")",
          "version": "2"
        },
        "csharp": {
          "source": "Queue myQueue;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.AddEventNotification(EventType.OBJECT_REMOVED,\nnew SqsDestination(myQueue), new NotificationKeyFilter { Prefix = \"foo/\", Suffix = \".jpg\" });",
          "version": "1"
        },
        "java": {
          "source": "Queue myQueue;\n\nBucket bucket = new Bucket(this, \"MyBucket\");\nbucket.addEventNotification(EventType.OBJECT_REMOVED,\nnew SqsDestination(myQueue), NotificationKeyFilter.builder().prefix(\"foo/\").suffix(\".jpg\").build());",
          "version": "1"
        },
        "go": {
          "source": "var myQueue queue\nbucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.addEventNotification(s3.eventType_OBJECT_REMOVED,\ns3n.NewSqsDestination(myQueue), &notificationKeyFilter{\n\tprefix: jsii.String(\"foo/\"),\n\tsuffix: jsii.String(\".jpg\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myQueue: sqs.Queue;\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.addEventNotification(s3.EventType.OBJECT_REMOVED,\n  new s3n.SqsDestination(myQueue),\n  { prefix: 'foo/', suffix: '.jpg' });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3-notifications.SqsDestination",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#addEventNotification",
        "@aws-cdk/aws-s3.EventType",
        "@aws-cdk/aws-s3.EventType#OBJECT_REMOVED",
        "@aws-cdk/aws-s3.IBucketNotificationDestination",
        "@aws-cdk/aws-s3.NotificationKeyFilter",
        "@aws-cdk/aws-sqs.IQueue",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myQueue: sqs.Queue;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.addEventNotification(s3.EventType.OBJECT_REMOVED,\n  new s3n.SqsDestination(myQueue),\n  { prefix: 'foo/', suffix: '.jpg' });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 16,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1ebf3274d8449ea7d48470f14a16a4409fcc82f03a24df75930f9648ede35ec0"
    },
    "5f629284a6395c19edf0bfb810e2482ca218df340552163d0fc1a261a12ef233": {
      "translations": {
        "python": {
          "source": "s3.Bucket(self, \"MyBucket\",\n    object_ownership=s3.ObjectOwnership.OBJECT_WRITER\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Bucket(this, \"MyBucket\", new BucketProps {\n    ObjectOwnership = ObjectOwnership.OBJECT_WRITER\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket.Builder.create(this, \"MyBucket\")\n        .objectOwnership(ObjectOwnership.OBJECT_WRITER)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "s3.NewBucket(this, jsii.String(\"MyBucket\"), &bucketProps{\n\tobjectOwnership: s3.objectOwnership_OBJECT_WRITER,\n})",
          "version": "1"
        },
        "$": {
          "source": "new s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.OBJECT_WRITER,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.ObjectOwnership"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.ObjectOwnership",
        "@aws-cdk/aws-s3.ObjectOwnership#OBJECT_WRITER",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.OBJECT_WRITER,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "604be30aebaef57c6480f4d3cca13521915a6841926362a9c2acc0f6ccf2fcf0"
    },
    "190384872afe809db80bfcace517394622504049ab0639d96c893890dd53b737": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_events as events\nimport aws_cdk.aws_s3 as s3\n\n# detail: Any\n# rule_target: events.IRuleTarget\n\non_cloud_trail_bucket_event_options = s3.OnCloudTrailBucketEventOptions(\n    description=\"description\",\n    event_pattern=events.EventPattern(\n        account=[\"account\"],\n        detail={\n            \"detail_key\": detail\n        },\n        detail_type=[\"detailType\"],\n        id=[\"id\"],\n        region=[\"region\"],\n        resources=[\"resources\"],\n        source=[\"source\"],\n        time=[\"time\"],\n        version=[\"version\"]\n    ),\n    paths=[\"paths\"],\n    rule_name=\"ruleName\",\n    target=rule_target\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Events;\nusing Amazon.CDK.AWS.S3;\n\nvar detail;\nIRuleTarget ruleTarget;\n\nOnCloudTrailBucketEventOptions onCloudTrailBucketEventOptions = new OnCloudTrailBucketEventOptions {\n    Description = \"description\",\n    EventPattern = new EventPattern {\n        Account = new [] { \"account\" },\n        Detail = new Dictionary<string, object> {\n            { \"detailKey\", detail }\n        },\n        DetailType = new [] { \"detailType\" },\n        Id = new [] { \"id\" },\n        Region = new [] { \"region\" },\n        Resources = new [] { \"resources\" },\n        Source = new [] { \"source\" },\n        Time = new [] { \"time\" },\n        Version = new [] { \"version\" }\n    },\n    Paths = new [] { \"paths\" },\n    RuleName = \"ruleName\",\n    Target = ruleTarget\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.events.*;\nimport software.amazon.awscdk.services.s3.*;\n\nObject detail;\nIRuleTarget ruleTarget;\n\nOnCloudTrailBucketEventOptions onCloudTrailBucketEventOptions = OnCloudTrailBucketEventOptions.builder()\n        .description(\"description\")\n        .eventPattern(EventPattern.builder()\n                .account(List.of(\"account\"))\n                .detail(Map.of(\n                        \"detailKey\", detail))\n                .detailType(List.of(\"detailType\"))\n                .id(List.of(\"id\"))\n                .region(List.of(\"region\"))\n                .resources(List.of(\"resources\"))\n                .source(List.of(\"source\"))\n                .time(List.of(\"time\"))\n                .version(List.of(\"version\"))\n                .build())\n        .paths(List.of(\"paths\"))\n        .ruleName(\"ruleName\")\n        .target(ruleTarget)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import events \"github.com/aws-samples/dummy/awscdkawsevents\"import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar detail interface{}\nvar ruleTarget iRuleTarget\nonCloudTrailBucketEventOptions := &onCloudTrailBucketEventOptions{\n\tdescription: jsii.String(\"description\"),\n\teventPattern: &eventPattern{\n\t\taccount: []*string{\n\t\t\tjsii.String(\"account\"),\n\t\t},\n\t\tdetail: map[string]interface{}{\n\t\t\t\"detailKey\": detail,\n\t\t},\n\t\tdetailType: []*string{\n\t\t\tjsii.String(\"detailType\"),\n\t\t},\n\t\tid: []*string{\n\t\t\tjsii.String(\"id\"),\n\t\t},\n\t\tregion: []*string{\n\t\t\tjsii.String(\"region\"),\n\t\t},\n\t\tresources: []*string{\n\t\t\tjsii.String(\"resources\"),\n\t\t},\n\t\tsource: []*string{\n\t\t\tjsii.String(\"source\"),\n\t\t},\n\t\ttime: []*string{\n\t\t\tjsii.String(\"time\"),\n\t\t},\n\t\tversion: []*string{\n\t\t\tjsii.String(\"version\"),\n\t\t},\n\t},\n\tpaths: []*string{\n\t\tjsii.String(\"paths\"),\n\t},\n\truleName: jsii.String(\"ruleName\"),\n\ttarget: ruleTarget,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as events from '@aws-cdk/aws-events';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const detail: any;\ndeclare const ruleTarget: events.IRuleTarget;\nconst onCloudTrailBucketEventOptions: s3.OnCloudTrailBucketEventOptions = {\n  description: 'description',\n  eventPattern: {\n    account: ['account'],\n    detail: {\n      detailKey: detail,\n    },\n    detailType: ['detailType'],\n    id: ['id'],\n    region: ['region'],\n    resources: ['resources'],\n    source: ['source'],\n    time: ['time'],\n    version: ['version'],\n  },\n  paths: ['paths'],\n  ruleName: 'ruleName',\n  target: ruleTarget,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-events.EventPattern",
        "@aws-cdk/aws-events.IRuleTarget",
        "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as events from '@aws-cdk/aws-events';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const detail: any;\ndeclare const ruleTarget: events.IRuleTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst onCloudTrailBucketEventOptions: s3.OnCloudTrailBucketEventOptions = {\n  description: 'description',\n  eventPattern: {\n    account: ['account'],\n    detail: {\n      detailKey: detail,\n    },\n    detailType: ['detailType'],\n    id: ['id'],\n    region: ['region'],\n    resources: ['resources'],\n    source: ['source'],\n    time: ['time'],\n    version: ['version'],\n  },\n  paths: ['paths'],\n  ruleName: 'ruleName',\n  target: ruleTarget,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 13,
        "75": 26,
        "125": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 9,
        "193": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "7dfcec2d477f484e4af2ba55769982fe774b89cdeb51f4458fe8978d18d6744e"
    },
    "ec94deb48c06804fbbba7e5714f2b66ad05a9dde64d81a5997f284cd2155e64b": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyRedirectedBucket\",\n    website_routing_rules=[s3.RoutingRule(\n        host_name=\"www.example.com\",\n        http_redirect_code=\"302\",\n        protocol=s3.RedirectProtocol.HTTPS,\n        replace_key=s3.ReplaceKey.prefix_with(\"test/\"),\n        condition=s3.RoutingRuleCondition(\n            http_error_code_returned_equals=\"200\",\n            key_prefix_equals=\"prefix\"\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyRedirectedBucket\", new BucketProps {\n    WebsiteRoutingRules = new [] { new RoutingRule {\n        HostName = \"www.example.com\",\n        HttpRedirectCode = \"302\",\n        Protocol = RedirectProtocol.HTTPS,\n        ReplaceKey = ReplaceKey.PrefixWith(\"test/\"),\n        Condition = new RoutingRuleCondition {\n            HttpErrorCodeReturnedEquals = \"200\",\n            KeyPrefixEquals = \"prefix\"\n        }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyRedirectedBucket\")\n        .websiteRoutingRules(List.of(RoutingRule.builder()\n                .hostName(\"www.example.com\")\n                .httpRedirectCode(\"302\")\n                .protocol(RedirectProtocol.HTTPS)\n                .replaceKey(ReplaceKey.prefixWith(\"test/\"))\n                .condition(RoutingRuleCondition.builder()\n                        .httpErrorCodeReturnedEquals(\"200\")\n                        .keyPrefixEquals(\"prefix\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyRedirectedBucket\"), &bucketProps{\n\twebsiteRoutingRules: []routingRule{\n\t\t&routingRule{\n\t\t\thostName: jsii.String(\"www.example.com\"),\n\t\t\thttpRedirectCode: jsii.String(\"302\"),\n\t\t\tprotocol: s3.redirectProtocol_HTTPS,\n\t\t\treplaceKey: s3.replaceKey.prefixWith(jsii.String(\"test/\")),\n\t\t\tcondition: &routingRuleCondition{\n\t\t\t\thttpErrorCodeReturnedEquals: jsii.String(\"200\"),\n\t\t\t\tkeyPrefixEquals: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: s3.RedirectProtocol.HTTPS,\n    replaceKey: s3.ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    },\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.RedirectProtocol"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.RedirectProtocol",
        "@aws-cdk/aws-s3.RedirectProtocol#HTTPS",
        "@aws-cdk/aws-s3.ReplaceKey",
        "@aws-cdk/aws-s3.ReplaceKey#prefixWith",
        "@aws-cdk/aws-s3.RoutingRuleCondition",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: s3.RedirectProtocol.HTTPS,\n    replaceKey: s3.ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    },\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 17,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 5,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 8
      },
      "fqnsFingerprint": "e3a7ef7ce03beb45517010e38f18fb44ecf38b45d589da3ed411f4ca510f8136"
    },
    "4b1392ea43479eff2b89be08670f3c8cf9e5adea8d683a41b7923ee0c6ebb8b8": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyRedirectedBucket\",\n    website_redirect=s3.RedirectTarget(host_name=\"www.example.com\")\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyRedirectedBucket\", new BucketProps {\n    WebsiteRedirect = new RedirectTarget { HostName = \"www.example.com\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyRedirectedBucket\")\n        .websiteRedirect(RedirectTarget.builder().hostName(\"www.example.com\").build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyRedirectedBucket\"), &bucketProps{\n\twebsiteRedirect: &redirectTarget{\n\t\thostName: jsii.String(\"www.example.com\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRedirect: { hostName: 'www.example.com' },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.RedirectTarget"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.RedirectTarget",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRedirect: { hostName: 'www.example.com' },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "d539b8cf8fa76faf09fe8601b8518de208a913a5f501be5f5b03ef70899810b8"
    },
    "10eceb70d0a466c51d98f437a9171a140d49fb51336708b2086fb39c4d9a927b": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyRedirectedBucket\",\n    website_routing_rules=[s3.RoutingRule(\n        host_name=\"www.example.com\",\n        http_redirect_code=\"302\",\n        protocol=s3.RedirectProtocol.HTTPS,\n        replace_key=s3.ReplaceKey.prefix_with(\"test/\"),\n        condition=s3.RoutingRuleCondition(\n            http_error_code_returned_equals=\"200\",\n            key_prefix_equals=\"prefix\"\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyRedirectedBucket\", new BucketProps {\n    WebsiteRoutingRules = new [] { new RoutingRule {\n        HostName = \"www.example.com\",\n        HttpRedirectCode = \"302\",\n        Protocol = RedirectProtocol.HTTPS,\n        ReplaceKey = ReplaceKey.PrefixWith(\"test/\"),\n        Condition = new RoutingRuleCondition {\n            HttpErrorCodeReturnedEquals = \"200\",\n            KeyPrefixEquals = \"prefix\"\n        }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyRedirectedBucket\")\n        .websiteRoutingRules(List.of(RoutingRule.builder()\n                .hostName(\"www.example.com\")\n                .httpRedirectCode(\"302\")\n                .protocol(RedirectProtocol.HTTPS)\n                .replaceKey(ReplaceKey.prefixWith(\"test/\"))\n                .condition(RoutingRuleCondition.builder()\n                        .httpErrorCodeReturnedEquals(\"200\")\n                        .keyPrefixEquals(\"prefix\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyRedirectedBucket\"), &bucketProps{\n\twebsiteRoutingRules: []routingRule{\n\t\t&routingRule{\n\t\t\thostName: jsii.String(\"www.example.com\"),\n\t\t\thttpRedirectCode: jsii.String(\"302\"),\n\t\t\tprotocol: s3.redirectProtocol_HTTPS,\n\t\t\treplaceKey: s3.replaceKey.prefixWith(jsii.String(\"test/\")),\n\t\t\tcondition: &routingRuleCondition{\n\t\t\t\thttpErrorCodeReturnedEquals: jsii.String(\"200\"),\n\t\t\t\tkeyPrefixEquals: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: s3.RedirectProtocol.HTTPS,\n    replaceKey: s3.ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    },\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.ReplaceKey"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.RedirectProtocol",
        "@aws-cdk/aws-s3.RedirectProtocol#HTTPS",
        "@aws-cdk/aws-s3.ReplaceKey",
        "@aws-cdk/aws-s3.ReplaceKey#prefixWith",
        "@aws-cdk/aws-s3.RoutingRuleCondition",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: s3.RedirectProtocol.HTTPS,\n    replaceKey: s3.ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    },\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 17,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 5,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 8
      },
      "fqnsFingerprint": "e3a7ef7ce03beb45517010e38f18fb44ecf38b45d589da3ed411f4ca510f8136"
    },
    "560bc002cf556ff1e8f9a305890e74064d0b2b1a6e8311f6f41b13d5b114337c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\n# replace_key: s3.ReplaceKey\n\nrouting_rule = s3.RoutingRule(\n    condition=s3.RoutingRuleCondition(\n        http_error_code_returned_equals=\"httpErrorCodeReturnedEquals\",\n        key_prefix_equals=\"keyPrefixEquals\"\n    ),\n    host_name=\"hostName\",\n    http_redirect_code=\"httpRedirectCode\",\n    protocol=s3.RedirectProtocol.HTTP,\n    replace_key=replace_key\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nReplaceKey replaceKey;\n\nRoutingRule routingRule = new RoutingRule {\n    Condition = new RoutingRuleCondition {\n        HttpErrorCodeReturnedEquals = \"httpErrorCodeReturnedEquals\",\n        KeyPrefixEquals = \"keyPrefixEquals\"\n    },\n    HostName = \"hostName\",\n    HttpRedirectCode = \"httpRedirectCode\",\n    Protocol = RedirectProtocol.HTTP,\n    ReplaceKey = replaceKey\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nReplaceKey replaceKey;\n\nRoutingRule routingRule = RoutingRule.builder()\n        .condition(RoutingRuleCondition.builder()\n                .httpErrorCodeReturnedEquals(\"httpErrorCodeReturnedEquals\")\n                .keyPrefixEquals(\"keyPrefixEquals\")\n                .build())\n        .hostName(\"hostName\")\n        .httpRedirectCode(\"httpRedirectCode\")\n        .protocol(RedirectProtocol.HTTP)\n        .replaceKey(replaceKey)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar replaceKey replaceKey\nroutingRule := &routingRule{\n\tcondition: &routingRuleCondition{\n\t\thttpErrorCodeReturnedEquals: jsii.String(\"httpErrorCodeReturnedEquals\"),\n\t\tkeyPrefixEquals: jsii.String(\"keyPrefixEquals\"),\n\t},\n\thostName: jsii.String(\"hostName\"),\n\thttpRedirectCode: jsii.String(\"httpRedirectCode\"),\n\tprotocol: s3.redirectProtocol_HTTP,\n\treplaceKey: replaceKey,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const replaceKey: s3.ReplaceKey;\nconst routingRule: s3.RoutingRule = {\n  condition: {\n    httpErrorCodeReturnedEquals: 'httpErrorCodeReturnedEquals',\n    keyPrefixEquals: 'keyPrefixEquals',\n  },\n  hostName: 'hostName',\n  httpRedirectCode: 'httpRedirectCode',\n  protocol: s3.RedirectProtocol.HTTP,\n  replaceKey: replaceKey,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.RoutingRule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.RedirectProtocol",
        "@aws-cdk/aws-s3.RedirectProtocol#HTTP",
        "@aws-cdk/aws-s3.ReplaceKey",
        "@aws-cdk/aws-s3.RoutingRule",
        "@aws-cdk/aws-s3.RoutingRuleCondition"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const replaceKey: s3.ReplaceKey;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst routingRule: s3.RoutingRule = {\n  condition: {\n    httpErrorCodeReturnedEquals: 'httpErrorCodeReturnedEquals',\n    keyPrefixEquals: 'keyPrefixEquals',\n  },\n  hostName: 'hostName',\n  httpRedirectCode: 'httpRedirectCode',\n  protocol: s3.RedirectProtocol.HTTP,\n  replaceKey: replaceKey,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 18,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 2,
        "194": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "0d4bf46bc8952771fb5dc5de5d6c27a6724d4dedd86408ef28ee0048c1ff6c17"
    },
    "f2ad99b44f07fb8aea903f3ff40197c0e901b3d29e51e589fffa067f7d5a8861": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyRedirectedBucket\",\n    website_routing_rules=[s3.RoutingRule(\n        host_name=\"www.example.com\",\n        http_redirect_code=\"302\",\n        protocol=s3.RedirectProtocol.HTTPS,\n        replace_key=s3.ReplaceKey.prefix_with(\"test/\"),\n        condition=s3.RoutingRuleCondition(\n            http_error_code_returned_equals=\"200\",\n            key_prefix_equals=\"prefix\"\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyRedirectedBucket\", new BucketProps {\n    WebsiteRoutingRules = new [] { new RoutingRule {\n        HostName = \"www.example.com\",\n        HttpRedirectCode = \"302\",\n        Protocol = RedirectProtocol.HTTPS,\n        ReplaceKey = ReplaceKey.PrefixWith(\"test/\"),\n        Condition = new RoutingRuleCondition {\n            HttpErrorCodeReturnedEquals = \"200\",\n            KeyPrefixEquals = \"prefix\"\n        }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = Bucket.Builder.create(this, \"MyRedirectedBucket\")\n        .websiteRoutingRules(List.of(RoutingRule.builder()\n                .hostName(\"www.example.com\")\n                .httpRedirectCode(\"302\")\n                .protocol(RedirectProtocol.HTTPS)\n                .replaceKey(ReplaceKey.prefixWith(\"test/\"))\n                .condition(RoutingRuleCondition.builder()\n                        .httpErrorCodeReturnedEquals(\"200\")\n                        .keyPrefixEquals(\"prefix\")\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyRedirectedBucket\"), &bucketProps{\n\twebsiteRoutingRules: []routingRule{\n\t\t&routingRule{\n\t\t\thostName: jsii.String(\"www.example.com\"),\n\t\t\thttpRedirectCode: jsii.String(\"302\"),\n\t\t\tprotocol: s3.redirectProtocol_HTTPS,\n\t\t\treplaceKey: s3.replaceKey.prefixWith(jsii.String(\"test/\")),\n\t\t\tcondition: &routingRuleCondition{\n\t\t\t\thttpErrorCodeReturnedEquals: jsii.String(\"200\"),\n\t\t\t\tkeyPrefixEquals: jsii.String(\"prefix\"),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: s3.RedirectProtocol.HTTPS,\n    replaceKey: s3.ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    },\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.RoutingRuleCondition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.RedirectProtocol",
        "@aws-cdk/aws-s3.RedirectProtocol#HTTPS",
        "@aws-cdk/aws-s3.ReplaceKey",
        "@aws-cdk/aws-s3.ReplaceKey#prefixWith",
        "@aws-cdk/aws-s3.RoutingRuleCondition",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: s3.RedirectProtocol.HTTPS,\n    replaceKey: s3.ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    },\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 17,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 5,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 8
      },
      "fqnsFingerprint": "e3a7ef7ce03beb45517010e38f18fb44ecf38b45d589da3ed411f4ca510f8136"
    },
    "83c8165ef5b55cffd20690ecd6e1b1b819833cdc337cc1ace24e29765017bd11": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\nstorage_class = s3.StorageClass.DEEP_ARCHIVE",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nStorageClass storageClass = StorageClass.DEEP_ARCHIVE;",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nStorageClass storageClass = StorageClass.DEEP_ARCHIVE;",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nstorageClass := s3.storageClass_DEEP_ARCHIVE()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst storageClass = s3.StorageClass.DEEP_ARCHIVE;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.StorageClass"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.StorageClass",
        "@aws-cdk/aws-s3.StorageClass#DEEP_ARCHIVE"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst storageClass = s3.StorageClass.DEEP_ARCHIVE;\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "36e6dbde88cd54fb3daddd1f8d924bd3ceff265042dab6c49600e0c30511b233"
    },
    "8ee734aacd26fca3f68700c9ede81c3e925250449bd8fba8951e2100580e9d58": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ntag = s3.Tag(\n    key=\"key\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nTag tag = new Tag {\n    Key = \"key\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nTag tag = Tag.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ntag := &tag{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst tag: s3.Tag = {\n  key: 'key',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.Tag"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Tag"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tag: s3.Tag = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1c10e2e02abaf77e90eb98cd0434c32a5f2834337789ccc29297c2c6cb1ea27e"
    },
    "414ccddc185becd697f271958d133c2cec04731fc0986d6161163441a117e04c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\n\ntransfer_acceleration_url_options = s3.TransferAccelerationUrlOptions(\n    dual_stack=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\n\nTransferAccelerationUrlOptions transferAccelerationUrlOptions = new TransferAccelerationUrlOptions {\n    DualStack = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\n\nTransferAccelerationUrlOptions transferAccelerationUrlOptions = TransferAccelerationUrlOptions.builder()\n        .dualStack(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\ntransferAccelerationUrlOptions := &transferAccelerationUrlOptions{\n\tdualStack: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nconst transferAccelerationUrlOptions: s3.TransferAccelerationUrlOptions = {\n  dualStack: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.TransferAccelerationUrlOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.TransferAccelerationUrlOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst transferAccelerationUrlOptions: s3.TransferAccelerationUrlOptions = {\n  dualStack: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "794d47bbee6bb71b0379314446aaa3c09c16cfef69f2df1196966de8ba56e50e"
    },
    "87ce5a556cd9844f941d1da41b37b822301e5763c63dd3e56046deb0aad5ec22": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\n\n# storage_class: s3.StorageClass\n\ntransition = s3.Transition(\n    storage_class=storage_class,\n\n    # the properties below are optional\n    transition_after=cdk.Duration.minutes(30),\n    transition_date=Date()\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\n\nStorageClass storageClass;\nTransition transition = new Transition {\n    StorageClass = storageClass,\n\n    // the properties below are optional\n    TransitionAfter = Duration.Minutes(30),\n    TransitionDate = new Date()\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\n\nStorageClass storageClass;\n\nTransition transition = Transition.builder()\n        .storageClass(storageClass)\n\n        // the properties below are optional\n        .transitionAfter(Duration.minutes(30))\n        .transitionDate(new Date())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import s3 \"github.com/aws-samples/dummy/awscdkawss3\"import cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar storageClass storageClass\ntransition := &transition{\n\tstorageClass: storageClass,\n\n\t// the properties below are optional\n\ttransitionAfter: cdk.duration.minutes(jsii.Number(30)),\n\ttransitionDate: NewDate(),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const storageClass: s3.StorageClass;\nconst transition: s3.Transition = {\n  storageClass: storageClass,\n\n  // the properties below are optional\n  transitionAfter: cdk.Duration.minutes(30),\n  transitionDate: new Date(),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.Transition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.StorageClass",
        "@aws-cdk/aws-s3.Transition",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const storageClass: s3.StorageClass;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst transition: s3.Transition = {\n  storageClass: storageClass,\n\n  // the properties below are optional\n  transitionAfter: cdk.Duration.minutes(30),\n  transitionDate: new Date(),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 16,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "20be7ddd84e6822b728788ec4db574cf4e8bfefefa206d3512802d538486d1fa"
    },
    "d4efc4ac37461bbe79b3649e2f06b9dd42269757d138d8999b6d067ce91e16d7": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\nbucket.url_for_object(\"objectname\") # Path-Style URL\nbucket.virtual_hosted_url_for_object(\"objectname\") # Virtual Hosted-Style URL\nbucket.virtual_hosted_url_for_object(\"objectname\", regional=False)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nbucket.UrlForObject(\"objectname\"); // Path-Style URL\nbucket.VirtualHostedUrlForObject(\"objectname\"); // Virtual Hosted-Style URL\nbucket.VirtualHostedUrlForObject(\"objectname\", new VirtualHostedStyleUrlOptions { Regional = false });",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\nbucket.urlForObject(\"objectname\"); // Path-Style URL\nbucket.virtualHostedUrlForObject(\"objectname\"); // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject(\"objectname\", VirtualHostedStyleUrlOptions.builder().regional(false).build());",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\nbucket.urlForObject(jsii.String(\"objectname\")) // Path-Style URL\nbucket.virtualHostedUrlForObject(jsii.String(\"objectname\")) // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject(jsii.String(\"objectname\"), &virtualHostedStyleUrlOptions{\n\tregional: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\nbucket.urlForObject('objectname'); // Path-Style URL\nbucket.virtualHostedUrlForObject('objectname'); // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject('objectname', { regional: false }); // Virtual Hosted-Style URL but non-regional",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketBase#urlForObject",
        "@aws-cdk/aws-s3.BucketBase#virtualHostedUrlForObject",
        "@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport cdk = require('@aws-cdk/core');\nimport s3 = require('@aws-cdk/aws-s3');\nimport kms = require('@aws-cdk/aws-kms');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3n = require('@aws-cdk/aws-s3-notifications');\nimport sns = require('@aws-cdk/aws-sns');\nimport sqs = require('@aws-cdk/aws-sqs');\nimport assert = require('assert');\n\nclass Fixture extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\nbucket.urlForObject('objectname'); // Path-Style URL\nbucket.virtualHostedUrlForObject('objectname'); // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject('objectname', { regional: false });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "91": 1,
        "104": 1,
        "193": 1,
        "194": 4,
        "196": 3,
        "197": 1,
        "225": 1,
        "226": 3,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "b020aca7ffbf7361fbc77986f59f092fabb6a277693210220592c40a195b2f74"
    }
  }
}

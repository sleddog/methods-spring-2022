{
  "version": "2",
  "toolVersion": "1.57.0",
  "snippets": {
    "cecc4b6be0cf4accc3e46f1670579b731439bd3e3b6efffdbd431eb0130d724c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nami_context_query = cloud_assembly_schema.AmiContextQuery(\n    account=\"account\",\n    filters={\n        \"filters_key\": [\"filters\"]\n    },\n    region=\"region\",\n\n    # the properties below are optional\n    lookup_role_arn=\"lookupRoleArn\",\n    owners=[\"owners\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nAmiContextQuery amiContextQuery = new AmiContextQuery {\n    Account = \"account\",\n    Filters = new Dictionary<string, string[]> {\n        { \"filtersKey\", new [] { \"filters\" } }\n    },\n    Region = \"region\",\n\n    // the properties below are optional\n    LookupRoleArn = \"lookupRoleArn\",\n    Owners = new [] { \"owners\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nAmiContextQuery amiContextQuery = AmiContextQuery.builder()\n        .account(\"account\")\n        .filters(Map.of(\n                \"filtersKey\", List.of(\"filters\")))\n        .region(\"region\")\n\n        // the properties below are optional\n        .lookupRoleArn(\"lookupRoleArn\")\n        .owners(List.of(\"owners\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\namiContextQuery := &amiContextQuery{\n\taccount: jsii.String(\"account\"),\n\tfilters: map[string][]*string{\n\t\t\"filtersKey\": []*string{\n\t\t\tjsii.String(\"filters\"),\n\t\t},\n\t},\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n\towners: []*string{\n\t\tjsii.String(\"owners\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst amiContextQuery: cloud_assembly_schema.AmiContextQuery = {\n  account: 'account',\n  filters: {\n    filtersKey: ['filters'],\n  },\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n  owners: ['owners'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.AmiContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.AmiContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst amiContextQuery: cloud_assembly_schema.AmiContextQuery = {\n  account: 'account',\n  filters: {\n    filtersKey: ['filters'],\n  },\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n  owners: ['owners'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "37f5b63c2889bb4d664b8935d1e1bd58ca8cbea3eee39ff067ad25ac6b869d1f"
    },
    "8a22f1619dbaab88e6efe034852102f4342b62797f1ced0c54bb9b918813d159": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nartifact_manifest = cloud_assembly_schema.ArtifactManifest(\n    type=cloud_assembly_schema.ArtifactType.NONE,\n\n    # the properties below are optional\n    dependencies=[\"dependencies\"],\n    display_name=\"displayName\",\n    environment=\"environment\",\n    metadata={\n        \"metadata_key\": [cloud_assembly_schema.MetadataEntry(\n            type=\"type\",\n\n            # the properties below are optional\n            data=\"data\",\n            trace=[\"trace\"]\n        )]\n    },\n    properties=cloud_assembly_schema.AwsCloudFormationStackProperties(\n        template_file=\"templateFile\",\n\n        # the properties below are optional\n        assume_role_arn=\"assumeRoleArn\",\n        assume_role_external_id=\"assumeRoleExternalId\",\n        bootstrap_stack_version_ssm_parameter=\"bootstrapStackVersionSsmParameter\",\n        cloud_formation_execution_role_arn=\"cloudFormationExecutionRoleArn\",\n        lookup_role=cloud_assembly_schema.BootstrapRole(\n            arn=\"arn\",\n\n            # the properties below are optional\n            assume_role_external_id=\"assumeRoleExternalId\",\n            bootstrap_stack_version_ssm_parameter=\"bootstrapStackVersionSsmParameter\",\n            requires_bootstrap_stack_version=123\n        ),\n        parameters={\n            \"parameters_key\": \"parameters\"\n        },\n        requires_bootstrap_stack_version=123,\n        stack_name=\"stackName\",\n        stack_template_asset_object_url=\"stackTemplateAssetObjectUrl\",\n        tags={\n            \"tags_key\": \"tags\"\n        },\n        termination_protection=False,\n        validate_on_synth=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nArtifactManifest artifactManifest = new ArtifactManifest {\n    Type = ArtifactType.NONE,\n\n    // the properties below are optional\n    Dependencies = new [] { \"dependencies\" },\n    DisplayName = \"displayName\",\n    Environment = \"environment\",\n    Metadata = new Dictionary<string, MetadataEntry[]> {\n        { \"metadataKey\", new [] { new MetadataEntry {\n            Type = \"type\",\n\n            // the properties below are optional\n            Data = \"data\",\n            Trace = new [] { \"trace\" }\n        } } }\n    },\n    Properties = new AwsCloudFormationStackProperties {\n        TemplateFile = \"templateFile\",\n\n        // the properties below are optional\n        AssumeRoleArn = \"assumeRoleArn\",\n        AssumeRoleExternalId = \"assumeRoleExternalId\",\n        BootstrapStackVersionSsmParameter = \"bootstrapStackVersionSsmParameter\",\n        CloudFormationExecutionRoleArn = \"cloudFormationExecutionRoleArn\",\n        LookupRole = new BootstrapRole {\n            Arn = \"arn\",\n\n            // the properties below are optional\n            AssumeRoleExternalId = \"assumeRoleExternalId\",\n            BootstrapStackVersionSsmParameter = \"bootstrapStackVersionSsmParameter\",\n            RequiresBootstrapStackVersion = 123\n        },\n        Parameters = new Dictionary<string, string> {\n            { \"parametersKey\", \"parameters\" }\n        },\n        RequiresBootstrapStackVersion = 123,\n        StackName = \"stackName\",\n        StackTemplateAssetObjectUrl = \"stackTemplateAssetObjectUrl\",\n        Tags = new Dictionary<string, string> {\n            { \"tagsKey\", \"tags\" }\n        },\n        TerminationProtection = false,\n        ValidateOnSynth = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nArtifactManifest artifactManifest = ArtifactManifest.builder()\n        .type(ArtifactType.NONE)\n\n        // the properties below are optional\n        .dependencies(List.of(\"dependencies\"))\n        .displayName(\"displayName\")\n        .environment(\"environment\")\n        .metadata(Map.of(\n                \"metadataKey\", List.of(MetadataEntry.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .data(\"data\")\n                        .trace(List.of(\"trace\"))\n                        .build())))\n        .properties(AwsCloudFormationStackProperties.builder()\n                .templateFile(\"templateFile\")\n\n                // the properties below are optional\n                .assumeRoleArn(\"assumeRoleArn\")\n                .assumeRoleExternalId(\"assumeRoleExternalId\")\n                .bootstrapStackVersionSsmParameter(\"bootstrapStackVersionSsmParameter\")\n                .cloudFormationExecutionRoleArn(\"cloudFormationExecutionRoleArn\")\n                .lookupRole(BootstrapRole.builder()\n                        .arn(\"arn\")\n\n                        // the properties below are optional\n                        .assumeRoleExternalId(\"assumeRoleExternalId\")\n                        .bootstrapStackVersionSsmParameter(\"bootstrapStackVersionSsmParameter\")\n                        .requiresBootstrapStackVersion(123)\n                        .build())\n                .parameters(Map.of(\n                        \"parametersKey\", \"parameters\"))\n                .requiresBootstrapStackVersion(123)\n                .stackName(\"stackName\")\n                .stackTemplateAssetObjectUrl(\"stackTemplateAssetObjectUrl\")\n                .tags(Map.of(\n                        \"tagsKey\", \"tags\"))\n                .terminationProtection(false)\n                .validateOnSynth(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nartifactManifest := &artifactManifest{\n\ttype: cloud_assembly_schema.artifactType_NONE,\n\n\t// the properties below are optional\n\tdependencies: []*string{\n\t\tjsii.String(\"dependencies\"),\n\t},\n\tdisplayName: jsii.String(\"displayName\"),\n\tenvironment: jsii.String(\"environment\"),\n\tmetadata: map[string][]metadataEntry{\n\t\t\"metadataKey\": []*metadataEntry{\n\t\t\t&metadataEntry{\n\t\t\t\t\"type\": jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"data\": jsii.String(\"data\"),\n\t\t\t\t\"trace\": []*string{\n\t\t\t\t\tjsii.String(\"trace\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tproperties: &awsCloudFormationStackProperties{\n\t\ttemplateFile: jsii.String(\"templateFile\"),\n\n\t\t// the properties below are optional\n\t\tassumeRoleArn: jsii.String(\"assumeRoleArn\"),\n\t\tassumeRoleExternalId: jsii.String(\"assumeRoleExternalId\"),\n\t\tbootstrapStackVersionSsmParameter: jsii.String(\"bootstrapStackVersionSsmParameter\"),\n\t\tcloudFormationExecutionRoleArn: jsii.String(\"cloudFormationExecutionRoleArn\"),\n\t\tlookupRole: &bootstrapRole{\n\t\t\tarn: jsii.String(\"arn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tassumeRoleExternalId: jsii.String(\"assumeRoleExternalId\"),\n\t\t\tbootstrapStackVersionSsmParameter: jsii.String(\"bootstrapStackVersionSsmParameter\"),\n\t\t\trequiresBootstrapStackVersion: jsii.Number(123),\n\t\t},\n\t\tparameters: map[string]*string{\n\t\t\t\"parametersKey\": jsii.String(\"parameters\"),\n\t\t},\n\t\trequiresBootstrapStackVersion: jsii.Number(123),\n\t\tstackName: jsii.String(\"stackName\"),\n\t\tstackTemplateAssetObjectUrl: jsii.String(\"stackTemplateAssetObjectUrl\"),\n\t\ttags: map[string]*string{\n\t\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t\t},\n\t\tterminationProtection: jsii.Boolean(false),\n\t\tvalidateOnSynth: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst artifactManifest: cloud_assembly_schema.ArtifactManifest = {\n  type: cloud_assembly_schema.ArtifactType.NONE,\n\n  // the properties below are optional\n  dependencies: ['dependencies'],\n  displayName: 'displayName',\n  environment: 'environment',\n  metadata: {\n    metadataKey: [{\n      type: 'type',\n\n      // the properties below are optional\n      data: 'data',\n      trace: ['trace'],\n    }],\n  },\n  properties: {\n    templateFile: 'templateFile',\n\n    // the properties below are optional\n    assumeRoleArn: 'assumeRoleArn',\n    assumeRoleExternalId: 'assumeRoleExternalId',\n    bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n    cloudFormationExecutionRoleArn: 'cloudFormationExecutionRoleArn',\n    lookupRole: {\n      arn: 'arn',\n\n      // the properties below are optional\n      assumeRoleExternalId: 'assumeRoleExternalId',\n      bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n      requiresBootstrapStackVersion: 123,\n    },\n    parameters: {\n      parametersKey: 'parameters',\n    },\n    requiresBootstrapStackVersion: 123,\n    stackName: 'stackName',\n    stackTemplateAssetObjectUrl: 'stackTemplateAssetObjectUrl',\n    tags: {\n      tagsKey: 'tags',\n    },\n    terminationProtection: false,\n    validateOnSynth: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.ArtifactManifest",
        "@aws-cdk/cloud-assembly-schema.ArtifactType",
        "@aws-cdk/cloud-assembly-schema.ArtifactType#NONE",
        "@aws-cdk/cloud-assembly-schema.BootstrapRole"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst artifactManifest: cloud_assembly_schema.ArtifactManifest = {\n  type: cloud_assembly_schema.ArtifactType.NONE,\n\n  // the properties below are optional\n  dependencies: ['dependencies'],\n  displayName: 'displayName',\n  environment: 'environment',\n  metadata: {\n    metadataKey: [{\n      type: 'type',\n\n      // the properties below are optional\n      data: 'data',\n      trace: ['trace'],\n    }],\n  },\n  properties: {\n    templateFile: 'templateFile',\n\n    // the properties below are optional\n    assumeRoleArn: 'assumeRoleArn',\n    assumeRoleExternalId: 'assumeRoleExternalId',\n    bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n    cloudFormationExecutionRoleArn: 'cloudFormationExecutionRoleArn',\n    lookupRole: {\n      arn: 'arn',\n\n      // the properties below are optional\n      assumeRoleExternalId: 'assumeRoleExternalId',\n      bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n      requiresBootstrapStackVersion: 123,\n    },\n    parameters: {\n      parametersKey: 'parameters',\n    },\n    requiresBootstrapStackVersion: 123,\n    stackName: 'stackName',\n    stackTemplateAssetObjectUrl: 'stackTemplateAssetObjectUrl',\n    tags: {\n      tagsKey: 'tags',\n    },\n    terminationProtection: false,\n    validateOnSynth: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 19,
        "75": 36,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 7,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 29,
        "290": 1
      },
      "fqnsFingerprint": "a8b47472c8757ec7b1e584f2bfd85ad8e87afde70769323b70dbed3823e90150"
    },
    "51b9f560219f00280c95ce85c64fec1e95f59ed1de150b9a0323d891c0d9870c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nassembly_manifest = cloud_assembly_schema.AssemblyManifest(\n    version=\"version\",\n\n    # the properties below are optional\n    artifacts={\n        \"artifacts_key\": cloud_assembly_schema.ArtifactManifest(\n            type=cloud_assembly_schema.ArtifactType.NONE,\n\n            # the properties below are optional\n            dependencies=[\"dependencies\"],\n            display_name=\"displayName\",\n            environment=\"environment\",\n            metadata={\n                \"metadata_key\": [cloud_assembly_schema.MetadataEntry(\n                    type=\"type\",\n\n                    # the properties below are optional\n                    data=\"data\",\n                    trace=[\"trace\"]\n                )]\n            },\n            properties=cloud_assembly_schema.AwsCloudFormationStackProperties(\n                template_file=\"templateFile\",\n\n                # the properties below are optional\n                assume_role_arn=\"assumeRoleArn\",\n                assume_role_external_id=\"assumeRoleExternalId\",\n                bootstrap_stack_version_ssm_parameter=\"bootstrapStackVersionSsmParameter\",\n                cloud_formation_execution_role_arn=\"cloudFormationExecutionRoleArn\",\n                lookup_role=cloud_assembly_schema.BootstrapRole(\n                    arn=\"arn\",\n\n                    # the properties below are optional\n                    assume_role_external_id=\"assumeRoleExternalId\",\n                    bootstrap_stack_version_ssm_parameter=\"bootstrapStackVersionSsmParameter\",\n                    requires_bootstrap_stack_version=123\n                ),\n                parameters={\n                    \"parameters_key\": \"parameters\"\n                },\n                requires_bootstrap_stack_version=123,\n                stack_name=\"stackName\",\n                stack_template_asset_object_url=\"stackTemplateAssetObjectUrl\",\n                tags={\n                    \"tags_key\": \"tags\"\n                },\n                termination_protection=False,\n                validate_on_synth=False\n            )\n        )\n    },\n    missing=[cloud_assembly_schema.MissingContext(\n        key=\"key\",\n        props=cloud_assembly_schema.AmiContextQuery(\n            account=\"account\",\n            filters={\n                \"filters_key\": [\"filters\"]\n            },\n            region=\"region\",\n\n            # the properties below are optional\n            lookup_role_arn=\"lookupRoleArn\",\n            owners=[\"owners\"]\n        ),\n        provider=cloud_assembly_schema.ContextProvider.AMI_PROVIDER\n    )],\n    runtime=cloud_assembly_schema.RuntimeInfo(\n        libraries={\n            \"libraries_key\": \"libraries\"\n        }\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nAssemblyManifest assemblyManifest = new AssemblyManifest {\n    Version = \"version\",\n\n    // the properties below are optional\n    Artifacts = new Dictionary<string, ArtifactManifest> {\n        { \"artifactsKey\", new ArtifactManifest {\n            Type = ArtifactType.NONE,\n\n            // the properties below are optional\n            Dependencies = new [] { \"dependencies\" },\n            DisplayName = \"displayName\",\n            Environment = \"environment\",\n            Metadata = new Dictionary<string, MetadataEntry[]> {\n                { \"metadataKey\", new [] { new MetadataEntry {\n                    Type = \"type\",\n\n                    // the properties below are optional\n                    Data = \"data\",\n                    Trace = new [] { \"trace\" }\n                } } }\n            },\n            Properties = new AwsCloudFormationStackProperties {\n                TemplateFile = \"templateFile\",\n\n                // the properties below are optional\n                AssumeRoleArn = \"assumeRoleArn\",\n                AssumeRoleExternalId = \"assumeRoleExternalId\",\n                BootstrapStackVersionSsmParameter = \"bootstrapStackVersionSsmParameter\",\n                CloudFormationExecutionRoleArn = \"cloudFormationExecutionRoleArn\",\n                LookupRole = new BootstrapRole {\n                    Arn = \"arn\",\n\n                    // the properties below are optional\n                    AssumeRoleExternalId = \"assumeRoleExternalId\",\n                    BootstrapStackVersionSsmParameter = \"bootstrapStackVersionSsmParameter\",\n                    RequiresBootstrapStackVersion = 123\n                },\n                Parameters = new Dictionary<string, string> {\n                    { \"parametersKey\", \"parameters\" }\n                },\n                RequiresBootstrapStackVersion = 123,\n                StackName = \"stackName\",\n                StackTemplateAssetObjectUrl = \"stackTemplateAssetObjectUrl\",\n                Tags = new Dictionary<string, string> {\n                    { \"tagsKey\", \"tags\" }\n                },\n                TerminationProtection = false,\n                ValidateOnSynth = false\n            }\n        } }\n    },\n    Missing = new [] { new MissingContext {\n        Key = \"key\",\n        Props = new AmiContextQuery {\n            Account = \"account\",\n            Filters = new Dictionary<string, string[]> {\n                { \"filtersKey\", new [] { \"filters\" } }\n            },\n            Region = \"region\",\n\n            // the properties below are optional\n            LookupRoleArn = \"lookupRoleArn\",\n            Owners = new [] { \"owners\" }\n        },\n        Provider = ContextProvider.AMI_PROVIDER\n    } },\n    Runtime = new RuntimeInfo {\n        Libraries = new Dictionary<string, string> {\n            { \"librariesKey\", \"libraries\" }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nAssemblyManifest assemblyManifest = AssemblyManifest.builder()\n        .version(\"version\")\n\n        // the properties below are optional\n        .artifacts(Map.of(\n                \"artifactsKey\", ArtifactManifest.builder()\n                        .type(ArtifactType.NONE)\n\n                        // the properties below are optional\n                        .dependencies(List.of(\"dependencies\"))\n                        .displayName(\"displayName\")\n                        .environment(\"environment\")\n                        .metadata(Map.of(\n                                \"metadataKey\", List.of(MetadataEntry.builder()\n                                        .type(\"type\")\n\n                                        // the properties below are optional\n                                        .data(\"data\")\n                                        .trace(List.of(\"trace\"))\n                                        .build())))\n                        .properties(AwsCloudFormationStackProperties.builder()\n                                .templateFile(\"templateFile\")\n\n                                // the properties below are optional\n                                .assumeRoleArn(\"assumeRoleArn\")\n                                .assumeRoleExternalId(\"assumeRoleExternalId\")\n                                .bootstrapStackVersionSsmParameter(\"bootstrapStackVersionSsmParameter\")\n                                .cloudFormationExecutionRoleArn(\"cloudFormationExecutionRoleArn\")\n                                .lookupRole(BootstrapRole.builder()\n                                        .arn(\"arn\")\n\n                                        // the properties below are optional\n                                        .assumeRoleExternalId(\"assumeRoleExternalId\")\n                                        .bootstrapStackVersionSsmParameter(\"bootstrapStackVersionSsmParameter\")\n                                        .requiresBootstrapStackVersion(123)\n                                        .build())\n                                .parameters(Map.of(\n                                        \"parametersKey\", \"parameters\"))\n                                .requiresBootstrapStackVersion(123)\n                                .stackName(\"stackName\")\n                                .stackTemplateAssetObjectUrl(\"stackTemplateAssetObjectUrl\")\n                                .tags(Map.of(\n                                        \"tagsKey\", \"tags\"))\n                                .terminationProtection(false)\n                                .validateOnSynth(false)\n                                .build())\n                        .build()))\n        .missing(List.of(MissingContext.builder()\n                .key(\"key\")\n                .props(AmiContextQuery.builder()\n                        .account(\"account\")\n                        .filters(Map.of(\n                                \"filtersKey\", List.of(\"filters\")))\n                        .region(\"region\")\n\n                        // the properties below are optional\n                        .lookupRoleArn(\"lookupRoleArn\")\n                        .owners(List.of(\"owners\"))\n                        .build())\n                .provider(ContextProvider.AMI_PROVIDER)\n                .build()))\n        .runtime(RuntimeInfo.builder()\n                .libraries(Map.of(\n                        \"librariesKey\", \"libraries\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nassemblyManifest := &assemblyManifest{\n\tversion: jsii.String(\"version\"),\n\n\t// the properties below are optional\n\tartifacts: map[string]artifactManifest{\n\t\t\"artifactsKey\": &artifactManifest{\n\t\t\t\"type\": cloud_assembly_schema.ArtifactType_NONE,\n\n\t\t\t// the properties below are optional\n\t\t\t\"dependencies\": []*string{\n\t\t\t\tjsii.String(\"dependencies\"),\n\t\t\t},\n\t\t\t\"displayName\": jsii.String(\"displayName\"),\n\t\t\t\"environment\": jsii.String(\"environment\"),\n\t\t\t\"metadata\": map[string][]MetadataEntry{\n\t\t\t\t\"metadataKey\": []MetadataEntry{\n\t\t\t\t\t&MetadataEntry{\n\t\t\t\t\t\t\"type\": jsii.String(\"type\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\"data\": jsii.String(\"data\"),\n\t\t\t\t\t\t\"trace\": []*string{\n\t\t\t\t\t\t\tjsii.String(\"trace\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"properties\": &AwsCloudFormationStackProperties{\n\t\t\t\t\"templateFile\": jsii.String(\"templateFile\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\t\"assumeRoleArn\": jsii.String(\"assumeRoleArn\"),\n\t\t\t\t\"assumeRoleExternalId\": jsii.String(\"assumeRoleExternalId\"),\n\t\t\t\t\"bootstrapStackVersionSsmParameter\": jsii.String(\"bootstrapStackVersionSsmParameter\"),\n\t\t\t\t\"cloudFormationExecutionRoleArn\": jsii.String(\"cloudFormationExecutionRoleArn\"),\n\t\t\t\t\"lookupRole\": &BootstrapRole{\n\t\t\t\t\t\"arn\": jsii.String(\"arn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"assumeRoleExternalId\": jsii.String(\"assumeRoleExternalId\"),\n\t\t\t\t\t\"bootstrapStackVersionSsmParameter\": jsii.String(\"bootstrapStackVersionSsmParameter\"),\n\t\t\t\t\t\"requiresBootstrapStackVersion\": jsii.Number(123),\n\t\t\t\t},\n\t\t\t\t\"parameters\": map[string]*string{\n\t\t\t\t\t\"parametersKey\": jsii.String(\"parameters\"),\n\t\t\t\t},\n\t\t\t\t\"requiresBootstrapStackVersion\": jsii.Number(123),\n\t\t\t\t\"stackName\": jsii.String(\"stackName\"),\n\t\t\t\t\"stackTemplateAssetObjectUrl\": jsii.String(\"stackTemplateAssetObjectUrl\"),\n\t\t\t\t\"tags\": map[string]*string{\n\t\t\t\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t\t\t\t},\n\t\t\t\t\"terminationProtection\": jsii.Boolean(false),\n\t\t\t\t\"validateOnSynth\": jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\tmissing: []missingContext{\n\t\t&missingContext{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tprops: &amiContextQuery{\n\t\t\t\taccount: jsii.String(\"account\"),\n\t\t\t\tfilters: map[string][]*string{\n\t\t\t\t\t\"filtersKey\": []*string{\n\t\t\t\t\t\tjsii.String(\"filters\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tregion: jsii.String(\"region\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n\t\t\t\towners: []interface{}{\n\t\t\t\t\tjsii.String(\"owners\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tprovider: cloud_assembly_schema.contextProvider_AMI_PROVIDER,\n\t\t},\n\t},\n\truntime: &runtimeInfo{\n\t\tlibraries: map[string]*string{\n\t\t\t\"librariesKey\": jsii.String(\"libraries\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst assemblyManifest: cloud_assembly_schema.AssemblyManifest = {\n  version: 'version',\n\n  // the properties below are optional\n  artifacts: {\n    artifactsKey: {\n      type: cloud_assembly_schema.ArtifactType.NONE,\n\n      // the properties below are optional\n      dependencies: ['dependencies'],\n      displayName: 'displayName',\n      environment: 'environment',\n      metadata: {\n        metadataKey: [{\n          type: 'type',\n\n          // the properties below are optional\n          data: 'data',\n          trace: ['trace'],\n        }],\n      },\n      properties: {\n        templateFile: 'templateFile',\n\n        // the properties below are optional\n        assumeRoleArn: 'assumeRoleArn',\n        assumeRoleExternalId: 'assumeRoleExternalId',\n        bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n        cloudFormationExecutionRoleArn: 'cloudFormationExecutionRoleArn',\n        lookupRole: {\n          arn: 'arn',\n\n          // the properties below are optional\n          assumeRoleExternalId: 'assumeRoleExternalId',\n          bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n          requiresBootstrapStackVersion: 123,\n        },\n        parameters: {\n          parametersKey: 'parameters',\n        },\n        requiresBootstrapStackVersion: 123,\n        stackName: 'stackName',\n        stackTemplateAssetObjectUrl: 'stackTemplateAssetObjectUrl',\n        tags: {\n          tagsKey: 'tags',\n        },\n        terminationProtection: false,\n        validateOnSynth: false,\n      },\n    },\n  },\n  missing: [{\n    key: 'key',\n    props: {\n      account: 'account',\n      filters: {\n        filtersKey: ['filters'],\n      },\n      region: 'region',\n\n      // the properties below are optional\n      lookupRoleArn: 'lookupRoleArn',\n      owners: ['owners'],\n    },\n    provider: cloud_assembly_schema.ContextProvider.AMI_PROVIDER,\n  }],\n  runtime: {\n    libraries: {\n      librariesKey: 'libraries',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.AssemblyManifest"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.ArtifactManifest",
        "@aws-cdk/cloud-assembly-schema.ArtifactType",
        "@aws-cdk/cloud-assembly-schema.ArtifactType#NONE",
        "@aws-cdk/cloud-assembly-schema.AssemblyManifest",
        "@aws-cdk/cloud-assembly-schema.BootstrapRole",
        "@aws-cdk/cloud-assembly-schema.ContextProvider",
        "@aws-cdk/cloud-assembly-schema.ContextProvider#AMI_PROVIDER",
        "@aws-cdk/cloud-assembly-schema.RuntimeInfo"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst assemblyManifest: cloud_assembly_schema.AssemblyManifest = {\n  version: 'version',\n\n  // the properties below are optional\n  artifacts: {\n    artifactsKey: {\n      type: cloud_assembly_schema.ArtifactType.NONE,\n\n      // the properties below are optional\n      dependencies: ['dependencies'],\n      displayName: 'displayName',\n      environment: 'environment',\n      metadata: {\n        metadataKey: [{\n          type: 'type',\n\n          // the properties below are optional\n          data: 'data',\n          trace: ['trace'],\n        }],\n      },\n      properties: {\n        templateFile: 'templateFile',\n\n        // the properties below are optional\n        assumeRoleArn: 'assumeRoleArn',\n        assumeRoleExternalId: 'assumeRoleExternalId',\n        bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n        cloudFormationExecutionRoleArn: 'cloudFormationExecutionRoleArn',\n        lookupRole: {\n          arn: 'arn',\n\n          // the properties below are optional\n          assumeRoleExternalId: 'assumeRoleExternalId',\n          bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n          requiresBootstrapStackVersion: 123,\n        },\n        parameters: {\n          parametersKey: 'parameters',\n        },\n        requiresBootstrapStackVersion: 123,\n        stackName: 'stackName',\n        stackTemplateAssetObjectUrl: 'stackTemplateAssetObjectUrl',\n        tags: {\n          tagsKey: 'tags',\n        },\n        terminationProtection: false,\n        validateOnSynth: false,\n      },\n    },\n  },\n  missing: [{\n    key: 'key',\n    props: {\n      account: 'account',\n      filters: {\n        filtersKey: ['filters'],\n      },\n      region: 'region',\n\n      // the properties below are optional\n      lookupRoleArn: 'lookupRoleArn',\n      owners: ['owners'],\n    },\n    provider: cloud_assembly_schema.ContextProvider.AMI_PROVIDER,\n  }],\n  runtime: {\n    libraries: {\n      librariesKey: 'libraries',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 27,
        "75": 55,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 6,
        "193": 14,
        "194": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 45,
        "290": 1
      },
      "fqnsFingerprint": "4516a1c6237b5b9f8bff36e346080d4641352277019b903283b7cc1337e12a34"
    },
    "6df1b98937a707781cf94ec9a6b0757a31a1f33fc71d2562322f714d5f10d2b3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nasset_manifest = cloud_assembly_schema.AssetManifest(\n    version=\"version\",\n\n    # the properties below are optional\n    docker_images={\n        \"docker_images_key\": cloud_assembly_schema.DockerImageAsset(\n            destinations={\n                \"destinations_key\": cloud_assembly_schema.DockerImageDestination(\n                    image_tag=\"imageTag\",\n                    repository_name=\"repositoryName\",\n\n                    # the properties below are optional\n                    assume_role_arn=\"assumeRoleArn\",\n                    assume_role_external_id=\"assumeRoleExternalId\",\n                    region=\"region\"\n                )\n            },\n            source=cloud_assembly_schema.DockerImageSource(\n                directory=\"directory\",\n                docker_build_args={\n                    \"docker_build_args_key\": \"dockerBuildArgs\"\n                },\n                docker_build_target=\"dockerBuildTarget\",\n                docker_file=\"dockerFile\",\n                executable=[\"executable\"],\n                network_mode=\"networkMode\"\n            )\n        )\n    },\n    files={\n        \"files_key\": cloud_assembly_schema.FileAsset(\n            destinations={\n                \"destinations_key\": cloud_assembly_schema.FileDestination(\n                    bucket_name=\"bucketName\",\n                    object_key=\"objectKey\",\n\n                    # the properties below are optional\n                    assume_role_arn=\"assumeRoleArn\",\n                    assume_role_external_id=\"assumeRoleExternalId\",\n                    region=\"region\"\n                )\n            },\n            source=cloud_assembly_schema.FileSource(\n                executable=[\"executable\"],\n                packaging=cloud_assembly_schema.FileAssetPackaging.FILE,\n                path=\"path\"\n            )\n        )\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nAssetManifest assetManifest = new AssetManifest {\n    Version = \"version\",\n\n    // the properties below are optional\n    DockerImages = new Dictionary<string, DockerImageAsset> {\n        { \"dockerImagesKey\", new DockerImageAsset {\n            Destinations = new Dictionary<string, DockerImageDestination> {\n                { \"destinationsKey\", new DockerImageDestination {\n                    ImageTag = \"imageTag\",\n                    RepositoryName = \"repositoryName\",\n\n                    // the properties below are optional\n                    AssumeRoleArn = \"assumeRoleArn\",\n                    AssumeRoleExternalId = \"assumeRoleExternalId\",\n                    Region = \"region\"\n                } }\n            },\n            Source = new DockerImageSource {\n                Directory = \"directory\",\n                DockerBuildArgs = new Dictionary<string, string> {\n                    { \"dockerBuildArgsKey\", \"dockerBuildArgs\" }\n                },\n                DockerBuildTarget = \"dockerBuildTarget\",\n                DockerFile = \"dockerFile\",\n                Executable = new [] { \"executable\" },\n                NetworkMode = \"networkMode\"\n            }\n        } }\n    },\n    Files = new Dictionary<string, FileAsset> {\n        { \"filesKey\", new FileAsset {\n            Destinations = new Dictionary<string, FileDestination> {\n                { \"destinationsKey\", new FileDestination {\n                    BucketName = \"bucketName\",\n                    ObjectKey = \"objectKey\",\n\n                    // the properties below are optional\n                    AssumeRoleArn = \"assumeRoleArn\",\n                    AssumeRoleExternalId = \"assumeRoleExternalId\",\n                    Region = \"region\"\n                } }\n            },\n            Source = new FileSource {\n                Executable = new [] { \"executable\" },\n                Packaging = FileAssetPackaging.FILE,\n                Path = \"path\"\n            }\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nAssetManifest assetManifest = AssetManifest.builder()\n        .version(\"version\")\n\n        // the properties below are optional\n        .dockerImages(Map.of(\n                \"dockerImagesKey\", DockerImageAsset.builder()\n                        .destinations(Map.of(\n                                \"destinationsKey\", DockerImageDestination.builder()\n                                        .imageTag(\"imageTag\")\n                                        .repositoryName(\"repositoryName\")\n\n                                        // the properties below are optional\n                                        .assumeRoleArn(\"assumeRoleArn\")\n                                        .assumeRoleExternalId(\"assumeRoleExternalId\")\n                                        .region(\"region\")\n                                        .build()))\n                        .source(DockerImageSource.builder()\n                                .directory(\"directory\")\n                                .dockerBuildArgs(Map.of(\n                                        \"dockerBuildArgsKey\", \"dockerBuildArgs\"))\n                                .dockerBuildTarget(\"dockerBuildTarget\")\n                                .dockerFile(\"dockerFile\")\n                                .executable(List.of(\"executable\"))\n                                .networkMode(\"networkMode\")\n                                .build())\n                        .build()))\n        .files(Map.of(\n                \"filesKey\", FileAsset.builder()\n                        .destinations(Map.of(\n                                \"destinationsKey\", FileDestination.builder()\n                                        .bucketName(\"bucketName\")\n                                        .objectKey(\"objectKey\")\n\n                                        // the properties below are optional\n                                        .assumeRoleArn(\"assumeRoleArn\")\n                                        .assumeRoleExternalId(\"assumeRoleExternalId\")\n                                        .region(\"region\")\n                                        .build()))\n                        .source(FileSource.builder()\n                                .executable(List.of(\"executable\"))\n                                .packaging(FileAssetPackaging.FILE)\n                                .path(\"path\")\n                                .build())\n                        .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nassetManifest := &assetManifest{\n\tversion: jsii.String(\"version\"),\n\n\t// the properties below are optional\n\tdockerImages: map[string]dockerImageAsset{\n\t\t\"dockerImagesKey\": &dockerImageAsset{\n\t\t\t\"destinations\": map[string]DockerImageDestination{\n\t\t\t\t\"destinationsKey\": &DockerImageDestination{\n\t\t\t\t\t\"imageTag\": jsii.String(\"imageTag\"),\n\t\t\t\t\t\"repositoryName\": jsii.String(\"repositoryName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"assumeRoleArn\": jsii.String(\"assumeRoleArn\"),\n\t\t\t\t\t\"assumeRoleExternalId\": jsii.String(\"assumeRoleExternalId\"),\n\t\t\t\t\t\"region\": jsii.String(\"region\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"source\": &DockerImageSource{\n\t\t\t\t\"directory\": jsii.String(\"directory\"),\n\t\t\t\t\"dockerBuildArgs\": map[string]*string{\n\t\t\t\t\t\"dockerBuildArgsKey\": jsii.String(\"dockerBuildArgs\"),\n\t\t\t\t},\n\t\t\t\t\"dockerBuildTarget\": jsii.String(\"dockerBuildTarget\"),\n\t\t\t\t\"dockerFile\": jsii.String(\"dockerFile\"),\n\t\t\t\t\"executable\": []*string{\n\t\t\t\t\tjsii.String(\"executable\"),\n\t\t\t\t},\n\t\t\t\t\"networkMode\": jsii.String(\"networkMode\"),\n\t\t\t},\n\t\t},\n\t},\n\tfiles: map[string]fileAsset{\n\t\t\"filesKey\": &fileAsset{\n\t\t\t\"destinations\": map[string]FileDestination{\n\t\t\t\t\"destinationsKey\": &FileDestination{\n\t\t\t\t\t\"bucketName\": jsii.String(\"bucketName\"),\n\t\t\t\t\t\"objectKey\": jsii.String(\"objectKey\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\"assumeRoleArn\": jsii.String(\"assumeRoleArn\"),\n\t\t\t\t\t\"assumeRoleExternalId\": jsii.String(\"assumeRoleExternalId\"),\n\t\t\t\t\t\"region\": jsii.String(\"region\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"source\": &FileSource{\n\t\t\t\t\"executable\": []*string{\n\t\t\t\t\tjsii.String(\"executable\"),\n\t\t\t\t},\n\t\t\t\t\"packaging\": cloud_assembly_schema.FileAssetPackaging_FILE,\n\t\t\t\t\"path\": jsii.String(\"path\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst assetManifest: cloud_assembly_schema.AssetManifest = {\n  version: 'version',\n\n  // the properties below are optional\n  dockerImages: {\n    dockerImagesKey: {\n      destinations: {\n        destinationsKey: {\n          imageTag: 'imageTag',\n          repositoryName: 'repositoryName',\n\n          // the properties below are optional\n          assumeRoleArn: 'assumeRoleArn',\n          assumeRoleExternalId: 'assumeRoleExternalId',\n          region: 'region',\n        },\n      },\n      source: {\n        directory: 'directory',\n        dockerBuildArgs: {\n          dockerBuildArgsKey: 'dockerBuildArgs',\n        },\n        dockerBuildTarget: 'dockerBuildTarget',\n        dockerFile: 'dockerFile',\n        executable: ['executable'],\n        networkMode: 'networkMode',\n      },\n    },\n  },\n  files: {\n    filesKey: {\n      destinations: {\n        destinationsKey: {\n          bucketName: 'bucketName',\n          objectKey: 'objectKey',\n\n          // the properties below are optional\n          assumeRoleArn: 'assumeRoleArn',\n          assumeRoleExternalId: 'assumeRoleExternalId',\n          region: 'region',\n        },\n      },\n      source: {\n        executable: ['executable'],\n        packaging: cloud_assembly_schema.FileAssetPackaging.FILE,\n        path: 'path',\n      },\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.AssetManifest"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.AssetManifest",
        "@aws-cdk/cloud-assembly-schema.DockerImageAsset",
        "@aws-cdk/cloud-assembly-schema.DockerImageDestination",
        "@aws-cdk/cloud-assembly-schema.DockerImageSource",
        "@aws-cdk/cloud-assembly-schema.FileAsset",
        "@aws-cdk/cloud-assembly-schema.FileAssetPackaging",
        "@aws-cdk/cloud-assembly-schema.FileAssetPackaging#FILE",
        "@aws-cdk/cloud-assembly-schema.FileDestination",
        "@aws-cdk/cloud-assembly-schema.FileSource"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst assetManifest: cloud_assembly_schema.AssetManifest = {\n  version: 'version',\n\n  // the properties below are optional\n  dockerImages: {\n    dockerImagesKey: {\n      destinations: {\n        destinationsKey: {\n          imageTag: 'imageTag',\n          repositoryName: 'repositoryName',\n\n          // the properties below are optional\n          assumeRoleArn: 'assumeRoleArn',\n          assumeRoleExternalId: 'assumeRoleExternalId',\n          region: 'region',\n        },\n      },\n      source: {\n        directory: 'directory',\n        dockerBuildArgs: {\n          dockerBuildArgsKey: 'dockerBuildArgs',\n        },\n        dockerBuildTarget: 'dockerBuildTarget',\n        dockerFile: 'dockerFile',\n        executable: ['executable'],\n        networkMode: 'networkMode',\n      },\n    },\n  },\n  files: {\n    filesKey: {\n      destinations: {\n        destinationsKey: {\n          bucketName: 'bucketName',\n          objectKey: 'objectKey',\n\n          // the properties below are optional\n          assumeRoleArn: 'assumeRoleArn',\n          assumeRoleExternalId: 'assumeRoleExternalId',\n          region: 'region',\n        },\n      },\n      source: {\n        executable: ['executable'],\n        packaging: cloud_assembly_schema.FileAssetPackaging.FILE,\n        path: 'path',\n      },\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 20,
        "75": 38,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 12,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "7058b4b67d53c9e07e86bf7b1fab26149729e86f31bace665e0990dff1ecb764"
    },
    "473cefad1aeafa51cd5283cec6bdb716fbc338d433ea32231c51139c95227a6d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nasset_manifest_properties = cloud_assembly_schema.AssetManifestProperties(\n    file=\"file\",\n\n    # the properties below are optional\n    bootstrap_stack_version_ssm_parameter=\"bootstrapStackVersionSsmParameter\",\n    requires_bootstrap_stack_version=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nAssetManifestProperties assetManifestProperties = new AssetManifestProperties {\n    File = \"file\",\n\n    // the properties below are optional\n    BootstrapStackVersionSsmParameter = \"bootstrapStackVersionSsmParameter\",\n    RequiresBootstrapStackVersion = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nAssetManifestProperties assetManifestProperties = AssetManifestProperties.builder()\n        .file(\"file\")\n\n        // the properties below are optional\n        .bootstrapStackVersionSsmParameter(\"bootstrapStackVersionSsmParameter\")\n        .requiresBootstrapStackVersion(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nassetManifestProperties := &assetManifestProperties{\n\tfile: jsii.String(\"file\"),\n\n\t// the properties below are optional\n\tbootstrapStackVersionSsmParameter: jsii.String(\"bootstrapStackVersionSsmParameter\"),\n\trequiresBootstrapStackVersion: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst assetManifestProperties: cloud_assembly_schema.AssetManifestProperties = {\n  file: 'file',\n\n  // the properties below are optional\n  bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n  requiresBootstrapStackVersion: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.AssetManifestProperties"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.AssetManifestProperties"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst assetManifestProperties: cloud_assembly_schema.AssetManifestProperties = {\n  file: 'file',\n\n  // the properties below are optional\n  bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n  requiresBootstrapStackVersion: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "6fa4dafd5ba99c700a02dc4ab8953382c12e54407e32a7a1a4d9b458c0e8df3f"
    },
    "3e88ed85cf90bc22bc9f9e684954f4e8fec254700a725062c7ce0e689b417305": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\navailability_zones_context_query = cloud_assembly_schema.AvailabilityZonesContextQuery(\n    account=\"account\",\n    region=\"region\",\n\n    # the properties below are optional\n    lookup_role_arn=\"lookupRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nAvailabilityZonesContextQuery availabilityZonesContextQuery = new AvailabilityZonesContextQuery {\n    Account = \"account\",\n    Region = \"region\",\n\n    // the properties below are optional\n    LookupRoleArn = \"lookupRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nAvailabilityZonesContextQuery availabilityZonesContextQuery = AvailabilityZonesContextQuery.builder()\n        .account(\"account\")\n        .region(\"region\")\n\n        // the properties below are optional\n        .lookupRoleArn(\"lookupRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\navailabilityZonesContextQuery := &availabilityZonesContextQuery{\n\taccount: jsii.String(\"account\"),\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst availabilityZonesContextQuery: cloud_assembly_schema.AvailabilityZonesContextQuery = {\n  account: 'account',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.AvailabilityZonesContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.AvailabilityZonesContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst availabilityZonesContextQuery: cloud_assembly_schema.AvailabilityZonesContextQuery = {\n  account: 'account',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "5843491fa882f688ddab5c8c27ec5364c432fa91369fdf4434a65c0d66e00da2"
    },
    "210001af9ea4fdab1dd7cde9580cecadb1d87fda5fe8a230e3a8945f3915f284": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\naws_cloud_formation_stack_properties = cloud_assembly_schema.AwsCloudFormationStackProperties(\n    template_file=\"templateFile\",\n\n    # the properties below are optional\n    assume_role_arn=\"assumeRoleArn\",\n    assume_role_external_id=\"assumeRoleExternalId\",\n    bootstrap_stack_version_ssm_parameter=\"bootstrapStackVersionSsmParameter\",\n    cloud_formation_execution_role_arn=\"cloudFormationExecutionRoleArn\",\n    lookup_role=cloud_assembly_schema.BootstrapRole(\n        arn=\"arn\",\n\n        # the properties below are optional\n        assume_role_external_id=\"assumeRoleExternalId\",\n        bootstrap_stack_version_ssm_parameter=\"bootstrapStackVersionSsmParameter\",\n        requires_bootstrap_stack_version=123\n    ),\n    parameters={\n        \"parameters_key\": \"parameters\"\n    },\n    requires_bootstrap_stack_version=123,\n    stack_name=\"stackName\",\n    stack_template_asset_object_url=\"stackTemplateAssetObjectUrl\",\n    tags={\n        \"tags_key\": \"tags\"\n    },\n    termination_protection=False,\n    validate_on_synth=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nAwsCloudFormationStackProperties awsCloudFormationStackProperties = new AwsCloudFormationStackProperties {\n    TemplateFile = \"templateFile\",\n\n    // the properties below are optional\n    AssumeRoleArn = \"assumeRoleArn\",\n    AssumeRoleExternalId = \"assumeRoleExternalId\",\n    BootstrapStackVersionSsmParameter = \"bootstrapStackVersionSsmParameter\",\n    CloudFormationExecutionRoleArn = \"cloudFormationExecutionRoleArn\",\n    LookupRole = new BootstrapRole {\n        Arn = \"arn\",\n\n        // the properties below are optional\n        AssumeRoleExternalId = \"assumeRoleExternalId\",\n        BootstrapStackVersionSsmParameter = \"bootstrapStackVersionSsmParameter\",\n        RequiresBootstrapStackVersion = 123\n    },\n    Parameters = new Dictionary<string, string> {\n        { \"parametersKey\", \"parameters\" }\n    },\n    RequiresBootstrapStackVersion = 123,\n    StackName = \"stackName\",\n    StackTemplateAssetObjectUrl = \"stackTemplateAssetObjectUrl\",\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    },\n    TerminationProtection = false,\n    ValidateOnSynth = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nAwsCloudFormationStackProperties awsCloudFormationStackProperties = AwsCloudFormationStackProperties.builder()\n        .templateFile(\"templateFile\")\n\n        // the properties below are optional\n        .assumeRoleArn(\"assumeRoleArn\")\n        .assumeRoleExternalId(\"assumeRoleExternalId\")\n        .bootstrapStackVersionSsmParameter(\"bootstrapStackVersionSsmParameter\")\n        .cloudFormationExecutionRoleArn(\"cloudFormationExecutionRoleArn\")\n        .lookupRole(BootstrapRole.builder()\n                .arn(\"arn\")\n\n                // the properties below are optional\n                .assumeRoleExternalId(\"assumeRoleExternalId\")\n                .bootstrapStackVersionSsmParameter(\"bootstrapStackVersionSsmParameter\")\n                .requiresBootstrapStackVersion(123)\n                .build())\n        .parameters(Map.of(\n                \"parametersKey\", \"parameters\"))\n        .requiresBootstrapStackVersion(123)\n        .stackName(\"stackName\")\n        .stackTemplateAssetObjectUrl(\"stackTemplateAssetObjectUrl\")\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .terminationProtection(false)\n        .validateOnSynth(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nawsCloudFormationStackProperties := &awsCloudFormationStackProperties{\n\ttemplateFile: jsii.String(\"templateFile\"),\n\n\t// the properties below are optional\n\tassumeRoleArn: jsii.String(\"assumeRoleArn\"),\n\tassumeRoleExternalId: jsii.String(\"assumeRoleExternalId\"),\n\tbootstrapStackVersionSsmParameter: jsii.String(\"bootstrapStackVersionSsmParameter\"),\n\tcloudFormationExecutionRoleArn: jsii.String(\"cloudFormationExecutionRoleArn\"),\n\tlookupRole: &bootstrapRole{\n\t\tarn: jsii.String(\"arn\"),\n\n\t\t// the properties below are optional\n\t\tassumeRoleExternalId: jsii.String(\"assumeRoleExternalId\"),\n\t\tbootstrapStackVersionSsmParameter: jsii.String(\"bootstrapStackVersionSsmParameter\"),\n\t\trequiresBootstrapStackVersion: jsii.Number(123),\n\t},\n\tparameters: map[string]*string{\n\t\t\"parametersKey\": jsii.String(\"parameters\"),\n\t},\n\trequiresBootstrapStackVersion: jsii.Number(123),\n\tstackName: jsii.String(\"stackName\"),\n\tstackTemplateAssetObjectUrl: jsii.String(\"stackTemplateAssetObjectUrl\"),\n\ttags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n\tterminationProtection: jsii.Boolean(false),\n\tvalidateOnSynth: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst awsCloudFormationStackProperties: cloud_assembly_schema.AwsCloudFormationStackProperties = {\n  templateFile: 'templateFile',\n\n  // the properties below are optional\n  assumeRoleArn: 'assumeRoleArn',\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n  cloudFormationExecutionRoleArn: 'cloudFormationExecutionRoleArn',\n  lookupRole: {\n    arn: 'arn',\n\n    // the properties below are optional\n    assumeRoleExternalId: 'assumeRoleExternalId',\n    bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n    requiresBootstrapStackVersion: 123,\n  },\n  parameters: {\n    parametersKey: 'parameters',\n  },\n  requiresBootstrapStackVersion: 123,\n  stackName: 'stackName',\n  stackTemplateAssetObjectUrl: 'stackTemplateAssetObjectUrl',\n  tags: {\n    tagsKey: 'tags',\n  },\n  terminationProtection: false,\n  validateOnSynth: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.AwsCloudFormationStackProperties"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.AwsCloudFormationStackProperties",
        "@aws-cdk/cloud-assembly-schema.BootstrapRole"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst awsCloudFormationStackProperties: cloud_assembly_schema.AwsCloudFormationStackProperties = {\n  templateFile: 'templateFile',\n\n  // the properties below are optional\n  assumeRoleArn: 'assumeRoleArn',\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n  cloudFormationExecutionRoleArn: 'cloudFormationExecutionRoleArn',\n  lookupRole: {\n    arn: 'arn',\n\n    // the properties below are optional\n    assumeRoleExternalId: 'assumeRoleExternalId',\n    bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n    requiresBootstrapStackVersion: 123,\n  },\n  parameters: {\n    parametersKey: 'parameters',\n  },\n  requiresBootstrapStackVersion: 123,\n  stackName: 'stackName',\n  stackTemplateAssetObjectUrl: 'stackTemplateAssetObjectUrl',\n  tags: {\n    tagsKey: 'tags',\n  },\n  terminationProtection: false,\n  validateOnSynth: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 13,
        "75": 23,
        "91": 2,
        "153": 1,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 19,
        "290": 1
      },
      "fqnsFingerprint": "979c43277ee2c1d3d98c93911b8f1f2d4980f4d540fe8d3181ef75064f097ad3"
    },
    "f0c091ab0d76f7def8f7593714572ee73dd9b4be11c3308bd524be2dedf6710a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\naws_destination = cloud_assembly_schema.AwsDestination(\n    assume_role_arn=\"assumeRoleArn\",\n    assume_role_external_id=\"assumeRoleExternalId\",\n    region=\"region\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nAwsDestination awsDestination = new AwsDestination {\n    AssumeRoleArn = \"assumeRoleArn\",\n    AssumeRoleExternalId = \"assumeRoleExternalId\",\n    Region = \"region\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nAwsDestination awsDestination = AwsDestination.builder()\n        .assumeRoleArn(\"assumeRoleArn\")\n        .assumeRoleExternalId(\"assumeRoleExternalId\")\n        .region(\"region\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nawsDestination := &awsDestination{\n\tassumeRoleArn: jsii.String(\"assumeRoleArn\"),\n\tassumeRoleExternalId: jsii.String(\"assumeRoleExternalId\"),\n\tregion: jsii.String(\"region\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst awsDestination: cloud_assembly_schema.AwsDestination = {\n  assumeRoleArn: 'assumeRoleArn',\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  region: 'region',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.AwsDestination"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.AwsDestination"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst awsDestination: cloud_assembly_schema.AwsDestination = {\n  assumeRoleArn: 'assumeRoleArn',\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  region: 'region',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "f7451737350cdc8cc4bc8c5339a5b8d32153ae61773c95f4f64f735b63415e58"
    },
    "03b1dfef36a618699bb85a0d61322c7b463d7bd335c602e106dd3728d0629d18": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nbootstrap_role = cloud_assembly_schema.BootstrapRole(\n    arn=\"arn\",\n\n    # the properties below are optional\n    assume_role_external_id=\"assumeRoleExternalId\",\n    bootstrap_stack_version_ssm_parameter=\"bootstrapStackVersionSsmParameter\",\n    requires_bootstrap_stack_version=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nBootstrapRole bootstrapRole = new BootstrapRole {\n    Arn = \"arn\",\n\n    // the properties below are optional\n    AssumeRoleExternalId = \"assumeRoleExternalId\",\n    BootstrapStackVersionSsmParameter = \"bootstrapStackVersionSsmParameter\",\n    RequiresBootstrapStackVersion = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nBootstrapRole bootstrapRole = BootstrapRole.builder()\n        .arn(\"arn\")\n\n        // the properties below are optional\n        .assumeRoleExternalId(\"assumeRoleExternalId\")\n        .bootstrapStackVersionSsmParameter(\"bootstrapStackVersionSsmParameter\")\n        .requiresBootstrapStackVersion(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nbootstrapRole := &bootstrapRole{\n\tarn: jsii.String(\"arn\"),\n\n\t// the properties below are optional\n\tassumeRoleExternalId: jsii.String(\"assumeRoleExternalId\"),\n\tbootstrapStackVersionSsmParameter: jsii.String(\"bootstrapStackVersionSsmParameter\"),\n\trequiresBootstrapStackVersion: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst bootstrapRole: cloud_assembly_schema.BootstrapRole = {\n  arn: 'arn',\n\n  // the properties below are optional\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n  requiresBootstrapStackVersion: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.BootstrapRole"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.BootstrapRole"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bootstrapRole: cloud_assembly_schema.BootstrapRole = {\n  arn: 'arn',\n\n  // the properties below are optional\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  bootstrapStackVersionSsmParameter: 'bootstrapStackVersionSsmParameter',\n  requiresBootstrapStackVersion: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "3b7fe1842f0cc0f13ad1684247b5b04a45b80ce59b32df4f294894aeb087781b"
    },
    "667e9c913de44b491e0d8b565101bc973a93a3bd49ed883bf6bcb065b8c52ef2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ncdk_command = cloud_assembly_schema.CdkCommand(\n    enabled=False,\n    expected_message=\"expectedMessage\",\n    expect_error=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nCdkCommand cdkCommand = new CdkCommand {\n    Enabled = false,\n    ExpectedMessage = \"expectedMessage\",\n    ExpectError = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nCdkCommand cdkCommand = CdkCommand.builder()\n        .enabled(false)\n        .expectedMessage(\"expectedMessage\")\n        .expectError(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ncdkCommand := &cdkCommand{\n\tenabled: jsii.Boolean(false),\n\texpectedMessage: jsii.String(\"expectedMessage\"),\n\texpectError: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst cdkCommand: cloud_assembly_schema.CdkCommand = {\n  enabled: false,\n  expectedMessage: 'expectedMessage',\n  expectError: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.CdkCommand"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommand"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cdkCommand: cloud_assembly_schema.CdkCommand = {\n  enabled: false,\n  expectedMessage: 'expectedMessage',\n  expectError: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 2,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "865a836cb27f42e709ad29a1f033399133017c1b7613ee028434d7ef7255a9ee"
    },
    "e1878445a7c32ec61e4a4c4a76d3838f81b8dd771500ada79258664195466038": {
      "translations": {
        "python": {
          "source": "app = App()\n\nstack_under_test = Stack(app, \"StackUnderTest\")\n\nstack = Stack(app, \"stack\")\n\nIntegTestCase(stack, \"CustomizedDeploymentWorkflow\",\n    stacks=[stack_under_test],\n    diff_assets=True,\n    stack_update_workflow=True,\n    cdk_command_options=CdkCommands(\n        deploy=DeployCommand(\n            args=DeployOptions(\n                require_approval=RequireApproval.NEVER,\n                json=True\n            )\n        ),\n        destroy=DestroyCommand(\n            args=DestroyOptions(\n                force=True\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nnew IntegTestCase(stack, \"CustomizedDeploymentWorkflow\", new IntegTestCaseProps {\n    Stacks = new [] { stackUnderTest },\n    DiffAssets = true,\n    StackUpdateWorkflow = true,\n    CdkCommandOptions = new CdkCommands {\n        Deploy = new DeployCommand {\n            Args = new DeployOptions {\n                RequireApproval = RequireApproval.NEVER,\n                Json = true\n            }\n        },\n        Destroy = new DestroyCommand {\n            Args = new DestroyOptions {\n                Force = true\n            }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nIntegTestCase.Builder.create(stack, \"CustomizedDeploymentWorkflow\")\n        .stacks(List.of(stackUnderTest))\n        .diffAssets(true)\n        .stackUpdateWorkflow(true)\n        .cdkCommandOptions(CdkCommands.builder()\n                .deploy(DeployCommand.builder()\n                        .args(DeployOptions.builder()\n                                .requireApproval(RequireApproval.NEVER)\n                                .json(true)\n                                .build())\n                        .build())\n                .destroy(DestroyCommand.builder()\n                        .args(DestroyOptions.builder()\n                                .force(true)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "app := NewApp()\n\nstackUnderTest := NewStack(app, jsii.String(\"StackUnderTest\"))\n\nstack := NewStack(app, jsii.String(\"stack\"))\n\nNewIntegTestCase(stack, jsii.String(\"CustomizedDeploymentWorkflow\"), &integTestCaseProps{\n\tstacks: []stack{\n\t\tstackUnderTest,\n\t},\n\tdiffAssets: jsii.Boolean(true),\n\tstackUpdateWorkflow: jsii.Boolean(true),\n\tcdkCommandOptions: &cdkCommands{\n\t\tdeploy: &deployCommand{\n\t\t\targs: &deployOptions{\n\t\t\t\trequireApproval: requireApproval_NEVER,\n\t\t\t\tjson: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t\tdestroy: &destroyCommand{\n\t\t\targs: &destroyOptions{\n\t\t\t\tforce: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.CdkCommands"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Stack",
        "@aws-cdk/integ-tests.IntegTestCase",
        "@aws-cdk/integ-tests.IntegTestCaseProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as lambda from '@aws-cdk/aws-lambda';\nimport { IntegTestCase } from '@aws-cdk/integ-tests';\nimport {\n  App,\n  Construct,\n  Stack,\n  StackProps,\n} from '@aws-cdk/core';\nimport * as path from 'path';\nimport { RequireApproval } from '@aws-cdk/cloud-assembly-schema';\n\n// Code snippet begins after !show marker below\n/// !show\nconst app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 24,
        "106": 4,
        "192": 1,
        "193": 6,
        "194": 1,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 11
      },
      "fqnsFingerprint": "f7371420104093fc3724943346d98e1a48bcffb7a90c7c56b1ae19a9d7c09417"
    },
    "8f7e2b076b4d344fbaa2cffd1d4b6826a6b768f06ff4f268b7962397ae513f96": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ncontainer_image_asset_metadata_entry = cloud_assembly_schema.ContainerImageAssetMetadataEntry(\n    id=\"id\",\n    packaging=\"packaging\",\n    path=\"path\",\n    source_hash=\"sourceHash\",\n\n    # the properties below are optional\n    build_args={\n        \"build_args_key\": \"buildArgs\"\n    },\n    file=\"file\",\n    image_name_parameter=\"imageNameParameter\",\n    image_tag=\"imageTag\",\n    network_mode=\"networkMode\",\n    repository_name=\"repositoryName\",\n    target=\"target\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nContainerImageAssetMetadataEntry containerImageAssetMetadataEntry = new ContainerImageAssetMetadataEntry {\n    Id = \"id\",\n    Packaging = \"packaging\",\n    Path = \"path\",\n    SourceHash = \"sourceHash\",\n\n    // the properties below are optional\n    BuildArgs = new Dictionary<string, string> {\n        { \"buildArgsKey\", \"buildArgs\" }\n    },\n    File = \"file\",\n    ImageNameParameter = \"imageNameParameter\",\n    ImageTag = \"imageTag\",\n    NetworkMode = \"networkMode\",\n    RepositoryName = \"repositoryName\",\n    Target = \"target\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nContainerImageAssetMetadataEntry containerImageAssetMetadataEntry = ContainerImageAssetMetadataEntry.builder()\n        .id(\"id\")\n        .packaging(\"packaging\")\n        .path(\"path\")\n        .sourceHash(\"sourceHash\")\n\n        // the properties below are optional\n        .buildArgs(Map.of(\n                \"buildArgsKey\", \"buildArgs\"))\n        .file(\"file\")\n        .imageNameParameter(\"imageNameParameter\")\n        .imageTag(\"imageTag\")\n        .networkMode(\"networkMode\")\n        .repositoryName(\"repositoryName\")\n        .target(\"target\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ncontainerImageAssetMetadataEntry := &containerImageAssetMetadataEntry{\n\tid: jsii.String(\"id\"),\n\tpackaging: jsii.String(\"packaging\"),\n\tpath: jsii.String(\"path\"),\n\tsourceHash: jsii.String(\"sourceHash\"),\n\n\t// the properties below are optional\n\tbuildArgs: map[string]*string{\n\t\t\"buildArgsKey\": jsii.String(\"buildArgs\"),\n\t},\n\tfile: jsii.String(\"file\"),\n\timageNameParameter: jsii.String(\"imageNameParameter\"),\n\timageTag: jsii.String(\"imageTag\"),\n\tnetworkMode: jsii.String(\"networkMode\"),\n\trepositoryName: jsii.String(\"repositoryName\"),\n\ttarget: jsii.String(\"target\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst containerImageAssetMetadataEntry: cloud_assembly_schema.ContainerImageAssetMetadataEntry = {\n  id: 'id',\n  packaging: 'packaging',\n  path: 'path',\n  sourceHash: 'sourceHash',\n\n  // the properties below are optional\n  buildArgs: {\n    buildArgsKey: 'buildArgs',\n  },\n  file: 'file',\n  imageNameParameter: 'imageNameParameter',\n  imageTag: 'imageTag',\n  networkMode: 'networkMode',\n  repositoryName: 'repositoryName',\n  target: 'target',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.ContainerImageAssetMetadataEntry"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.ContainerImageAssetMetadataEntry"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst containerImageAssetMetadataEntry: cloud_assembly_schema.ContainerImageAssetMetadataEntry = {\n  id: 'id',\n  packaging: 'packaging',\n  path: 'path',\n  sourceHash: 'sourceHash',\n\n  // the properties below are optional\n  buildArgs: {\n    buildArgsKey: 'buildArgs',\n  },\n  file: 'file',\n  imageNameParameter: 'imageNameParameter',\n  imageTag: 'imageTag',\n  networkMode: 'networkMode',\n  repositoryName: 'repositoryName',\n  target: 'target',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 16,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "24a489bf1e77b25f5586308f2061ec7e9cdbfa0e142cd270d57fc56b6e9dc64d"
    },
    "446fbe4ef57d065169198f8cc45bb64f69409c17ca8b277fb2d2e8b9b84d44a1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ndefault_cdk_options = cloud_assembly_schema.DefaultCdkOptions(\n    all=False,\n    app=\"app\",\n    asset_metadata=False,\n    ca_bundle_path=\"caBundlePath\",\n    color=False,\n    context={\n        \"context_key\": \"context\"\n    },\n    debug=False,\n    ec2_creds=False,\n    ignore_errors=False,\n    json=False,\n    lookups=False,\n    notices=False,\n    output=\"output\",\n    path_metadata=False,\n    profile=\"profile\",\n    proxy=\"proxy\",\n    role_arn=\"roleArn\",\n    stacks=[\"stacks\"],\n    staging=False,\n    strict=False,\n    trace=False,\n    verbose=False,\n    version_reporting=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nDefaultCdkOptions defaultCdkOptions = new DefaultCdkOptions {\n    All = false,\n    App = \"app\",\n    AssetMetadata = false,\n    CaBundlePath = \"caBundlePath\",\n    Color = false,\n    Context = new Dictionary<string, string> {\n        { \"contextKey\", \"context\" }\n    },\n    Debug = false,\n    Ec2Creds = false,\n    IgnoreErrors = false,\n    Json = false,\n    Lookups = false,\n    Notices = false,\n    Output = \"output\",\n    PathMetadata = false,\n    Profile = \"profile\",\n    Proxy = \"proxy\",\n    RoleArn = \"roleArn\",\n    Stacks = new [] { \"stacks\" },\n    Staging = false,\n    Strict = false,\n    Trace = false,\n    Verbose = false,\n    VersionReporting = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nDefaultCdkOptions defaultCdkOptions = DefaultCdkOptions.builder()\n        .all(false)\n        .app(\"app\")\n        .assetMetadata(false)\n        .caBundlePath(\"caBundlePath\")\n        .color(false)\n        .context(Map.of(\n                \"contextKey\", \"context\"))\n        .debug(false)\n        .ec2Creds(false)\n        .ignoreErrors(false)\n        .json(false)\n        .lookups(false)\n        .notices(false)\n        .output(\"output\")\n        .pathMetadata(false)\n        .profile(\"profile\")\n        .proxy(\"proxy\")\n        .roleArn(\"roleArn\")\n        .stacks(List.of(\"stacks\"))\n        .staging(false)\n        .strict(false)\n        .trace(false)\n        .verbose(false)\n        .versionReporting(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ndefaultCdkOptions := &defaultCdkOptions{\n\tall: jsii.Boolean(false),\n\tapp: jsii.String(\"app\"),\n\tassetMetadata: jsii.Boolean(false),\n\tcaBundlePath: jsii.String(\"caBundlePath\"),\n\tcolor: jsii.Boolean(false),\n\tcontext: map[string]*string{\n\t\t\"contextKey\": jsii.String(\"context\"),\n\t},\n\tdebug: jsii.Boolean(false),\n\tec2Creds: jsii.Boolean(false),\n\tignoreErrors: jsii.Boolean(false),\n\tjson: jsii.Boolean(false),\n\tlookups: jsii.Boolean(false),\n\tnotices: jsii.Boolean(false),\n\toutput: jsii.String(\"output\"),\n\tpathMetadata: jsii.Boolean(false),\n\tprofile: jsii.String(\"profile\"),\n\tproxy: jsii.String(\"proxy\"),\n\troleArn: jsii.String(\"roleArn\"),\n\tstacks: []*string{\n\t\tjsii.String(\"stacks\"),\n\t},\n\tstaging: jsii.Boolean(false),\n\tstrict: jsii.Boolean(false),\n\ttrace: jsii.Boolean(false),\n\tverbose: jsii.Boolean(false),\n\tversionReporting: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst defaultCdkOptions: cloud_assembly_schema.DefaultCdkOptions = {\n  all: false,\n  app: 'app',\n  assetMetadata: false,\n  caBundlePath: 'caBundlePath',\n  color: false,\n  context: {\n    contextKey: 'context',\n  },\n  debug: false,\n  ec2Creds: false,\n  ignoreErrors: false,\n  json: false,\n  lookups: false,\n  notices: false,\n  output: 'output',\n  pathMetadata: false,\n  profile: 'profile',\n  proxy: 'proxy',\n  roleArn: 'roleArn',\n  stacks: ['stacks'],\n  staging: false,\n  strict: false,\n  trace: false,\n  verbose: false,\n  versionReporting: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.DefaultCdkOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.DefaultCdkOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst defaultCdkOptions: cloud_assembly_schema.DefaultCdkOptions = {\n  all: false,\n  app: 'app',\n  assetMetadata: false,\n  caBundlePath: 'caBundlePath',\n  color: false,\n  context: {\n    contextKey: 'context',\n  },\n  debug: false,\n  ec2Creds: false,\n  ignoreErrors: false,\n  json: false,\n  lookups: false,\n  notices: false,\n  output: 'output',\n  pathMetadata: false,\n  profile: 'profile',\n  proxy: 'proxy',\n  roleArn: 'roleArn',\n  stacks: ['stacks'],\n  staging: false,\n  strict: false,\n  trace: false,\n  verbose: false,\n  versionReporting: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 28,
        "91": 15,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "f16cd9f149a62c877e1157dcab005757f63025a11ef35bfa96f204678c213aff"
    },
    "227b7107a3248e30506ca01e993d9ea92a8841385d1fd440686190308c193ac4": {
      "translations": {
        "python": {
          "source": "app = App()\n\nstack_under_test = Stack(app, \"StackUnderTest\")\n\nstack = Stack(app, \"stack\")\n\nIntegTestCase(stack, \"CustomizedDeploymentWorkflow\",\n    stacks=[stack_under_test],\n    diff_assets=True,\n    stack_update_workflow=True,\n    cdk_command_options=CdkCommands(\n        deploy=DeployCommand(\n            args=DeployOptions(\n                require_approval=RequireApproval.NEVER,\n                json=True\n            )\n        ),\n        destroy=DestroyCommand(\n            args=DestroyOptions(\n                force=True\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nnew IntegTestCase(stack, \"CustomizedDeploymentWorkflow\", new IntegTestCaseProps {\n    Stacks = new [] { stackUnderTest },\n    DiffAssets = true,\n    StackUpdateWorkflow = true,\n    CdkCommandOptions = new CdkCommands {\n        Deploy = new DeployCommand {\n            Args = new DeployOptions {\n                RequireApproval = RequireApproval.NEVER,\n                Json = true\n            }\n        },\n        Destroy = new DestroyCommand {\n            Args = new DestroyOptions {\n                Force = true\n            }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nIntegTestCase.Builder.create(stack, \"CustomizedDeploymentWorkflow\")\n        .stacks(List.of(stackUnderTest))\n        .diffAssets(true)\n        .stackUpdateWorkflow(true)\n        .cdkCommandOptions(CdkCommands.builder()\n                .deploy(DeployCommand.builder()\n                        .args(DeployOptions.builder()\n                                .requireApproval(RequireApproval.NEVER)\n                                .json(true)\n                                .build())\n                        .build())\n                .destroy(DestroyCommand.builder()\n                        .args(DestroyOptions.builder()\n                                .force(true)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "app := NewApp()\n\nstackUnderTest := NewStack(app, jsii.String(\"StackUnderTest\"))\n\nstack := NewStack(app, jsii.String(\"stack\"))\n\nNewIntegTestCase(stack, jsii.String(\"CustomizedDeploymentWorkflow\"), &integTestCaseProps{\n\tstacks: []stack{\n\t\tstackUnderTest,\n\t},\n\tdiffAssets: jsii.Boolean(true),\n\tstackUpdateWorkflow: jsii.Boolean(true),\n\tcdkCommandOptions: &cdkCommands{\n\t\tdeploy: &deployCommand{\n\t\t\targs: &deployOptions{\n\t\t\t\trequireApproval: requireApproval_NEVER,\n\t\t\t\tjson: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t\tdestroy: &destroyCommand{\n\t\t\targs: &destroyOptions{\n\t\t\t\tforce: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.DeployCommand"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Stack",
        "@aws-cdk/integ-tests.IntegTestCase",
        "@aws-cdk/integ-tests.IntegTestCaseProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as lambda from '@aws-cdk/aws-lambda';\nimport { IntegTestCase } from '@aws-cdk/integ-tests';\nimport {\n  App,\n  Construct,\n  Stack,\n  StackProps,\n} from '@aws-cdk/core';\nimport * as path from 'path';\nimport { RequireApproval } from '@aws-cdk/cloud-assembly-schema';\n\n// Code snippet begins after !show marker below\n/// !show\nconst app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 24,
        "106": 4,
        "192": 1,
        "193": 6,
        "194": 1,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 11
      },
      "fqnsFingerprint": "f7371420104093fc3724943346d98e1a48bcffb7a90c7c56b1ae19a9d7c09417"
    },
    "70052450dc2f54d1618ec6e4e88e63643eee73fcf615cbecd75d42326c4a9516": {
      "translations": {
        "python": {
          "source": "app = App()\n\nstack_under_test = Stack(app, \"StackUnderTest\")\n\nstack = Stack(app, \"stack\")\n\nIntegTestCase(stack, \"CustomizedDeploymentWorkflow\",\n    stacks=[stack_under_test],\n    diff_assets=True,\n    stack_update_workflow=True,\n    cdk_command_options=CdkCommands(\n        deploy=DeployCommand(\n            args=DeployOptions(\n                require_approval=RequireApproval.NEVER,\n                json=True\n            )\n        ),\n        destroy=DestroyCommand(\n            args=DestroyOptions(\n                force=True\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nnew IntegTestCase(stack, \"CustomizedDeploymentWorkflow\", new IntegTestCaseProps {\n    Stacks = new [] { stackUnderTest },\n    DiffAssets = true,\n    StackUpdateWorkflow = true,\n    CdkCommandOptions = new CdkCommands {\n        Deploy = new DeployCommand {\n            Args = new DeployOptions {\n                RequireApproval = RequireApproval.NEVER,\n                Json = true\n            }\n        },\n        Destroy = new DestroyCommand {\n            Args = new DestroyOptions {\n                Force = true\n            }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nIntegTestCase.Builder.create(stack, \"CustomizedDeploymentWorkflow\")\n        .stacks(List.of(stackUnderTest))\n        .diffAssets(true)\n        .stackUpdateWorkflow(true)\n        .cdkCommandOptions(CdkCommands.builder()\n                .deploy(DeployCommand.builder()\n                        .args(DeployOptions.builder()\n                                .requireApproval(RequireApproval.NEVER)\n                                .json(true)\n                                .build())\n                        .build())\n                .destroy(DestroyCommand.builder()\n                        .args(DestroyOptions.builder()\n                                .force(true)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "app := NewApp()\n\nstackUnderTest := NewStack(app, jsii.String(\"StackUnderTest\"))\n\nstack := NewStack(app, jsii.String(\"stack\"))\n\nNewIntegTestCase(stack, jsii.String(\"CustomizedDeploymentWorkflow\"), &integTestCaseProps{\n\tstacks: []stack{\n\t\tstackUnderTest,\n\t},\n\tdiffAssets: jsii.Boolean(true),\n\tstackUpdateWorkflow: jsii.Boolean(true),\n\tcdkCommandOptions: &cdkCommands{\n\t\tdeploy: &deployCommand{\n\t\t\targs: &deployOptions{\n\t\t\t\trequireApproval: requireApproval_NEVER,\n\t\t\t\tjson: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t\tdestroy: &destroyCommand{\n\t\t\targs: &destroyOptions{\n\t\t\t\tforce: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.DeployOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Stack",
        "@aws-cdk/integ-tests.IntegTestCase",
        "@aws-cdk/integ-tests.IntegTestCaseProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as lambda from '@aws-cdk/aws-lambda';\nimport { IntegTestCase } from '@aws-cdk/integ-tests';\nimport {\n  App,\n  Construct,\n  Stack,\n  StackProps,\n} from '@aws-cdk/core';\nimport * as path from 'path';\nimport { RequireApproval } from '@aws-cdk/cloud-assembly-schema';\n\n// Code snippet begins after !show marker below\n/// !show\nconst app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 24,
        "106": 4,
        "192": 1,
        "193": 6,
        "194": 1,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 11
      },
      "fqnsFingerprint": "f7371420104093fc3724943346d98e1a48bcffb7a90c7c56b1ae19a9d7c09417"
    },
    "b98cf5b295bcce2c33e45af08510573eea7c0e4eb5986fc22b1d3a55b74281cd": {
      "translations": {
        "python": {
          "source": "app = App()\n\nstack_under_test = Stack(app, \"StackUnderTest\")\n\nstack = Stack(app, \"stack\")\n\nIntegTestCase(stack, \"CustomizedDeploymentWorkflow\",\n    stacks=[stack_under_test],\n    diff_assets=True,\n    stack_update_workflow=True,\n    cdk_command_options=CdkCommands(\n        deploy=DeployCommand(\n            args=DeployOptions(\n                require_approval=RequireApproval.NEVER,\n                json=True\n            )\n        ),\n        destroy=DestroyCommand(\n            args=DestroyOptions(\n                force=True\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nnew IntegTestCase(stack, \"CustomizedDeploymentWorkflow\", new IntegTestCaseProps {\n    Stacks = new [] { stackUnderTest },\n    DiffAssets = true,\n    StackUpdateWorkflow = true,\n    CdkCommandOptions = new CdkCommands {\n        Deploy = new DeployCommand {\n            Args = new DeployOptions {\n                RequireApproval = RequireApproval.NEVER,\n                Json = true\n            }\n        },\n        Destroy = new DestroyCommand {\n            Args = new DestroyOptions {\n                Force = true\n            }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nIntegTestCase.Builder.create(stack, \"CustomizedDeploymentWorkflow\")\n        .stacks(List.of(stackUnderTest))\n        .diffAssets(true)\n        .stackUpdateWorkflow(true)\n        .cdkCommandOptions(CdkCommands.builder()\n                .deploy(DeployCommand.builder()\n                        .args(DeployOptions.builder()\n                                .requireApproval(RequireApproval.NEVER)\n                                .json(true)\n                                .build())\n                        .build())\n                .destroy(DestroyCommand.builder()\n                        .args(DestroyOptions.builder()\n                                .force(true)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "app := NewApp()\n\nstackUnderTest := NewStack(app, jsii.String(\"StackUnderTest\"))\n\nstack := NewStack(app, jsii.String(\"stack\"))\n\nNewIntegTestCase(stack, jsii.String(\"CustomizedDeploymentWorkflow\"), &integTestCaseProps{\n\tstacks: []stack{\n\t\tstackUnderTest,\n\t},\n\tdiffAssets: jsii.Boolean(true),\n\tstackUpdateWorkflow: jsii.Boolean(true),\n\tcdkCommandOptions: &cdkCommands{\n\t\tdeploy: &deployCommand{\n\t\t\targs: &deployOptions{\n\t\t\t\trequireApproval: requireApproval_NEVER,\n\t\t\t\tjson: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t\tdestroy: &destroyCommand{\n\t\t\targs: &destroyOptions{\n\t\t\t\tforce: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.DestroyCommand"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Stack",
        "@aws-cdk/integ-tests.IntegTestCase",
        "@aws-cdk/integ-tests.IntegTestCaseProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as lambda from '@aws-cdk/aws-lambda';\nimport { IntegTestCase } from '@aws-cdk/integ-tests';\nimport {\n  App,\n  Construct,\n  Stack,\n  StackProps,\n} from '@aws-cdk/core';\nimport * as path from 'path';\nimport { RequireApproval } from '@aws-cdk/cloud-assembly-schema';\n\n// Code snippet begins after !show marker below\n/// !show\nconst app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 24,
        "106": 4,
        "192": 1,
        "193": 6,
        "194": 1,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 11
      },
      "fqnsFingerprint": "f7371420104093fc3724943346d98e1a48bcffb7a90c7c56b1ae19a9d7c09417"
    },
    "9dec2b6f769e28988a31bcdb159750f8ca785f2fbb8986c1f3c3650552f59ae3": {
      "translations": {
        "python": {
          "source": "app = App()\n\nstack_under_test = Stack(app, \"StackUnderTest\")\n\nstack = Stack(app, \"stack\")\n\nIntegTestCase(stack, \"CustomizedDeploymentWorkflow\",\n    stacks=[stack_under_test],\n    diff_assets=True,\n    stack_update_workflow=True,\n    cdk_command_options=CdkCommands(\n        deploy=DeployCommand(\n            args=DeployOptions(\n                require_approval=RequireApproval.NEVER,\n                json=True\n            )\n        ),\n        destroy=DestroyCommand(\n            args=DestroyOptions(\n                force=True\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nnew IntegTestCase(stack, \"CustomizedDeploymentWorkflow\", new IntegTestCaseProps {\n    Stacks = new [] { stackUnderTest },\n    DiffAssets = true,\n    StackUpdateWorkflow = true,\n    CdkCommandOptions = new CdkCommands {\n        Deploy = new DeployCommand {\n            Args = new DeployOptions {\n                RequireApproval = RequireApproval.NEVER,\n                Json = true\n            }\n        },\n        Destroy = new DestroyCommand {\n            Args = new DestroyOptions {\n                Force = true\n            }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nIntegTestCase.Builder.create(stack, \"CustomizedDeploymentWorkflow\")\n        .stacks(List.of(stackUnderTest))\n        .diffAssets(true)\n        .stackUpdateWorkflow(true)\n        .cdkCommandOptions(CdkCommands.builder()\n                .deploy(DeployCommand.builder()\n                        .args(DeployOptions.builder()\n                                .requireApproval(RequireApproval.NEVER)\n                                .json(true)\n                                .build())\n                        .build())\n                .destroy(DestroyCommand.builder()\n                        .args(DestroyOptions.builder()\n                                .force(true)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "app := NewApp()\n\nstackUnderTest := NewStack(app, jsii.String(\"StackUnderTest\"))\n\nstack := NewStack(app, jsii.String(\"stack\"))\n\nNewIntegTestCase(stack, jsii.String(\"CustomizedDeploymentWorkflow\"), &integTestCaseProps{\n\tstacks: []stack{\n\t\tstackUnderTest,\n\t},\n\tdiffAssets: jsii.Boolean(true),\n\tstackUpdateWorkflow: jsii.Boolean(true),\n\tcdkCommandOptions: &cdkCommands{\n\t\tdeploy: &deployCommand{\n\t\t\targs: &deployOptions{\n\t\t\t\trequireApproval: requireApproval_NEVER,\n\t\t\t\tjson: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t\tdestroy: &destroyCommand{\n\t\t\targs: &destroyOptions{\n\t\t\t\tforce: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.DestroyOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Stack",
        "@aws-cdk/integ-tests.IntegTestCase",
        "@aws-cdk/integ-tests.IntegTestCaseProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as lambda from '@aws-cdk/aws-lambda';\nimport { IntegTestCase } from '@aws-cdk/integ-tests';\nimport {\n  App,\n  Construct,\n  Stack,\n  StackProps,\n} from '@aws-cdk/core';\nimport * as path from 'path';\nimport { RequireApproval } from '@aws-cdk/cloud-assembly-schema';\n\n// Code snippet begins after !show marker below\n/// !show\nconst app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 24,
        "106": 4,
        "192": 1,
        "193": 6,
        "194": 1,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 11
      },
      "fqnsFingerprint": "f7371420104093fc3724943346d98e1a48bcffb7a90c7c56b1ae19a9d7c09417"
    },
    "13514bf756685ec4825817ac806f4a7510034d11baa93291d3d8749ecc9bc6e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ndocker_image_asset = cloud_assembly_schema.DockerImageAsset(\n    destinations={\n        \"destinations_key\": cloud_assembly_schema.DockerImageDestination(\n            image_tag=\"imageTag\",\n            repository_name=\"repositoryName\",\n\n            # the properties below are optional\n            assume_role_arn=\"assumeRoleArn\",\n            assume_role_external_id=\"assumeRoleExternalId\",\n            region=\"region\"\n        )\n    },\n    source=cloud_assembly_schema.DockerImageSource(\n        directory=\"directory\",\n        docker_build_args={\n            \"docker_build_args_key\": \"dockerBuildArgs\"\n        },\n        docker_build_target=\"dockerBuildTarget\",\n        docker_file=\"dockerFile\",\n        executable=[\"executable\"],\n        network_mode=\"networkMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nDockerImageAsset dockerImageAsset = new DockerImageAsset {\n    Destinations = new Dictionary<string, DockerImageDestination> {\n        { \"destinationsKey\", new DockerImageDestination {\n            ImageTag = \"imageTag\",\n            RepositoryName = \"repositoryName\",\n\n            // the properties below are optional\n            AssumeRoleArn = \"assumeRoleArn\",\n            AssumeRoleExternalId = \"assumeRoleExternalId\",\n            Region = \"region\"\n        } }\n    },\n    Source = new DockerImageSource {\n        Directory = \"directory\",\n        DockerBuildArgs = new Dictionary<string, string> {\n            { \"dockerBuildArgsKey\", \"dockerBuildArgs\" }\n        },\n        DockerBuildTarget = \"dockerBuildTarget\",\n        DockerFile = \"dockerFile\",\n        Executable = new [] { \"executable\" },\n        NetworkMode = \"networkMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nDockerImageAsset dockerImageAsset = DockerImageAsset.builder()\n        .destinations(Map.of(\n                \"destinationsKey\", DockerImageDestination.builder()\n                        .imageTag(\"imageTag\")\n                        .repositoryName(\"repositoryName\")\n\n                        // the properties below are optional\n                        .assumeRoleArn(\"assumeRoleArn\")\n                        .assumeRoleExternalId(\"assumeRoleExternalId\")\n                        .region(\"region\")\n                        .build()))\n        .source(DockerImageSource.builder()\n                .directory(\"directory\")\n                .dockerBuildArgs(Map.of(\n                        \"dockerBuildArgsKey\", \"dockerBuildArgs\"))\n                .dockerBuildTarget(\"dockerBuildTarget\")\n                .dockerFile(\"dockerFile\")\n                .executable(List.of(\"executable\"))\n                .networkMode(\"networkMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ndockerImageAsset := &dockerImageAsset{\n\tdestinations: map[string]dockerImageDestination{\n\t\t\"destinationsKey\": &dockerImageDestination{\n\t\t\t\"imageTag\": jsii.String(\"imageTag\"),\n\t\t\t\"repositoryName\": jsii.String(\"repositoryName\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"assumeRoleArn\": jsii.String(\"assumeRoleArn\"),\n\t\t\t\"assumeRoleExternalId\": jsii.String(\"assumeRoleExternalId\"),\n\t\t\t\"region\": jsii.String(\"region\"),\n\t\t},\n\t},\n\tsource: &dockerImageSource{\n\t\tdirectory: jsii.String(\"directory\"),\n\t\tdockerBuildArgs: map[string]*string{\n\t\t\t\"dockerBuildArgsKey\": jsii.String(\"dockerBuildArgs\"),\n\t\t},\n\t\tdockerBuildTarget: jsii.String(\"dockerBuildTarget\"),\n\t\tdockerFile: jsii.String(\"dockerFile\"),\n\t\texecutable: []*string{\n\t\t\tjsii.String(\"executable\"),\n\t\t},\n\t\tnetworkMode: jsii.String(\"networkMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst dockerImageAsset: cloud_assembly_schema.DockerImageAsset = {\n  destinations: {\n    destinationsKey: {\n      imageTag: 'imageTag',\n      repositoryName: 'repositoryName',\n\n      // the properties below are optional\n      assumeRoleArn: 'assumeRoleArn',\n      assumeRoleExternalId: 'assumeRoleExternalId',\n      region: 'region',\n    },\n  },\n  source: {\n    directory: 'directory',\n    dockerBuildArgs: {\n      dockerBuildArgsKey: 'dockerBuildArgs',\n    },\n    dockerBuildTarget: 'dockerBuildTarget',\n    dockerFile: 'dockerFile',\n    executable: ['executable'],\n    networkMode: 'networkMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.DockerImageAsset"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.DockerImageAsset",
        "@aws-cdk/cloud-assembly-schema.DockerImageDestination",
        "@aws-cdk/cloud-assembly-schema.DockerImageSource"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dockerImageAsset: cloud_assembly_schema.DockerImageAsset = {\n  destinations: {\n    destinationsKey: {\n      imageTag: 'imageTag',\n      repositoryName: 'repositoryName',\n\n      // the properties below are optional\n      assumeRoleArn: 'assumeRoleArn',\n      assumeRoleExternalId: 'assumeRoleExternalId',\n      region: 'region',\n    },\n  },\n  source: {\n    directory: 'directory',\n    dockerBuildArgs: {\n      dockerBuildArgsKey: 'dockerBuildArgs',\n    },\n    dockerBuildTarget: 'dockerBuildTarget',\n    dockerFile: 'dockerFile',\n    executable: ['executable'],\n    networkMode: 'networkMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 19,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "cd7668ec20caebc3429cd02aadcee1b235511c02c467e738177ec3363609f597"
    },
    "3eceaa7485ff32425f456723bd17685f9967b2fd99d81dec3e5d5d4a319ceca7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ndocker_image_destination = cloud_assembly_schema.DockerImageDestination(\n    image_tag=\"imageTag\",\n    repository_name=\"repositoryName\",\n\n    # the properties below are optional\n    assume_role_arn=\"assumeRoleArn\",\n    assume_role_external_id=\"assumeRoleExternalId\",\n    region=\"region\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nDockerImageDestination dockerImageDestination = new DockerImageDestination {\n    ImageTag = \"imageTag\",\n    RepositoryName = \"repositoryName\",\n\n    // the properties below are optional\n    AssumeRoleArn = \"assumeRoleArn\",\n    AssumeRoleExternalId = \"assumeRoleExternalId\",\n    Region = \"region\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nDockerImageDestination dockerImageDestination = DockerImageDestination.builder()\n        .imageTag(\"imageTag\")\n        .repositoryName(\"repositoryName\")\n\n        // the properties below are optional\n        .assumeRoleArn(\"assumeRoleArn\")\n        .assumeRoleExternalId(\"assumeRoleExternalId\")\n        .region(\"region\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ndockerImageDestination := &dockerImageDestination{\n\timageTag: jsii.String(\"imageTag\"),\n\trepositoryName: jsii.String(\"repositoryName\"),\n\n\t// the properties below are optional\n\tassumeRoleArn: jsii.String(\"assumeRoleArn\"),\n\tassumeRoleExternalId: jsii.String(\"assumeRoleExternalId\"),\n\tregion: jsii.String(\"region\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst dockerImageDestination: cloud_assembly_schema.DockerImageDestination = {\n  imageTag: 'imageTag',\n  repositoryName: 'repositoryName',\n\n  // the properties below are optional\n  assumeRoleArn: 'assumeRoleArn',\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  region: 'region',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.DockerImageDestination"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.DockerImageDestination"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dockerImageDestination: cloud_assembly_schema.DockerImageDestination = {\n  imageTag: 'imageTag',\n  repositoryName: 'repositoryName',\n\n  // the properties below are optional\n  assumeRoleArn: 'assumeRoleArn',\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  region: 'region',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "74ca46abe27a67d74e65971a313c5675034ad3a7703423467a3ca0db3dba8568"
    },
    "3fc97b6f2fd582e233ddca867b3bbda48da9db940935286de08bc96be825b224": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ndocker_image_source = cloud_assembly_schema.DockerImageSource(\n    directory=\"directory\",\n    docker_build_args={\n        \"docker_build_args_key\": \"dockerBuildArgs\"\n    },\n    docker_build_target=\"dockerBuildTarget\",\n    docker_file=\"dockerFile\",\n    executable=[\"executable\"],\n    network_mode=\"networkMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nDockerImageSource dockerImageSource = new DockerImageSource {\n    Directory = \"directory\",\n    DockerBuildArgs = new Dictionary<string, string> {\n        { \"dockerBuildArgsKey\", \"dockerBuildArgs\" }\n    },\n    DockerBuildTarget = \"dockerBuildTarget\",\n    DockerFile = \"dockerFile\",\n    Executable = new [] { \"executable\" },\n    NetworkMode = \"networkMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nDockerImageSource dockerImageSource = DockerImageSource.builder()\n        .directory(\"directory\")\n        .dockerBuildArgs(Map.of(\n                \"dockerBuildArgsKey\", \"dockerBuildArgs\"))\n        .dockerBuildTarget(\"dockerBuildTarget\")\n        .dockerFile(\"dockerFile\")\n        .executable(List.of(\"executable\"))\n        .networkMode(\"networkMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ndockerImageSource := &dockerImageSource{\n\tdirectory: jsii.String(\"directory\"),\n\tdockerBuildArgs: map[string]*string{\n\t\t\"dockerBuildArgsKey\": jsii.String(\"dockerBuildArgs\"),\n\t},\n\tdockerBuildTarget: jsii.String(\"dockerBuildTarget\"),\n\tdockerFile: jsii.String(\"dockerFile\"),\n\texecutable: []*string{\n\t\tjsii.String(\"executable\"),\n\t},\n\tnetworkMode: jsii.String(\"networkMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst dockerImageSource: cloud_assembly_schema.DockerImageSource = {\n  directory: 'directory',\n  dockerBuildArgs: {\n    dockerBuildArgsKey: 'dockerBuildArgs',\n  },\n  dockerBuildTarget: 'dockerBuildTarget',\n  dockerFile: 'dockerFile',\n  executable: ['executable'],\n  networkMode: 'networkMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.DockerImageSource"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.DockerImageSource"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dockerImageSource: cloud_assembly_schema.DockerImageSource = {\n  directory: 'directory',\n  dockerBuildArgs: {\n    dockerBuildArgsKey: 'dockerBuildArgs',\n  },\n  dockerBuildTarget: 'dockerBuildTarget',\n  dockerFile: 'dockerFile',\n  executable: ['executable'],\n  networkMode: 'networkMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "179ff1e0b5761ca798c6708ca3a322c7e22138ddce2772c2e7f34693fd921278"
    },
    "d47b9785bf52ba93f36631c9ec90abc31b341035fc16b8ce1b605671d78ebf8e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nendpoint_service_availability_zones_context_query = cloud_assembly_schema.EndpointServiceAvailabilityZonesContextQuery(\n    account=\"account\",\n    region=\"region\",\n    service_name=\"serviceName\",\n\n    # the properties below are optional\n    lookup_role_arn=\"lookupRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nEndpointServiceAvailabilityZonesContextQuery endpointServiceAvailabilityZonesContextQuery = new EndpointServiceAvailabilityZonesContextQuery {\n    Account = \"account\",\n    Region = \"region\",\n    ServiceName = \"serviceName\",\n\n    // the properties below are optional\n    LookupRoleArn = \"lookupRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nEndpointServiceAvailabilityZonesContextQuery endpointServiceAvailabilityZonesContextQuery = EndpointServiceAvailabilityZonesContextQuery.builder()\n        .account(\"account\")\n        .region(\"region\")\n        .serviceName(\"serviceName\")\n\n        // the properties below are optional\n        .lookupRoleArn(\"lookupRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nendpointServiceAvailabilityZonesContextQuery := &endpointServiceAvailabilityZonesContextQuery{\n\taccount: jsii.String(\"account\"),\n\tregion: jsii.String(\"region\"),\n\tserviceName: jsii.String(\"serviceName\"),\n\n\t// the properties below are optional\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst endpointServiceAvailabilityZonesContextQuery: cloud_assembly_schema.EndpointServiceAvailabilityZonesContextQuery = {\n  account: 'account',\n  region: 'region',\n  serviceName: 'serviceName',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.EndpointServiceAvailabilityZonesContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.EndpointServiceAvailabilityZonesContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst endpointServiceAvailabilityZonesContextQuery: cloud_assembly_schema.EndpointServiceAvailabilityZonesContextQuery = {\n  account: 'account',\n  region: 'region',\n  serviceName: 'serviceName',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "95c42a22c3547443040039d8187363cf0cde202acfb530cd15895b289ede5ffa"
    },
    "b3d7e316200c6482308341ea40c77083c1106cd9c2782d17e8008e5b094a5f3c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nfile_asset = cloud_assembly_schema.FileAsset(\n    destinations={\n        \"destinations_key\": cloud_assembly_schema.FileDestination(\n            bucket_name=\"bucketName\",\n            object_key=\"objectKey\",\n\n            # the properties below are optional\n            assume_role_arn=\"assumeRoleArn\",\n            assume_role_external_id=\"assumeRoleExternalId\",\n            region=\"region\"\n        )\n    },\n    source=cloud_assembly_schema.FileSource(\n        executable=[\"executable\"],\n        packaging=cloud_assembly_schema.FileAssetPackaging.FILE,\n        path=\"path\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nFileAsset fileAsset = new FileAsset {\n    Destinations = new Dictionary<string, FileDestination> {\n        { \"destinationsKey\", new FileDestination {\n            BucketName = \"bucketName\",\n            ObjectKey = \"objectKey\",\n\n            // the properties below are optional\n            AssumeRoleArn = \"assumeRoleArn\",\n            AssumeRoleExternalId = \"assumeRoleExternalId\",\n            Region = \"region\"\n        } }\n    },\n    Source = new FileSource {\n        Executable = new [] { \"executable\" },\n        Packaging = FileAssetPackaging.FILE,\n        Path = \"path\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nFileAsset fileAsset = FileAsset.builder()\n        .destinations(Map.of(\n                \"destinationsKey\", FileDestination.builder()\n                        .bucketName(\"bucketName\")\n                        .objectKey(\"objectKey\")\n\n                        // the properties below are optional\n                        .assumeRoleArn(\"assumeRoleArn\")\n                        .assumeRoleExternalId(\"assumeRoleExternalId\")\n                        .region(\"region\")\n                        .build()))\n        .source(FileSource.builder()\n                .executable(List.of(\"executable\"))\n                .packaging(FileAssetPackaging.FILE)\n                .path(\"path\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nfileAsset := &fileAsset{\n\tdestinations: map[string]fileDestination{\n\t\t\"destinationsKey\": &fileDestination{\n\t\t\t\"bucketName\": jsii.String(\"bucketName\"),\n\t\t\t\"objectKey\": jsii.String(\"objectKey\"),\n\n\t\t\t// the properties below are optional\n\t\t\t\"assumeRoleArn\": jsii.String(\"assumeRoleArn\"),\n\t\t\t\"assumeRoleExternalId\": jsii.String(\"assumeRoleExternalId\"),\n\t\t\t\"region\": jsii.String(\"region\"),\n\t\t},\n\t},\n\tsource: &fileSource{\n\t\texecutable: []*string{\n\t\t\tjsii.String(\"executable\"),\n\t\t},\n\t\tpackaging: cloud_assembly_schema.fileAssetPackaging_FILE,\n\t\tpath: jsii.String(\"path\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst fileAsset: cloud_assembly_schema.FileAsset = {\n  destinations: {\n    destinationsKey: {\n      bucketName: 'bucketName',\n      objectKey: 'objectKey',\n\n      // the properties below are optional\n      assumeRoleArn: 'assumeRoleArn',\n      assumeRoleExternalId: 'assumeRoleExternalId',\n      region: 'region',\n    },\n  },\n  source: {\n    executable: ['executable'],\n    packaging: cloud_assembly_schema.FileAssetPackaging.FILE,\n    path: 'path',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.FileAsset"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.FileAsset",
        "@aws-cdk/cloud-assembly-schema.FileAssetPackaging",
        "@aws-cdk/cloud-assembly-schema.FileAssetPackaging#FILE",
        "@aws-cdk/cloud-assembly-schema.FileDestination",
        "@aws-cdk/cloud-assembly-schema.FileSource"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fileAsset: cloud_assembly_schema.FileAsset = {\n  destinations: {\n    destinationsKey: {\n      bucketName: 'bucketName',\n      objectKey: 'objectKey',\n\n      // the properties below are optional\n      assumeRoleArn: 'assumeRoleArn',\n      assumeRoleExternalId: 'assumeRoleExternalId',\n      region: 'region',\n    },\n  },\n  source: {\n    executable: ['executable'],\n    packaging: cloud_assembly_schema.FileAssetPackaging.FILE,\n    path: 'path',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 18,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 4,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "4163c0abce58a47c772c5b372a9ea220bbeb9a87d0a0a3c5b178caa543cd42ad"
    },
    "ce32133bf077a30d1fd773cce35d7b13223a8627c8a22999fb9c29f6f4cb5b3c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nfile_asset_metadata_entry = cloud_assembly_schema.FileAssetMetadataEntry(\n    artifact_hash_parameter=\"artifactHashParameter\",\n    id=\"id\",\n    packaging=\"packaging\",\n    path=\"path\",\n    s3_bucket_parameter=\"s3BucketParameter\",\n    s3_key_parameter=\"s3KeyParameter\",\n    source_hash=\"sourceHash\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nFileAssetMetadataEntry fileAssetMetadataEntry = new FileAssetMetadataEntry {\n    ArtifactHashParameter = \"artifactHashParameter\",\n    Id = \"id\",\n    Packaging = \"packaging\",\n    Path = \"path\",\n    S3BucketParameter = \"s3BucketParameter\",\n    S3KeyParameter = \"s3KeyParameter\",\n    SourceHash = \"sourceHash\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nFileAssetMetadataEntry fileAssetMetadataEntry = FileAssetMetadataEntry.builder()\n        .artifactHashParameter(\"artifactHashParameter\")\n        .id(\"id\")\n        .packaging(\"packaging\")\n        .path(\"path\")\n        .s3BucketParameter(\"s3BucketParameter\")\n        .s3KeyParameter(\"s3KeyParameter\")\n        .sourceHash(\"sourceHash\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nfileAssetMetadataEntry := &fileAssetMetadataEntry{\n\tartifactHashParameter: jsii.String(\"artifactHashParameter\"),\n\tid: jsii.String(\"id\"),\n\tpackaging: jsii.String(\"packaging\"),\n\tpath: jsii.String(\"path\"),\n\ts3BucketParameter: jsii.String(\"s3BucketParameter\"),\n\ts3KeyParameter: jsii.String(\"s3KeyParameter\"),\n\tsourceHash: jsii.String(\"sourceHash\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst fileAssetMetadataEntry: cloud_assembly_schema.FileAssetMetadataEntry = {\n  artifactHashParameter: 'artifactHashParameter',\n  id: 'id',\n  packaging: 'packaging',\n  path: 'path',\n  s3BucketParameter: 's3BucketParameter',\n  s3KeyParameter: 's3KeyParameter',\n  sourceHash: 'sourceHash',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.FileAssetMetadataEntry"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.FileAssetMetadataEntry"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fileAssetMetadataEntry: cloud_assembly_schema.FileAssetMetadataEntry = {\n  artifactHashParameter: 'artifactHashParameter',\n  id: 'id',\n  packaging: 'packaging',\n  path: 'path',\n  s3BucketParameter: 's3BucketParameter',\n  s3KeyParameter: 's3KeyParameter',\n  sourceHash: 'sourceHash',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 11,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "b1842bb0a03246f013215aef9361aaee080469adca845e83c3e6078c1e44db36"
    },
    "7f997d1a7d75fecbcd176fb1375d5e7737890ddd5f36fb5528ada5b9fe261bc2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nfile_destination = cloud_assembly_schema.FileDestination(\n    bucket_name=\"bucketName\",\n    object_key=\"objectKey\",\n\n    # the properties below are optional\n    assume_role_arn=\"assumeRoleArn\",\n    assume_role_external_id=\"assumeRoleExternalId\",\n    region=\"region\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nFileDestination fileDestination = new FileDestination {\n    BucketName = \"bucketName\",\n    ObjectKey = \"objectKey\",\n\n    // the properties below are optional\n    AssumeRoleArn = \"assumeRoleArn\",\n    AssumeRoleExternalId = \"assumeRoleExternalId\",\n    Region = \"region\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nFileDestination fileDestination = FileDestination.builder()\n        .bucketName(\"bucketName\")\n        .objectKey(\"objectKey\")\n\n        // the properties below are optional\n        .assumeRoleArn(\"assumeRoleArn\")\n        .assumeRoleExternalId(\"assumeRoleExternalId\")\n        .region(\"region\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nfileDestination := &fileDestination{\n\tbucketName: jsii.String(\"bucketName\"),\n\tobjectKey: jsii.String(\"objectKey\"),\n\n\t// the properties below are optional\n\tassumeRoleArn: jsii.String(\"assumeRoleArn\"),\n\tassumeRoleExternalId: jsii.String(\"assumeRoleExternalId\"),\n\tregion: jsii.String(\"region\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst fileDestination: cloud_assembly_schema.FileDestination = {\n  bucketName: 'bucketName',\n  objectKey: 'objectKey',\n\n  // the properties below are optional\n  assumeRoleArn: 'assumeRoleArn',\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  region: 'region',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.FileDestination"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.FileDestination"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fileDestination: cloud_assembly_schema.FileDestination = {\n  bucketName: 'bucketName',\n  objectKey: 'objectKey',\n\n  // the properties below are optional\n  assumeRoleArn: 'assumeRoleArn',\n  assumeRoleExternalId: 'assumeRoleExternalId',\n  region: 'region',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "1dce319bf4292352b7649dc5df8bf1adfec1b40c0d1227e95b262ee00d94c314"
    },
    "8919d25312ffa0550d96b8b80fd2d07854bd2d7a3ef751d6f165f3afcb2b41ad": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nfile_source = cloud_assembly_schema.FileSource(\n    executable=[\"executable\"],\n    packaging=cloud_assembly_schema.FileAssetPackaging.FILE,\n    path=\"path\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nFileSource fileSource = new FileSource {\n    Executable = new [] { \"executable\" },\n    Packaging = FileAssetPackaging.FILE,\n    Path = \"path\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nFileSource fileSource = FileSource.builder()\n        .executable(List.of(\"executable\"))\n        .packaging(FileAssetPackaging.FILE)\n        .path(\"path\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nfileSource := &fileSource{\n\texecutable: []*string{\n\t\tjsii.String(\"executable\"),\n\t},\n\tpackaging: cloud_assembly_schema.fileAssetPackaging_FILE,\n\tpath: jsii.String(\"path\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst fileSource: cloud_assembly_schema.FileSource = {\n  executable: ['executable'],\n  packaging: cloud_assembly_schema.FileAssetPackaging.FILE,\n  path: 'path',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.FileSource"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.FileAssetPackaging",
        "@aws-cdk/cloud-assembly-schema.FileAssetPackaging#FILE",
        "@aws-cdk/cloud-assembly-schema.FileSource"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst fileSource: cloud_assembly_schema.FileSource = {\n  executable: ['executable'],\n  packaging: cloud_assembly_schema.FileAssetPackaging.FILE,\n  path: 'path',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "cce5010fbb67f8f66c9253b4457f7a3f9dbbde97c641fb1b4a4302ea3a6d669c"
    },
    "85f6ffd9f64c3dedd5848e184993a6f65f0c49e432f9f7b63824d5eeacdf62aa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nhooks = cloud_assembly_schema.Hooks(\n    post_deploy=[\"postDeploy\"],\n    post_destroy=[\"postDestroy\"],\n    pre_deploy=[\"preDeploy\"],\n    pre_destroy=[\"preDestroy\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nHooks hooks = new Hooks {\n    PostDeploy = new [] { \"postDeploy\" },\n    PostDestroy = new [] { \"postDestroy\" },\n    PreDeploy = new [] { \"preDeploy\" },\n    PreDestroy = new [] { \"preDestroy\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nHooks hooks = Hooks.builder()\n        .postDeploy(List.of(\"postDeploy\"))\n        .postDestroy(List.of(\"postDestroy\"))\n        .preDeploy(List.of(\"preDeploy\"))\n        .preDestroy(List.of(\"preDestroy\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nhooks := &hooks{\n\tpostDeploy: []*string{\n\t\tjsii.String(\"postDeploy\"),\n\t},\n\tpostDestroy: []*string{\n\t\tjsii.String(\"postDestroy\"),\n\t},\n\tpreDeploy: []*string{\n\t\tjsii.String(\"preDeploy\"),\n\t},\n\tpreDestroy: []*string{\n\t\tjsii.String(\"preDestroy\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst hooks: cloud_assembly_schema.Hooks = {\n  postDeploy: ['postDeploy'],\n  postDestroy: ['postDestroy'],\n  preDeploy: ['preDeploy'],\n  preDestroy: ['preDestroy'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.Hooks"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.Hooks"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst hooks: cloud_assembly_schema.Hooks = {\n  postDeploy: ['postDeploy'],\n  postDestroy: ['postDestroy'],\n  preDeploy: ['preDeploy'],\n  preDestroy: ['preDestroy'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 8,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "8c82ece3af8968ea01c6aba3905bef2be81ac6b19318e6aaf0514ef6ae113fe5"
    },
    "14328c9839269071fac0c6ef1f2ebd6a709366b95ee744ea64e4ea68990540e0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nhosted_zone_context_query = cloud_assembly_schema.HostedZoneContextQuery(\n    account=\"account\",\n    domain_name=\"domainName\",\n    region=\"region\",\n\n    # the properties below are optional\n    lookup_role_arn=\"lookupRoleArn\",\n    private_zone=False,\n    vpc_id=\"vpcId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nHostedZoneContextQuery hostedZoneContextQuery = new HostedZoneContextQuery {\n    Account = \"account\",\n    DomainName = \"domainName\",\n    Region = \"region\",\n\n    // the properties below are optional\n    LookupRoleArn = \"lookupRoleArn\",\n    PrivateZone = false,\n    VpcId = \"vpcId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nHostedZoneContextQuery hostedZoneContextQuery = HostedZoneContextQuery.builder()\n        .account(\"account\")\n        .domainName(\"domainName\")\n        .region(\"region\")\n\n        // the properties below are optional\n        .lookupRoleArn(\"lookupRoleArn\")\n        .privateZone(false)\n        .vpcId(\"vpcId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nhostedZoneContextQuery := &hostedZoneContextQuery{\n\taccount: jsii.String(\"account\"),\n\tdomainName: jsii.String(\"domainName\"),\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n\tprivateZone: jsii.Boolean(false),\n\tvpcId: jsii.String(\"vpcId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst hostedZoneContextQuery: cloud_assembly_schema.HostedZoneContextQuery = {\n  account: 'account',\n  domainName: 'domainName',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n  privateZone: false,\n  vpcId: 'vpcId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.HostedZoneContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.HostedZoneContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst hostedZoneContextQuery: cloud_assembly_schema.HostedZoneContextQuery = {\n  account: 'account',\n  domainName: 'domainName',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n  privateZone: false,\n  vpcId: 'vpcId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "047059be64704a685d7e0f39d3e38c24b1a7fc585a887bfdae03dfb15dbf38d9"
    },
    "d2d97be535bc1d00381493cad842d1414bf69f21b5294a5cbb2a7918469011a5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ninteg_manifest = cloud_assembly_schema.IntegManifest(\n    test_cases={\n        \"test_cases_key\": cloud_assembly_schema.TestCase(\n            stacks=[\"stacks\"],\n\n            # the properties below are optional\n            allow_destroy=[\"allowDestroy\"],\n            cdk_command_options=cloud_assembly_schema.CdkCommands(\n                deploy=cloud_assembly_schema.DeployCommand(\n                    args=cloud_assembly_schema.DeployOptions(\n                        all=False,\n                        app=\"app\",\n                        asset_metadata=False,\n                        ca_bundle_path=\"caBundlePath\",\n                        change_set_name=\"changeSetName\",\n                        ci=False,\n                        color=False,\n                        context={\n                            \"context_key\": \"context\"\n                        },\n                        debug=False,\n                        ec2_creds=False,\n                        exclusively=False,\n                        execute=False,\n                        force=False,\n                        ignore_errors=False,\n                        json=False,\n                        lookups=False,\n                        notices=False,\n                        notification_arns=[\"notificationArns\"],\n                        output=\"output\",\n                        outputs_file=\"outputsFile\",\n                        parameters={\n                            \"parameters_key\": \"parameters\"\n                        },\n                        path_metadata=False,\n                        profile=\"profile\",\n                        proxy=\"proxy\",\n                        require_approval=cloud_assembly_schema.RequireApproval.NEVER,\n                        reuse_assets=[\"reuseAssets\"],\n                        role_arn=\"roleArn\",\n                        rollback=False,\n                        stacks=[\"stacks\"],\n                        staging=False,\n                        strict=False,\n                        toolkit_stack_name=\"toolkitStackName\",\n                        trace=False,\n                        use_previous_parameters=False,\n                        verbose=False,\n                        version_reporting=False\n                    ),\n                    enabled=False,\n                    expected_message=\"expectedMessage\",\n                    expect_error=False\n                ),\n                destroy=cloud_assembly_schema.DestroyCommand(\n                    args=cloud_assembly_schema.DestroyOptions(\n                        all=False,\n                        app=\"app\",\n                        asset_metadata=False,\n                        ca_bundle_path=\"caBundlePath\",\n                        color=False,\n                        context={\n                            \"context_key\": \"context\"\n                        },\n                        debug=False,\n                        ec2_creds=False,\n                        exclusively=False,\n                        force=False,\n                        ignore_errors=False,\n                        json=False,\n                        lookups=False,\n                        notices=False,\n                        output=\"output\",\n                        path_metadata=False,\n                        profile=\"profile\",\n                        proxy=\"proxy\",\n                        role_arn=\"roleArn\",\n                        stacks=[\"stacks\"],\n                        staging=False,\n                        strict=False,\n                        trace=False,\n                        verbose=False,\n                        version_reporting=False\n                    ),\n                    enabled=False,\n                    expected_message=\"expectedMessage\",\n                    expect_error=False\n                )\n            ),\n            diff_assets=False,\n            hooks=cloud_assembly_schema.Hooks(\n                post_deploy=[\"postDeploy\"],\n                post_destroy=[\"postDestroy\"],\n                pre_deploy=[\"preDeploy\"],\n                pre_destroy=[\"preDestroy\"]\n            ),\n            regions=[\"regions\"],\n            stack_update_workflow=False\n        )\n    },\n    version=\"version\",\n\n    # the properties below are optional\n    enable_lookups=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nIntegManifest integManifest = new IntegManifest {\n    TestCases = new Dictionary<string, TestCase> {\n        { \"testCasesKey\", new TestCase {\n            Stacks = new [] { \"stacks\" },\n\n            // the properties below are optional\n            AllowDestroy = new [] { \"allowDestroy\" },\n            CdkCommandOptions = new CdkCommands {\n                Deploy = new DeployCommand {\n                    Args = new DeployOptions {\n                        All = false,\n                        App = \"app\",\n                        AssetMetadata = false,\n                        CaBundlePath = \"caBundlePath\",\n                        ChangeSetName = \"changeSetName\",\n                        Ci = false,\n                        Color = false,\n                        Context = new Dictionary<string, string> {\n                            { \"contextKey\", \"context\" }\n                        },\n                        Debug = false,\n                        Ec2Creds = false,\n                        Exclusively = false,\n                        Execute = false,\n                        Force = false,\n                        IgnoreErrors = false,\n                        Json = false,\n                        Lookups = false,\n                        Notices = false,\n                        NotificationArns = new [] { \"notificationArns\" },\n                        Output = \"output\",\n                        OutputsFile = \"outputsFile\",\n                        Parameters = new Dictionary<string, string> {\n                            { \"parametersKey\", \"parameters\" }\n                        },\n                        PathMetadata = false,\n                        Profile = \"profile\",\n                        Proxy = \"proxy\",\n                        RequireApproval = RequireApproval.NEVER,\n                        ReuseAssets = new [] { \"reuseAssets\" },\n                        RoleArn = \"roleArn\",\n                        Rollback = false,\n                        Stacks = new [] { \"stacks\" },\n                        Staging = false,\n                        Strict = false,\n                        ToolkitStackName = \"toolkitStackName\",\n                        Trace = false,\n                        UsePreviousParameters = false,\n                        Verbose = false,\n                        VersionReporting = false\n                    },\n                    Enabled = false,\n                    ExpectedMessage = \"expectedMessage\",\n                    ExpectError = false\n                },\n                Destroy = new DestroyCommand {\n                    Args = new DestroyOptions {\n                        All = false,\n                        App = \"app\",\n                        AssetMetadata = false,\n                        CaBundlePath = \"caBundlePath\",\n                        Color = false,\n                        Context = new Dictionary<string, string> {\n                            { \"contextKey\", \"context\" }\n                        },\n                        Debug = false,\n                        Ec2Creds = false,\n                        Exclusively = false,\n                        Force = false,\n                        IgnoreErrors = false,\n                        Json = false,\n                        Lookups = false,\n                        Notices = false,\n                        Output = \"output\",\n                        PathMetadata = false,\n                        Profile = \"profile\",\n                        Proxy = \"proxy\",\n                        RoleArn = \"roleArn\",\n                        Stacks = new [] { \"stacks\" },\n                        Staging = false,\n                        Strict = false,\n                        Trace = false,\n                        Verbose = false,\n                        VersionReporting = false\n                    },\n                    Enabled = false,\n                    ExpectedMessage = \"expectedMessage\",\n                    ExpectError = false\n                }\n            },\n            DiffAssets = false,\n            Hooks = new Hooks {\n                PostDeploy = new [] { \"postDeploy\" },\n                PostDestroy = new [] { \"postDestroy\" },\n                PreDeploy = new [] { \"preDeploy\" },\n                PreDestroy = new [] { \"preDestroy\" }\n            },\n            Regions = new [] { \"regions\" },\n            StackUpdateWorkflow = false\n        } }\n    },\n    Version = \"version\",\n\n    // the properties below are optional\n    EnableLookups = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nIntegManifest integManifest = IntegManifest.builder()\n        .testCases(Map.of(\n                \"testCasesKey\", TestCase.builder()\n                        .stacks(List.of(\"stacks\"))\n\n                        // the properties below are optional\n                        .allowDestroy(List.of(\"allowDestroy\"))\n                        .cdkCommandOptions(CdkCommands.builder()\n                                .deploy(DeployCommand.builder()\n                                        .args(DeployOptions.builder()\n                                                .all(false)\n                                                .app(\"app\")\n                                                .assetMetadata(false)\n                                                .caBundlePath(\"caBundlePath\")\n                                                .changeSetName(\"changeSetName\")\n                                                .ci(false)\n                                                .color(false)\n                                                .context(Map.of(\n                                                        \"contextKey\", \"context\"))\n                                                .debug(false)\n                                                .ec2Creds(false)\n                                                .exclusively(false)\n                                                .execute(false)\n                                                .force(false)\n                                                .ignoreErrors(false)\n                                                .json(false)\n                                                .lookups(false)\n                                                .notices(false)\n                                                .notificationArns(List.of(\"notificationArns\"))\n                                                .output(\"output\")\n                                                .outputsFile(\"outputsFile\")\n                                                .parameters(Map.of(\n                                                        \"parametersKey\", \"parameters\"))\n                                                .pathMetadata(false)\n                                                .profile(\"profile\")\n                                                .proxy(\"proxy\")\n                                                .requireApproval(RequireApproval.NEVER)\n                                                .reuseAssets(List.of(\"reuseAssets\"))\n                                                .roleArn(\"roleArn\")\n                                                .rollback(false)\n                                                .stacks(List.of(\"stacks\"))\n                                                .staging(false)\n                                                .strict(false)\n                                                .toolkitStackName(\"toolkitStackName\")\n                                                .trace(false)\n                                                .usePreviousParameters(false)\n                                                .verbose(false)\n                                                .versionReporting(false)\n                                                .build())\n                                        .enabled(false)\n                                        .expectedMessage(\"expectedMessage\")\n                                        .expectError(false)\n                                        .build())\n                                .destroy(DestroyCommand.builder()\n                                        .args(DestroyOptions.builder()\n                                                .all(false)\n                                                .app(\"app\")\n                                                .assetMetadata(false)\n                                                .caBundlePath(\"caBundlePath\")\n                                                .color(false)\n                                                .context(Map.of(\n                                                        \"contextKey\", \"context\"))\n                                                .debug(false)\n                                                .ec2Creds(false)\n                                                .exclusively(false)\n                                                .force(false)\n                                                .ignoreErrors(false)\n                                                .json(false)\n                                                .lookups(false)\n                                                .notices(false)\n                                                .output(\"output\")\n                                                .pathMetadata(false)\n                                                .profile(\"profile\")\n                                                .proxy(\"proxy\")\n                                                .roleArn(\"roleArn\")\n                                                .stacks(List.of(\"stacks\"))\n                                                .staging(false)\n                                                .strict(false)\n                                                .trace(false)\n                                                .verbose(false)\n                                                .versionReporting(false)\n                                                .build())\n                                        .enabled(false)\n                                        .expectedMessage(\"expectedMessage\")\n                                        .expectError(false)\n                                        .build())\n                                .build())\n                        .diffAssets(false)\n                        .hooks(Hooks.builder()\n                                .postDeploy(List.of(\"postDeploy\"))\n                                .postDestroy(List.of(\"postDestroy\"))\n                                .preDeploy(List.of(\"preDeploy\"))\n                                .preDestroy(List.of(\"preDestroy\"))\n                                .build())\n                        .regions(List.of(\"regions\"))\n                        .stackUpdateWorkflow(false)\n                        .build()))\n        .version(\"version\")\n\n        // the properties below are optional\n        .enableLookups(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nintegManifest := &integManifest{\n\ttestCases: map[string]testCase{\n\t\t\"testCasesKey\": &testCase{\n\t\t\t\"stacks\": []*string{\n\t\t\t\tjsii.String(\"stacks\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\t\"allowDestroy\": []*string{\n\t\t\t\tjsii.String(\"allowDestroy\"),\n\t\t\t},\n\t\t\t\"cdkCommandOptions\": &CdkCommands{\n\t\t\t\t\"deploy\": &DeployCommand{\n\t\t\t\t\t\"args\": &DeployOptions{\n\t\t\t\t\t\t\"all\": jsii.Boolean(false),\n\t\t\t\t\t\t\"app\": jsii.String(\"app\"),\n\t\t\t\t\t\t\"assetMetadata\": jsii.Boolean(false),\n\t\t\t\t\t\t\"caBundlePath\": jsii.String(\"caBundlePath\"),\n\t\t\t\t\t\t\"changeSetName\": jsii.String(\"changeSetName\"),\n\t\t\t\t\t\t\"ci\": jsii.Boolean(false),\n\t\t\t\t\t\t\"color\": jsii.Boolean(false),\n\t\t\t\t\t\t\"context\": map[string]*string{\n\t\t\t\t\t\t\t\"contextKey\": jsii.String(\"context\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"debug\": jsii.Boolean(false),\n\t\t\t\t\t\t\"ec2Creds\": jsii.Boolean(false),\n\t\t\t\t\t\t\"exclusively\": jsii.Boolean(false),\n\t\t\t\t\t\t\"execute\": jsii.Boolean(false),\n\t\t\t\t\t\t\"force\": jsii.Boolean(false),\n\t\t\t\t\t\t\"ignoreErrors\": jsii.Boolean(false),\n\t\t\t\t\t\t\"json\": jsii.Boolean(false),\n\t\t\t\t\t\t\"lookups\": jsii.Boolean(false),\n\t\t\t\t\t\t\"notices\": jsii.Boolean(false),\n\t\t\t\t\t\t\"notificationArns\": []*string{\n\t\t\t\t\t\t\tjsii.String(\"notificationArns\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"output\": jsii.String(\"output\"),\n\t\t\t\t\t\t\"outputsFile\": jsii.String(\"outputsFile\"),\n\t\t\t\t\t\t\"parameters\": map[string]*string{\n\t\t\t\t\t\t\t\"parametersKey\": jsii.String(\"parameters\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"pathMetadata\": jsii.Boolean(false),\n\t\t\t\t\t\t\"profile\": jsii.String(\"profile\"),\n\t\t\t\t\t\t\"proxy\": jsii.String(\"proxy\"),\n\t\t\t\t\t\t\"requireApproval\": cloud_assembly_schema.RequireApproval_NEVER,\n\t\t\t\t\t\t\"reuseAssets\": []*string{\n\t\t\t\t\t\t\tjsii.String(\"reuseAssets\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"roleArn\": jsii.String(\"roleArn\"),\n\t\t\t\t\t\t\"rollback\": jsii.Boolean(false),\n\t\t\t\t\t\t\"stacks\": []*string{\n\t\t\t\t\t\t\tjsii.String(\"stacks\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"staging\": jsii.Boolean(false),\n\t\t\t\t\t\t\"strict\": jsii.Boolean(false),\n\t\t\t\t\t\t\"toolkitStackName\": jsii.String(\"toolkitStackName\"),\n\t\t\t\t\t\t\"trace\": jsii.Boolean(false),\n\t\t\t\t\t\t\"usePreviousParameters\": jsii.Boolean(false),\n\t\t\t\t\t\t\"verbose\": jsii.Boolean(false),\n\t\t\t\t\t\t\"versionReporting\": jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t\t\"enabled\": jsii.Boolean(false),\n\t\t\t\t\t\"expectedMessage\": jsii.String(\"expectedMessage\"),\n\t\t\t\t\t\"expectError\": jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\t\"destroy\": &DestroyCommand{\n\t\t\t\t\t\"args\": &DestroyOptions{\n\t\t\t\t\t\t\"all\": jsii.Boolean(false),\n\t\t\t\t\t\t\"app\": jsii.String(\"app\"),\n\t\t\t\t\t\t\"assetMetadata\": jsii.Boolean(false),\n\t\t\t\t\t\t\"caBundlePath\": jsii.String(\"caBundlePath\"),\n\t\t\t\t\t\t\"color\": jsii.Boolean(false),\n\t\t\t\t\t\t\"context\": map[string]*string{\n\t\t\t\t\t\t\t\"contextKey\": jsii.String(\"context\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"debug\": jsii.Boolean(false),\n\t\t\t\t\t\t\"ec2Creds\": jsii.Boolean(false),\n\t\t\t\t\t\t\"exclusively\": jsii.Boolean(false),\n\t\t\t\t\t\t\"force\": jsii.Boolean(false),\n\t\t\t\t\t\t\"ignoreErrors\": jsii.Boolean(false),\n\t\t\t\t\t\t\"json\": jsii.Boolean(false),\n\t\t\t\t\t\t\"lookups\": jsii.Boolean(false),\n\t\t\t\t\t\t\"notices\": jsii.Boolean(false),\n\t\t\t\t\t\t\"output\": jsii.String(\"output\"),\n\t\t\t\t\t\t\"pathMetadata\": jsii.Boolean(false),\n\t\t\t\t\t\t\"profile\": jsii.String(\"profile\"),\n\t\t\t\t\t\t\"proxy\": jsii.String(\"proxy\"),\n\t\t\t\t\t\t\"roleArn\": jsii.String(\"roleArn\"),\n\t\t\t\t\t\t\"stacks\": []*string{\n\t\t\t\t\t\t\tjsii.String(\"stacks\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"staging\": jsii.Boolean(false),\n\t\t\t\t\t\t\"strict\": jsii.Boolean(false),\n\t\t\t\t\t\t\"trace\": jsii.Boolean(false),\n\t\t\t\t\t\t\"verbose\": jsii.Boolean(false),\n\t\t\t\t\t\t\"versionReporting\": jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t\t\"enabled\": jsii.Boolean(false),\n\t\t\t\t\t\"expectedMessage\": jsii.String(\"expectedMessage\"),\n\t\t\t\t\t\"expectError\": jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"diffAssets\": jsii.Boolean(false),\n\t\t\t\"hooks\": &Hooks{\n\t\t\t\t\"postDeploy\": []*string{\n\t\t\t\t\tjsii.String(\"postDeploy\"),\n\t\t\t\t},\n\t\t\t\t\"postDestroy\": []*string{\n\t\t\t\t\tjsii.String(\"postDestroy\"),\n\t\t\t\t},\n\t\t\t\t\"preDeploy\": []*string{\n\t\t\t\t\tjsii.String(\"preDeploy\"),\n\t\t\t\t},\n\t\t\t\t\"preDestroy\": []*string{\n\t\t\t\t\tjsii.String(\"preDestroy\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"regions\": []*string{\n\t\t\t\tjsii.String(\"regions\"),\n\t\t\t},\n\t\t\t\"stackUpdateWorkflow\": jsii.Boolean(false),\n\t\t},\n\t},\n\tversion: jsii.String(\"version\"),\n\n\t// the properties below are optional\n\tenableLookups: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst integManifest: cloud_assembly_schema.IntegManifest = {\n  testCases: {\n    testCasesKey: {\n      stacks: ['stacks'],\n\n      // the properties below are optional\n      allowDestroy: ['allowDestroy'],\n      cdkCommandOptions: {\n        deploy: {\n          args: {\n            all: false,\n            app: 'app',\n            assetMetadata: false,\n            caBundlePath: 'caBundlePath',\n            changeSetName: 'changeSetName',\n            ci: false,\n            color: false,\n            context: {\n              contextKey: 'context',\n            },\n            debug: false,\n            ec2Creds: false,\n            exclusively: false,\n            execute: false,\n            force: false,\n            ignoreErrors: false,\n            json: false,\n            lookups: false,\n            notices: false,\n            notificationArns: ['notificationArns'],\n            output: 'output',\n            outputsFile: 'outputsFile',\n            parameters: {\n              parametersKey: 'parameters',\n            },\n            pathMetadata: false,\n            profile: 'profile',\n            proxy: 'proxy',\n            requireApproval: cloud_assembly_schema.RequireApproval.NEVER,\n            reuseAssets: ['reuseAssets'],\n            roleArn: 'roleArn',\n            rollback: false,\n            stacks: ['stacks'],\n            staging: false,\n            strict: false,\n            toolkitStackName: 'toolkitStackName',\n            trace: false,\n            usePreviousParameters: false,\n            verbose: false,\n            versionReporting: false,\n          },\n          enabled: false,\n          expectedMessage: 'expectedMessage',\n          expectError: false,\n        },\n        destroy: {\n          args: {\n            all: false,\n            app: 'app',\n            assetMetadata: false,\n            caBundlePath: 'caBundlePath',\n            color: false,\n            context: {\n              contextKey: 'context',\n            },\n            debug: false,\n            ec2Creds: false,\n            exclusively: false,\n            force: false,\n            ignoreErrors: false,\n            json: false,\n            lookups: false,\n            notices: false,\n            output: 'output',\n            pathMetadata: false,\n            profile: 'profile',\n            proxy: 'proxy',\n            roleArn: 'roleArn',\n            stacks: ['stacks'],\n            staging: false,\n            strict: false,\n            trace: false,\n            verbose: false,\n            versionReporting: false,\n          },\n          enabled: false,\n          expectedMessage: 'expectedMessage',\n          expectError: false,\n        },\n      },\n      diffAssets: false,\n      hooks: {\n        postDeploy: ['postDeploy'],\n        postDestroy: ['postDestroy'],\n        preDeploy: ['preDeploy'],\n        preDestroy: ['preDestroy'],\n      },\n      regions: ['regions'],\n      stackUpdateWorkflow: false,\n    },\n  },\n  version: 'version',\n\n  // the properties below are optional\n  enableLookups: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.IntegManifest"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.Hooks",
        "@aws-cdk/cloud-assembly-schema.IntegManifest",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/cloud-assembly-schema.TestCase"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst integManifest: cloud_assembly_schema.IntegManifest = {\n  testCases: {\n    testCasesKey: {\n      stacks: ['stacks'],\n\n      // the properties below are optional\n      allowDestroy: ['allowDestroy'],\n      cdkCommandOptions: {\n        deploy: {\n          args: {\n            all: false,\n            app: 'app',\n            assetMetadata: false,\n            caBundlePath: 'caBundlePath',\n            changeSetName: 'changeSetName',\n            ci: false,\n            color: false,\n            context: {\n              contextKey: 'context',\n            },\n            debug: false,\n            ec2Creds: false,\n            exclusively: false,\n            execute: false,\n            force: false,\n            ignoreErrors: false,\n            json: false,\n            lookups: false,\n            notices: false,\n            notificationArns: ['notificationArns'],\n            output: 'output',\n            outputsFile: 'outputsFile',\n            parameters: {\n              parametersKey: 'parameters',\n            },\n            pathMetadata: false,\n            profile: 'profile',\n            proxy: 'proxy',\n            requireApproval: cloud_assembly_schema.RequireApproval.NEVER,\n            reuseAssets: ['reuseAssets'],\n            roleArn: 'roleArn',\n            rollback: false,\n            stacks: ['stacks'],\n            staging: false,\n            strict: false,\n            toolkitStackName: 'toolkitStackName',\n            trace: false,\n            usePreviousParameters: false,\n            verbose: false,\n            versionReporting: false,\n          },\n          enabled: false,\n          expectedMessage: 'expectedMessage',\n          expectError: false,\n        },\n        destroy: {\n          args: {\n            all: false,\n            app: 'app',\n            assetMetadata: false,\n            caBundlePath: 'caBundlePath',\n            color: false,\n            context: {\n              contextKey: 'context',\n            },\n            debug: false,\n            ec2Creds: false,\n            exclusively: false,\n            force: false,\n            ignoreErrors: false,\n            json: false,\n            lookups: false,\n            notices: false,\n            output: 'output',\n            pathMetadata: false,\n            profile: 'profile',\n            proxy: 'proxy',\n            roleArn: 'roleArn',\n            stacks: ['stacks'],\n            staging: false,\n            strict: false,\n            trace: false,\n            verbose: false,\n            versionReporting: false,\n          },\n          enabled: false,\n          expectedMessage: 'expectedMessage',\n          expectError: false,\n        },\n      },\n      diffAssets: false,\n      hooks: {\n        postDeploy: ['postDeploy'],\n        postDestroy: ['postDestroy'],\n        preDeploy: ['preDeploy'],\n        preDestroy: ['preDestroy'],\n      },\n      regions: ['regions'],\n      stackUpdateWorkflow: false,\n    },\n  },\n  version: 'version',\n\n  // the properties below are optional\n  enableLookups: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 33,
        "75": 96,
        "91": 45,
        "153": 1,
        "169": 1,
        "192": 11,
        "193": 12,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 89,
        "290": 1
      },
      "fqnsFingerprint": "bcc337f30444939a473d200590b177697681554c69d3e17af159f8f7d8fe3033"
    },
    "ace2c0f8cefd8405e123e856adc09df724751fa6d2d4aaee28f73a730ea65155": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nkey_context_query = cloud_assembly_schema.KeyContextQuery(\n    account=\"account\",\n    alias_name=\"aliasName\",\n    region=\"region\",\n\n    # the properties below are optional\n    lookup_role_arn=\"lookupRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nKeyContextQuery keyContextQuery = new KeyContextQuery {\n    Account = \"account\",\n    AliasName = \"aliasName\",\n    Region = \"region\",\n\n    // the properties below are optional\n    LookupRoleArn = \"lookupRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nKeyContextQuery keyContextQuery = KeyContextQuery.builder()\n        .account(\"account\")\n        .aliasName(\"aliasName\")\n        .region(\"region\")\n\n        // the properties below are optional\n        .lookupRoleArn(\"lookupRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nkeyContextQuery := &keyContextQuery{\n\taccount: jsii.String(\"account\"),\n\taliasName: jsii.String(\"aliasName\"),\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst keyContextQuery: cloud_assembly_schema.KeyContextQuery = {\n  account: 'account',\n  aliasName: 'aliasName',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.KeyContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.KeyContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst keyContextQuery: cloud_assembly_schema.KeyContextQuery = {\n  account: 'account',\n  aliasName: 'aliasName',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "e66abd6b3fcba7eb4b983b40a5dd0801edb3fdcce3d263a7adef61544c8974b8"
    },
    "59ef1081c61ca9b39681e5f0964a0dbbc70bab95e1c9d05d7f3ae41815e3e184": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nload_balancer_context_query = cloud_assembly_schema.LoadBalancerContextQuery(\n    account=\"account\",\n    load_balancer_type=cloud_assembly_schema.LoadBalancerType.NETWORK,\n    region=\"region\",\n\n    # the properties below are optional\n    load_balancer_arn=\"loadBalancerArn\",\n    load_balancer_tags=[cloud_assembly_schema.Tag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    lookup_role_arn=\"lookupRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nLoadBalancerContextQuery loadBalancerContextQuery = new LoadBalancerContextQuery {\n    Account = \"account\",\n    LoadBalancerType = LoadBalancerType.NETWORK,\n    Region = \"region\",\n\n    // the properties below are optional\n    LoadBalancerArn = \"loadBalancerArn\",\n    LoadBalancerTags = new [] { new Tag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    LookupRoleArn = \"lookupRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nLoadBalancerContextQuery loadBalancerContextQuery = LoadBalancerContextQuery.builder()\n        .account(\"account\")\n        .loadBalancerType(LoadBalancerType.NETWORK)\n        .region(\"region\")\n\n        // the properties below are optional\n        .loadBalancerArn(\"loadBalancerArn\")\n        .loadBalancerTags(List.of(Tag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .lookupRoleArn(\"lookupRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nloadBalancerContextQuery := &loadBalancerContextQuery{\n\taccount: jsii.String(\"account\"),\n\tloadBalancerType: cloud_assembly_schema.loadBalancerType_NETWORK,\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\tloadBalancerTags: []tag{\n\t\t&tag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst loadBalancerContextQuery: cloud_assembly_schema.LoadBalancerContextQuery = {\n  account: 'account',\n  loadBalancerType: cloud_assembly_schema.LoadBalancerType.NETWORK,\n  region: 'region',\n\n  // the properties below are optional\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  lookupRoleArn: 'lookupRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.LoadBalancerContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.LoadBalancerContextQuery",
        "@aws-cdk/cloud-assembly-schema.LoadBalancerType",
        "@aws-cdk/cloud-assembly-schema.LoadBalancerType#NETWORK"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancerContextQuery: cloud_assembly_schema.LoadBalancerContextQuery = {\n  account: 'account',\n  loadBalancerType: cloud_assembly_schema.LoadBalancerType.NETWORK,\n  region: 'region',\n\n  // the properties below are optional\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  lookupRoleArn: 'lookupRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 15,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "a34d87d549fdbab08fe4ba3a903bad8570fc32b24566f4a3f26fdaaa10f86182"
    },
    "69f2a57cb679e0bfa493f7aa4551da3427358aafdf84e1add4b27d60419d2903": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nload_balancer_filter = cloud_assembly_schema.LoadBalancerFilter(\n    load_balancer_type=cloud_assembly_schema.LoadBalancerType.NETWORK,\n\n    # the properties below are optional\n    load_balancer_arn=\"loadBalancerArn\",\n    load_balancer_tags=[cloud_assembly_schema.Tag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nLoadBalancerFilter loadBalancerFilter = new LoadBalancerFilter {\n    LoadBalancerType = LoadBalancerType.NETWORK,\n\n    // the properties below are optional\n    LoadBalancerArn = \"loadBalancerArn\",\n    LoadBalancerTags = new [] { new Tag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nLoadBalancerFilter loadBalancerFilter = LoadBalancerFilter.builder()\n        .loadBalancerType(LoadBalancerType.NETWORK)\n\n        // the properties below are optional\n        .loadBalancerArn(\"loadBalancerArn\")\n        .loadBalancerTags(List.of(Tag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nloadBalancerFilter := &loadBalancerFilter{\n\tloadBalancerType: cloud_assembly_schema.loadBalancerType_NETWORK,\n\n\t// the properties below are optional\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\tloadBalancerTags: []tag{\n\t\t&tag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst loadBalancerFilter: cloud_assembly_schema.LoadBalancerFilter = {\n  loadBalancerType: cloud_assembly_schema.LoadBalancerType.NETWORK,\n\n  // the properties below are optional\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.LoadBalancerFilter"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.LoadBalancerFilter",
        "@aws-cdk/cloud-assembly-schema.LoadBalancerType",
        "@aws-cdk/cloud-assembly-schema.LoadBalancerType#NETWORK"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancerFilter: cloud_assembly_schema.LoadBalancerFilter = {\n  loadBalancerType: cloud_assembly_schema.LoadBalancerType.NETWORK,\n\n  // the properties below are optional\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "64519315530c40e15c2264d1786b97fe82e7fdbe562e7959aeeb028afe4ca56b"
    },
    "03d916e3758798f8bf42257abfa363f4985bd1f2784575cf7dfb1a0b85a57ba6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nload_balancer_listener_context_query = cloud_assembly_schema.LoadBalancerListenerContextQuery(\n    account=\"account\",\n    load_balancer_type=cloud_assembly_schema.LoadBalancerType.NETWORK,\n    region=\"region\",\n\n    # the properties below are optional\n    listener_arn=\"listenerArn\",\n    listener_port=123,\n    listener_protocol=cloud_assembly_schema.LoadBalancerListenerProtocol.HTTP,\n    load_balancer_arn=\"loadBalancerArn\",\n    load_balancer_tags=[cloud_assembly_schema.Tag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    lookup_role_arn=\"lookupRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nLoadBalancerListenerContextQuery loadBalancerListenerContextQuery = new LoadBalancerListenerContextQuery {\n    Account = \"account\",\n    LoadBalancerType = LoadBalancerType.NETWORK,\n    Region = \"region\",\n\n    // the properties below are optional\n    ListenerArn = \"listenerArn\",\n    ListenerPort = 123,\n    ListenerProtocol = LoadBalancerListenerProtocol.HTTP,\n    LoadBalancerArn = \"loadBalancerArn\",\n    LoadBalancerTags = new [] { new Tag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    LookupRoleArn = \"lookupRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nLoadBalancerListenerContextQuery loadBalancerListenerContextQuery = LoadBalancerListenerContextQuery.builder()\n        .account(\"account\")\n        .loadBalancerType(LoadBalancerType.NETWORK)\n        .region(\"region\")\n\n        // the properties below are optional\n        .listenerArn(\"listenerArn\")\n        .listenerPort(123)\n        .listenerProtocol(LoadBalancerListenerProtocol.HTTP)\n        .loadBalancerArn(\"loadBalancerArn\")\n        .loadBalancerTags(List.of(Tag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .lookupRoleArn(\"lookupRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nloadBalancerListenerContextQuery := &loadBalancerListenerContextQuery{\n\taccount: jsii.String(\"account\"),\n\tloadBalancerType: cloud_assembly_schema.loadBalancerType_NETWORK,\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tlistenerArn: jsii.String(\"listenerArn\"),\n\tlistenerPort: jsii.Number(123),\n\tlistenerProtocol: cloud_assembly_schema.loadBalancerListenerProtocol_HTTP,\n\tloadBalancerArn: jsii.String(\"loadBalancerArn\"),\n\tloadBalancerTags: []tag{\n\t\t&tag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst loadBalancerListenerContextQuery: cloud_assembly_schema.LoadBalancerListenerContextQuery = {\n  account: 'account',\n  loadBalancerType: cloud_assembly_schema.LoadBalancerType.NETWORK,\n  region: 'region',\n\n  // the properties below are optional\n  listenerArn: 'listenerArn',\n  listenerPort: 123,\n  listenerProtocol: cloud_assembly_schema.LoadBalancerListenerProtocol.HTTP,\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  lookupRoleArn: 'lookupRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.LoadBalancerListenerContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.LoadBalancerListenerContextQuery",
        "@aws-cdk/cloud-assembly-schema.LoadBalancerListenerProtocol",
        "@aws-cdk/cloud-assembly-schema.LoadBalancerListenerProtocol#HTTP",
        "@aws-cdk/cloud-assembly-schema.LoadBalancerType",
        "@aws-cdk/cloud-assembly-schema.LoadBalancerType#NETWORK"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loadBalancerListenerContextQuery: cloud_assembly_schema.LoadBalancerListenerContextQuery = {\n  account: 'account',\n  loadBalancerType: cloud_assembly_schema.LoadBalancerType.NETWORK,\n  region: 'region',\n\n  // the properties below are optional\n  listenerArn: 'listenerArn',\n  listenerPort: 123,\n  listenerProtocol: cloud_assembly_schema.LoadBalancerListenerProtocol.HTTP,\n  loadBalancerArn: 'loadBalancerArn',\n  loadBalancerTags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  lookupRoleArn: 'lookupRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 8,
        "75": 21,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "9cb9d8882c5dab0b12d85cd63f3d7b6bab62292852a7314a09525a38c7b10b2a"
    },
    "ffd40fe5328db7baf0c3c7f000f6faaf88787d5f32aee49c07bbab02cd851dea": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nload_manifest_options = cloud_assembly_schema.LoadManifestOptions(\n    skip_enum_check=False,\n    skip_version_check=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nLoadManifestOptions loadManifestOptions = new LoadManifestOptions {\n    SkipEnumCheck = false,\n    SkipVersionCheck = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nLoadManifestOptions loadManifestOptions = LoadManifestOptions.builder()\n        .skipEnumCheck(false)\n        .skipVersionCheck(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nloadManifestOptions := &loadManifestOptions{\n\tskipEnumCheck: jsii.Boolean(false),\n\tskipVersionCheck: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst loadManifestOptions: cloud_assembly_schema.LoadManifestOptions = {\n  skipEnumCheck: false,\n  skipVersionCheck: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.LoadManifestOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.LoadManifestOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loadManifestOptions: cloud_assembly_schema.LoadManifestOptions = {\n  skipEnumCheck: false,\n  skipVersionCheck: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 2,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2a38f135100d685b5a6f31f6107e59fad890c577385158010474858f1d50aedc"
    },
    "683ace5fa7ce5c56c2624e49044b3eda895f847d46ea383efbe839b2632a2dc1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nmetadata_entry = cloud_assembly_schema.MetadataEntry(\n    type=\"type\",\n\n    # the properties below are optional\n    data=\"data\",\n    trace=[\"trace\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nMetadataEntry metadataEntry = new MetadataEntry {\n    Type = \"type\",\n\n    // the properties below are optional\n    Data = \"data\",\n    Trace = new [] { \"trace\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nMetadataEntry metadataEntry = MetadataEntry.builder()\n        .type(\"type\")\n\n        // the properties below are optional\n        .data(\"data\")\n        .trace(List.of(\"trace\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nmetadataEntry := &metadataEntry{\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tdata: jsii.String(\"data\"),\n\ttrace: []*string{\n\t\tjsii.String(\"trace\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst metadataEntry: cloud_assembly_schema.MetadataEntry = {\n  type: 'type',\n\n  // the properties below are optional\n  data: 'data',\n  trace: ['trace'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.MetadataEntry"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.MetadataEntry"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metadataEntry: cloud_assembly_schema.MetadataEntry = {\n  type: 'type',\n\n  // the properties below are optional\n  data: 'data',\n  trace: ['trace'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "0ef3a172862eaaf834ebf4301fa6ff1b1d4f0a4f34cd995c804b61032a66b546"
    },
    "d45096ab2fa854fa21866ba05726b072043c135cd833a8a74c547f2dd6848774": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nmissing_context = cloud_assembly_schema.MissingContext(\n    key=\"key\",\n    props=cloud_assembly_schema.AmiContextQuery(\n        account=\"account\",\n        filters={\n            \"filters_key\": [\"filters\"]\n        },\n        region=\"region\",\n\n        # the properties below are optional\n        lookup_role_arn=\"lookupRoleArn\",\n        owners=[\"owners\"]\n    ),\n    provider=cloud_assembly_schema.ContextProvider.AMI_PROVIDER\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nMissingContext missingContext = new MissingContext {\n    Key = \"key\",\n    Props = new AmiContextQuery {\n        Account = \"account\",\n        Filters = new Dictionary<string, string[]> {\n            { \"filtersKey\", new [] { \"filters\" } }\n        },\n        Region = \"region\",\n\n        // the properties below are optional\n        LookupRoleArn = \"lookupRoleArn\",\n        Owners = new [] { \"owners\" }\n    },\n    Provider = ContextProvider.AMI_PROVIDER\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nMissingContext missingContext = MissingContext.builder()\n        .key(\"key\")\n        .props(AmiContextQuery.builder()\n                .account(\"account\")\n                .filters(Map.of(\n                        \"filtersKey\", List.of(\"filters\")))\n                .region(\"region\")\n\n                // the properties below are optional\n                .lookupRoleArn(\"lookupRoleArn\")\n                .owners(List.of(\"owners\"))\n                .build())\n        .provider(ContextProvider.AMI_PROVIDER)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nmissingContext := &missingContext{\n\tkey: jsii.String(\"key\"),\n\tprops: &amiContextQuery{\n\t\taccount: jsii.String(\"account\"),\n\t\tfilters: map[string][]*string{\n\t\t\t\"filtersKey\": []*string{\n\t\t\t\tjsii.String(\"filters\"),\n\t\t\t},\n\t\t},\n\t\tregion: jsii.String(\"region\"),\n\n\t\t// the properties below are optional\n\t\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n\t\towners: []interface{}{\n\t\t\tjsii.String(\"owners\"),\n\t\t},\n\t},\n\tprovider: cloud_assembly_schema.contextProvider_AMI_PROVIDER,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst missingContext: cloud_assembly_schema.MissingContext = {\n  key: 'key',\n  props: {\n    account: 'account',\n    filters: {\n      filtersKey: ['filters'],\n    },\n    region: 'region',\n\n    // the properties below are optional\n    lookupRoleArn: 'lookupRoleArn',\n    owners: ['owners'],\n  },\n  provider: cloud_assembly_schema.ContextProvider.AMI_PROVIDER,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.MissingContext"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.ContextProvider",
        "@aws-cdk/cloud-assembly-schema.ContextProvider#AMI_PROVIDER",
        "@aws-cdk/cloud-assembly-schema.MissingContext"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst missingContext: cloud_assembly_schema.MissingContext = {\n  key: 'key',\n  props: {\n    account: 'account',\n    filters: {\n      filtersKey: ['filters'],\n    },\n    region: 'region',\n\n    // the properties below are optional\n    lookupRoleArn: 'lookupRoleArn',\n    owners: ['owners'],\n  },\n  provider: cloud_assembly_schema.ContextProvider.AMI_PROVIDER,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 16,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 3,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "e1278ed7c25ed4966b1c67b46acd60ba543211490815d3eaad8717391eaa6e4a"
    },
    "c072d6aeb3761e717f260e268e9489c671d49c5238a894644e585339cd2cdb51": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nnested_cloud_assembly_properties = cloud_assembly_schema.NestedCloudAssemblyProperties(\n    directory_name=\"directoryName\",\n\n    # the properties below are optional\n    display_name=\"displayName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nNestedCloudAssemblyProperties nestedCloudAssemblyProperties = new NestedCloudAssemblyProperties {\n    DirectoryName = \"directoryName\",\n\n    // the properties below are optional\n    DisplayName = \"displayName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nNestedCloudAssemblyProperties nestedCloudAssemblyProperties = NestedCloudAssemblyProperties.builder()\n        .directoryName(\"directoryName\")\n\n        // the properties below are optional\n        .displayName(\"displayName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nnestedCloudAssemblyProperties := &nestedCloudAssemblyProperties{\n\tdirectoryName: jsii.String(\"directoryName\"),\n\n\t// the properties below are optional\n\tdisplayName: jsii.String(\"displayName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst nestedCloudAssemblyProperties: cloud_assembly_schema.NestedCloudAssemblyProperties = {\n  directoryName: 'directoryName',\n\n  // the properties below are optional\n  displayName: 'displayName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.NestedCloudAssemblyProperties"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.NestedCloudAssemblyProperties"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst nestedCloudAssemblyProperties: cloud_assembly_schema.NestedCloudAssemblyProperties = {\n  directoryName: 'directoryName',\n\n  // the properties below are optional\n  displayName: 'displayName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "a2173c283cb64060479843c115c8c666eb95500aea80726108661b7eab1c919d"
    },
    "2285b026ede7cf814a4d6f18a11dd7394d2b253eecd4b8c6ec91f0b4cecfa6f3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nplugin_context_query = cloud_assembly_schema.PluginContextQuery(\n    plugin_name=\"pluginName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nPluginContextQuery pluginContextQuery = new PluginContextQuery {\n    PluginName = \"pluginName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nPluginContextQuery pluginContextQuery = PluginContextQuery.builder()\n        .pluginName(\"pluginName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\npluginContextQuery := &pluginContextQuery{\n\tpluginName: jsii.String(\"pluginName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst pluginContextQuery: cloud_assembly_schema.PluginContextQuery = {\n  pluginName: 'pluginName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.PluginContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.PluginContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst pluginContextQuery: cloud_assembly_schema.PluginContextQuery = {\n  pluginName: 'pluginName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "78d074e4d2b470a75f833cbc617f3e6d2667991e1805d63d741a9e7cc7fdf8fe"
    },
    "fb97752a7b7026825568ac955084004bb4dee2dd162df288ccba5b2cf6468189": {
      "translations": {
        "python": {
          "source": "app = App()\n\nstack_under_test = Stack(app, \"StackUnderTest\")\n\nstack = Stack(app, \"stack\")\n\nIntegTestCase(stack, \"CustomizedDeploymentWorkflow\",\n    stacks=[stack_under_test],\n    diff_assets=True,\n    stack_update_workflow=True,\n    cdk_command_options=CdkCommands(\n        deploy=DeployCommand(\n            args=DeployOptions(\n                require_approval=RequireApproval.NEVER,\n                json=True\n            )\n        ),\n        destroy=DestroyCommand(\n            args=DestroyOptions(\n                force=True\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nnew IntegTestCase(stack, \"CustomizedDeploymentWorkflow\", new IntegTestCaseProps {\n    Stacks = new [] { stackUnderTest },\n    DiffAssets = true,\n    StackUpdateWorkflow = true,\n    CdkCommandOptions = new CdkCommands {\n        Deploy = new DeployCommand {\n            Args = new DeployOptions {\n                RequireApproval = RequireApproval.NEVER,\n                Json = true\n            }\n        },\n        Destroy = new DestroyCommand {\n            Args = new DestroyOptions {\n                Force = true\n            }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "App app = new App();\n\nStack stackUnderTest = new Stack(app, \"StackUnderTest\");\n\nStack stack = new Stack(app, \"stack\");\n\nIntegTestCase.Builder.create(stack, \"CustomizedDeploymentWorkflow\")\n        .stacks(List.of(stackUnderTest))\n        .diffAssets(true)\n        .stackUpdateWorkflow(true)\n        .cdkCommandOptions(CdkCommands.builder()\n                .deploy(DeployCommand.builder()\n                        .args(DeployOptions.builder()\n                                .requireApproval(RequireApproval.NEVER)\n                                .json(true)\n                                .build())\n                        .build())\n                .destroy(DestroyCommand.builder()\n                        .args(DestroyOptions.builder()\n                                .force(true)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "app := NewApp()\n\nstackUnderTest := NewStack(app, jsii.String(\"StackUnderTest\"))\n\nstack := NewStack(app, jsii.String(\"stack\"))\n\nNewIntegTestCase(stack, jsii.String(\"CustomizedDeploymentWorkflow\"), &integTestCaseProps{\n\tstacks: []stack{\n\t\tstackUnderTest,\n\t},\n\tdiffAssets: jsii.Boolean(true),\n\tstackUpdateWorkflow: jsii.Boolean(true),\n\tcdkCommandOptions: &cdkCommands{\n\t\tdeploy: &deployCommand{\n\t\t\targs: &deployOptions{\n\t\t\t\trequireApproval: requireApproval_NEVER,\n\t\t\t\tjson: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t\tdestroy: &destroyCommand{\n\t\t\targs: &destroyOptions{\n\t\t\t\tforce: jsii.Boolean(true),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.RequireApproval"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Stack",
        "@aws-cdk/integ-tests.IntegTestCase",
        "@aws-cdk/integ-tests.IntegTestCaseProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as lambda from '@aws-cdk/aws-lambda';\nimport { IntegTestCase } from '@aws-cdk/integ-tests';\nimport {\n  App,\n  Construct,\n  Stack,\n  StackProps,\n} from '@aws-cdk/core';\nimport * as path from 'path';\nimport { RequireApproval } from '@aws-cdk/cloud-assembly-schema';\n\n// Code snippet begins after !show marker below\n/// !show\nconst app = new App();\n\nconst stackUnderTest = new Stack(app, 'StackUnderTest', /* ... */);\n\nconst stack = new Stack(app, 'stack');\n\nnew IntegTestCase(stack, 'CustomizedDeploymentWorkflow', {\n  stacks: [stackUnderTest],\n  diffAssets: true,\n  stackUpdateWorkflow: true,\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        requireApproval: RequireApproval.NEVER,\n        json: true,\n      },\n\t  },\n    destroy: {\n      args: {\n        force: true,\n      },\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 24,
        "106": 4,
        "192": 1,
        "193": 6,
        "194": 1,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 11
      },
      "fqnsFingerprint": "f7371420104093fc3724943346d98e1a48bcffb7a90c7c56b1ae19a9d7c09417"
    },
    "e327fc98591a1ca4bf6867147aeb8b7a1d27221cb2c89501caa802b5a19cd818": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nruntime_info = cloud_assembly_schema.RuntimeInfo(\n    libraries={\n        \"libraries_key\": \"libraries\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nRuntimeInfo runtimeInfo = new RuntimeInfo {\n    Libraries = new Dictionary<string, string> {\n        { \"librariesKey\", \"libraries\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nRuntimeInfo runtimeInfo = RuntimeInfo.builder()\n        .libraries(Map.of(\n                \"librariesKey\", \"libraries\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nruntimeInfo := &runtimeInfo{\n\tlibraries: map[string]*string{\n\t\t\"librariesKey\": jsii.String(\"libraries\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst runtimeInfo: cloud_assembly_schema.RuntimeInfo = {\n  libraries: {\n    librariesKey: 'libraries',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.RuntimeInfo"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.RuntimeInfo"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst runtimeInfo: cloud_assembly_schema.RuntimeInfo = {\n  libraries: {\n    librariesKey: 'libraries',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "985f3febcb1232154cb5edd149e957e616314708ec9048458cb53dcc80405fa9"
    },
    "fd6534cef6e0598e9124e527c892d627d899d617f4863209af9b0cef1eb78a66": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ns_sMParameter_context_query = cloud_assembly_schema.SSMParameterContextQuery(\n    account=\"account\",\n    parameter_name=\"parameterName\",\n    region=\"region\",\n\n    # the properties below are optional\n    lookup_role_arn=\"lookupRoleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nSSMParameterContextQuery sSMParameterContextQuery = new SSMParameterContextQuery {\n    Account = \"account\",\n    ParameterName = \"parameterName\",\n    Region = \"region\",\n\n    // the properties below are optional\n    LookupRoleArn = \"lookupRoleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nSSMParameterContextQuery sSMParameterContextQuery = SSMParameterContextQuery.builder()\n        .account(\"account\")\n        .parameterName(\"parameterName\")\n        .region(\"region\")\n\n        // the properties below are optional\n        .lookupRoleArn(\"lookupRoleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nsSMParameterContextQuery := &sSMParameterContextQuery{\n\taccount: jsii.String(\"account\"),\n\tparameterName: jsii.String(\"parameterName\"),\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst sSMParameterContextQuery: cloud_assembly_schema.SSMParameterContextQuery = {\n  account: 'account',\n  parameterName: 'parameterName',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.SSMParameterContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.SSMParameterContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sSMParameterContextQuery: cloud_assembly_schema.SSMParameterContextQuery = {\n  account: 'account',\n  parameterName: 'parameterName',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "940f63440c0266b6ba6d3c4117cb216e44096ccbbbe37dd4498e89461b610eb0"
    },
    "40fe9fddd0561251314fe6866abcd17f161ffb378b7f27edc5a36a80eaa7c41b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nsecurity_group_context_query = cloud_assembly_schema.SecurityGroupContextQuery(\n    account=\"account\",\n    region=\"region\",\n\n    # the properties below are optional\n    lookup_role_arn=\"lookupRoleArn\",\n    security_group_id=\"securityGroupId\",\n    security_group_name=\"securityGroupName\",\n    vpc_id=\"vpcId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nSecurityGroupContextQuery securityGroupContextQuery = new SecurityGroupContextQuery {\n    Account = \"account\",\n    Region = \"region\",\n\n    // the properties below are optional\n    LookupRoleArn = \"lookupRoleArn\",\n    SecurityGroupId = \"securityGroupId\",\n    SecurityGroupName = \"securityGroupName\",\n    VpcId = \"vpcId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nSecurityGroupContextQuery securityGroupContextQuery = SecurityGroupContextQuery.builder()\n        .account(\"account\")\n        .region(\"region\")\n\n        // the properties below are optional\n        .lookupRoleArn(\"lookupRoleArn\")\n        .securityGroupId(\"securityGroupId\")\n        .securityGroupName(\"securityGroupName\")\n        .vpcId(\"vpcId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nsecurityGroupContextQuery := &securityGroupContextQuery{\n\taccount: jsii.String(\"account\"),\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n\tsecurityGroupId: jsii.String(\"securityGroupId\"),\n\tsecurityGroupName: jsii.String(\"securityGroupName\"),\n\tvpcId: jsii.String(\"vpcId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst securityGroupContextQuery: cloud_assembly_schema.SecurityGroupContextQuery = {\n  account: 'account',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n  securityGroupId: 'securityGroupId',\n  securityGroupName: 'securityGroupName',\n  vpcId: 'vpcId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.SecurityGroupContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.SecurityGroupContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst securityGroupContextQuery: cloud_assembly_schema.SecurityGroupContextQuery = {\n  account: 'account',\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n  securityGroupId: 'securityGroupId',\n  securityGroupName: 'securityGroupName',\n  vpcId: 'vpcId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "af27db57a50ba9f7947edc64d59ed22a27250058e4ce4333f04dcc27418a08b7"
    },
    "1ec5eb5814f13fc7ef35cfefa32194b3268d3941c6a99f53b41019c23b225a40": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ntag = cloud_assembly_schema.Tag(\n    key=\"key\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nTag tag = new Tag {\n    Key = \"key\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nTag tag = Tag.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ntag := &tag{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst tag: cloud_assembly_schema.Tag = {\n  key: 'key',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.Tag"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.Tag"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tag: cloud_assembly_schema.Tag = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "00a9c22e7f063f4897295481ff2ff2240c6dd977d4c3724da8d90f976831fe5d"
    },
    "0320a574665dcbe406563f4d4194924764edac6f13143a067e946caf5336ac13": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ntest_case = cloud_assembly_schema.TestCase(\n    stacks=[\"stacks\"],\n\n    # the properties below are optional\n    allow_destroy=[\"allowDestroy\"],\n    cdk_command_options=cloud_assembly_schema.CdkCommands(\n        deploy=cloud_assembly_schema.DeployCommand(\n            args=cloud_assembly_schema.DeployOptions(\n                all=False,\n                app=\"app\",\n                asset_metadata=False,\n                ca_bundle_path=\"caBundlePath\",\n                change_set_name=\"changeSetName\",\n                ci=False,\n                color=False,\n                context={\n                    \"context_key\": \"context\"\n                },\n                debug=False,\n                ec2_creds=False,\n                exclusively=False,\n                execute=False,\n                force=False,\n                ignore_errors=False,\n                json=False,\n                lookups=False,\n                notices=False,\n                notification_arns=[\"notificationArns\"],\n                output=\"output\",\n                outputs_file=\"outputsFile\",\n                parameters={\n                    \"parameters_key\": \"parameters\"\n                },\n                path_metadata=False,\n                profile=\"profile\",\n                proxy=\"proxy\",\n                require_approval=cloud_assembly_schema.RequireApproval.NEVER,\n                reuse_assets=[\"reuseAssets\"],\n                role_arn=\"roleArn\",\n                rollback=False,\n                stacks=[\"stacks\"],\n                staging=False,\n                strict=False,\n                toolkit_stack_name=\"toolkitStackName\",\n                trace=False,\n                use_previous_parameters=False,\n                verbose=False,\n                version_reporting=False\n            ),\n            enabled=False,\n            expected_message=\"expectedMessage\",\n            expect_error=False\n        ),\n        destroy=cloud_assembly_schema.DestroyCommand(\n            args=cloud_assembly_schema.DestroyOptions(\n                all=False,\n                app=\"app\",\n                asset_metadata=False,\n                ca_bundle_path=\"caBundlePath\",\n                color=False,\n                context={\n                    \"context_key\": \"context\"\n                },\n                debug=False,\n                ec2_creds=False,\n                exclusively=False,\n                force=False,\n                ignore_errors=False,\n                json=False,\n                lookups=False,\n                notices=False,\n                output=\"output\",\n                path_metadata=False,\n                profile=\"profile\",\n                proxy=\"proxy\",\n                role_arn=\"roleArn\",\n                stacks=[\"stacks\"],\n                staging=False,\n                strict=False,\n                trace=False,\n                verbose=False,\n                version_reporting=False\n            ),\n            enabled=False,\n            expected_message=\"expectedMessage\",\n            expect_error=False\n        )\n    ),\n    diff_assets=False,\n    hooks=cloud_assembly_schema.Hooks(\n        post_deploy=[\"postDeploy\"],\n        post_destroy=[\"postDestroy\"],\n        pre_deploy=[\"preDeploy\"],\n        pre_destroy=[\"preDestroy\"]\n    ),\n    regions=[\"regions\"],\n    stack_update_workflow=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nTestCase testCase = new TestCase {\n    Stacks = new [] { \"stacks\" },\n\n    // the properties below are optional\n    AllowDestroy = new [] { \"allowDestroy\" },\n    CdkCommandOptions = new CdkCommands {\n        Deploy = new DeployCommand {\n            Args = new DeployOptions {\n                All = false,\n                App = \"app\",\n                AssetMetadata = false,\n                CaBundlePath = \"caBundlePath\",\n                ChangeSetName = \"changeSetName\",\n                Ci = false,\n                Color = false,\n                Context = new Dictionary<string, string> {\n                    { \"contextKey\", \"context\" }\n                },\n                Debug = false,\n                Ec2Creds = false,\n                Exclusively = false,\n                Execute = false,\n                Force = false,\n                IgnoreErrors = false,\n                Json = false,\n                Lookups = false,\n                Notices = false,\n                NotificationArns = new [] { \"notificationArns\" },\n                Output = \"output\",\n                OutputsFile = \"outputsFile\",\n                Parameters = new Dictionary<string, string> {\n                    { \"parametersKey\", \"parameters\" }\n                },\n                PathMetadata = false,\n                Profile = \"profile\",\n                Proxy = \"proxy\",\n                RequireApproval = RequireApproval.NEVER,\n                ReuseAssets = new [] { \"reuseAssets\" },\n                RoleArn = \"roleArn\",\n                Rollback = false,\n                Stacks = new [] { \"stacks\" },\n                Staging = false,\n                Strict = false,\n                ToolkitStackName = \"toolkitStackName\",\n                Trace = false,\n                UsePreviousParameters = false,\n                Verbose = false,\n                VersionReporting = false\n            },\n            Enabled = false,\n            ExpectedMessage = \"expectedMessage\",\n            ExpectError = false\n        },\n        Destroy = new DestroyCommand {\n            Args = new DestroyOptions {\n                All = false,\n                App = \"app\",\n                AssetMetadata = false,\n                CaBundlePath = \"caBundlePath\",\n                Color = false,\n                Context = new Dictionary<string, string> {\n                    { \"contextKey\", \"context\" }\n                },\n                Debug = false,\n                Ec2Creds = false,\n                Exclusively = false,\n                Force = false,\n                IgnoreErrors = false,\n                Json = false,\n                Lookups = false,\n                Notices = false,\n                Output = \"output\",\n                PathMetadata = false,\n                Profile = \"profile\",\n                Proxy = \"proxy\",\n                RoleArn = \"roleArn\",\n                Stacks = new [] { \"stacks\" },\n                Staging = false,\n                Strict = false,\n                Trace = false,\n                Verbose = false,\n                VersionReporting = false\n            },\n            Enabled = false,\n            ExpectedMessage = \"expectedMessage\",\n            ExpectError = false\n        }\n    },\n    DiffAssets = false,\n    Hooks = new Hooks {\n        PostDeploy = new [] { \"postDeploy\" },\n        PostDestroy = new [] { \"postDestroy\" },\n        PreDeploy = new [] { \"preDeploy\" },\n        PreDestroy = new [] { \"preDestroy\" }\n    },\n    Regions = new [] { \"regions\" },\n    StackUpdateWorkflow = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nTestCase testCase = TestCase.builder()\n        .stacks(List.of(\"stacks\"))\n\n        // the properties below are optional\n        .allowDestroy(List.of(\"allowDestroy\"))\n        .cdkCommandOptions(CdkCommands.builder()\n                .deploy(DeployCommand.builder()\n                        .args(DeployOptions.builder()\n                                .all(false)\n                                .app(\"app\")\n                                .assetMetadata(false)\n                                .caBundlePath(\"caBundlePath\")\n                                .changeSetName(\"changeSetName\")\n                                .ci(false)\n                                .color(false)\n                                .context(Map.of(\n                                        \"contextKey\", \"context\"))\n                                .debug(false)\n                                .ec2Creds(false)\n                                .exclusively(false)\n                                .execute(false)\n                                .force(false)\n                                .ignoreErrors(false)\n                                .json(false)\n                                .lookups(false)\n                                .notices(false)\n                                .notificationArns(List.of(\"notificationArns\"))\n                                .output(\"output\")\n                                .outputsFile(\"outputsFile\")\n                                .parameters(Map.of(\n                                        \"parametersKey\", \"parameters\"))\n                                .pathMetadata(false)\n                                .profile(\"profile\")\n                                .proxy(\"proxy\")\n                                .requireApproval(RequireApproval.NEVER)\n                                .reuseAssets(List.of(\"reuseAssets\"))\n                                .roleArn(\"roleArn\")\n                                .rollback(false)\n                                .stacks(List.of(\"stacks\"))\n                                .staging(false)\n                                .strict(false)\n                                .toolkitStackName(\"toolkitStackName\")\n                                .trace(false)\n                                .usePreviousParameters(false)\n                                .verbose(false)\n                                .versionReporting(false)\n                                .build())\n                        .enabled(false)\n                        .expectedMessage(\"expectedMessage\")\n                        .expectError(false)\n                        .build())\n                .destroy(DestroyCommand.builder()\n                        .args(DestroyOptions.builder()\n                                .all(false)\n                                .app(\"app\")\n                                .assetMetadata(false)\n                                .caBundlePath(\"caBundlePath\")\n                                .color(false)\n                                .context(Map.of(\n                                        \"contextKey\", \"context\"))\n                                .debug(false)\n                                .ec2Creds(false)\n                                .exclusively(false)\n                                .force(false)\n                                .ignoreErrors(false)\n                                .json(false)\n                                .lookups(false)\n                                .notices(false)\n                                .output(\"output\")\n                                .pathMetadata(false)\n                                .profile(\"profile\")\n                                .proxy(\"proxy\")\n                                .roleArn(\"roleArn\")\n                                .stacks(List.of(\"stacks\"))\n                                .staging(false)\n                                .strict(false)\n                                .trace(false)\n                                .verbose(false)\n                                .versionReporting(false)\n                                .build())\n                        .enabled(false)\n                        .expectedMessage(\"expectedMessage\")\n                        .expectError(false)\n                        .build())\n                .build())\n        .diffAssets(false)\n        .hooks(Hooks.builder()\n                .postDeploy(List.of(\"postDeploy\"))\n                .postDestroy(List.of(\"postDestroy\"))\n                .preDeploy(List.of(\"preDeploy\"))\n                .preDestroy(List.of(\"preDestroy\"))\n                .build())\n        .regions(List.of(\"regions\"))\n        .stackUpdateWorkflow(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ntestCase := &testCase{\n\tstacks: []*string{\n\t\tjsii.String(\"stacks\"),\n\t},\n\n\t// the properties below are optional\n\tallowDestroy: []*string{\n\t\tjsii.String(\"allowDestroy\"),\n\t},\n\tcdkCommandOptions: &cdkCommands{\n\t\tdeploy: &deployCommand{\n\t\t\targs: &deployOptions{\n\t\t\t\tall: jsii.Boolean(false),\n\t\t\t\tapp: jsii.String(\"app\"),\n\t\t\t\tassetMetadata: jsii.Boolean(false),\n\t\t\t\tcaBundlePath: jsii.String(\"caBundlePath\"),\n\t\t\t\tchangeSetName: jsii.String(\"changeSetName\"),\n\t\t\t\tci: jsii.Boolean(false),\n\t\t\t\tcolor: jsii.Boolean(false),\n\t\t\t\tcontext: map[string]*string{\n\t\t\t\t\t\"contextKey\": jsii.String(\"context\"),\n\t\t\t\t},\n\t\t\t\tdebug: jsii.Boolean(false),\n\t\t\t\tec2Creds: jsii.Boolean(false),\n\t\t\t\texclusively: jsii.Boolean(false),\n\t\t\t\texecute: jsii.Boolean(false),\n\t\t\t\tforce: jsii.Boolean(false),\n\t\t\t\tignoreErrors: jsii.Boolean(false),\n\t\t\t\tjson: jsii.Boolean(false),\n\t\t\t\tlookups: jsii.Boolean(false),\n\t\t\t\tnotices: jsii.Boolean(false),\n\t\t\t\tnotificationArns: []*string{\n\t\t\t\t\tjsii.String(\"notificationArns\"),\n\t\t\t\t},\n\t\t\t\toutput: jsii.String(\"output\"),\n\t\t\t\toutputsFile: jsii.String(\"outputsFile\"),\n\t\t\t\tparameters: map[string]*string{\n\t\t\t\t\t\"parametersKey\": jsii.String(\"parameters\"),\n\t\t\t\t},\n\t\t\t\tpathMetadata: jsii.Boolean(false),\n\t\t\t\tprofile: jsii.String(\"profile\"),\n\t\t\t\tproxy: jsii.String(\"proxy\"),\n\t\t\t\trequireApproval: cloud_assembly_schema.requireApproval_NEVER,\n\t\t\t\treuseAssets: []*string{\n\t\t\t\t\tjsii.String(\"reuseAssets\"),\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\trollback: jsii.Boolean(false),\n\t\t\t\tstacks: []*string{\n\t\t\t\t\tjsii.String(\"stacks\"),\n\t\t\t\t},\n\t\t\t\tstaging: jsii.Boolean(false),\n\t\t\t\tstrict: jsii.Boolean(false),\n\t\t\t\ttoolkitStackName: jsii.String(\"toolkitStackName\"),\n\t\t\t\ttrace: jsii.Boolean(false),\n\t\t\t\tusePreviousParameters: jsii.Boolean(false),\n\t\t\t\tverbose: jsii.Boolean(false),\n\t\t\t\tversionReporting: jsii.Boolean(false),\n\t\t\t},\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\texpectedMessage: jsii.String(\"expectedMessage\"),\n\t\t\texpectError: jsii.Boolean(false),\n\t\t},\n\t\tdestroy: &destroyCommand{\n\t\t\targs: &destroyOptions{\n\t\t\t\tall: jsii.Boolean(false),\n\t\t\t\tapp: jsii.String(\"app\"),\n\t\t\t\tassetMetadata: jsii.Boolean(false),\n\t\t\t\tcaBundlePath: jsii.String(\"caBundlePath\"),\n\t\t\t\tcolor: jsii.Boolean(false),\n\t\t\t\tcontext: map[string]*string{\n\t\t\t\t\t\"contextKey\": jsii.String(\"context\"),\n\t\t\t\t},\n\t\t\t\tdebug: jsii.Boolean(false),\n\t\t\t\tec2Creds: jsii.Boolean(false),\n\t\t\t\texclusively: jsii.Boolean(false),\n\t\t\t\tforce: jsii.Boolean(false),\n\t\t\t\tignoreErrors: jsii.Boolean(false),\n\t\t\t\tjson: jsii.Boolean(false),\n\t\t\t\tlookups: jsii.Boolean(false),\n\t\t\t\tnotices: jsii.Boolean(false),\n\t\t\t\toutput: jsii.String(\"output\"),\n\t\t\t\tpathMetadata: jsii.Boolean(false),\n\t\t\t\tprofile: jsii.String(\"profile\"),\n\t\t\t\tproxy: jsii.String(\"proxy\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstacks: []*string{\n\t\t\t\t\tjsii.String(\"stacks\"),\n\t\t\t\t},\n\t\t\t\tstaging: jsii.Boolean(false),\n\t\t\t\tstrict: jsii.Boolean(false),\n\t\t\t\ttrace: jsii.Boolean(false),\n\t\t\t\tverbose: jsii.Boolean(false),\n\t\t\t\tversionReporting: jsii.Boolean(false),\n\t\t\t},\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\texpectedMessage: jsii.String(\"expectedMessage\"),\n\t\t\texpectError: jsii.Boolean(false),\n\t\t},\n\t},\n\tdiffAssets: jsii.Boolean(false),\n\thooks: &hooks{\n\t\tpostDeploy: []*string{\n\t\t\tjsii.String(\"postDeploy\"),\n\t\t},\n\t\tpostDestroy: []*string{\n\t\t\tjsii.String(\"postDestroy\"),\n\t\t},\n\t\tpreDeploy: []*string{\n\t\t\tjsii.String(\"preDeploy\"),\n\t\t},\n\t\tpreDestroy: []*string{\n\t\t\tjsii.String(\"preDestroy\"),\n\t\t},\n\t},\n\tregions: []*string{\n\t\tjsii.String(\"regions\"),\n\t},\n\tstackUpdateWorkflow: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst testCase: cloud_assembly_schema.TestCase = {\n  stacks: ['stacks'],\n\n  // the properties below are optional\n  allowDestroy: ['allowDestroy'],\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        changeSetName: 'changeSetName',\n        ci: false,\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        execute: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        notificationArns: ['notificationArns'],\n        output: 'output',\n        outputsFile: 'outputsFile',\n        parameters: {\n          parametersKey: 'parameters',\n        },\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        requireApproval: cloud_assembly_schema.RequireApproval.NEVER,\n        reuseAssets: ['reuseAssets'],\n        roleArn: 'roleArn',\n        rollback: false,\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        toolkitStackName: 'toolkitStackName',\n        trace: false,\n        usePreviousParameters: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n    destroy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        output: 'output',\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        roleArn: 'roleArn',\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        trace: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n  },\n  diffAssets: false,\n  hooks: {\n    postDeploy: ['postDeploy'],\n    postDestroy: ['postDestroy'],\n    preDeploy: ['preDeploy'],\n    preDestroy: ['preDestroy'],\n  },\n  regions: ['regions'],\n  stackUpdateWorkflow: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.TestCase"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.Hooks",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/cloud-assembly-schema.TestCase"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst testCase: cloud_assembly_schema.TestCase = {\n  stacks: ['stacks'],\n\n  // the properties below are optional\n  allowDestroy: ['allowDestroy'],\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        changeSetName: 'changeSetName',\n        ci: false,\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        execute: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        notificationArns: ['notificationArns'],\n        output: 'output',\n        outputsFile: 'outputsFile',\n        parameters: {\n          parametersKey: 'parameters',\n        },\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        requireApproval: cloud_assembly_schema.RequireApproval.NEVER,\n        reuseAssets: ['reuseAssets'],\n        roleArn: 'roleArn',\n        rollback: false,\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        toolkitStackName: 'toolkitStackName',\n        trace: false,\n        usePreviousParameters: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n    destroy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        output: 'output',\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        roleArn: 'roleArn',\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        trace: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n  },\n  diffAssets: false,\n  hooks: {\n    postDeploy: ['postDeploy'],\n    postDestroy: ['postDestroy'],\n    preDeploy: ['preDeploy'],\n    preDestroy: ['preDestroy'],\n  },\n  regions: ['regions'],\n  stackUpdateWorkflow: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 32,
        "75": 92,
        "91": 44,
        "153": 1,
        "169": 1,
        "192": 11,
        "193": 10,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 85,
        "290": 1
      },
      "fqnsFingerprint": "7a4a65ed03956d821ae63c3132877ac35f7f81c79c4975a4e678860f078cbb91"
    },
    "2f3dd325771b352930f14f196545716d8018a2fcbf0b9d9a3f3dc0dc5d3e5f6c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ntest_options = cloud_assembly_schema.TestOptions(\n    allow_destroy=[\"allowDestroy\"],\n    cdk_command_options=cloud_assembly_schema.CdkCommands(\n        deploy=cloud_assembly_schema.DeployCommand(\n            args=cloud_assembly_schema.DeployOptions(\n                all=False,\n                app=\"app\",\n                asset_metadata=False,\n                ca_bundle_path=\"caBundlePath\",\n                change_set_name=\"changeSetName\",\n                ci=False,\n                color=False,\n                context={\n                    \"context_key\": \"context\"\n                },\n                debug=False,\n                ec2_creds=False,\n                exclusively=False,\n                execute=False,\n                force=False,\n                ignore_errors=False,\n                json=False,\n                lookups=False,\n                notices=False,\n                notification_arns=[\"notificationArns\"],\n                output=\"output\",\n                outputs_file=\"outputsFile\",\n                parameters={\n                    \"parameters_key\": \"parameters\"\n                },\n                path_metadata=False,\n                profile=\"profile\",\n                proxy=\"proxy\",\n                require_approval=cloud_assembly_schema.RequireApproval.NEVER,\n                reuse_assets=[\"reuseAssets\"],\n                role_arn=\"roleArn\",\n                rollback=False,\n                stacks=[\"stacks\"],\n                staging=False,\n                strict=False,\n                toolkit_stack_name=\"toolkitStackName\",\n                trace=False,\n                use_previous_parameters=False,\n                verbose=False,\n                version_reporting=False\n            ),\n            enabled=False,\n            expected_message=\"expectedMessage\",\n            expect_error=False\n        ),\n        destroy=cloud_assembly_schema.DestroyCommand(\n            args=cloud_assembly_schema.DestroyOptions(\n                all=False,\n                app=\"app\",\n                asset_metadata=False,\n                ca_bundle_path=\"caBundlePath\",\n                color=False,\n                context={\n                    \"context_key\": \"context\"\n                },\n                debug=False,\n                ec2_creds=False,\n                exclusively=False,\n                force=False,\n                ignore_errors=False,\n                json=False,\n                lookups=False,\n                notices=False,\n                output=\"output\",\n                path_metadata=False,\n                profile=\"profile\",\n                proxy=\"proxy\",\n                role_arn=\"roleArn\",\n                stacks=[\"stacks\"],\n                staging=False,\n                strict=False,\n                trace=False,\n                verbose=False,\n                version_reporting=False\n            ),\n            enabled=False,\n            expected_message=\"expectedMessage\",\n            expect_error=False\n        )\n    ),\n    diff_assets=False,\n    hooks=cloud_assembly_schema.Hooks(\n        post_deploy=[\"postDeploy\"],\n        post_destroy=[\"postDestroy\"],\n        pre_deploy=[\"preDeploy\"],\n        pre_destroy=[\"preDestroy\"]\n    ),\n    regions=[\"regions\"],\n    stack_update_workflow=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nTestOptions testOptions = new TestOptions {\n    AllowDestroy = new [] { \"allowDestroy\" },\n    CdkCommandOptions = new CdkCommands {\n        Deploy = new DeployCommand {\n            Args = new DeployOptions {\n                All = false,\n                App = \"app\",\n                AssetMetadata = false,\n                CaBundlePath = \"caBundlePath\",\n                ChangeSetName = \"changeSetName\",\n                Ci = false,\n                Color = false,\n                Context = new Dictionary<string, string> {\n                    { \"contextKey\", \"context\" }\n                },\n                Debug = false,\n                Ec2Creds = false,\n                Exclusively = false,\n                Execute = false,\n                Force = false,\n                IgnoreErrors = false,\n                Json = false,\n                Lookups = false,\n                Notices = false,\n                NotificationArns = new [] { \"notificationArns\" },\n                Output = \"output\",\n                OutputsFile = \"outputsFile\",\n                Parameters = new Dictionary<string, string> {\n                    { \"parametersKey\", \"parameters\" }\n                },\n                PathMetadata = false,\n                Profile = \"profile\",\n                Proxy = \"proxy\",\n                RequireApproval = RequireApproval.NEVER,\n                ReuseAssets = new [] { \"reuseAssets\" },\n                RoleArn = \"roleArn\",\n                Rollback = false,\n                Stacks = new [] { \"stacks\" },\n                Staging = false,\n                Strict = false,\n                ToolkitStackName = \"toolkitStackName\",\n                Trace = false,\n                UsePreviousParameters = false,\n                Verbose = false,\n                VersionReporting = false\n            },\n            Enabled = false,\n            ExpectedMessage = \"expectedMessage\",\n            ExpectError = false\n        },\n        Destroy = new DestroyCommand {\n            Args = new DestroyOptions {\n                All = false,\n                App = \"app\",\n                AssetMetadata = false,\n                CaBundlePath = \"caBundlePath\",\n                Color = false,\n                Context = new Dictionary<string, string> {\n                    { \"contextKey\", \"context\" }\n                },\n                Debug = false,\n                Ec2Creds = false,\n                Exclusively = false,\n                Force = false,\n                IgnoreErrors = false,\n                Json = false,\n                Lookups = false,\n                Notices = false,\n                Output = \"output\",\n                PathMetadata = false,\n                Profile = \"profile\",\n                Proxy = \"proxy\",\n                RoleArn = \"roleArn\",\n                Stacks = new [] { \"stacks\" },\n                Staging = false,\n                Strict = false,\n                Trace = false,\n                Verbose = false,\n                VersionReporting = false\n            },\n            Enabled = false,\n            ExpectedMessage = \"expectedMessage\",\n            ExpectError = false\n        }\n    },\n    DiffAssets = false,\n    Hooks = new Hooks {\n        PostDeploy = new [] { \"postDeploy\" },\n        PostDestroy = new [] { \"postDestroy\" },\n        PreDeploy = new [] { \"preDeploy\" },\n        PreDestroy = new [] { \"preDestroy\" }\n    },\n    Regions = new [] { \"regions\" },\n    StackUpdateWorkflow = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nTestOptions testOptions = TestOptions.builder()\n        .allowDestroy(List.of(\"allowDestroy\"))\n        .cdkCommandOptions(CdkCommands.builder()\n                .deploy(DeployCommand.builder()\n                        .args(DeployOptions.builder()\n                                .all(false)\n                                .app(\"app\")\n                                .assetMetadata(false)\n                                .caBundlePath(\"caBundlePath\")\n                                .changeSetName(\"changeSetName\")\n                                .ci(false)\n                                .color(false)\n                                .context(Map.of(\n                                        \"contextKey\", \"context\"))\n                                .debug(false)\n                                .ec2Creds(false)\n                                .exclusively(false)\n                                .execute(false)\n                                .force(false)\n                                .ignoreErrors(false)\n                                .json(false)\n                                .lookups(false)\n                                .notices(false)\n                                .notificationArns(List.of(\"notificationArns\"))\n                                .output(\"output\")\n                                .outputsFile(\"outputsFile\")\n                                .parameters(Map.of(\n                                        \"parametersKey\", \"parameters\"))\n                                .pathMetadata(false)\n                                .profile(\"profile\")\n                                .proxy(\"proxy\")\n                                .requireApproval(RequireApproval.NEVER)\n                                .reuseAssets(List.of(\"reuseAssets\"))\n                                .roleArn(\"roleArn\")\n                                .rollback(false)\n                                .stacks(List.of(\"stacks\"))\n                                .staging(false)\n                                .strict(false)\n                                .toolkitStackName(\"toolkitStackName\")\n                                .trace(false)\n                                .usePreviousParameters(false)\n                                .verbose(false)\n                                .versionReporting(false)\n                                .build())\n                        .enabled(false)\n                        .expectedMessage(\"expectedMessage\")\n                        .expectError(false)\n                        .build())\n                .destroy(DestroyCommand.builder()\n                        .args(DestroyOptions.builder()\n                                .all(false)\n                                .app(\"app\")\n                                .assetMetadata(false)\n                                .caBundlePath(\"caBundlePath\")\n                                .color(false)\n                                .context(Map.of(\n                                        \"contextKey\", \"context\"))\n                                .debug(false)\n                                .ec2Creds(false)\n                                .exclusively(false)\n                                .force(false)\n                                .ignoreErrors(false)\n                                .json(false)\n                                .lookups(false)\n                                .notices(false)\n                                .output(\"output\")\n                                .pathMetadata(false)\n                                .profile(\"profile\")\n                                .proxy(\"proxy\")\n                                .roleArn(\"roleArn\")\n                                .stacks(List.of(\"stacks\"))\n                                .staging(false)\n                                .strict(false)\n                                .trace(false)\n                                .verbose(false)\n                                .versionReporting(false)\n                                .build())\n                        .enabled(false)\n                        .expectedMessage(\"expectedMessage\")\n                        .expectError(false)\n                        .build())\n                .build())\n        .diffAssets(false)\n        .hooks(Hooks.builder()\n                .postDeploy(List.of(\"postDeploy\"))\n                .postDestroy(List.of(\"postDestroy\"))\n                .preDeploy(List.of(\"preDeploy\"))\n                .preDestroy(List.of(\"preDestroy\"))\n                .build())\n        .regions(List.of(\"regions\"))\n        .stackUpdateWorkflow(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ntestOptions := &testOptions{\n\tallowDestroy: []*string{\n\t\tjsii.String(\"allowDestroy\"),\n\t},\n\tcdkCommandOptions: &cdkCommands{\n\t\tdeploy: &deployCommand{\n\t\t\targs: &deployOptions{\n\t\t\t\tall: jsii.Boolean(false),\n\t\t\t\tapp: jsii.String(\"app\"),\n\t\t\t\tassetMetadata: jsii.Boolean(false),\n\t\t\t\tcaBundlePath: jsii.String(\"caBundlePath\"),\n\t\t\t\tchangeSetName: jsii.String(\"changeSetName\"),\n\t\t\t\tci: jsii.Boolean(false),\n\t\t\t\tcolor: jsii.Boolean(false),\n\t\t\t\tcontext: map[string]*string{\n\t\t\t\t\t\"contextKey\": jsii.String(\"context\"),\n\t\t\t\t},\n\t\t\t\tdebug: jsii.Boolean(false),\n\t\t\t\tec2Creds: jsii.Boolean(false),\n\t\t\t\texclusively: jsii.Boolean(false),\n\t\t\t\texecute: jsii.Boolean(false),\n\t\t\t\tforce: jsii.Boolean(false),\n\t\t\t\tignoreErrors: jsii.Boolean(false),\n\t\t\t\tjson: jsii.Boolean(false),\n\t\t\t\tlookups: jsii.Boolean(false),\n\t\t\t\tnotices: jsii.Boolean(false),\n\t\t\t\tnotificationArns: []*string{\n\t\t\t\t\tjsii.String(\"notificationArns\"),\n\t\t\t\t},\n\t\t\t\toutput: jsii.String(\"output\"),\n\t\t\t\toutputsFile: jsii.String(\"outputsFile\"),\n\t\t\t\tparameters: map[string]*string{\n\t\t\t\t\t\"parametersKey\": jsii.String(\"parameters\"),\n\t\t\t\t},\n\t\t\t\tpathMetadata: jsii.Boolean(false),\n\t\t\t\tprofile: jsii.String(\"profile\"),\n\t\t\t\tproxy: jsii.String(\"proxy\"),\n\t\t\t\trequireApproval: cloud_assembly_schema.requireApproval_NEVER,\n\t\t\t\treuseAssets: []*string{\n\t\t\t\t\tjsii.String(\"reuseAssets\"),\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\trollback: jsii.Boolean(false),\n\t\t\t\tstacks: []*string{\n\t\t\t\t\tjsii.String(\"stacks\"),\n\t\t\t\t},\n\t\t\t\tstaging: jsii.Boolean(false),\n\t\t\t\tstrict: jsii.Boolean(false),\n\t\t\t\ttoolkitStackName: jsii.String(\"toolkitStackName\"),\n\t\t\t\ttrace: jsii.Boolean(false),\n\t\t\t\tusePreviousParameters: jsii.Boolean(false),\n\t\t\t\tverbose: jsii.Boolean(false),\n\t\t\t\tversionReporting: jsii.Boolean(false),\n\t\t\t},\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\texpectedMessage: jsii.String(\"expectedMessage\"),\n\t\t\texpectError: jsii.Boolean(false),\n\t\t},\n\t\tdestroy: &destroyCommand{\n\t\t\targs: &destroyOptions{\n\t\t\t\tall: jsii.Boolean(false),\n\t\t\t\tapp: jsii.String(\"app\"),\n\t\t\t\tassetMetadata: jsii.Boolean(false),\n\t\t\t\tcaBundlePath: jsii.String(\"caBundlePath\"),\n\t\t\t\tcolor: jsii.Boolean(false),\n\t\t\t\tcontext: map[string]*string{\n\t\t\t\t\t\"contextKey\": jsii.String(\"context\"),\n\t\t\t\t},\n\t\t\t\tdebug: jsii.Boolean(false),\n\t\t\t\tec2Creds: jsii.Boolean(false),\n\t\t\t\texclusively: jsii.Boolean(false),\n\t\t\t\tforce: jsii.Boolean(false),\n\t\t\t\tignoreErrors: jsii.Boolean(false),\n\t\t\t\tjson: jsii.Boolean(false),\n\t\t\t\tlookups: jsii.Boolean(false),\n\t\t\t\tnotices: jsii.Boolean(false),\n\t\t\t\toutput: jsii.String(\"output\"),\n\t\t\t\tpathMetadata: jsii.Boolean(false),\n\t\t\t\tprofile: jsii.String(\"profile\"),\n\t\t\t\tproxy: jsii.String(\"proxy\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstacks: []*string{\n\t\t\t\t\tjsii.String(\"stacks\"),\n\t\t\t\t},\n\t\t\t\tstaging: jsii.Boolean(false),\n\t\t\t\tstrict: jsii.Boolean(false),\n\t\t\t\ttrace: jsii.Boolean(false),\n\t\t\t\tverbose: jsii.Boolean(false),\n\t\t\t\tversionReporting: jsii.Boolean(false),\n\t\t\t},\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\texpectedMessage: jsii.String(\"expectedMessage\"),\n\t\t\texpectError: jsii.Boolean(false),\n\t\t},\n\t},\n\tdiffAssets: jsii.Boolean(false),\n\thooks: &hooks{\n\t\tpostDeploy: []*string{\n\t\t\tjsii.String(\"postDeploy\"),\n\t\t},\n\t\tpostDestroy: []*string{\n\t\t\tjsii.String(\"postDestroy\"),\n\t\t},\n\t\tpreDeploy: []*string{\n\t\t\tjsii.String(\"preDeploy\"),\n\t\t},\n\t\tpreDestroy: []*string{\n\t\t\tjsii.String(\"preDestroy\"),\n\t\t},\n\t},\n\tregions: []*string{\n\t\tjsii.String(\"regions\"),\n\t},\n\tstackUpdateWorkflow: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst testOptions: cloud_assembly_schema.TestOptions = {\n  allowDestroy: ['allowDestroy'],\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        changeSetName: 'changeSetName',\n        ci: false,\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        execute: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        notificationArns: ['notificationArns'],\n        output: 'output',\n        outputsFile: 'outputsFile',\n        parameters: {\n          parametersKey: 'parameters',\n        },\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        requireApproval: cloud_assembly_schema.RequireApproval.NEVER,\n        reuseAssets: ['reuseAssets'],\n        roleArn: 'roleArn',\n        rollback: false,\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        toolkitStackName: 'toolkitStackName',\n        trace: false,\n        usePreviousParameters: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n    destroy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        output: 'output',\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        roleArn: 'roleArn',\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        trace: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n  },\n  diffAssets: false,\n  hooks: {\n    postDeploy: ['postDeploy'],\n    postDestroy: ['postDestroy'],\n    preDeploy: ['preDeploy'],\n    preDestroy: ['preDestroy'],\n  },\n  regions: ['regions'],\n  stackUpdateWorkflow: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.TestOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.CdkCommands",
        "@aws-cdk/cloud-assembly-schema.DeployCommand",
        "@aws-cdk/cloud-assembly-schema.DeployOptions",
        "@aws-cdk/cloud-assembly-schema.DestroyCommand",
        "@aws-cdk/cloud-assembly-schema.DestroyOptions",
        "@aws-cdk/cloud-assembly-schema.Hooks",
        "@aws-cdk/cloud-assembly-schema.RequireApproval",
        "@aws-cdk/cloud-assembly-schema.RequireApproval#NEVER",
        "@aws-cdk/cloud-assembly-schema.TestOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst testOptions: cloud_assembly_schema.TestOptions = {\n  allowDestroy: ['allowDestroy'],\n  cdkCommandOptions: {\n    deploy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        changeSetName: 'changeSetName',\n        ci: false,\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        execute: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        notificationArns: ['notificationArns'],\n        output: 'output',\n        outputsFile: 'outputsFile',\n        parameters: {\n          parametersKey: 'parameters',\n        },\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        requireApproval: cloud_assembly_schema.RequireApproval.NEVER,\n        reuseAssets: ['reuseAssets'],\n        roleArn: 'roleArn',\n        rollback: false,\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        toolkitStackName: 'toolkitStackName',\n        trace: false,\n        usePreviousParameters: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n    destroy: {\n      args: {\n        all: false,\n        app: 'app',\n        assetMetadata: false,\n        caBundlePath: 'caBundlePath',\n        color: false,\n        context: {\n          contextKey: 'context',\n        },\n        debug: false,\n        ec2Creds: false,\n        exclusively: false,\n        force: false,\n        ignoreErrors: false,\n        json: false,\n        lookups: false,\n        notices: false,\n        output: 'output',\n        pathMetadata: false,\n        profile: 'profile',\n        proxy: 'proxy',\n        roleArn: 'roleArn',\n        stacks: ['stacks'],\n        staging: false,\n        strict: false,\n        trace: false,\n        verbose: false,\n        versionReporting: false,\n      },\n      enabled: false,\n      expectedMessage: 'expectedMessage',\n      expectError: false,\n    },\n  },\n  diffAssets: false,\n  hooks: {\n    postDeploy: ['postDeploy'],\n    postDestroy: ['postDestroy'],\n    preDeploy: ['preDeploy'],\n    preDestroy: ['preDestroy'],\n  },\n  regions: ['regions'],\n  stackUpdateWorkflow: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 31,
        "75": 91,
        "91": 44,
        "153": 1,
        "169": 1,
        "192": 10,
        "193": 10,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 84,
        "290": 1
      },
      "fqnsFingerprint": "2b670620b6bd6bf18bef714178abeb6b1c2c4165bfbfa9443f3340843969c643"
    },
    "ea1bc4f88d5cfeea825e5d51c026f05a15345d5c410859f91aae9efe2897813a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\ntree_artifact_properties = cloud_assembly_schema.TreeArtifactProperties(\n    file=\"file\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nTreeArtifactProperties treeArtifactProperties = new TreeArtifactProperties {\n    File = \"file\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nTreeArtifactProperties treeArtifactProperties = TreeArtifactProperties.builder()\n        .file(\"file\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\ntreeArtifactProperties := &treeArtifactProperties{\n\tfile: jsii.String(\"file\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst treeArtifactProperties: cloud_assembly_schema.TreeArtifactProperties = {\n  file: 'file',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.TreeArtifactProperties"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.TreeArtifactProperties"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst treeArtifactProperties: cloud_assembly_schema.TreeArtifactProperties = {\n  file: 'file',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "34f0e006983c0afed369cbecc26b0a886c83e7049ac8d3e95f3d267b58d07907"
    },
    "c40e522110288b0bb2989ae9cced4bfea45ca698dda9eae575cdb1f9a78e8abc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.cloud_assembly_schema as cloud_assembly_schema\n\nvpc_context_query = cloud_assembly_schema.VpcContextQuery(\n    account=\"account\",\n    filter={\n        \"filter_key\": \"filter\"\n    },\n    region=\"region\",\n\n    # the properties below are optional\n    lookup_role_arn=\"lookupRoleArn\",\n    return_asymmetric_subnets=False,\n    subnet_group_name_tag=\"subnetGroupNameTag\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.CloudAssembly.Schema;\n\nVpcContextQuery vpcContextQuery = new VpcContextQuery {\n    Account = \"account\",\n    Filter = new Dictionary<string, string> {\n        { \"filterKey\", \"filter\" }\n    },\n    Region = \"region\",\n\n    // the properties below are optional\n    LookupRoleArn = \"lookupRoleArn\",\n    ReturnAsymmetricSubnets = false,\n    SubnetGroupNameTag = \"subnetGroupNameTag\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.cloudassembly.schema.*;\n\nVpcContextQuery vpcContextQuery = VpcContextQuery.builder()\n        .account(\"account\")\n        .filter(Map.of(\n                \"filterKey\", \"filter\"))\n        .region(\"region\")\n\n        // the properties below are optional\n        .lookupRoleArn(\"lookupRoleArn\")\n        .returnAsymmetricSubnets(false)\n        .subnetGroupNameTag(\"subnetGroupNameTag\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloud_assembly_schema \"github.com/aws-samples/dummy/awscdkcloudassemblyschema\"\nvpcContextQuery := &vpcContextQuery{\n\taccount: jsii.String(\"account\"),\n\tfilter: map[string]*string{\n\t\t\"filterKey\": jsii.String(\"filter\"),\n\t},\n\tregion: jsii.String(\"region\"),\n\n\t// the properties below are optional\n\tlookupRoleArn: jsii.String(\"lookupRoleArn\"),\n\treturnAsymmetricSubnets: jsii.Boolean(false),\n\tsubnetGroupNameTag: jsii.String(\"subnetGroupNameTag\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\nconst vpcContextQuery: cloud_assembly_schema.VpcContextQuery = {\n  account: 'account',\n  filter: {\n    filterKey: 'filter',\n  },\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n  returnAsymmetricSubnets: false,\n  subnetGroupNameTag: 'subnetGroupNameTag',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/cloud-assembly-schema.VpcContextQuery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/cloud-assembly-schema.VpcContextQuery"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloud_assembly_schema from '@aws-cdk/cloud-assembly-schema';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcContextQuery: cloud_assembly_schema.VpcContextQuery = {\n  account: 'account',\n  filter: {\n    filterKey: 'filter',\n  },\n  region: 'region',\n\n  // the properties below are optional\n  lookupRoleArn: 'lookupRoleArn',\n  returnAsymmetricSubnets: false,\n  subnetGroupNameTag: 'subnetGroupNameTag',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 11,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "7ac33f73110dbbf20e0bd19557c0be50d17d3f76e3dfd662f687974c60170110"
    }
  }
}

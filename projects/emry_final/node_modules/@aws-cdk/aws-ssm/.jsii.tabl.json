{
  "version": "2",
  "toolVersion": "1.57.0",
  "snippets": {
    "cf56defddea1ca807fc603943fe26e8a0a9022c29eadfe9ec4849adb0914449e": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_ssm as ssm",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.SSM;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ssm.*;",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"",
          "version": "1"
        },
        "$": {
          "source": "import * as ssm from '@aws-cdk/aws-ssm';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ssm"
        },
        "field": {
          "field": "markdown",
          "line": 26
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as ssm from '@aws-cdk/aws-ssm';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "9e34fa893cefedb02cc99b8724377c793844bda4d65d6e85727c8a2a96ab64d7": {
      "translations": {
        "python": {
          "source": "# Retrieve the latest value of the non-secret parameter\n# with name \"/My/String/Parameter\".\nstring_value = ssm.StringParameter.from_string_parameter_attributes(self, \"MyValue\",\n    parameter_name=\"/My/Public/Parameter\"\n).string_value\nstring_value_version_from_token = ssm.StringParameter.from_string_parameter_attributes(self, \"MyValueVersionFromToken\",\n    parameter_name=\"/My/Public/Parameter\",\n    # parameter version from token\n    version=parameter_version\n).string_value\n\n# Retrieve a specific version of the secret (SecureString) parameter.\n# 'version' is always required.\nsecret_value = ssm.StringParameter.from_secure_string_parameter_attributes(self, \"MySecureValue\",\n    parameter_name=\"/My/Secret/Parameter\",\n    version=5\n)\nsecret_value_version_from_token = ssm.StringParameter.from_secure_string_parameter_attributes(self, \"MySecureValueVersionFromToken\",\n    parameter_name=\"/My/Secret/Parameter\",\n    # parameter version from token\n    version=parameter_version\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nstring stringValue = StringParameter.FromStringParameterAttributes(this, \"MyValue\", new StringParameterAttributes {\n    ParameterName = \"/My/Public/Parameter\"\n}).StringValue;\nstring stringValueVersionFromToken = StringParameter.FromStringParameterAttributes(this, \"MyValueVersionFromToken\", new StringParameterAttributes {\n    ParameterName = \"/My/Public/Parameter\",\n    // parameter version from token\n    Version = parameterVersion\n}).StringValue;\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nIStringParameter secretValue = StringParameter.FromSecureStringParameterAttributes(this, \"MySecureValue\", new SecureStringParameterAttributes {\n    ParameterName = \"/My/Secret/Parameter\",\n    Version = 5\n});\nIStringParameter secretValueVersionFromToken = StringParameter.FromSecureStringParameterAttributes(this, \"MySecureValueVersionFromToken\", new SecureStringParameterAttributes {\n    ParameterName = \"/My/Secret/Parameter\",\n    // parameter version from token\n    Version = parameterVersion\n});",
          "version": "1"
        },
        "java": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nString stringValue = StringParameter.fromStringParameterAttributes(this, \"MyValue\", StringParameterAttributes.builder()\n        .parameterName(\"/My/Public/Parameter\")\n        .build()).getStringValue();\nString stringValueVersionFromToken = StringParameter.fromStringParameterAttributes(this, \"MyValueVersionFromToken\", StringParameterAttributes.builder()\n        .parameterName(\"/My/Public/Parameter\")\n        // parameter version from token\n        .version(parameterVersion)\n        .build()).getStringValue();\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nIStringParameter secretValue = StringParameter.fromSecureStringParameterAttributes(this, \"MySecureValue\", SecureStringParameterAttributes.builder()\n        .parameterName(\"/My/Secret/Parameter\")\n        .version(5)\n        .build());\nIStringParameter secretValueVersionFromToken = StringParameter.fromSecureStringParameterAttributes(this, \"MySecureValueVersionFromToken\", SecureStringParameterAttributes.builder()\n        .parameterName(\"/My/Secret/Parameter\")\n        // parameter version from token\n        .version(parameterVersion)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nstringValue := ssm.stringParameter.fromStringParameterAttributes(this, jsii.String(\"MyValue\"), &stringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Public/Parameter\"),\n}).stringValue\nstringValueVersionFromToken := ssm.stringParameter.fromStringParameterAttributes(this, jsii.String(\"MyValueVersionFromToken\"), &stringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Public/Parameter\"),\n\t// parameter version from token\n\tversion: parameterVersion,\n}).stringValue\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nsecretValue := ssm.stringParameter.fromSecureStringParameterAttributes(this, jsii.String(\"MySecureValue\"), &secureStringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Secret/Parameter\"),\n\tversion: jsii.Number(5),\n})\nsecretValueVersionFromToken := ssm.stringParameter.fromSecureStringParameterAttributes(this, jsii.String(\"MySecureValueVersionFromToken\"), &secureStringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Secret/Parameter\"),\n\t// parameter version from token\n\tversion: parameterVersion,\n})",
          "version": "1"
        },
        "$": {
          "source": "    // Retrieve the latest value of the non-secret parameter\n    // with name \"/My/String/Parameter\".\n    const stringValue = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValue', {\n      parameterName: '/My/Public/Parameter',\n      // 'version' can be specified but is optional.\n    }).stringValue;\n    const stringValueVersionFromToken = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValueVersionFromToken', {\n      parameterName: '/My/Public/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    }).stringValue;\n\n    // Retrieve a specific version of the secret (SecureString) parameter.\n    // 'version' is always required.\n    const secretValue = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValue', {\n      parameterName: '/My/Secret/Parameter',\n      version: 5,\n    });\n    const secretValueVersionFromToken = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValueVersionFromToken', {\n      parameterName: '/My/Secret/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ssm"
        },
        "field": {
          "field": "markdown",
          "line": 35
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.IStringParameter",
        "@aws-cdk/aws-ssm.IStringParameter#stringValue",
        "@aws-cdk/aws-ssm.SecureStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameter#fromSecureStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameter#fromStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameterAttributes",
        "constructs.Construct"
      ],
      "fullSource": "/// !cdk-integ *\nimport * as cdk from '@aws-cdk/core';\nimport * as ssm from '../lib';\n\nclass CreatingStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    new ssm.StringParameter(this, 'String', {\n      parameterName: '/My/Public/Parameter',\n      stringValue: 'abcdef',\n    });\n  }\n}\n\nclass UsingStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    // Parameter that contains version number, will be used to pass\n    // version value from token.\n    const parameterVersion = new cdk.CfnParameter(this, 'MyParameterVersion', {\n      type: 'Number',\n      default: 1,\n    }).valueAsNumber;\n\n    /// !show\n    // Retrieve the latest value of the non-secret parameter\n    // with name \"/My/String/Parameter\".\n    const stringValue = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValue', {\n      parameterName: '/My/Public/Parameter',\n      // 'version' can be specified but is optional.\n    }).stringValue;\n    const stringValueVersionFromToken = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValueVersionFromToken', {\n      parameterName: '/My/Public/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    }).stringValue;\n\n    // Retrieve a specific version of the secret (SecureString) parameter.\n    // 'version' is always required.\n    const secretValue = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValue', {\n      parameterName: '/My/Secret/Parameter',\n      version: 5,\n    });\n    const secretValueVersionFromToken = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValueVersionFromToken', {\n      parameterName: '/My/Secret/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    });\n\n    /// !hide\n\n    new cdk.CfnResource(this, 'Dummy', { type: 'AWS::SNS::Topic' });\n    new cdk.CfnOutput(this, 'TheValue', { value: stringValue });\n    new cdk.CfnOutput(this, 'TheValueVersionFromToken', { value: stringValueVersionFromToken });\n\n    // Cannot be provisioned so cannot be actually used\n    Array.isArray(secretValue);\n    Array.isArray(secretValueVersionFromToken);\n  }\n}\n\nconst app = new cdk.App();\n\nconst creating = new CreatingStack(app, 'sspms-creating');\nconst using = new UsingStack(app, 'sspms-using');\nusing.addDependency(creating);\n\napp.synth();\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 8,
        "75": 27,
        "104": 4,
        "193": 4,
        "194": 10,
        "196": 4,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 7
      },
      "fqnsFingerprint": "8adedf873bc2d262211dadeee067d235e0afeaaf8c7aced0d18de6ec41e27b75"
    },
    "3504cd30e344c3e2aae188f5e6a1218f6b4c4152cec4c42f73dd7d364d896e89": {
      "translations": {
        "python": {
          "source": "ssm.StringParameter(self, \"Parameter\",\n    allowed_pattern=\".*\",\n    description=\"The value Foo\",\n    parameter_name=\"FooParameter\",\n    string_value=\"Foo\",\n    tier=ssm.ParameterTier.ADVANCED\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new StringParameter(this, \"Parameter\", new StringParameterProps {\n    AllowedPattern = \".*\",\n    Description = \"The value Foo\",\n    ParameterName = \"FooParameter\",\n    StringValue = \"Foo\",\n    Tier = ParameterTier.ADVANCED\n});",
          "version": "1"
        },
        "java": {
          "source": "StringParameter.Builder.create(this, \"Parameter\")\n        .allowedPattern(\".*\")\n        .description(\"The value Foo\")\n        .parameterName(\"FooParameter\")\n        .stringValue(\"Foo\")\n        .tier(ParameterTier.ADVANCED)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "ssm.NewStringParameter(this, jsii.String(\"Parameter\"), &stringParameterProps{\n\tallowedPattern: jsii.String(\".*\"),\n\tdescription: jsii.String(\"The value Foo\"),\n\tparameterName: jsii.String(\"FooParameter\"),\n\tstringValue: jsii.String(\"Foo\"),\n\ttier: ssm.parameterTier_ADVANCED,\n})",
          "version": "1"
        },
        "$": {
          "source": "new ssm.StringParameter(this, 'Parameter', {\n  allowedPattern: '.*',\n  description: 'The value Foo',\n  parameterName: 'FooParameter',\n  stringValue: 'Foo',\n  tier: ssm.ParameterTier.ADVANCED,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ssm"
        },
        "field": {
          "field": "markdown",
          "line": 70
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.ParameterTier",
        "@aws-cdk/aws-ssm.ParameterTier#ADVANCED",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameterProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as ssm from '@aws-cdk/aws-ssm';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew ssm.StringParameter(this, 'Parameter', {\n  allowedPattern: '.*',\n  description: 'The value Foo',\n  parameterName: 'FooParameter',\n  stringValue: 'Foo',\n  tier: ssm.ParameterTier.ADVANCED,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "2f5992d9650d760f72e0a3f9259124f08389c855437e0cc8ffb6e73547ad756c"
    },
    "cd4b0decb1d1f23f99bce460a1194db066a5e6b443b558c6bc036b612bf8ed9d": {
      "translations": {
        "python": {
          "source": "# Create a new SSM Parameter holding a String\nparam = ssm.StringParameter(stack, \"StringParameter\",\n    # description: 'Some user-friendly description',\n    # name: 'ParameterName',\n    string_value=\"Initial parameter value\"\n)\n\n# Grant read access to some Role\nparam.grant_read(role)\n\n# Create a new SSM Parameter holding a StringList\nlist_parameter = ssm.StringListParameter(stack, \"StringListParameter\",\n    # description: 'Some user-friendly description',\n    # name: 'ParameterName',\n    string_list_value=[\"Initial parameter value A\", \"Initial parameter value B\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Create a new SSM Parameter holding a String\nStringParameter param = new StringParameter(stack, \"StringParameter\", new StringParameterProps {\n    // description: 'Some user-friendly description',\n    // name: 'ParameterName',\n    StringValue = \"Initial parameter value\"\n});\n\n// Grant read access to some Role\nparam.GrantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nStringListParameter listParameter = new StringListParameter(stack, \"StringListParameter\", new StringListParameterProps {\n    // description: 'Some user-friendly description',\n    // name: 'ParameterName',\n    StringListValue = new [] { \"Initial parameter value A\", \"Initial parameter value B\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Create a new SSM Parameter holding a String\nStringParameter param = StringParameter.Builder.create(stack, \"StringParameter\")\n        // description: 'Some user-friendly description',\n        // name: 'ParameterName',\n        .stringValue(\"Initial parameter value\")\n        .build();\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nStringListParameter listParameter = StringListParameter.Builder.create(stack, \"StringListParameter\")\n        // description: 'Some user-friendly description',\n        // name: 'ParameterName',\n        .stringListValue(List.of(\"Initial parameter value A\", \"Initial parameter value B\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Create a new SSM Parameter holding a String\nparam := ssm.NewStringParameter(stack, jsii.String(\"StringParameter\"), &stringParameterProps{\n\t// description: 'Some user-friendly description',\n\t// name: 'ParameterName',\n\tstringValue: jsii.String(\"Initial parameter value\"),\n})\n\n// Grant read access to some Role\nparam.grantRead(role)\n\n// Create a new SSM Parameter holding a StringList\nlistParameter := ssm.NewStringListParameter(stack, jsii.String(\"StringListParameter\"), &stringListParameterProps{\n\t// description: 'Some user-friendly description',\n\t// name: 'ParameterName',\n\tstringListValue: []*string{\n\t\tjsii.String(\"Initial parameter value A\"),\n\t\tjsii.String(\"Initial parameter value B\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Create a new SSM Parameter holding a String\nconst param = new ssm.StringParameter(stack, 'StringParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringValue: 'Initial parameter value',\n  // allowedPattern: '.*',\n});\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nconst listParameter = new ssm.StringListParameter(stack, 'StringListParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringListValue: ['Initial parameter value A', 'Initial parameter value B'],\n  // allowedPattern: '.*',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-ssm"
        },
        "field": {
          "field": "markdown",
          "line": 80
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-ssm.StringListParameter",
        "@aws-cdk/aws-ssm.StringListParameterProps",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameterProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\nimport * as ssm from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'SSM-Parameter');\n\nconst role = new iam.Role(stack, 'UserRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\n/// !show\n// Create a new SSM Parameter holding a String\nconst param = new ssm.StringParameter(stack, 'StringParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringValue: 'Initial parameter value',\n  // allowedPattern: '.*',\n});\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nconst listParameter = new ssm.StringListParameter(stack, 'StringListParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringListValue: ['Initial parameter value A', 'Initial parameter value B'],\n  // allowedPattern: '.*',\n});\n/// !hide\n\nnew cdk.CfnOutput(stack, 'StringListOutput', {\n  value: cdk.Fn.join('+', listParameter.stringListValue),\n});\n\nnew cdk.CfnOutput(stack, 'ParamArn', {\n  value: param.parameterArn,\n});\n\napp.synth();\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "192": 1,
        "193": 2,
        "194": 3,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2
      },
      "fqnsFingerprint": "fbbfc417081875d059dc8f43ba235a72cabe8c26b42b3b9a7d25d846258b0685"
    },
    "e0c74f4958e859ce0ac115508491a30e3e66e5aa01792b90e5110a30c0fed5c6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# parameters: Any\n\ncfn_association = ssm.CfnAssociation(self, \"MyCfnAssociation\",\n    name=\"name\",\n\n    # the properties below are optional\n    apply_only_at_cron_interval=False,\n    association_name=\"associationName\",\n    automation_target_parameter_name=\"automationTargetParameterName\",\n    calendar_names=[\"calendarNames\"],\n    compliance_severity=\"complianceSeverity\",\n    document_version=\"documentVersion\",\n    instance_id=\"instanceId\",\n    max_concurrency=\"maxConcurrency\",\n    max_errors=\"maxErrors\",\n    output_location=ssm.CfnAssociation.InstanceAssociationOutputLocationProperty(\n        s3_location=ssm.CfnAssociation.S3OutputLocationProperty(\n            output_s3_bucket_name=\"outputS3BucketName\",\n            output_s3_key_prefix=\"outputS3KeyPrefix\",\n            output_s3_region=\"outputS3Region\"\n        )\n    ),\n    parameters={\n        \"parameters_key\": parameters\n    },\n    schedule_expression=\"scheduleExpression\",\n    sync_compliance=\"syncCompliance\",\n    targets=[ssm.CfnAssociation.TargetProperty(\n        key=\"key\",\n        values=[\"values\"]\n    )],\n    wait_for_success_timeout_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar parameters;\n\nCfnAssociation cfnAssociation = new CfnAssociation(this, \"MyCfnAssociation\", new CfnAssociationProps {\n    Name = \"name\",\n\n    // the properties below are optional\n    ApplyOnlyAtCronInterval = false,\n    AssociationName = \"associationName\",\n    AutomationTargetParameterName = \"automationTargetParameterName\",\n    CalendarNames = new [] { \"calendarNames\" },\n    ComplianceSeverity = \"complianceSeverity\",\n    DocumentVersion = \"documentVersion\",\n    InstanceId = \"instanceId\",\n    MaxConcurrency = \"maxConcurrency\",\n    MaxErrors = \"maxErrors\",\n    OutputLocation = new InstanceAssociationOutputLocationProperty {\n        S3Location = new S3OutputLocationProperty {\n            OutputS3BucketName = \"outputS3BucketName\",\n            OutputS3KeyPrefix = \"outputS3KeyPrefix\",\n            OutputS3Region = \"outputS3Region\"\n        }\n    },\n    Parameters = new Dictionary<string, object> {\n        { \"parametersKey\", parameters }\n    },\n    ScheduleExpression = \"scheduleExpression\",\n    SyncCompliance = \"syncCompliance\",\n    Targets = new [] { new TargetProperty {\n        Key = \"key\",\n        Values = new [] { \"values\" }\n    } },\n    WaitForSuccessTimeoutSeconds = 123\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject parameters;\n\nCfnAssociation cfnAssociation = CfnAssociation.Builder.create(this, \"MyCfnAssociation\")\n        .name(\"name\")\n\n        // the properties below are optional\n        .applyOnlyAtCronInterval(false)\n        .associationName(\"associationName\")\n        .automationTargetParameterName(\"automationTargetParameterName\")\n        .calendarNames(List.of(\"calendarNames\"))\n        .complianceSeverity(\"complianceSeverity\")\n        .documentVersion(\"documentVersion\")\n        .instanceId(\"instanceId\")\n        .maxConcurrency(\"maxConcurrency\")\n        .maxErrors(\"maxErrors\")\n        .outputLocation(InstanceAssociationOutputLocationProperty.builder()\n                .s3Location(S3OutputLocationProperty.builder()\n                        .outputS3BucketName(\"outputS3BucketName\")\n                        .outputS3KeyPrefix(\"outputS3KeyPrefix\")\n                        .outputS3Region(\"outputS3Region\")\n                        .build())\n                .build())\n        .parameters(Map.of(\n                \"parametersKey\", parameters))\n        .scheduleExpression(\"scheduleExpression\")\n        .syncCompliance(\"syncCompliance\")\n        .targets(List.of(TargetProperty.builder()\n                .key(\"key\")\n                .values(List.of(\"values\"))\n                .build()))\n        .waitForSuccessTimeoutSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar parameters interface{}\ncfnAssociation := ssm.NewCfnAssociation(this, jsii.String(\"MyCfnAssociation\"), &cfnAssociationProps{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tapplyOnlyAtCronInterval: jsii.Boolean(false),\n\tassociationName: jsii.String(\"associationName\"),\n\tautomationTargetParameterName: jsii.String(\"automationTargetParameterName\"),\n\tcalendarNames: []*string{\n\t\tjsii.String(\"calendarNames\"),\n\t},\n\tcomplianceSeverity: jsii.String(\"complianceSeverity\"),\n\tdocumentVersion: jsii.String(\"documentVersion\"),\n\tinstanceId: jsii.String(\"instanceId\"),\n\tmaxConcurrency: jsii.String(\"maxConcurrency\"),\n\tmaxErrors: jsii.String(\"maxErrors\"),\n\toutputLocation: &instanceAssociationOutputLocationProperty{\n\t\ts3Location: &s3OutputLocationProperty{\n\t\t\toutputS3BucketName: jsii.String(\"outputS3BucketName\"),\n\t\t\toutputS3KeyPrefix: jsii.String(\"outputS3KeyPrefix\"),\n\t\t\toutputS3Region: jsii.String(\"outputS3Region\"),\n\t\t},\n\t},\n\tparameters: map[string]interface{}{\n\t\t\"parametersKey\": parameters,\n\t},\n\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\tsyncCompliance: jsii.String(\"syncCompliance\"),\n\ttargets: []interface{}{\n\t\t&targetProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\twaitForSuccessTimeoutSeconds: jsii.Number(123),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\nconst cfnAssociation = new ssm.CfnAssociation(this, 'MyCfnAssociation', {\n  name: 'name',\n\n  // the properties below are optional\n  applyOnlyAtCronInterval: false,\n  associationName: 'associationName',\n  automationTargetParameterName: 'automationTargetParameterName',\n  calendarNames: ['calendarNames'],\n  complianceSeverity: 'complianceSeverity',\n  documentVersion: 'documentVersion',\n  instanceId: 'instanceId',\n  maxConcurrency: 'maxConcurrency',\n  maxErrors: 'maxErrors',\n  outputLocation: {\n    s3Location: {\n      outputS3BucketName: 'outputS3BucketName',\n      outputS3KeyPrefix: 'outputS3KeyPrefix',\n      outputS3Region: 'outputS3Region',\n    },\n  },\n  parameters: {\n    parametersKey: parameters,\n  },\n  scheduleExpression: 'scheduleExpression',\n  syncCompliance: 'syncCompliance',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  waitForSuccessTimeoutSeconds: 123,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnAssociation"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnAssociation",
        "@aws-cdk/aws-ssm.CfnAssociationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAssociation = new ssm.CfnAssociation(this, 'MyCfnAssociation', {\n  name: 'name',\n\n  // the properties below are optional\n  applyOnlyAtCronInterval: false,\n  associationName: 'associationName',\n  automationTargetParameterName: 'automationTargetParameterName',\n  calendarNames: ['calendarNames'],\n  complianceSeverity: 'complianceSeverity',\n  documentVersion: 'documentVersion',\n  instanceId: 'instanceId',\n  maxConcurrency: 'maxConcurrency',\n  maxErrors: 'maxErrors',\n  outputLocation: {\n    s3Location: {\n      outputS3BucketName: 'outputS3BucketName',\n      outputS3KeyPrefix: 'outputS3KeyPrefix',\n      outputS3Region: 'outputS3Region',\n    },\n  },\n  parameters: {\n    parametersKey: parameters,\n  },\n  scheduleExpression: 'scheduleExpression',\n  syncCompliance: 'syncCompliance',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  waitForSuccessTimeoutSeconds: 123,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 18,
        "75": 29,
        "91": 1,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 3,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 23,
        "290": 1
      },
      "fqnsFingerprint": "52ab9bb1fe43d88ce2babc9850827fd8950242eabae20d6f7d83f0cffd2cf54d"
    },
    "794c30517326f61100b7bb7be720945655c99d88fbe146b6a04e2eb701a4df98": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ninstance_association_output_location_property = ssm.CfnAssociation.InstanceAssociationOutputLocationProperty(\n    s3_location=ssm.CfnAssociation.S3OutputLocationProperty(\n        output_s3_bucket_name=\"outputS3BucketName\",\n        output_s3_key_prefix=\"outputS3KeyPrefix\",\n        output_s3_region=\"outputS3Region\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nInstanceAssociationOutputLocationProperty instanceAssociationOutputLocationProperty = new InstanceAssociationOutputLocationProperty {\n    S3Location = new S3OutputLocationProperty {\n        OutputS3BucketName = \"outputS3BucketName\",\n        OutputS3KeyPrefix = \"outputS3KeyPrefix\",\n        OutputS3Region = \"outputS3Region\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nInstanceAssociationOutputLocationProperty instanceAssociationOutputLocationProperty = InstanceAssociationOutputLocationProperty.builder()\n        .s3Location(S3OutputLocationProperty.builder()\n                .outputS3BucketName(\"outputS3BucketName\")\n                .outputS3KeyPrefix(\"outputS3KeyPrefix\")\n                .outputS3Region(\"outputS3Region\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ninstanceAssociationOutputLocationProperty := &instanceAssociationOutputLocationProperty{\n\ts3Location: &s3OutputLocationProperty{\n\t\toutputS3BucketName: jsii.String(\"outputS3BucketName\"),\n\t\toutputS3KeyPrefix: jsii.String(\"outputS3KeyPrefix\"),\n\t\toutputS3Region: jsii.String(\"outputS3Region\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst instanceAssociationOutputLocationProperty: ssm.CfnAssociation.InstanceAssociationOutputLocationProperty = {\n  s3Location: {\n    outputS3BucketName: 'outputS3BucketName',\n    outputS3KeyPrefix: 'outputS3KeyPrefix',\n    outputS3Region: 'outputS3Region',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnAssociation.InstanceAssociationOutputLocationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnAssociation.InstanceAssociationOutputLocationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst instanceAssociationOutputLocationProperty: ssm.CfnAssociation.InstanceAssociationOutputLocationProperty = {\n  s3Location: {\n    outputS3BucketName: 'outputS3BucketName',\n    outputS3KeyPrefix: 'outputS3KeyPrefix',\n    outputS3Region: 'outputS3Region',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "ed40d7df37381f39113884aee3f04efea168e6cece4a2fc3f7e0cadea02df200"
    },
    "4c412e20efddbd8d85eecccd1632095ed554c6a732a4335b990854f0570ca680": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ns3_output_location_property = ssm.CfnAssociation.S3OutputLocationProperty(\n    output_s3_bucket_name=\"outputS3BucketName\",\n    output_s3_key_prefix=\"outputS3KeyPrefix\",\n    output_s3_region=\"outputS3Region\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nS3OutputLocationProperty s3OutputLocationProperty = new S3OutputLocationProperty {\n    OutputS3BucketName = \"outputS3BucketName\",\n    OutputS3KeyPrefix = \"outputS3KeyPrefix\",\n    OutputS3Region = \"outputS3Region\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nS3OutputLocationProperty s3OutputLocationProperty = S3OutputLocationProperty.builder()\n        .outputS3BucketName(\"outputS3BucketName\")\n        .outputS3KeyPrefix(\"outputS3KeyPrefix\")\n        .outputS3Region(\"outputS3Region\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ns3OutputLocationProperty := &s3OutputLocationProperty{\n\toutputS3BucketName: jsii.String(\"outputS3BucketName\"),\n\toutputS3KeyPrefix: jsii.String(\"outputS3KeyPrefix\"),\n\toutputS3Region: jsii.String(\"outputS3Region\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst s3OutputLocationProperty: ssm.CfnAssociation.S3OutputLocationProperty = {\n  outputS3BucketName: 'outputS3BucketName',\n  outputS3KeyPrefix: 'outputS3KeyPrefix',\n  outputS3Region: 'outputS3Region',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnAssociation.S3OutputLocationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnAssociation.S3OutputLocationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3OutputLocationProperty: ssm.CfnAssociation.S3OutputLocationProperty = {\n  outputS3BucketName: 'outputS3BucketName',\n  outputS3KeyPrefix: 'outputS3KeyPrefix',\n  outputS3Region: 'outputS3Region',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "ca496448bb3fed0cb3c3cea808a559fea2d2e5011bcf9cbe6647a76546ee936b"
    },
    "943038d9aded1599732ee9d2fd51cae864628643ec92ebf0a7664f1e127b9601": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ntarget_property = ssm.CfnAssociation.TargetProperty(\n    key=\"key\",\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nTargetProperty targetProperty = new TargetProperty {\n    Key = \"key\",\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nTargetProperty targetProperty = TargetProperty.builder()\n        .key(\"key\")\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ntargetProperty := &targetProperty{\n\tkey: jsii.String(\"key\"),\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst targetProperty: ssm.CfnAssociation.TargetProperty = {\n  key: 'key',\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnAssociation.TargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnAssociation.TargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetProperty: ssm.CfnAssociation.TargetProperty = {\n  key: 'key',\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "febdd7e33d58d32386674fca1d03ea5e2bbf852ce5284a4e1a3469e5e2e4dd3d"
    },
    "d61133bfa3e6bec3443c82fbc5cbfd06a1e4e950d8c48c190acb9ca9842d2b78": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# parameters: Any\n\ncfn_association_props = ssm.CfnAssociationProps(\n    name=\"name\",\n\n    # the properties below are optional\n    apply_only_at_cron_interval=False,\n    association_name=\"associationName\",\n    automation_target_parameter_name=\"automationTargetParameterName\",\n    calendar_names=[\"calendarNames\"],\n    compliance_severity=\"complianceSeverity\",\n    document_version=\"documentVersion\",\n    instance_id=\"instanceId\",\n    max_concurrency=\"maxConcurrency\",\n    max_errors=\"maxErrors\",\n    output_location=ssm.CfnAssociation.InstanceAssociationOutputLocationProperty(\n        s3_location=ssm.CfnAssociation.S3OutputLocationProperty(\n            output_s3_bucket_name=\"outputS3BucketName\",\n            output_s3_key_prefix=\"outputS3KeyPrefix\",\n            output_s3_region=\"outputS3Region\"\n        )\n    ),\n    parameters={\n        \"parameters_key\": parameters\n    },\n    schedule_expression=\"scheduleExpression\",\n    sync_compliance=\"syncCompliance\",\n    targets=[ssm.CfnAssociation.TargetProperty(\n        key=\"key\",\n        values=[\"values\"]\n    )],\n    wait_for_success_timeout_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar parameters;\n\nCfnAssociationProps cfnAssociationProps = new CfnAssociationProps {\n    Name = \"name\",\n\n    // the properties below are optional\n    ApplyOnlyAtCronInterval = false,\n    AssociationName = \"associationName\",\n    AutomationTargetParameterName = \"automationTargetParameterName\",\n    CalendarNames = new [] { \"calendarNames\" },\n    ComplianceSeverity = \"complianceSeverity\",\n    DocumentVersion = \"documentVersion\",\n    InstanceId = \"instanceId\",\n    MaxConcurrency = \"maxConcurrency\",\n    MaxErrors = \"maxErrors\",\n    OutputLocation = new InstanceAssociationOutputLocationProperty {\n        S3Location = new S3OutputLocationProperty {\n            OutputS3BucketName = \"outputS3BucketName\",\n            OutputS3KeyPrefix = \"outputS3KeyPrefix\",\n            OutputS3Region = \"outputS3Region\"\n        }\n    },\n    Parameters = new Dictionary<string, object> {\n        { \"parametersKey\", parameters }\n    },\n    ScheduleExpression = \"scheduleExpression\",\n    SyncCompliance = \"syncCompliance\",\n    Targets = new [] { new TargetProperty {\n        Key = \"key\",\n        Values = new [] { \"values\" }\n    } },\n    WaitForSuccessTimeoutSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject parameters;\n\nCfnAssociationProps cfnAssociationProps = CfnAssociationProps.builder()\n        .name(\"name\")\n\n        // the properties below are optional\n        .applyOnlyAtCronInterval(false)\n        .associationName(\"associationName\")\n        .automationTargetParameterName(\"automationTargetParameterName\")\n        .calendarNames(List.of(\"calendarNames\"))\n        .complianceSeverity(\"complianceSeverity\")\n        .documentVersion(\"documentVersion\")\n        .instanceId(\"instanceId\")\n        .maxConcurrency(\"maxConcurrency\")\n        .maxErrors(\"maxErrors\")\n        .outputLocation(InstanceAssociationOutputLocationProperty.builder()\n                .s3Location(S3OutputLocationProperty.builder()\n                        .outputS3BucketName(\"outputS3BucketName\")\n                        .outputS3KeyPrefix(\"outputS3KeyPrefix\")\n                        .outputS3Region(\"outputS3Region\")\n                        .build())\n                .build())\n        .parameters(Map.of(\n                \"parametersKey\", parameters))\n        .scheduleExpression(\"scheduleExpression\")\n        .syncCompliance(\"syncCompliance\")\n        .targets(List.of(TargetProperty.builder()\n                .key(\"key\")\n                .values(List.of(\"values\"))\n                .build()))\n        .waitForSuccessTimeoutSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar parameters interface{}\ncfnAssociationProps := &cfnAssociationProps{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tapplyOnlyAtCronInterval: jsii.Boolean(false),\n\tassociationName: jsii.String(\"associationName\"),\n\tautomationTargetParameterName: jsii.String(\"automationTargetParameterName\"),\n\tcalendarNames: []*string{\n\t\tjsii.String(\"calendarNames\"),\n\t},\n\tcomplianceSeverity: jsii.String(\"complianceSeverity\"),\n\tdocumentVersion: jsii.String(\"documentVersion\"),\n\tinstanceId: jsii.String(\"instanceId\"),\n\tmaxConcurrency: jsii.String(\"maxConcurrency\"),\n\tmaxErrors: jsii.String(\"maxErrors\"),\n\toutputLocation: &instanceAssociationOutputLocationProperty{\n\t\ts3Location: &s3OutputLocationProperty{\n\t\t\toutputS3BucketName: jsii.String(\"outputS3BucketName\"),\n\t\t\toutputS3KeyPrefix: jsii.String(\"outputS3KeyPrefix\"),\n\t\t\toutputS3Region: jsii.String(\"outputS3Region\"),\n\t\t},\n\t},\n\tparameters: map[string]interface{}{\n\t\t\"parametersKey\": parameters,\n\t},\n\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\tsyncCompliance: jsii.String(\"syncCompliance\"),\n\ttargets: []interface{}{\n\t\t&targetProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\twaitForSuccessTimeoutSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\nconst cfnAssociationProps: ssm.CfnAssociationProps = {\n  name: 'name',\n\n  // the properties below are optional\n  applyOnlyAtCronInterval: false,\n  associationName: 'associationName',\n  automationTargetParameterName: 'automationTargetParameterName',\n  calendarNames: ['calendarNames'],\n  complianceSeverity: 'complianceSeverity',\n  documentVersion: 'documentVersion',\n  instanceId: 'instanceId',\n  maxConcurrency: 'maxConcurrency',\n  maxErrors: 'maxErrors',\n  outputLocation: {\n    s3Location: {\n      outputS3BucketName: 'outputS3BucketName',\n      outputS3KeyPrefix: 'outputS3KeyPrefix',\n      outputS3Region: 'outputS3Region',\n    },\n  },\n  parameters: {\n    parametersKey: parameters,\n  },\n  scheduleExpression: 'scheduleExpression',\n  syncCompliance: 'syncCompliance',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  waitForSuccessTimeoutSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnAssociationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnAssociationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAssociationProps: ssm.CfnAssociationProps = {\n  name: 'name',\n\n  // the properties below are optional\n  applyOnlyAtCronInterval: false,\n  associationName: 'associationName',\n  automationTargetParameterName: 'automationTargetParameterName',\n  calendarNames: ['calendarNames'],\n  complianceSeverity: 'complianceSeverity',\n  documentVersion: 'documentVersion',\n  instanceId: 'instanceId',\n  maxConcurrency: 'maxConcurrency',\n  maxErrors: 'maxErrors',\n  outputLocation: {\n    s3Location: {\n      outputS3BucketName: 'outputS3BucketName',\n      outputS3KeyPrefix: 'outputS3KeyPrefix',\n      outputS3Region: 'outputS3Region',\n    },\n  },\n  parameters: {\n    parametersKey: parameters,\n  },\n  scheduleExpression: 'scheduleExpression',\n  syncCompliance: 'syncCompliance',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  waitForSuccessTimeoutSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 17,
        "75": 29,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 5,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 23,
        "290": 1
      },
      "fqnsFingerprint": "5d77995a8511c78a967777ffedfe9f5a2ce4a6fca8463fdb4b5c29631377139a"
    },
    "0919a4eac1464d4d82ee537c2ecff4f5b44cb55b148ab0f19d6bd8959aebd8f6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# content: Any\n\ncfn_document = ssm.CfnDocument(self, \"MyCfnDocument\",\n    content=content,\n\n    # the properties below are optional\n    attachments=[ssm.CfnDocument.AttachmentsSourceProperty(\n        key=\"key\",\n        name=\"name\",\n        values=[\"values\"]\n    )],\n    document_format=\"documentFormat\",\n    document_type=\"documentType\",\n    name=\"name\",\n    requires=[ssm.CfnDocument.DocumentRequiresProperty(\n        name=\"name\",\n        version=\"version\"\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    target_type=\"targetType\",\n    update_method=\"updateMethod\",\n    version_name=\"versionName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar content;\n\nCfnDocument cfnDocument = new CfnDocument(this, \"MyCfnDocument\", new CfnDocumentProps {\n    Content = content,\n\n    // the properties below are optional\n    Attachments = new [] { new AttachmentsSourceProperty {\n        Key = \"key\",\n        Name = \"name\",\n        Values = new [] { \"values\" }\n    } },\n    DocumentFormat = \"documentFormat\",\n    DocumentType = \"documentType\",\n    Name = \"name\",\n    Requires = new [] { new DocumentRequiresProperty {\n        Name = \"name\",\n        Version = \"version\"\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TargetType = \"targetType\",\n    UpdateMethod = \"updateMethod\",\n    VersionName = \"versionName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject content;\n\nCfnDocument cfnDocument = CfnDocument.Builder.create(this, \"MyCfnDocument\")\n        .content(content)\n\n        // the properties below are optional\n        .attachments(List.of(AttachmentsSourceProperty.builder()\n                .key(\"key\")\n                .name(\"name\")\n                .values(List.of(\"values\"))\n                .build()))\n        .documentFormat(\"documentFormat\")\n        .documentType(\"documentType\")\n        .name(\"name\")\n        .requires(List.of(DocumentRequiresProperty.builder()\n                .name(\"name\")\n                .version(\"version\")\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targetType(\"targetType\")\n        .updateMethod(\"updateMethod\")\n        .versionName(\"versionName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar content interface{}\ncfnDocument := ssm.NewCfnDocument(this, jsii.String(\"MyCfnDocument\"), &cfnDocumentProps{\n\tcontent: content,\n\n\t// the properties below are optional\n\tattachments: []interface{}{\n\t\t&attachmentsSourceProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\tdocumentFormat: jsii.String(\"documentFormat\"),\n\tdocumentType: jsii.String(\"documentType\"),\n\tname: jsii.String(\"name\"),\n\trequires: []interface{}{\n\t\t&documentRequiresProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tversion: jsii.String(\"version\"),\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargetType: jsii.String(\"targetType\"),\n\tupdateMethod: jsii.String(\"updateMethod\"),\n\tversionName: jsii.String(\"versionName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const content: any;\nconst cfnDocument = new ssm.CfnDocument(this, 'MyCfnDocument', {\n  content: content,\n\n  // the properties below are optional\n  attachments: [{\n    key: 'key',\n    name: 'name',\n    values: ['values'],\n  }],\n  documentFormat: 'documentFormat',\n  documentType: 'documentType',\n  name: 'name',\n  requires: [{\n    name: 'name',\n    version: 'version',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetType: 'targetType',\n  updateMethod: 'updateMethod',\n  versionName: 'versionName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnDocument"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnDocument",
        "@aws-cdk/aws-ssm.CfnDocumentProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const content: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDocument = new ssm.CfnDocument(this, 'MyCfnDocument', {\n  content: content,\n\n  // the properties below are optional\n  attachments: [{\n    key: 'key',\n    name: 'name',\n    values: ['values'],\n  }],\n  documentFormat: 'documentFormat',\n  documentType: 'documentType',\n  name: 'name',\n  requires: [{\n    name: 'name',\n    version: 'version',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetType: 'targetType',\n  updateMethod: 'updateMethod',\n  versionName: 'versionName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 15,
        "75": 23,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 4,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "d7520e1bf297013571f17e64d93441b5fc01e66d73d06c8d1e7b8ff6bf57a3d0"
    },
    "5605372e954027ee44249d77a4ebf4d5e9f62ba103e6df11972d0399d1e498d4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nattachments_source_property = ssm.CfnDocument.AttachmentsSourceProperty(\n    key=\"key\",\n    name=\"name\",\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nAttachmentsSourceProperty attachmentsSourceProperty = new AttachmentsSourceProperty {\n    Key = \"key\",\n    Name = \"name\",\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nAttachmentsSourceProperty attachmentsSourceProperty = AttachmentsSourceProperty.builder()\n        .key(\"key\")\n        .name(\"name\")\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nattachmentsSourceProperty := &attachmentsSourceProperty{\n\tkey: jsii.String(\"key\"),\n\tname: jsii.String(\"name\"),\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst attachmentsSourceProperty: ssm.CfnDocument.AttachmentsSourceProperty = {\n  key: 'key',\n  name: 'name',\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnDocument.AttachmentsSourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnDocument.AttachmentsSourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst attachmentsSourceProperty: ssm.CfnDocument.AttachmentsSourceProperty = {\n  key: 'key',\n  name: 'name',\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "32b887f9e04b195e4961a4ffc26657d49ab21091955c9b006adbd777cfbe974d"
    },
    "73e802441b06132c70fb38e0d76e76e17fccf66b1de6df0fd8bf5fa9455dbc46": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ndocument_requires_property = ssm.CfnDocument.DocumentRequiresProperty(\n    name=\"name\",\n    version=\"version\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nDocumentRequiresProperty documentRequiresProperty = new DocumentRequiresProperty {\n    Name = \"name\",\n    Version = \"version\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nDocumentRequiresProperty documentRequiresProperty = DocumentRequiresProperty.builder()\n        .name(\"name\")\n        .version(\"version\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ndocumentRequiresProperty := &documentRequiresProperty{\n\tname: jsii.String(\"name\"),\n\tversion: jsii.String(\"version\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst documentRequiresProperty: ssm.CfnDocument.DocumentRequiresProperty = {\n  name: 'name',\n  version: 'version',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnDocument.DocumentRequiresProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnDocument.DocumentRequiresProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst documentRequiresProperty: ssm.CfnDocument.DocumentRequiresProperty = {\n  name: 'name',\n  version: 'version',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "23904efa524220959b362427b5f2db67a3ea2ae168615510e18acb4f60b04583"
    },
    "44aded4e381e488658498491b014880f4562fdc7e1c3068ad46af022baa535ea": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# content: Any\n\ncfn_document_props = ssm.CfnDocumentProps(\n    content=content,\n\n    # the properties below are optional\n    attachments=[ssm.CfnDocument.AttachmentsSourceProperty(\n        key=\"key\",\n        name=\"name\",\n        values=[\"values\"]\n    )],\n    document_format=\"documentFormat\",\n    document_type=\"documentType\",\n    name=\"name\",\n    requires=[ssm.CfnDocument.DocumentRequiresProperty(\n        name=\"name\",\n        version=\"version\"\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    target_type=\"targetType\",\n    update_method=\"updateMethod\",\n    version_name=\"versionName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar content;\n\nCfnDocumentProps cfnDocumentProps = new CfnDocumentProps {\n    Content = content,\n\n    // the properties below are optional\n    Attachments = new [] { new AttachmentsSourceProperty {\n        Key = \"key\",\n        Name = \"name\",\n        Values = new [] { \"values\" }\n    } },\n    DocumentFormat = \"documentFormat\",\n    DocumentType = \"documentType\",\n    Name = \"name\",\n    Requires = new [] { new DocumentRequiresProperty {\n        Name = \"name\",\n        Version = \"version\"\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TargetType = \"targetType\",\n    UpdateMethod = \"updateMethod\",\n    VersionName = \"versionName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject content;\n\nCfnDocumentProps cfnDocumentProps = CfnDocumentProps.builder()\n        .content(content)\n\n        // the properties below are optional\n        .attachments(List.of(AttachmentsSourceProperty.builder()\n                .key(\"key\")\n                .name(\"name\")\n                .values(List.of(\"values\"))\n                .build()))\n        .documentFormat(\"documentFormat\")\n        .documentType(\"documentType\")\n        .name(\"name\")\n        .requires(List.of(DocumentRequiresProperty.builder()\n                .name(\"name\")\n                .version(\"version\")\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targetType(\"targetType\")\n        .updateMethod(\"updateMethod\")\n        .versionName(\"versionName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar content interface{}\ncfnDocumentProps := &cfnDocumentProps{\n\tcontent: content,\n\n\t// the properties below are optional\n\tattachments: []interface{}{\n\t\t&attachmentsSourceProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\tdocumentFormat: jsii.String(\"documentFormat\"),\n\tdocumentType: jsii.String(\"documentType\"),\n\tname: jsii.String(\"name\"),\n\trequires: []interface{}{\n\t\t&documentRequiresProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tversion: jsii.String(\"version\"),\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargetType: jsii.String(\"targetType\"),\n\tupdateMethod: jsii.String(\"updateMethod\"),\n\tversionName: jsii.String(\"versionName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const content: any;\nconst cfnDocumentProps: ssm.CfnDocumentProps = {\n  content: content,\n\n  // the properties below are optional\n  attachments: [{\n    key: 'key',\n    name: 'name',\n    values: ['values'],\n  }],\n  documentFormat: 'documentFormat',\n  documentType: 'documentType',\n  name: 'name',\n  requires: [{\n    name: 'name',\n    version: 'version',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetType: 'targetType',\n  updateMethod: 'updateMethod',\n  versionName: 'versionName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnDocumentProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnDocumentProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const content: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDocumentProps: ssm.CfnDocumentProps = {\n  content: content,\n\n  // the properties below are optional\n  attachments: [{\n    key: 'key',\n    name: 'name',\n    values: ['values'],\n  }],\n  documentFormat: 'documentFormat',\n  documentType: 'documentType',\n  name: 'name',\n  requires: [{\n    name: 'name',\n    version: 'version',\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetType: 'targetType',\n  updateMethod: 'updateMethod',\n  versionName: 'versionName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 14,
        "75": 23,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 4,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "32d8ed3a44c38e9132806efdbb5beaa2429d8e30e0e67b892659f4fc5fca6174"
    },
    "ad75d2a2cb96715239aff96600652b7c6e23e826ae0f0319048c91f1bc78e5f7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncfn_maintenance_window = ssm.CfnMaintenanceWindow(self, \"MyCfnMaintenanceWindow\",\n    allow_unassociated_targets=False,\n    cutoff=123,\n    duration=123,\n    name=\"name\",\n    schedule=\"schedule\",\n\n    # the properties below are optional\n    description=\"description\",\n    end_date=\"endDate\",\n    schedule_offset=123,\n    schedule_timezone=\"scheduleTimezone\",\n    start_date=\"startDate\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCfnMaintenanceWindow cfnMaintenanceWindow = new CfnMaintenanceWindow(this, \"MyCfnMaintenanceWindow\", new CfnMaintenanceWindowProps {\n    AllowUnassociatedTargets = false,\n    Cutoff = 123,\n    Duration = 123,\n    Name = \"name\",\n    Schedule = \"schedule\",\n\n    // the properties below are optional\n    Description = \"description\",\n    EndDate = \"endDate\",\n    ScheduleOffset = 123,\n    ScheduleTimezone = \"scheduleTimezone\",\n    StartDate = \"startDate\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCfnMaintenanceWindow cfnMaintenanceWindow = CfnMaintenanceWindow.Builder.create(this, \"MyCfnMaintenanceWindow\")\n        .allowUnassociatedTargets(false)\n        .cutoff(123)\n        .duration(123)\n        .name(\"name\")\n        .schedule(\"schedule\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .endDate(\"endDate\")\n        .scheduleOffset(123)\n        .scheduleTimezone(\"scheduleTimezone\")\n        .startDate(\"startDate\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncfnMaintenanceWindow := ssm.NewCfnMaintenanceWindow(this, jsii.String(\"MyCfnMaintenanceWindow\"), &cfnMaintenanceWindowProps{\n\tallowUnassociatedTargets: jsii.Boolean(false),\n\tcutoff: jsii.Number(123),\n\tduration: jsii.Number(123),\n\tname: jsii.String(\"name\"),\n\tschedule: jsii.String(\"schedule\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tendDate: jsii.String(\"endDate\"),\n\tscheduleOffset: jsii.Number(123),\n\tscheduleTimezone: jsii.String(\"scheduleTimezone\"),\n\tstartDate: jsii.String(\"startDate\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cfnMaintenanceWindow = new ssm.CfnMaintenanceWindow(this, 'MyCfnMaintenanceWindow', {\n  allowUnassociatedTargets: false,\n  cutoff: 123,\n  duration: 123,\n  name: 'name',\n  schedule: 'schedule',\n\n  // the properties below are optional\n  description: 'description',\n  endDate: 'endDate',\n  scheduleOffset: 123,\n  scheduleTimezone: 'scheduleTimezone',\n  startDate: 'startDate',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindow"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindow",
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMaintenanceWindow = new ssm.CfnMaintenanceWindow(this, 'MyCfnMaintenanceWindow', {\n  allowUnassociatedTargets: false,\n  cutoff: 123,\n  duration: 123,\n  name: 'name',\n  schedule: 'schedule',\n\n  // the properties below are optional\n  description: 'description',\n  endDate: 'endDate',\n  scheduleOffset: 123,\n  scheduleTimezone: 'scheduleTimezone',\n  startDate: 'startDate',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 10,
        "75": 17,
        "91": 1,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "a2444b0087c33ebec93a27f711fffa272e4a079d743b2b76b376bb36bcf61083"
    },
    "11f809fd119fb6361d3663b7c21802c93821b83978560f143f1f3cbf31893cff": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncfn_maintenance_window_props = ssm.CfnMaintenanceWindowProps(\n    allow_unassociated_targets=False,\n    cutoff=123,\n    duration=123,\n    name=\"name\",\n    schedule=\"schedule\",\n\n    # the properties below are optional\n    description=\"description\",\n    end_date=\"endDate\",\n    schedule_offset=123,\n    schedule_timezone=\"scheduleTimezone\",\n    start_date=\"startDate\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCfnMaintenanceWindowProps cfnMaintenanceWindowProps = new CfnMaintenanceWindowProps {\n    AllowUnassociatedTargets = false,\n    Cutoff = 123,\n    Duration = 123,\n    Name = \"name\",\n    Schedule = \"schedule\",\n\n    // the properties below are optional\n    Description = \"description\",\n    EndDate = \"endDate\",\n    ScheduleOffset = 123,\n    ScheduleTimezone = \"scheduleTimezone\",\n    StartDate = \"startDate\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCfnMaintenanceWindowProps cfnMaintenanceWindowProps = CfnMaintenanceWindowProps.builder()\n        .allowUnassociatedTargets(false)\n        .cutoff(123)\n        .duration(123)\n        .name(\"name\")\n        .schedule(\"schedule\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .endDate(\"endDate\")\n        .scheduleOffset(123)\n        .scheduleTimezone(\"scheduleTimezone\")\n        .startDate(\"startDate\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncfnMaintenanceWindowProps := &cfnMaintenanceWindowProps{\n\tallowUnassociatedTargets: jsii.Boolean(false),\n\tcutoff: jsii.Number(123),\n\tduration: jsii.Number(123),\n\tname: jsii.String(\"name\"),\n\tschedule: jsii.String(\"schedule\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tendDate: jsii.String(\"endDate\"),\n\tscheduleOffset: jsii.Number(123),\n\tscheduleTimezone: jsii.String(\"scheduleTimezone\"),\n\tstartDate: jsii.String(\"startDate\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cfnMaintenanceWindowProps: ssm.CfnMaintenanceWindowProps = {\n  allowUnassociatedTargets: false,\n  cutoff: 123,\n  duration: 123,\n  name: 'name',\n  schedule: 'schedule',\n\n  // the properties below are optional\n  description: 'description',\n  endDate: 'endDate',\n  scheduleOffset: 123,\n  scheduleTimezone: 'scheduleTimezone',\n  startDate: 'startDate',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMaintenanceWindowProps: ssm.CfnMaintenanceWindowProps = {\n  allowUnassociatedTargets: false,\n  cutoff: 123,\n  duration: 123,\n  name: 'name',\n  schedule: 'schedule',\n\n  // the properties below are optional\n  description: 'description',\n  endDate: 'endDate',\n  scheduleOffset: 123,\n  scheduleTimezone: 'scheduleTimezone',\n  startDate: 'startDate',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 9,
        "75": 17,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "1f108e3380a95896d5ca3579e8b0f7f46394e64a8774252dcd7ceacd372bbd8b"
    },
    "8f92c37850749970e6a41c28f527b11f8849e5cc12461140562a43fe733eaec5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncfn_maintenance_window_target = ssm.CfnMaintenanceWindowTarget(self, \"MyCfnMaintenanceWindowTarget\",\n    resource_type=\"resourceType\",\n    targets=[ssm.CfnMaintenanceWindowTarget.TargetsProperty(\n        key=\"key\",\n        values=[\"values\"]\n    )],\n    window_id=\"windowId\",\n\n    # the properties below are optional\n    description=\"description\",\n    name=\"name\",\n    owner_information=\"ownerInformation\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCfnMaintenanceWindowTarget cfnMaintenanceWindowTarget = new CfnMaintenanceWindowTarget(this, \"MyCfnMaintenanceWindowTarget\", new CfnMaintenanceWindowTargetProps {\n    ResourceType = \"resourceType\",\n    Targets = new [] { new TargetsProperty {\n        Key = \"key\",\n        Values = new [] { \"values\" }\n    } },\n    WindowId = \"windowId\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Name = \"name\",\n    OwnerInformation = \"ownerInformation\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCfnMaintenanceWindowTarget cfnMaintenanceWindowTarget = CfnMaintenanceWindowTarget.Builder.create(this, \"MyCfnMaintenanceWindowTarget\")\n        .resourceType(\"resourceType\")\n        .targets(List.of(TargetsProperty.builder()\n                .key(\"key\")\n                .values(List.of(\"values\"))\n                .build()))\n        .windowId(\"windowId\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .name(\"name\")\n        .ownerInformation(\"ownerInformation\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncfnMaintenanceWindowTarget := ssm.NewCfnMaintenanceWindowTarget(this, jsii.String(\"MyCfnMaintenanceWindowTarget\"), &cfnMaintenanceWindowTargetProps{\n\tresourceType: jsii.String(\"resourceType\"),\n\ttargets: []interface{}{\n\t\t&targetsProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\twindowId: jsii.String(\"windowId\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\townerInformation: jsii.String(\"ownerInformation\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cfnMaintenanceWindowTarget = new ssm.CfnMaintenanceWindowTarget(this, 'MyCfnMaintenanceWindowTarget', {\n  resourceType: 'resourceType',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  windowId: 'windowId',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  ownerInformation: 'ownerInformation',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTarget"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTarget",
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTargetProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMaintenanceWindowTarget = new ssm.CfnMaintenanceWindowTarget(this, 'MyCfnMaintenanceWindowTarget', {\n  resourceType: 'resourceType',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  windowId: 'windowId',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  ownerInformation: 'ownerInformation',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 12,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "0750410199e039a76d5e1052b00be285a2e76c55bdae8112ab63931d42cf069e"
    },
    "7fcd534d539121bb1bc76633db46abb10ad9cb6c34dd1e94eea39252b936c1cb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ntargets_property = ssm.CfnMaintenanceWindowTarget.TargetsProperty(\n    key=\"key\",\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nTargetsProperty targetsProperty = new TargetsProperty {\n    Key = \"key\",\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nTargetsProperty targetsProperty = TargetsProperty.builder()\n        .key(\"key\")\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ntargetsProperty := &targetsProperty{\n\tkey: jsii.String(\"key\"),\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst targetsProperty: ssm.CfnMaintenanceWindowTarget.TargetsProperty = {\n  key: 'key',\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTarget.TargetsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTarget.TargetsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetsProperty: ssm.CfnMaintenanceWindowTarget.TargetsProperty = {\n  key: 'key',\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "b157486cb6c0f05332374df61fea914b126fe700f3b191c6bd2d209c80e881fc"
    },
    "2624793e17c43b8b70758572f1a690f18a2ae54bbc70fa8f071602e880167994": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncfn_maintenance_window_target_props = ssm.CfnMaintenanceWindowTargetProps(\n    resource_type=\"resourceType\",\n    targets=[ssm.CfnMaintenanceWindowTarget.TargetsProperty(\n        key=\"key\",\n        values=[\"values\"]\n    )],\n    window_id=\"windowId\",\n\n    # the properties below are optional\n    description=\"description\",\n    name=\"name\",\n    owner_information=\"ownerInformation\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCfnMaintenanceWindowTargetProps cfnMaintenanceWindowTargetProps = new CfnMaintenanceWindowTargetProps {\n    ResourceType = \"resourceType\",\n    Targets = new [] { new TargetsProperty {\n        Key = \"key\",\n        Values = new [] { \"values\" }\n    } },\n    WindowId = \"windowId\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Name = \"name\",\n    OwnerInformation = \"ownerInformation\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCfnMaintenanceWindowTargetProps cfnMaintenanceWindowTargetProps = CfnMaintenanceWindowTargetProps.builder()\n        .resourceType(\"resourceType\")\n        .targets(List.of(TargetsProperty.builder()\n                .key(\"key\")\n                .values(List.of(\"values\"))\n                .build()))\n        .windowId(\"windowId\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .name(\"name\")\n        .ownerInformation(\"ownerInformation\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncfnMaintenanceWindowTargetProps := &cfnMaintenanceWindowTargetProps{\n\tresourceType: jsii.String(\"resourceType\"),\n\ttargets: []interface{}{\n\t\t&targetsProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\twindowId: jsii.String(\"windowId\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\townerInformation: jsii.String(\"ownerInformation\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cfnMaintenanceWindowTargetProps: ssm.CfnMaintenanceWindowTargetProps = {\n  resourceType: 'resourceType',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  windowId: 'windowId',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  ownerInformation: 'ownerInformation',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTargetProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTargetProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMaintenanceWindowTargetProps: ssm.CfnMaintenanceWindowTargetProps = {\n  resourceType: 'resourceType',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  windowId: 'windowId',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  ownerInformation: 'ownerInformation',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 12,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "fea8a28743c8a055a4dc4138f334fa16b731bb433ed8e96c7d195dfd3d45bedf"
    },
    "a39d3c686b3ca1ca13102c8d1630dc1cee4a5d4fdfbdd4cf825b55245ef4ce94": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# parameters: Any\n# task_parameters: Any\n\ncfn_maintenance_window_task = ssm.CfnMaintenanceWindowTask(self, \"MyCfnMaintenanceWindowTask\",\n    priority=123,\n    task_arn=\"taskArn\",\n    task_type=\"taskType\",\n    window_id=\"windowId\",\n\n    # the properties below are optional\n    cutoff_behavior=\"cutoffBehavior\",\n    description=\"description\",\n    logging_info=ssm.CfnMaintenanceWindowTask.LoggingInfoProperty(\n        region=\"region\",\n        s3_bucket=\"s3Bucket\",\n\n        # the properties below are optional\n        s3_prefix=\"s3Prefix\"\n    ),\n    max_concurrency=\"maxConcurrency\",\n    max_errors=\"maxErrors\",\n    name=\"name\",\n    service_role_arn=\"serviceRoleArn\",\n    targets=[ssm.CfnMaintenanceWindowTask.TargetProperty(\n        key=\"key\",\n        values=[\"values\"]\n    )],\n    task_invocation_parameters=ssm.CfnMaintenanceWindowTask.TaskInvocationParametersProperty(\n        maintenance_window_automation_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowAutomationParametersProperty(\n            document_version=\"documentVersion\",\n            parameters=parameters\n        ),\n        maintenance_window_lambda_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowLambdaParametersProperty(\n            client_context=\"clientContext\",\n            payload=\"payload\",\n            qualifier=\"qualifier\"\n        ),\n        maintenance_window_run_command_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowRunCommandParametersProperty(\n            cloud_watch_output_config=ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty(\n                cloud_watch_log_group_name=\"cloudWatchLogGroupName\",\n                cloud_watch_output_enabled=False\n            ),\n            comment=\"comment\",\n            document_hash=\"documentHash\",\n            document_hash_type=\"documentHashType\",\n            document_version=\"documentVersion\",\n            notification_config=ssm.CfnMaintenanceWindowTask.NotificationConfigProperty(\n                notification_arn=\"notificationArn\",\n\n                # the properties below are optional\n                notification_events=[\"notificationEvents\"],\n                notification_type=\"notificationType\"\n            ),\n            output_s3_bucket_name=\"outputS3BucketName\",\n            output_s3_key_prefix=\"outputS3KeyPrefix\",\n            parameters=parameters,\n            service_role_arn=\"serviceRoleArn\",\n            timeout_seconds=123\n        ),\n        maintenance_window_step_functions_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowStepFunctionsParametersProperty(\n            input=\"input\",\n            name=\"name\"\n        )\n    ),\n    task_parameters=task_parameters\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar parameters;\nvar taskParameters;\n\nCfnMaintenanceWindowTask cfnMaintenanceWindowTask = new CfnMaintenanceWindowTask(this, \"MyCfnMaintenanceWindowTask\", new CfnMaintenanceWindowTaskProps {\n    Priority = 123,\n    TaskArn = \"taskArn\",\n    TaskType = \"taskType\",\n    WindowId = \"windowId\",\n\n    // the properties below are optional\n    CutoffBehavior = \"cutoffBehavior\",\n    Description = \"description\",\n    LoggingInfo = new LoggingInfoProperty {\n        Region = \"region\",\n        S3Bucket = \"s3Bucket\",\n\n        // the properties below are optional\n        S3Prefix = \"s3Prefix\"\n    },\n    MaxConcurrency = \"maxConcurrency\",\n    MaxErrors = \"maxErrors\",\n    Name = \"name\",\n    ServiceRoleArn = \"serviceRoleArn\",\n    Targets = new [] { new TargetProperty {\n        Key = \"key\",\n        Values = new [] { \"values\" }\n    } },\n    TaskInvocationParameters = new TaskInvocationParametersProperty {\n        MaintenanceWindowAutomationParameters = new MaintenanceWindowAutomationParametersProperty {\n            DocumentVersion = \"documentVersion\",\n            Parameters = parameters\n        },\n        MaintenanceWindowLambdaParameters = new MaintenanceWindowLambdaParametersProperty {\n            ClientContext = \"clientContext\",\n            Payload = \"payload\",\n            Qualifier = \"qualifier\"\n        },\n        MaintenanceWindowRunCommandParameters = new MaintenanceWindowRunCommandParametersProperty {\n            CloudWatchOutputConfig = new CloudWatchOutputConfigProperty {\n                CloudWatchLogGroupName = \"cloudWatchLogGroupName\",\n                CloudWatchOutputEnabled = false\n            },\n            Comment = \"comment\",\n            DocumentHash = \"documentHash\",\n            DocumentHashType = \"documentHashType\",\n            DocumentVersion = \"documentVersion\",\n            NotificationConfig = new NotificationConfigProperty {\n                NotificationArn = \"notificationArn\",\n\n                // the properties below are optional\n                NotificationEvents = new [] { \"notificationEvents\" },\n                NotificationType = \"notificationType\"\n            },\n            OutputS3BucketName = \"outputS3BucketName\",\n            OutputS3KeyPrefix = \"outputS3KeyPrefix\",\n            Parameters = parameters,\n            ServiceRoleArn = \"serviceRoleArn\",\n            TimeoutSeconds = 123\n        },\n        MaintenanceWindowStepFunctionsParameters = new MaintenanceWindowStepFunctionsParametersProperty {\n            Input = \"input\",\n            Name = \"name\"\n        }\n    },\n    TaskParameters = taskParameters\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject parameters;\nObject taskParameters;\n\nCfnMaintenanceWindowTask cfnMaintenanceWindowTask = CfnMaintenanceWindowTask.Builder.create(this, \"MyCfnMaintenanceWindowTask\")\n        .priority(123)\n        .taskArn(\"taskArn\")\n        .taskType(\"taskType\")\n        .windowId(\"windowId\")\n\n        // the properties below are optional\n        .cutoffBehavior(\"cutoffBehavior\")\n        .description(\"description\")\n        .loggingInfo(LoggingInfoProperty.builder()\n                .region(\"region\")\n                .s3Bucket(\"s3Bucket\")\n\n                // the properties below are optional\n                .s3Prefix(\"s3Prefix\")\n                .build())\n        .maxConcurrency(\"maxConcurrency\")\n        .maxErrors(\"maxErrors\")\n        .name(\"name\")\n        .serviceRoleArn(\"serviceRoleArn\")\n        .targets(List.of(TargetProperty.builder()\n                .key(\"key\")\n                .values(List.of(\"values\"))\n                .build()))\n        .taskInvocationParameters(TaskInvocationParametersProperty.builder()\n                .maintenanceWindowAutomationParameters(MaintenanceWindowAutomationParametersProperty.builder()\n                        .documentVersion(\"documentVersion\")\n                        .parameters(parameters)\n                        .build())\n                .maintenanceWindowLambdaParameters(MaintenanceWindowLambdaParametersProperty.builder()\n                        .clientContext(\"clientContext\")\n                        .payload(\"payload\")\n                        .qualifier(\"qualifier\")\n                        .build())\n                .maintenanceWindowRunCommandParameters(MaintenanceWindowRunCommandParametersProperty.builder()\n                        .cloudWatchOutputConfig(CloudWatchOutputConfigProperty.builder()\n                                .cloudWatchLogGroupName(\"cloudWatchLogGroupName\")\n                                .cloudWatchOutputEnabled(false)\n                                .build())\n                        .comment(\"comment\")\n                        .documentHash(\"documentHash\")\n                        .documentHashType(\"documentHashType\")\n                        .documentVersion(\"documentVersion\")\n                        .notificationConfig(NotificationConfigProperty.builder()\n                                .notificationArn(\"notificationArn\")\n\n                                // the properties below are optional\n                                .notificationEvents(List.of(\"notificationEvents\"))\n                                .notificationType(\"notificationType\")\n                                .build())\n                        .outputS3BucketName(\"outputS3BucketName\")\n                        .outputS3KeyPrefix(\"outputS3KeyPrefix\")\n                        .parameters(parameters)\n                        .serviceRoleArn(\"serviceRoleArn\")\n                        .timeoutSeconds(123)\n                        .build())\n                .maintenanceWindowStepFunctionsParameters(MaintenanceWindowStepFunctionsParametersProperty.builder()\n                        .input(\"input\")\n                        .name(\"name\")\n                        .build())\n                .build())\n        .taskParameters(taskParameters)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar parameters interface{}\nvar taskParameters interface{}\ncfnMaintenanceWindowTask := ssm.NewCfnMaintenanceWindowTask(this, jsii.String(\"MyCfnMaintenanceWindowTask\"), &cfnMaintenanceWindowTaskProps{\n\tpriority: jsii.Number(123),\n\ttaskArn: jsii.String(\"taskArn\"),\n\ttaskType: jsii.String(\"taskType\"),\n\twindowId: jsii.String(\"windowId\"),\n\n\t// the properties below are optional\n\tcutoffBehavior: jsii.String(\"cutoffBehavior\"),\n\tdescription: jsii.String(\"description\"),\n\tloggingInfo: &loggingInfoProperty{\n\t\tregion: jsii.String(\"region\"),\n\t\ts3Bucket: jsii.String(\"s3Bucket\"),\n\n\t\t// the properties below are optional\n\t\ts3Prefix: jsii.String(\"s3Prefix\"),\n\t},\n\tmaxConcurrency: jsii.String(\"maxConcurrency\"),\n\tmaxErrors: jsii.String(\"maxErrors\"),\n\tname: jsii.String(\"name\"),\n\tserviceRoleArn: jsii.String(\"serviceRoleArn\"),\n\ttargets: []interface{}{\n\t\t&targetProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\ttaskInvocationParameters: &taskInvocationParametersProperty{\n\t\tmaintenanceWindowAutomationParameters: &maintenanceWindowAutomationParametersProperty{\n\t\t\tdocumentVersion: jsii.String(\"documentVersion\"),\n\t\t\tparameters: parameters,\n\t\t},\n\t\tmaintenanceWindowLambdaParameters: &maintenanceWindowLambdaParametersProperty{\n\t\t\tclientContext: jsii.String(\"clientContext\"),\n\t\t\tpayload: jsii.String(\"payload\"),\n\t\t\tqualifier: jsii.String(\"qualifier\"),\n\t\t},\n\t\tmaintenanceWindowRunCommandParameters: &maintenanceWindowRunCommandParametersProperty{\n\t\t\tcloudWatchOutputConfig: &cloudWatchOutputConfigProperty{\n\t\t\t\tcloudWatchLogGroupName: jsii.String(\"cloudWatchLogGroupName\"),\n\t\t\t\tcloudWatchOutputEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\tdocumentHash: jsii.String(\"documentHash\"),\n\t\t\tdocumentHashType: jsii.String(\"documentHashType\"),\n\t\t\tdocumentVersion: jsii.String(\"documentVersion\"),\n\t\t\tnotificationConfig: &notificationConfigProperty{\n\t\t\t\tnotificationArn: jsii.String(\"notificationArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tnotificationEvents: []*string{\n\t\t\t\t\tjsii.String(\"notificationEvents\"),\n\t\t\t\t},\n\t\t\t\tnotificationType: jsii.String(\"notificationType\"),\n\t\t\t},\n\t\t\toutputS3BucketName: jsii.String(\"outputS3BucketName\"),\n\t\t\toutputS3KeyPrefix: jsii.String(\"outputS3KeyPrefix\"),\n\t\t\tparameters: parameters,\n\t\t\tserviceRoleArn: jsii.String(\"serviceRoleArn\"),\n\t\t\ttimeoutSeconds: jsii.Number(123),\n\t\t},\n\t\tmaintenanceWindowStepFunctionsParameters: &maintenanceWindowStepFunctionsParametersProperty{\n\t\t\tinput: jsii.String(\"input\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n\ttaskParameters: taskParameters,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\ndeclare const taskParameters: any;\nconst cfnMaintenanceWindowTask = new ssm.CfnMaintenanceWindowTask(this, 'MyCfnMaintenanceWindowTask', {\n  priority: 123,\n  taskArn: 'taskArn',\n  taskType: 'taskType',\n  windowId: 'windowId',\n\n  // the properties below are optional\n  cutoffBehavior: 'cutoffBehavior',\n  description: 'description',\n  loggingInfo: {\n    region: 'region',\n    s3Bucket: 's3Bucket',\n\n    // the properties below are optional\n    s3Prefix: 's3Prefix',\n  },\n  maxConcurrency: 'maxConcurrency',\n  maxErrors: 'maxErrors',\n  name: 'name',\n  serviceRoleArn: 'serviceRoleArn',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  taskInvocationParameters: {\n    maintenanceWindowAutomationParameters: {\n      documentVersion: 'documentVersion',\n      parameters: parameters,\n    },\n    maintenanceWindowLambdaParameters: {\n      clientContext: 'clientContext',\n      payload: 'payload',\n      qualifier: 'qualifier',\n    },\n    maintenanceWindowRunCommandParameters: {\n      cloudWatchOutputConfig: {\n        cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n        cloudWatchOutputEnabled: false,\n      },\n      comment: 'comment',\n      documentHash: 'documentHash',\n      documentHashType: 'documentHashType',\n      documentVersion: 'documentVersion',\n      notificationConfig: {\n        notificationArn: 'notificationArn',\n\n        // the properties below are optional\n        notificationEvents: ['notificationEvents'],\n        notificationType: 'notificationType',\n      },\n      outputS3BucketName: 'outputS3BucketName',\n      outputS3KeyPrefix: 'outputS3KeyPrefix',\n      parameters: parameters,\n      serviceRoleArn: 'serviceRoleArn',\n      timeoutSeconds: 123,\n    },\n    maintenanceWindowStepFunctionsParameters: {\n      input: 'input',\n      name: 'name',\n    },\n  },\n  taskParameters: taskParameters,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask",
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTaskProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\ndeclare const taskParameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMaintenanceWindowTask = new ssm.CfnMaintenanceWindowTask(this, 'MyCfnMaintenanceWindowTask', {\n  priority: 123,\n  taskArn: 'taskArn',\n  taskType: 'taskType',\n  windowId: 'windowId',\n\n  // the properties below are optional\n  cutoffBehavior: 'cutoffBehavior',\n  description: 'description',\n  loggingInfo: {\n    region: 'region',\n    s3Bucket: 's3Bucket',\n\n    // the properties below are optional\n    s3Prefix: 's3Prefix',\n  },\n  maxConcurrency: 'maxConcurrency',\n  maxErrors: 'maxErrors',\n  name: 'name',\n  serviceRoleArn: 'serviceRoleArn',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  taskInvocationParameters: {\n    maintenanceWindowAutomationParameters: {\n      documentVersion: 'documentVersion',\n      parameters: parameters,\n    },\n    maintenanceWindowLambdaParameters: {\n      clientContext: 'clientContext',\n      payload: 'payload',\n      qualifier: 'qualifier',\n    },\n    maintenanceWindowRunCommandParameters: {\n      cloudWatchOutputConfig: {\n        cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n        cloudWatchOutputEnabled: false,\n      },\n      comment: 'comment',\n      documentHash: 'documentHash',\n      documentHashType: 'documentHashType',\n      documentVersion: 'documentVersion',\n      notificationConfig: {\n        notificationArn: 'notificationArn',\n\n        // the properties below are optional\n        notificationEvents: ['notificationEvents'],\n        notificationType: 'notificationType',\n      },\n      outputS3BucketName: 'outputS3BucketName',\n      outputS3KeyPrefix: 'outputS3KeyPrefix',\n      parameters: parameters,\n      serviceRoleArn: 'serviceRoleArn',\n      timeoutSeconds: 123,\n    },\n    maintenanceWindowStepFunctionsParameters: {\n      input: 'input',\n      name: 'name',\n    },\n  },\n  taskParameters: taskParameters,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 33,
        "75": 55,
        "91": 1,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 3,
        "193": 10,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 46,
        "290": 1
      },
      "fqnsFingerprint": "2922a8ce363f47730d6e76c721fb64dedb1b4cf1d3f9b32eafee18b197ebfe9a"
    },
    "a845fd9e3e9c32efaade212d343e2dff4c760001b10005009f6316f9b8359514": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncloud_watch_output_config_property = ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty(\n    cloud_watch_log_group_name=\"cloudWatchLogGroupName\",\n    cloud_watch_output_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCloudWatchOutputConfigProperty cloudWatchOutputConfigProperty = new CloudWatchOutputConfigProperty {\n    CloudWatchLogGroupName = \"cloudWatchLogGroupName\",\n    CloudWatchOutputEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCloudWatchOutputConfigProperty cloudWatchOutputConfigProperty = CloudWatchOutputConfigProperty.builder()\n        .cloudWatchLogGroupName(\"cloudWatchLogGroupName\")\n        .cloudWatchOutputEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncloudWatchOutputConfigProperty := &cloudWatchOutputConfigProperty{\n\tcloudWatchLogGroupName: jsii.String(\"cloudWatchLogGroupName\"),\n\tcloudWatchOutputEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cloudWatchOutputConfigProperty: ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty = {\n  cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n  cloudWatchOutputEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudWatchOutputConfigProperty: ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty = {\n  cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n  cloudWatchOutputEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d77f1766ef3058394206854394106e447275038dee9137ffcf8571698dcbc55d"
    },
    "20ec922ea41416a40339e7ab239b90e4335d8268fc9f53c7efb052d42a7ace16": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nlogging_info_property = ssm.CfnMaintenanceWindowTask.LoggingInfoProperty(\n    region=\"region\",\n    s3_bucket=\"s3Bucket\",\n\n    # the properties below are optional\n    s3_prefix=\"s3Prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nLoggingInfoProperty loggingInfoProperty = new LoggingInfoProperty {\n    Region = \"region\",\n    S3Bucket = \"s3Bucket\",\n\n    // the properties below are optional\n    S3Prefix = \"s3Prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nLoggingInfoProperty loggingInfoProperty = LoggingInfoProperty.builder()\n        .region(\"region\")\n        .s3Bucket(\"s3Bucket\")\n\n        // the properties below are optional\n        .s3Prefix(\"s3Prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nloggingInfoProperty := &loggingInfoProperty{\n\tregion: jsii.String(\"region\"),\n\ts3Bucket: jsii.String(\"s3Bucket\"),\n\n\t// the properties below are optional\n\ts3Prefix: jsii.String(\"s3Prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst loggingInfoProperty: ssm.CfnMaintenanceWindowTask.LoggingInfoProperty = {\n  region: 'region',\n  s3Bucket: 's3Bucket',\n\n  // the properties below are optional\n  s3Prefix: 's3Prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.LoggingInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.LoggingInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst loggingInfoProperty: ssm.CfnMaintenanceWindowTask.LoggingInfoProperty = {\n  region: 'region',\n  s3Bucket: 's3Bucket',\n\n  // the properties below are optional\n  s3Prefix: 's3Prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "82fa44464db5fbf049917781389ef9e8bc781128a6516783938f42b837027eaa"
    },
    "c57408d4d39fa90f2e49df699a35ec90f2ef05a3b359e0d4172dc24e459cdbbf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# parameters: Any\n\nmaintenance_window_automation_parameters_property = ssm.CfnMaintenanceWindowTask.MaintenanceWindowAutomationParametersProperty(\n    document_version=\"documentVersion\",\n    parameters=parameters\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar parameters;\n\nMaintenanceWindowAutomationParametersProperty maintenanceWindowAutomationParametersProperty = new MaintenanceWindowAutomationParametersProperty {\n    DocumentVersion = \"documentVersion\",\n    Parameters = parameters\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject parameters;\n\nMaintenanceWindowAutomationParametersProperty maintenanceWindowAutomationParametersProperty = MaintenanceWindowAutomationParametersProperty.builder()\n        .documentVersion(\"documentVersion\")\n        .parameters(parameters)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar parameters interface{}\nmaintenanceWindowAutomationParametersProperty := &maintenanceWindowAutomationParametersProperty{\n\tdocumentVersion: jsii.String(\"documentVersion\"),\n\tparameters: parameters,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\nconst maintenanceWindowAutomationParametersProperty: ssm.CfnMaintenanceWindowTask.MaintenanceWindowAutomationParametersProperty = {\n  documentVersion: 'documentVersion',\n  parameters: parameters,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.MaintenanceWindowAutomationParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.MaintenanceWindowAutomationParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst maintenanceWindowAutomationParametersProperty: ssm.CfnMaintenanceWindowTask.MaintenanceWindowAutomationParametersProperty = {\n  documentVersion: 'documentVersion',\n  parameters: parameters,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "5d72c2574e3792da755924c497fc5215e93751d4c244869184d270dfdd11b3c9"
    },
    "0fcce97649ec9bb2f928cacc1f43f095008f8ec2a076ffd5dc3fb5d35731b80c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nmaintenance_window_lambda_parameters_property = ssm.CfnMaintenanceWindowTask.MaintenanceWindowLambdaParametersProperty(\n    client_context=\"clientContext\",\n    payload=\"payload\",\n    qualifier=\"qualifier\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nMaintenanceWindowLambdaParametersProperty maintenanceWindowLambdaParametersProperty = new MaintenanceWindowLambdaParametersProperty {\n    ClientContext = \"clientContext\",\n    Payload = \"payload\",\n    Qualifier = \"qualifier\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nMaintenanceWindowLambdaParametersProperty maintenanceWindowLambdaParametersProperty = MaintenanceWindowLambdaParametersProperty.builder()\n        .clientContext(\"clientContext\")\n        .payload(\"payload\")\n        .qualifier(\"qualifier\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nmaintenanceWindowLambdaParametersProperty := &maintenanceWindowLambdaParametersProperty{\n\tclientContext: jsii.String(\"clientContext\"),\n\tpayload: jsii.String(\"payload\"),\n\tqualifier: jsii.String(\"qualifier\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst maintenanceWindowLambdaParametersProperty: ssm.CfnMaintenanceWindowTask.MaintenanceWindowLambdaParametersProperty = {\n  clientContext: 'clientContext',\n  payload: 'payload',\n  qualifier: 'qualifier',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.MaintenanceWindowLambdaParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.MaintenanceWindowLambdaParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst maintenanceWindowLambdaParametersProperty: ssm.CfnMaintenanceWindowTask.MaintenanceWindowLambdaParametersProperty = {\n  clientContext: 'clientContext',\n  payload: 'payload',\n  qualifier: 'qualifier',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "60d6785cf259b308e2029e15b226aa8077e5c814e8857fbe3da84da80c3b903e"
    },
    "3fb9bf0c83b7f81d0cd9be940ac9f4e5aabf15cd9bebf9abe28880b7a05d3016": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# parameters: Any\n\nmaintenance_window_run_command_parameters_property = ssm.CfnMaintenanceWindowTask.MaintenanceWindowRunCommandParametersProperty(\n    cloud_watch_output_config=ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty(\n        cloud_watch_log_group_name=\"cloudWatchLogGroupName\",\n        cloud_watch_output_enabled=False\n    ),\n    comment=\"comment\",\n    document_hash=\"documentHash\",\n    document_hash_type=\"documentHashType\",\n    document_version=\"documentVersion\",\n    notification_config=ssm.CfnMaintenanceWindowTask.NotificationConfigProperty(\n        notification_arn=\"notificationArn\",\n\n        # the properties below are optional\n        notification_events=[\"notificationEvents\"],\n        notification_type=\"notificationType\"\n    ),\n    output_s3_bucket_name=\"outputS3BucketName\",\n    output_s3_key_prefix=\"outputS3KeyPrefix\",\n    parameters=parameters,\n    service_role_arn=\"serviceRoleArn\",\n    timeout_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar parameters;\n\nMaintenanceWindowRunCommandParametersProperty maintenanceWindowRunCommandParametersProperty = new MaintenanceWindowRunCommandParametersProperty {\n    CloudWatchOutputConfig = new CloudWatchOutputConfigProperty {\n        CloudWatchLogGroupName = \"cloudWatchLogGroupName\",\n        CloudWatchOutputEnabled = false\n    },\n    Comment = \"comment\",\n    DocumentHash = \"documentHash\",\n    DocumentHashType = \"documentHashType\",\n    DocumentVersion = \"documentVersion\",\n    NotificationConfig = new NotificationConfigProperty {\n        NotificationArn = \"notificationArn\",\n\n        // the properties below are optional\n        NotificationEvents = new [] { \"notificationEvents\" },\n        NotificationType = \"notificationType\"\n    },\n    OutputS3BucketName = \"outputS3BucketName\",\n    OutputS3KeyPrefix = \"outputS3KeyPrefix\",\n    Parameters = parameters,\n    ServiceRoleArn = \"serviceRoleArn\",\n    TimeoutSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject parameters;\n\nMaintenanceWindowRunCommandParametersProperty maintenanceWindowRunCommandParametersProperty = MaintenanceWindowRunCommandParametersProperty.builder()\n        .cloudWatchOutputConfig(CloudWatchOutputConfigProperty.builder()\n                .cloudWatchLogGroupName(\"cloudWatchLogGroupName\")\n                .cloudWatchOutputEnabled(false)\n                .build())\n        .comment(\"comment\")\n        .documentHash(\"documentHash\")\n        .documentHashType(\"documentHashType\")\n        .documentVersion(\"documentVersion\")\n        .notificationConfig(NotificationConfigProperty.builder()\n                .notificationArn(\"notificationArn\")\n\n                // the properties below are optional\n                .notificationEvents(List.of(\"notificationEvents\"))\n                .notificationType(\"notificationType\")\n                .build())\n        .outputS3BucketName(\"outputS3BucketName\")\n        .outputS3KeyPrefix(\"outputS3KeyPrefix\")\n        .parameters(parameters)\n        .serviceRoleArn(\"serviceRoleArn\")\n        .timeoutSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar parameters interface{}\nmaintenanceWindowRunCommandParametersProperty := &maintenanceWindowRunCommandParametersProperty{\n\tcloudWatchOutputConfig: &cloudWatchOutputConfigProperty{\n\t\tcloudWatchLogGroupName: jsii.String(\"cloudWatchLogGroupName\"),\n\t\tcloudWatchOutputEnabled: jsii.Boolean(false),\n\t},\n\tcomment: jsii.String(\"comment\"),\n\tdocumentHash: jsii.String(\"documentHash\"),\n\tdocumentHashType: jsii.String(\"documentHashType\"),\n\tdocumentVersion: jsii.String(\"documentVersion\"),\n\tnotificationConfig: &notificationConfigProperty{\n\t\tnotificationArn: jsii.String(\"notificationArn\"),\n\n\t\t// the properties below are optional\n\t\tnotificationEvents: []*string{\n\t\t\tjsii.String(\"notificationEvents\"),\n\t\t},\n\t\tnotificationType: jsii.String(\"notificationType\"),\n\t},\n\toutputS3BucketName: jsii.String(\"outputS3BucketName\"),\n\toutputS3KeyPrefix: jsii.String(\"outputS3KeyPrefix\"),\n\tparameters: parameters,\n\tserviceRoleArn: jsii.String(\"serviceRoleArn\"),\n\ttimeoutSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\nconst maintenanceWindowRunCommandParametersProperty: ssm.CfnMaintenanceWindowTask.MaintenanceWindowRunCommandParametersProperty = {\n  cloudWatchOutputConfig: {\n    cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n    cloudWatchOutputEnabled: false,\n  },\n  comment: 'comment',\n  documentHash: 'documentHash',\n  documentHashType: 'documentHashType',\n  documentVersion: 'documentVersion',\n  notificationConfig: {\n    notificationArn: 'notificationArn',\n\n    // the properties below are optional\n    notificationEvents: ['notificationEvents'],\n    notificationType: 'notificationType',\n  },\n  outputS3BucketName: 'outputS3BucketName',\n  outputS3KeyPrefix: 'outputS3KeyPrefix',\n  parameters: parameters,\n  serviceRoleArn: 'serviceRoleArn',\n  timeoutSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.MaintenanceWindowRunCommandParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.MaintenanceWindowRunCommandParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst maintenanceWindowRunCommandParametersProperty: ssm.CfnMaintenanceWindowTask.MaintenanceWindowRunCommandParametersProperty = {\n  cloudWatchOutputConfig: {\n    cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n    cloudWatchOutputEnabled: false,\n  },\n  comment: 'comment',\n  documentHash: 'documentHash',\n  documentHashType: 'documentHashType',\n  documentVersion: 'documentVersion',\n  notificationConfig: {\n    notificationArn: 'notificationArn',\n\n    // the properties below are optional\n    notificationEvents: ['notificationEvents'],\n    notificationType: 'notificationType',\n  },\n  outputS3BucketName: 'outputS3BucketName',\n  outputS3KeyPrefix: 'outputS3KeyPrefix',\n  parameters: parameters,\n  serviceRoleArn: 'serviceRoleArn',\n  timeoutSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 12,
        "75": 23,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 16,
        "290": 1
      },
      "fqnsFingerprint": "402dc3e07f2ab0688be2f70aedb319120f4f608ca2bfa87418d5d457c62b4a11"
    },
    "51ea48dd1d362e59ed8ab8e6cce694f34fdc2f062bfd3ad1d6462d2e1c44800b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nmaintenance_window_step_functions_parameters_property = ssm.CfnMaintenanceWindowTask.MaintenanceWindowStepFunctionsParametersProperty(\n    input=\"input\",\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nMaintenanceWindowStepFunctionsParametersProperty maintenanceWindowStepFunctionsParametersProperty = new MaintenanceWindowStepFunctionsParametersProperty {\n    Input = \"input\",\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nMaintenanceWindowStepFunctionsParametersProperty maintenanceWindowStepFunctionsParametersProperty = MaintenanceWindowStepFunctionsParametersProperty.builder()\n        .input(\"input\")\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nmaintenanceWindowStepFunctionsParametersProperty := &maintenanceWindowStepFunctionsParametersProperty{\n\tinput: jsii.String(\"input\"),\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst maintenanceWindowStepFunctionsParametersProperty: ssm.CfnMaintenanceWindowTask.MaintenanceWindowStepFunctionsParametersProperty = {\n  input: 'input',\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.MaintenanceWindowStepFunctionsParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.MaintenanceWindowStepFunctionsParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst maintenanceWindowStepFunctionsParametersProperty: ssm.CfnMaintenanceWindowTask.MaintenanceWindowStepFunctionsParametersProperty = {\n  input: 'input',\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "bb479e072d79c34e5d71703fe18944876fe3dd6e5d70bd6d1d3aff5752724172"
    },
    "256eb99046b602d5c9b531f515d872d4666b9286ab3a959a366bf6d0e1008411": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nnotification_config_property = ssm.CfnMaintenanceWindowTask.NotificationConfigProperty(\n    notification_arn=\"notificationArn\",\n\n    # the properties below are optional\n    notification_events=[\"notificationEvents\"],\n    notification_type=\"notificationType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nNotificationConfigProperty notificationConfigProperty = new NotificationConfigProperty {\n    NotificationArn = \"notificationArn\",\n\n    // the properties below are optional\n    NotificationEvents = new [] { \"notificationEvents\" },\n    NotificationType = \"notificationType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nNotificationConfigProperty notificationConfigProperty = NotificationConfigProperty.builder()\n        .notificationArn(\"notificationArn\")\n\n        // the properties below are optional\n        .notificationEvents(List.of(\"notificationEvents\"))\n        .notificationType(\"notificationType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nnotificationConfigProperty := &notificationConfigProperty{\n\tnotificationArn: jsii.String(\"notificationArn\"),\n\n\t// the properties below are optional\n\tnotificationEvents: []*string{\n\t\tjsii.String(\"notificationEvents\"),\n\t},\n\tnotificationType: jsii.String(\"notificationType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst notificationConfigProperty: ssm.CfnMaintenanceWindowTask.NotificationConfigProperty = {\n  notificationArn: 'notificationArn',\n\n  // the properties below are optional\n  notificationEvents: ['notificationEvents'],\n  notificationType: 'notificationType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.NotificationConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.NotificationConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationConfigProperty: ssm.CfnMaintenanceWindowTask.NotificationConfigProperty = {\n  notificationArn: 'notificationArn',\n\n  // the properties below are optional\n  notificationEvents: ['notificationEvents'],\n  notificationType: 'notificationType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "3c7d017a0287b7944c3e04450d476505babecb985ded98ffec313b3d3816ab05"
    },
    "933dd9f59ee602506fea03a1186fd997e9eedf39c00ab569a185d4148ac1cba2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ntarget_property = ssm.CfnMaintenanceWindowTask.TargetProperty(\n    key=\"key\",\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nTargetProperty targetProperty = new TargetProperty {\n    Key = \"key\",\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nTargetProperty targetProperty = TargetProperty.builder()\n        .key(\"key\")\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ntargetProperty := &targetProperty{\n\tkey: jsii.String(\"key\"),\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst targetProperty: ssm.CfnMaintenanceWindowTask.TargetProperty = {\n  key: 'key',\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.TargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.TargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetProperty: ssm.CfnMaintenanceWindowTask.TargetProperty = {\n  key: 'key',\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e0cb79cb8cb3294dee769e81f0914f4d6698d0ca0f66af40fb8cc791fa74de2f"
    },
    "2738617e6650ab17346e83146a211730c914e1590832591c409e012b2229fd5a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# parameters: Any\n\ntask_invocation_parameters_property = ssm.CfnMaintenanceWindowTask.TaskInvocationParametersProperty(\n    maintenance_window_automation_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowAutomationParametersProperty(\n        document_version=\"documentVersion\",\n        parameters=parameters\n    ),\n    maintenance_window_lambda_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowLambdaParametersProperty(\n        client_context=\"clientContext\",\n        payload=\"payload\",\n        qualifier=\"qualifier\"\n    ),\n    maintenance_window_run_command_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowRunCommandParametersProperty(\n        cloud_watch_output_config=ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty(\n            cloud_watch_log_group_name=\"cloudWatchLogGroupName\",\n            cloud_watch_output_enabled=False\n        ),\n        comment=\"comment\",\n        document_hash=\"documentHash\",\n        document_hash_type=\"documentHashType\",\n        document_version=\"documentVersion\",\n        notification_config=ssm.CfnMaintenanceWindowTask.NotificationConfigProperty(\n            notification_arn=\"notificationArn\",\n\n            # the properties below are optional\n            notification_events=[\"notificationEvents\"],\n            notification_type=\"notificationType\"\n        ),\n        output_s3_bucket_name=\"outputS3BucketName\",\n        output_s3_key_prefix=\"outputS3KeyPrefix\",\n        parameters=parameters,\n        service_role_arn=\"serviceRoleArn\",\n        timeout_seconds=123\n    ),\n    maintenance_window_step_functions_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowStepFunctionsParametersProperty(\n        input=\"input\",\n        name=\"name\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar parameters;\n\nTaskInvocationParametersProperty taskInvocationParametersProperty = new TaskInvocationParametersProperty {\n    MaintenanceWindowAutomationParameters = new MaintenanceWindowAutomationParametersProperty {\n        DocumentVersion = \"documentVersion\",\n        Parameters = parameters\n    },\n    MaintenanceWindowLambdaParameters = new MaintenanceWindowLambdaParametersProperty {\n        ClientContext = \"clientContext\",\n        Payload = \"payload\",\n        Qualifier = \"qualifier\"\n    },\n    MaintenanceWindowRunCommandParameters = new MaintenanceWindowRunCommandParametersProperty {\n        CloudWatchOutputConfig = new CloudWatchOutputConfigProperty {\n            CloudWatchLogGroupName = \"cloudWatchLogGroupName\",\n            CloudWatchOutputEnabled = false\n        },\n        Comment = \"comment\",\n        DocumentHash = \"documentHash\",\n        DocumentHashType = \"documentHashType\",\n        DocumentVersion = \"documentVersion\",\n        NotificationConfig = new NotificationConfigProperty {\n            NotificationArn = \"notificationArn\",\n\n            // the properties below are optional\n            NotificationEvents = new [] { \"notificationEvents\" },\n            NotificationType = \"notificationType\"\n        },\n        OutputS3BucketName = \"outputS3BucketName\",\n        OutputS3KeyPrefix = \"outputS3KeyPrefix\",\n        Parameters = parameters,\n        ServiceRoleArn = \"serviceRoleArn\",\n        TimeoutSeconds = 123\n    },\n    MaintenanceWindowStepFunctionsParameters = new MaintenanceWindowStepFunctionsParametersProperty {\n        Input = \"input\",\n        Name = \"name\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject parameters;\n\nTaskInvocationParametersProperty taskInvocationParametersProperty = TaskInvocationParametersProperty.builder()\n        .maintenanceWindowAutomationParameters(MaintenanceWindowAutomationParametersProperty.builder()\n                .documentVersion(\"documentVersion\")\n                .parameters(parameters)\n                .build())\n        .maintenanceWindowLambdaParameters(MaintenanceWindowLambdaParametersProperty.builder()\n                .clientContext(\"clientContext\")\n                .payload(\"payload\")\n                .qualifier(\"qualifier\")\n                .build())\n        .maintenanceWindowRunCommandParameters(MaintenanceWindowRunCommandParametersProperty.builder()\n                .cloudWatchOutputConfig(CloudWatchOutputConfigProperty.builder()\n                        .cloudWatchLogGroupName(\"cloudWatchLogGroupName\")\n                        .cloudWatchOutputEnabled(false)\n                        .build())\n                .comment(\"comment\")\n                .documentHash(\"documentHash\")\n                .documentHashType(\"documentHashType\")\n                .documentVersion(\"documentVersion\")\n                .notificationConfig(NotificationConfigProperty.builder()\n                        .notificationArn(\"notificationArn\")\n\n                        // the properties below are optional\n                        .notificationEvents(List.of(\"notificationEvents\"))\n                        .notificationType(\"notificationType\")\n                        .build())\n                .outputS3BucketName(\"outputS3BucketName\")\n                .outputS3KeyPrefix(\"outputS3KeyPrefix\")\n                .parameters(parameters)\n                .serviceRoleArn(\"serviceRoleArn\")\n                .timeoutSeconds(123)\n                .build())\n        .maintenanceWindowStepFunctionsParameters(MaintenanceWindowStepFunctionsParametersProperty.builder()\n                .input(\"input\")\n                .name(\"name\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar parameters interface{}\ntaskInvocationParametersProperty := &taskInvocationParametersProperty{\n\tmaintenanceWindowAutomationParameters: &maintenanceWindowAutomationParametersProperty{\n\t\tdocumentVersion: jsii.String(\"documentVersion\"),\n\t\tparameters: parameters,\n\t},\n\tmaintenanceWindowLambdaParameters: &maintenanceWindowLambdaParametersProperty{\n\t\tclientContext: jsii.String(\"clientContext\"),\n\t\tpayload: jsii.String(\"payload\"),\n\t\tqualifier: jsii.String(\"qualifier\"),\n\t},\n\tmaintenanceWindowRunCommandParameters: &maintenanceWindowRunCommandParametersProperty{\n\t\tcloudWatchOutputConfig: &cloudWatchOutputConfigProperty{\n\t\t\tcloudWatchLogGroupName: jsii.String(\"cloudWatchLogGroupName\"),\n\t\t\tcloudWatchOutputEnabled: jsii.Boolean(false),\n\t\t},\n\t\tcomment: jsii.String(\"comment\"),\n\t\tdocumentHash: jsii.String(\"documentHash\"),\n\t\tdocumentHashType: jsii.String(\"documentHashType\"),\n\t\tdocumentVersion: jsii.String(\"documentVersion\"),\n\t\tnotificationConfig: &notificationConfigProperty{\n\t\t\tnotificationArn: jsii.String(\"notificationArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tnotificationEvents: []*string{\n\t\t\t\tjsii.String(\"notificationEvents\"),\n\t\t\t},\n\t\t\tnotificationType: jsii.String(\"notificationType\"),\n\t\t},\n\t\toutputS3BucketName: jsii.String(\"outputS3BucketName\"),\n\t\toutputS3KeyPrefix: jsii.String(\"outputS3KeyPrefix\"),\n\t\tparameters: parameters,\n\t\tserviceRoleArn: jsii.String(\"serviceRoleArn\"),\n\t\ttimeoutSeconds: jsii.Number(123),\n\t},\n\tmaintenanceWindowStepFunctionsParameters: &maintenanceWindowStepFunctionsParametersProperty{\n\t\tinput: jsii.String(\"input\"),\n\t\tname: jsii.String(\"name\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\nconst taskInvocationParametersProperty: ssm.CfnMaintenanceWindowTask.TaskInvocationParametersProperty = {\n  maintenanceWindowAutomationParameters: {\n    documentVersion: 'documentVersion',\n    parameters: parameters,\n  },\n  maintenanceWindowLambdaParameters: {\n    clientContext: 'clientContext',\n    payload: 'payload',\n    qualifier: 'qualifier',\n  },\n  maintenanceWindowRunCommandParameters: {\n    cloudWatchOutputConfig: {\n      cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n      cloudWatchOutputEnabled: false,\n    },\n    comment: 'comment',\n    documentHash: 'documentHash',\n    documentHashType: 'documentHashType',\n    documentVersion: 'documentVersion',\n    notificationConfig: {\n      notificationArn: 'notificationArn',\n\n      // the properties below are optional\n      notificationEvents: ['notificationEvents'],\n      notificationType: 'notificationType',\n    },\n    outputS3BucketName: 'outputS3BucketName',\n    outputS3KeyPrefix: 'outputS3KeyPrefix',\n    parameters: parameters,\n    serviceRoleArn: 'serviceRoleArn',\n    timeoutSeconds: 123,\n  },\n  maintenanceWindowStepFunctionsParameters: {\n    input: 'input',\n    name: 'name',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.TaskInvocationParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTask.TaskInvocationParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst taskInvocationParametersProperty: ssm.CfnMaintenanceWindowTask.TaskInvocationParametersProperty = {\n  maintenanceWindowAutomationParameters: {\n    documentVersion: 'documentVersion',\n    parameters: parameters,\n  },\n  maintenanceWindowLambdaParameters: {\n    clientContext: 'clientContext',\n    payload: 'payload',\n    qualifier: 'qualifier',\n  },\n  maintenanceWindowRunCommandParameters: {\n    cloudWatchOutputConfig: {\n      cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n      cloudWatchOutputEnabled: false,\n    },\n    comment: 'comment',\n    documentHash: 'documentHash',\n    documentHashType: 'documentHashType',\n    documentVersion: 'documentVersion',\n    notificationConfig: {\n      notificationArn: 'notificationArn',\n\n      // the properties below are optional\n      notificationEvents: ['notificationEvents'],\n      notificationType: 'notificationType',\n    },\n    outputS3BucketName: 'outputS3BucketName',\n    outputS3KeyPrefix: 'outputS3KeyPrefix',\n    parameters: parameters,\n    serviceRoleArn: 'serviceRoleArn',\n    timeoutSeconds: 123,\n  },\n  maintenanceWindowStepFunctionsParameters: {\n    input: 'input',\n    name: 'name',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 18,
        "75": 35,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 7,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 27,
        "290": 1
      },
      "fqnsFingerprint": "56e1145bb8ebb02bd35bfaed4fa4398f227ff6859c5850d64197cb9d866abe22"
    },
    "06b37e09c92be602d45ff42a96f8cec222eaafb693c45ca7c83e6a26e05fc9ea": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# parameters: Any\n# task_parameters: Any\n\ncfn_maintenance_window_task_props = ssm.CfnMaintenanceWindowTaskProps(\n    priority=123,\n    task_arn=\"taskArn\",\n    task_type=\"taskType\",\n    window_id=\"windowId\",\n\n    # the properties below are optional\n    cutoff_behavior=\"cutoffBehavior\",\n    description=\"description\",\n    logging_info=ssm.CfnMaintenanceWindowTask.LoggingInfoProperty(\n        region=\"region\",\n        s3_bucket=\"s3Bucket\",\n\n        # the properties below are optional\n        s3_prefix=\"s3Prefix\"\n    ),\n    max_concurrency=\"maxConcurrency\",\n    max_errors=\"maxErrors\",\n    name=\"name\",\n    service_role_arn=\"serviceRoleArn\",\n    targets=[ssm.CfnMaintenanceWindowTask.TargetProperty(\n        key=\"key\",\n        values=[\"values\"]\n    )],\n    task_invocation_parameters=ssm.CfnMaintenanceWindowTask.TaskInvocationParametersProperty(\n        maintenance_window_automation_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowAutomationParametersProperty(\n            document_version=\"documentVersion\",\n            parameters=parameters\n        ),\n        maintenance_window_lambda_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowLambdaParametersProperty(\n            client_context=\"clientContext\",\n            payload=\"payload\",\n            qualifier=\"qualifier\"\n        ),\n        maintenance_window_run_command_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowRunCommandParametersProperty(\n            cloud_watch_output_config=ssm.CfnMaintenanceWindowTask.CloudWatchOutputConfigProperty(\n                cloud_watch_log_group_name=\"cloudWatchLogGroupName\",\n                cloud_watch_output_enabled=False\n            ),\n            comment=\"comment\",\n            document_hash=\"documentHash\",\n            document_hash_type=\"documentHashType\",\n            document_version=\"documentVersion\",\n            notification_config=ssm.CfnMaintenanceWindowTask.NotificationConfigProperty(\n                notification_arn=\"notificationArn\",\n\n                # the properties below are optional\n                notification_events=[\"notificationEvents\"],\n                notification_type=\"notificationType\"\n            ),\n            output_s3_bucket_name=\"outputS3BucketName\",\n            output_s3_key_prefix=\"outputS3KeyPrefix\",\n            parameters=parameters,\n            service_role_arn=\"serviceRoleArn\",\n            timeout_seconds=123\n        ),\n        maintenance_window_step_functions_parameters=ssm.CfnMaintenanceWindowTask.MaintenanceWindowStepFunctionsParametersProperty(\n            input=\"input\",\n            name=\"name\"\n        )\n    ),\n    task_parameters=task_parameters\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar parameters;\nvar taskParameters;\n\nCfnMaintenanceWindowTaskProps cfnMaintenanceWindowTaskProps = new CfnMaintenanceWindowTaskProps {\n    Priority = 123,\n    TaskArn = \"taskArn\",\n    TaskType = \"taskType\",\n    WindowId = \"windowId\",\n\n    // the properties below are optional\n    CutoffBehavior = \"cutoffBehavior\",\n    Description = \"description\",\n    LoggingInfo = new LoggingInfoProperty {\n        Region = \"region\",\n        S3Bucket = \"s3Bucket\",\n\n        // the properties below are optional\n        S3Prefix = \"s3Prefix\"\n    },\n    MaxConcurrency = \"maxConcurrency\",\n    MaxErrors = \"maxErrors\",\n    Name = \"name\",\n    ServiceRoleArn = \"serviceRoleArn\",\n    Targets = new [] { new TargetProperty {\n        Key = \"key\",\n        Values = new [] { \"values\" }\n    } },\n    TaskInvocationParameters = new TaskInvocationParametersProperty {\n        MaintenanceWindowAutomationParameters = new MaintenanceWindowAutomationParametersProperty {\n            DocumentVersion = \"documentVersion\",\n            Parameters = parameters\n        },\n        MaintenanceWindowLambdaParameters = new MaintenanceWindowLambdaParametersProperty {\n            ClientContext = \"clientContext\",\n            Payload = \"payload\",\n            Qualifier = \"qualifier\"\n        },\n        MaintenanceWindowRunCommandParameters = new MaintenanceWindowRunCommandParametersProperty {\n            CloudWatchOutputConfig = new CloudWatchOutputConfigProperty {\n                CloudWatchLogGroupName = \"cloudWatchLogGroupName\",\n                CloudWatchOutputEnabled = false\n            },\n            Comment = \"comment\",\n            DocumentHash = \"documentHash\",\n            DocumentHashType = \"documentHashType\",\n            DocumentVersion = \"documentVersion\",\n            NotificationConfig = new NotificationConfigProperty {\n                NotificationArn = \"notificationArn\",\n\n                // the properties below are optional\n                NotificationEvents = new [] { \"notificationEvents\" },\n                NotificationType = \"notificationType\"\n            },\n            OutputS3BucketName = \"outputS3BucketName\",\n            OutputS3KeyPrefix = \"outputS3KeyPrefix\",\n            Parameters = parameters,\n            ServiceRoleArn = \"serviceRoleArn\",\n            TimeoutSeconds = 123\n        },\n        MaintenanceWindowStepFunctionsParameters = new MaintenanceWindowStepFunctionsParametersProperty {\n            Input = \"input\",\n            Name = \"name\"\n        }\n    },\n    TaskParameters = taskParameters\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject parameters;\nObject taskParameters;\n\nCfnMaintenanceWindowTaskProps cfnMaintenanceWindowTaskProps = CfnMaintenanceWindowTaskProps.builder()\n        .priority(123)\n        .taskArn(\"taskArn\")\n        .taskType(\"taskType\")\n        .windowId(\"windowId\")\n\n        // the properties below are optional\n        .cutoffBehavior(\"cutoffBehavior\")\n        .description(\"description\")\n        .loggingInfo(LoggingInfoProperty.builder()\n                .region(\"region\")\n                .s3Bucket(\"s3Bucket\")\n\n                // the properties below are optional\n                .s3Prefix(\"s3Prefix\")\n                .build())\n        .maxConcurrency(\"maxConcurrency\")\n        .maxErrors(\"maxErrors\")\n        .name(\"name\")\n        .serviceRoleArn(\"serviceRoleArn\")\n        .targets(List.of(TargetProperty.builder()\n                .key(\"key\")\n                .values(List.of(\"values\"))\n                .build()))\n        .taskInvocationParameters(TaskInvocationParametersProperty.builder()\n                .maintenanceWindowAutomationParameters(MaintenanceWindowAutomationParametersProperty.builder()\n                        .documentVersion(\"documentVersion\")\n                        .parameters(parameters)\n                        .build())\n                .maintenanceWindowLambdaParameters(MaintenanceWindowLambdaParametersProperty.builder()\n                        .clientContext(\"clientContext\")\n                        .payload(\"payload\")\n                        .qualifier(\"qualifier\")\n                        .build())\n                .maintenanceWindowRunCommandParameters(MaintenanceWindowRunCommandParametersProperty.builder()\n                        .cloudWatchOutputConfig(CloudWatchOutputConfigProperty.builder()\n                                .cloudWatchLogGroupName(\"cloudWatchLogGroupName\")\n                                .cloudWatchOutputEnabled(false)\n                                .build())\n                        .comment(\"comment\")\n                        .documentHash(\"documentHash\")\n                        .documentHashType(\"documentHashType\")\n                        .documentVersion(\"documentVersion\")\n                        .notificationConfig(NotificationConfigProperty.builder()\n                                .notificationArn(\"notificationArn\")\n\n                                // the properties below are optional\n                                .notificationEvents(List.of(\"notificationEvents\"))\n                                .notificationType(\"notificationType\")\n                                .build())\n                        .outputS3BucketName(\"outputS3BucketName\")\n                        .outputS3KeyPrefix(\"outputS3KeyPrefix\")\n                        .parameters(parameters)\n                        .serviceRoleArn(\"serviceRoleArn\")\n                        .timeoutSeconds(123)\n                        .build())\n                .maintenanceWindowStepFunctionsParameters(MaintenanceWindowStepFunctionsParametersProperty.builder()\n                        .input(\"input\")\n                        .name(\"name\")\n                        .build())\n                .build())\n        .taskParameters(taskParameters)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar parameters interface{}\nvar taskParameters interface{}\ncfnMaintenanceWindowTaskProps := &cfnMaintenanceWindowTaskProps{\n\tpriority: jsii.Number(123),\n\ttaskArn: jsii.String(\"taskArn\"),\n\ttaskType: jsii.String(\"taskType\"),\n\twindowId: jsii.String(\"windowId\"),\n\n\t// the properties below are optional\n\tcutoffBehavior: jsii.String(\"cutoffBehavior\"),\n\tdescription: jsii.String(\"description\"),\n\tloggingInfo: &loggingInfoProperty{\n\t\tregion: jsii.String(\"region\"),\n\t\ts3Bucket: jsii.String(\"s3Bucket\"),\n\n\t\t// the properties below are optional\n\t\ts3Prefix: jsii.String(\"s3Prefix\"),\n\t},\n\tmaxConcurrency: jsii.String(\"maxConcurrency\"),\n\tmaxErrors: jsii.String(\"maxErrors\"),\n\tname: jsii.String(\"name\"),\n\tserviceRoleArn: jsii.String(\"serviceRoleArn\"),\n\ttargets: []interface{}{\n\t\t&targetProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n\ttaskInvocationParameters: &taskInvocationParametersProperty{\n\t\tmaintenanceWindowAutomationParameters: &maintenanceWindowAutomationParametersProperty{\n\t\t\tdocumentVersion: jsii.String(\"documentVersion\"),\n\t\t\tparameters: parameters,\n\t\t},\n\t\tmaintenanceWindowLambdaParameters: &maintenanceWindowLambdaParametersProperty{\n\t\t\tclientContext: jsii.String(\"clientContext\"),\n\t\t\tpayload: jsii.String(\"payload\"),\n\t\t\tqualifier: jsii.String(\"qualifier\"),\n\t\t},\n\t\tmaintenanceWindowRunCommandParameters: &maintenanceWindowRunCommandParametersProperty{\n\t\t\tcloudWatchOutputConfig: &cloudWatchOutputConfigProperty{\n\t\t\t\tcloudWatchLogGroupName: jsii.String(\"cloudWatchLogGroupName\"),\n\t\t\t\tcloudWatchOutputEnabled: jsii.Boolean(false),\n\t\t\t},\n\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\tdocumentHash: jsii.String(\"documentHash\"),\n\t\t\tdocumentHashType: jsii.String(\"documentHashType\"),\n\t\t\tdocumentVersion: jsii.String(\"documentVersion\"),\n\t\t\tnotificationConfig: &notificationConfigProperty{\n\t\t\t\tnotificationArn: jsii.String(\"notificationArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tnotificationEvents: []*string{\n\t\t\t\t\tjsii.String(\"notificationEvents\"),\n\t\t\t\t},\n\t\t\t\tnotificationType: jsii.String(\"notificationType\"),\n\t\t\t},\n\t\t\toutputS3BucketName: jsii.String(\"outputS3BucketName\"),\n\t\t\toutputS3KeyPrefix: jsii.String(\"outputS3KeyPrefix\"),\n\t\t\tparameters: parameters,\n\t\t\tserviceRoleArn: jsii.String(\"serviceRoleArn\"),\n\t\t\ttimeoutSeconds: jsii.Number(123),\n\t\t},\n\t\tmaintenanceWindowStepFunctionsParameters: &maintenanceWindowStepFunctionsParametersProperty{\n\t\t\tinput: jsii.String(\"input\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n\ttaskParameters: taskParameters,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\ndeclare const taskParameters: any;\nconst cfnMaintenanceWindowTaskProps: ssm.CfnMaintenanceWindowTaskProps = {\n  priority: 123,\n  taskArn: 'taskArn',\n  taskType: 'taskType',\n  windowId: 'windowId',\n\n  // the properties below are optional\n  cutoffBehavior: 'cutoffBehavior',\n  description: 'description',\n  loggingInfo: {\n    region: 'region',\n    s3Bucket: 's3Bucket',\n\n    // the properties below are optional\n    s3Prefix: 's3Prefix',\n  },\n  maxConcurrency: 'maxConcurrency',\n  maxErrors: 'maxErrors',\n  name: 'name',\n  serviceRoleArn: 'serviceRoleArn',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  taskInvocationParameters: {\n    maintenanceWindowAutomationParameters: {\n      documentVersion: 'documentVersion',\n      parameters: parameters,\n    },\n    maintenanceWindowLambdaParameters: {\n      clientContext: 'clientContext',\n      payload: 'payload',\n      qualifier: 'qualifier',\n    },\n    maintenanceWindowRunCommandParameters: {\n      cloudWatchOutputConfig: {\n        cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n        cloudWatchOutputEnabled: false,\n      },\n      comment: 'comment',\n      documentHash: 'documentHash',\n      documentHashType: 'documentHashType',\n      documentVersion: 'documentVersion',\n      notificationConfig: {\n        notificationArn: 'notificationArn',\n\n        // the properties below are optional\n        notificationEvents: ['notificationEvents'],\n        notificationType: 'notificationType',\n      },\n      outputS3BucketName: 'outputS3BucketName',\n      outputS3KeyPrefix: 'outputS3KeyPrefix',\n      parameters: parameters,\n      serviceRoleArn: 'serviceRoleArn',\n      timeoutSeconds: 123,\n    },\n    maintenanceWindowStepFunctionsParameters: {\n      input: 'input',\n      name: 'name',\n    },\n  },\n  taskParameters: taskParameters,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnMaintenanceWindowTaskProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnMaintenanceWindowTaskProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const parameters: any;\ndeclare const taskParameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMaintenanceWindowTaskProps: ssm.CfnMaintenanceWindowTaskProps = {\n  priority: 123,\n  taskArn: 'taskArn',\n  taskType: 'taskType',\n  windowId: 'windowId',\n\n  // the properties below are optional\n  cutoffBehavior: 'cutoffBehavior',\n  description: 'description',\n  loggingInfo: {\n    region: 'region',\n    s3Bucket: 's3Bucket',\n\n    // the properties below are optional\n    s3Prefix: 's3Prefix',\n  },\n  maxConcurrency: 'maxConcurrency',\n  maxErrors: 'maxErrors',\n  name: 'name',\n  serviceRoleArn: 'serviceRoleArn',\n  targets: [{\n    key: 'key',\n    values: ['values'],\n  }],\n  taskInvocationParameters: {\n    maintenanceWindowAutomationParameters: {\n      documentVersion: 'documentVersion',\n      parameters: parameters,\n    },\n    maintenanceWindowLambdaParameters: {\n      clientContext: 'clientContext',\n      payload: 'payload',\n      qualifier: 'qualifier',\n    },\n    maintenanceWindowRunCommandParameters: {\n      cloudWatchOutputConfig: {\n        cloudWatchLogGroupName: 'cloudWatchLogGroupName',\n        cloudWatchOutputEnabled: false,\n      },\n      comment: 'comment',\n      documentHash: 'documentHash',\n      documentHashType: 'documentHashType',\n      documentVersion: 'documentVersion',\n      notificationConfig: {\n        notificationArn: 'notificationArn',\n\n        // the properties below are optional\n        notificationEvents: ['notificationEvents'],\n        notificationType: 'notificationType',\n      },\n      outputS3BucketName: 'outputS3BucketName',\n      outputS3KeyPrefix: 'outputS3KeyPrefix',\n      parameters: parameters,\n      serviceRoleArn: 'serviceRoleArn',\n      timeoutSeconds: 123,\n    },\n    maintenanceWindowStepFunctionsParameters: {\n      input: 'input',\n      name: 'name',\n    },\n  },\n  taskParameters: taskParameters,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 32,
        "75": 55,
        "91": 1,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 10,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 46,
        "290": 1
      },
      "fqnsFingerprint": "a862f4db4624bb48a6f04fd1f17d2160d06e5dc5db40b7fa74dad913028bbe5c"
    },
    "c08df69af88e02bae8fba21c68685417bfa37ce566c0a2230255ec96abb423d8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# tags: Any\n\ncfn_parameter = ssm.CfnParameter(self, \"MyCfnParameter\",\n    type=\"type\",\n    value=\"value\",\n\n    # the properties below are optional\n    allowed_pattern=\"allowedPattern\",\n    data_type=\"dataType\",\n    description=\"description\",\n    name=\"name\",\n    policies=\"policies\",\n    tags=tags,\n    tier=\"tier\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar tags;\n\nCfnParameter cfnParameter = new CfnParameter(this, \"MyCfnParameter\", new CfnParameterProps {\n    Type = \"type\",\n    Value = \"value\",\n\n    // the properties below are optional\n    AllowedPattern = \"allowedPattern\",\n    DataType = \"dataType\",\n    Description = \"description\",\n    Name = \"name\",\n    Policies = \"policies\",\n    Tags = tags,\n    Tier = \"tier\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject tags;\n\nCfnParameter cfnParameter = CfnParameter.Builder.create(this, \"MyCfnParameter\")\n        .type(\"type\")\n        .value(\"value\")\n\n        // the properties below are optional\n        .allowedPattern(\"allowedPattern\")\n        .dataType(\"dataType\")\n        .description(\"description\")\n        .name(\"name\")\n        .policies(\"policies\")\n        .tags(tags)\n        .tier(\"tier\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar tags interface{}\ncfnParameter := ssm.NewCfnParameter(this, jsii.String(\"MyCfnParameter\"), &cfnParameterProps{\n\ttype: jsii.String(\"type\"),\n\tvalue: jsii.String(\"value\"),\n\n\t// the properties below are optional\n\tallowedPattern: jsii.String(\"allowedPattern\"),\n\tdataType: jsii.String(\"dataType\"),\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\tpolicies: jsii.String(\"policies\"),\n\ttags: tags,\n\ttier: jsii.String(\"tier\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const tags: any;\nconst cfnParameter = new ssm.CfnParameter(this, 'MyCfnParameter', {\n  type: 'type',\n  value: 'value',\n\n  // the properties below are optional\n  allowedPattern: 'allowedPattern',\n  dataType: 'dataType',\n  description: 'description',\n  name: 'name',\n  policies: 'policies',\n  tags: tags,\n  tier: 'tier',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnParameter"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnParameter",
        "@aws-cdk/aws-ssm.CfnParameterProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnParameter = new ssm.CfnParameter(this, 'MyCfnParameter', {\n  type: 'type',\n  value: 'value',\n\n  // the properties below are optional\n  allowedPattern: 'allowedPattern',\n  dataType: 'dataType',\n  description: 'description',\n  name: 'name',\n  policies: 'policies',\n  tags: tags,\n  tier: 'tier',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 15,
        "104": 1,
        "125": 1,
        "130": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "fceca054e7181efcc2d886946f47c649ba2082063c4d8280cab4e51ca6117bae"
    },
    "f143e9dbd6ecae90807c9577f019fc597eef0dfbed89601f35023473d000d779": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\n# tags: Any\n\ncfn_parameter_props = ssm.CfnParameterProps(\n    type=\"type\",\n    value=\"value\",\n\n    # the properties below are optional\n    allowed_pattern=\"allowedPattern\",\n    data_type=\"dataType\",\n    description=\"description\",\n    name=\"name\",\n    policies=\"policies\",\n    tags=tags,\n    tier=\"tier\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nvar tags;\n\nCfnParameterProps cfnParameterProps = new CfnParameterProps {\n    Type = \"type\",\n    Value = \"value\",\n\n    // the properties below are optional\n    AllowedPattern = \"allowedPattern\",\n    DataType = \"dataType\",\n    Description = \"description\",\n    Name = \"name\",\n    Policies = \"policies\",\n    Tags = tags,\n    Tier = \"tier\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nObject tags;\n\nCfnParameterProps cfnParameterProps = CfnParameterProps.builder()\n        .type(\"type\")\n        .value(\"value\")\n\n        // the properties below are optional\n        .allowedPattern(\"allowedPattern\")\n        .dataType(\"dataType\")\n        .description(\"description\")\n        .name(\"name\")\n        .policies(\"policies\")\n        .tags(tags)\n        .tier(\"tier\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\n\nvar tags interface{}\ncfnParameterProps := &cfnParameterProps{\n\ttype: jsii.String(\"type\"),\n\tvalue: jsii.String(\"value\"),\n\n\t// the properties below are optional\n\tallowedPattern: jsii.String(\"allowedPattern\"),\n\tdataType: jsii.String(\"dataType\"),\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\tpolicies: jsii.String(\"policies\"),\n\ttags: tags,\n\ttier: jsii.String(\"tier\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const tags: any;\nconst cfnParameterProps: ssm.CfnParameterProps = {\n  type: 'type',\n  value: 'value',\n\n  // the properties below are optional\n  allowedPattern: 'allowedPattern',\n  dataType: 'dataType',\n  description: 'description',\n  name: 'name',\n  policies: 'policies',\n  tags: tags,\n  tier: 'tier',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnParameterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnParameterProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnParameterProps: ssm.CfnParameterProps = {\n  type: 'type',\n  value: 'value',\n\n  // the properties below are optional\n  allowedPattern: 'allowedPattern',\n  dataType: 'dataType',\n  description: 'description',\n  name: 'name',\n  policies: 'policies',\n  tags: tags,\n  tier: 'tier',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 15,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "f7b1409fca982f50026394c568978693aa6efece962a9278bae96f7770a080d1"
    },
    "4fb697b41c56683b7a8ca8475c7386406965eac138556cab8d60c23272dffe71": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncfn_patch_baseline = ssm.CfnPatchBaseline(self, \"MyCfnPatchBaseline\",\n    name=\"name\",\n\n    # the properties below are optional\n    approval_rules=ssm.CfnPatchBaseline.RuleGroupProperty(\n        patch_rules=[ssm.CfnPatchBaseline.RuleProperty(\n            approve_after_days=123,\n            approve_until_date=\"approveUntilDate\",\n            compliance_level=\"complianceLevel\",\n            enable_non_security=False,\n            patch_filter_group=ssm.CfnPatchBaseline.PatchFilterGroupProperty(\n                patch_filters=[ssm.CfnPatchBaseline.PatchFilterProperty(\n                    key=\"key\",\n                    values=[\"values\"]\n                )]\n            )\n        )]\n    ),\n    approved_patches=[\"approvedPatches\"],\n    approved_patches_compliance_level=\"approvedPatchesComplianceLevel\",\n    approved_patches_enable_non_security=False,\n    description=\"description\",\n    global_filters=ssm.CfnPatchBaseline.PatchFilterGroupProperty(\n        patch_filters=[ssm.CfnPatchBaseline.PatchFilterProperty(\n            key=\"key\",\n            values=[\"values\"]\n        )]\n    ),\n    operating_system=\"operatingSystem\",\n    patch_groups=[\"patchGroups\"],\n    rejected_patches=[\"rejectedPatches\"],\n    rejected_patches_action=\"rejectedPatchesAction\",\n    sources=[ssm.CfnPatchBaseline.PatchSourceProperty(\n        configuration=\"configuration\",\n        name=\"name\",\n        products=[\"products\"]\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCfnPatchBaseline cfnPatchBaseline = new CfnPatchBaseline(this, \"MyCfnPatchBaseline\", new CfnPatchBaselineProps {\n    Name = \"name\",\n\n    // the properties below are optional\n    ApprovalRules = new RuleGroupProperty {\n        PatchRules = new [] { new RuleProperty {\n            ApproveAfterDays = 123,\n            ApproveUntilDate = \"approveUntilDate\",\n            ComplianceLevel = \"complianceLevel\",\n            EnableNonSecurity = false,\n            PatchFilterGroup = new PatchFilterGroupProperty {\n                PatchFilters = new [] { new PatchFilterProperty {\n                    Key = \"key\",\n                    Values = new [] { \"values\" }\n                } }\n            }\n        } }\n    },\n    ApprovedPatches = new [] { \"approvedPatches\" },\n    ApprovedPatchesComplianceLevel = \"approvedPatchesComplianceLevel\",\n    ApprovedPatchesEnableNonSecurity = false,\n    Description = \"description\",\n    GlobalFilters = new PatchFilterGroupProperty {\n        PatchFilters = new [] { new PatchFilterProperty {\n            Key = \"key\",\n            Values = new [] { \"values\" }\n        } }\n    },\n    OperatingSystem = \"operatingSystem\",\n    PatchGroups = new [] { \"patchGroups\" },\n    RejectedPatches = new [] { \"rejectedPatches\" },\n    RejectedPatchesAction = \"rejectedPatchesAction\",\n    Sources = new [] { new PatchSourceProperty {\n        Configuration = \"configuration\",\n        Name = \"name\",\n        Products = new [] { \"products\" }\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCfnPatchBaseline cfnPatchBaseline = CfnPatchBaseline.Builder.create(this, \"MyCfnPatchBaseline\")\n        .name(\"name\")\n\n        // the properties below are optional\n        .approvalRules(RuleGroupProperty.builder()\n                .patchRules(List.of(RuleProperty.builder()\n                        .approveAfterDays(123)\n                        .approveUntilDate(\"approveUntilDate\")\n                        .complianceLevel(\"complianceLevel\")\n                        .enableNonSecurity(false)\n                        .patchFilterGroup(PatchFilterGroupProperty.builder()\n                                .patchFilters(List.of(PatchFilterProperty.builder()\n                                        .key(\"key\")\n                                        .values(List.of(\"values\"))\n                                        .build()))\n                                .build())\n                        .build()))\n                .build())\n        .approvedPatches(List.of(\"approvedPatches\"))\n        .approvedPatchesComplianceLevel(\"approvedPatchesComplianceLevel\")\n        .approvedPatchesEnableNonSecurity(false)\n        .description(\"description\")\n        .globalFilters(PatchFilterGroupProperty.builder()\n                .patchFilters(List.of(PatchFilterProperty.builder()\n                        .key(\"key\")\n                        .values(List.of(\"values\"))\n                        .build()))\n                .build())\n        .operatingSystem(\"operatingSystem\")\n        .patchGroups(List.of(\"patchGroups\"))\n        .rejectedPatches(List.of(\"rejectedPatches\"))\n        .rejectedPatchesAction(\"rejectedPatchesAction\")\n        .sources(List.of(PatchSourceProperty.builder()\n                .configuration(\"configuration\")\n                .name(\"name\")\n                .products(List.of(\"products\"))\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncfnPatchBaseline := ssm.NewCfnPatchBaseline(this, jsii.String(\"MyCfnPatchBaseline\"), &cfnPatchBaselineProps{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tapprovalRules: &ruleGroupProperty{\n\t\tpatchRules: []interface{}{\n\t\t\t&ruleProperty{\n\t\t\t\tapproveAfterDays: jsii.Number(123),\n\t\t\t\tapproveUntilDate: jsii.String(\"approveUntilDate\"),\n\t\t\t\tcomplianceLevel: jsii.String(\"complianceLevel\"),\n\t\t\t\tenableNonSecurity: jsii.Boolean(false),\n\t\t\t\tpatchFilterGroup: &patchFilterGroupProperty{\n\t\t\t\t\tpatchFilters: []interface{}{\n\t\t\t\t\t\t&patchFilterProperty{\n\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\tvalues: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tapprovedPatches: []*string{\n\t\tjsii.String(\"approvedPatches\"),\n\t},\n\tapprovedPatchesComplianceLevel: jsii.String(\"approvedPatchesComplianceLevel\"),\n\tapprovedPatchesEnableNonSecurity: jsii.Boolean(false),\n\tdescription: jsii.String(\"description\"),\n\tglobalFilters: &patchFilterGroupProperty{\n\t\tpatchFilters: []interface{}{\n\t\t\t&patchFilterProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\toperatingSystem: jsii.String(\"operatingSystem\"),\n\tpatchGroups: []*string{\n\t\tjsii.String(\"patchGroups\"),\n\t},\n\trejectedPatches: []*string{\n\t\tjsii.String(\"rejectedPatches\"),\n\t},\n\trejectedPatchesAction: jsii.String(\"rejectedPatchesAction\"),\n\tsources: []interface{}{\n\t\t&patchSourceProperty{\n\t\t\tconfiguration: jsii.String(\"configuration\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tproducts: []*string{\n\t\t\t\tjsii.String(\"products\"),\n\t\t\t},\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cfnPatchBaseline = new ssm.CfnPatchBaseline(this, 'MyCfnPatchBaseline', {\n  name: 'name',\n\n  // the properties below are optional\n  approvalRules: {\n    patchRules: [{\n      approveAfterDays: 123,\n      approveUntilDate: 'approveUntilDate',\n      complianceLevel: 'complianceLevel',\n      enableNonSecurity: false,\n      patchFilterGroup: {\n        patchFilters: [{\n          key: 'key',\n          values: ['values'],\n        }],\n      },\n    }],\n  },\n  approvedPatches: ['approvedPatches'],\n  approvedPatchesComplianceLevel: 'approvedPatchesComplianceLevel',\n  approvedPatchesEnableNonSecurity: false,\n  description: 'description',\n  globalFilters: {\n    patchFilters: [{\n      key: 'key',\n      values: ['values'],\n    }],\n  },\n  operatingSystem: 'operatingSystem',\n  patchGroups: ['patchGroups'],\n  rejectedPatches: ['rejectedPatches'],\n  rejectedPatchesAction: 'rejectedPatchesAction',\n  sources: [{\n    configuration: 'configuration',\n    name: 'name',\n    products: ['products'],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnPatchBaseline"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnPatchBaseline",
        "@aws-cdk/aws-ssm.CfnPatchBaselineProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPatchBaseline = new ssm.CfnPatchBaseline(this, 'MyCfnPatchBaseline', {\n  name: 'name',\n\n  // the properties below are optional\n  approvalRules: {\n    patchRules: [{\n      approveAfterDays: 123,\n      approveUntilDate: 'approveUntilDate',\n      complianceLevel: 'complianceLevel',\n      enableNonSecurity: false,\n      patchFilterGroup: {\n        patchFilters: [{\n          key: 'key',\n          values: ['values'],\n        }],\n      },\n    }],\n  },\n  approvedPatches: ['approvedPatches'],\n  approvedPatchesComplianceLevel: 'approvedPatchesComplianceLevel',\n  approvedPatchesEnableNonSecurity: false,\n  description: 'description',\n  globalFilters: {\n    patchFilters: [{\n      key: 'key',\n      values: ['values'],\n    }],\n  },\n  operatingSystem: 'operatingSystem',\n  patchGroups: ['patchGroups'],\n  rejectedPatches: ['rejectedPatches'],\n  rejectedPatchesAction: 'rejectedPatchesAction',\n  sources: [{\n    configuration: 'configuration',\n    name: 'name',\n    products: ['products'],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 21,
        "75": 34,
        "91": 2,
        "104": 1,
        "192": 11,
        "193": 9,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 30,
        "290": 1
      },
      "fqnsFingerprint": "85b3bcad9ce0cbb3428859678058585aab837faee7f86e59453a6bdc2998ff72"
    },
    "97e479bce469c154d43db6341669f702d45c9b9087b38ea1e20ca1498a62456e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\npatch_filter_group_property = ssm.CfnPatchBaseline.PatchFilterGroupProperty(\n    patch_filters=[ssm.CfnPatchBaseline.PatchFilterProperty(\n        key=\"key\",\n        values=[\"values\"]\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nPatchFilterGroupProperty patchFilterGroupProperty = new PatchFilterGroupProperty {\n    PatchFilters = new [] { new PatchFilterProperty {\n        Key = \"key\",\n        Values = new [] { \"values\" }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nPatchFilterGroupProperty patchFilterGroupProperty = PatchFilterGroupProperty.builder()\n        .patchFilters(List.of(PatchFilterProperty.builder()\n                .key(\"key\")\n                .values(List.of(\"values\"))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\npatchFilterGroupProperty := &patchFilterGroupProperty{\n\tpatchFilters: []interface{}{\n\t\t&patchFilterProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalues: []*string{\n\t\t\t\tjsii.String(\"values\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst patchFilterGroupProperty: ssm.CfnPatchBaseline.PatchFilterGroupProperty = {\n  patchFilters: [{\n    key: 'key',\n    values: ['values'],\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnPatchBaseline.PatchFilterGroupProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnPatchBaseline.PatchFilterGroupProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst patchFilterGroupProperty: ssm.CfnPatchBaseline.PatchFilterGroupProperty = {\n  patchFilters: [{\n    key: 'key',\n    values: ['values'],\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "6c009228a1b7c2e5e6b888ba57eb140666c6a07ec768e593468e628f12a5cd1e"
    },
    "c6719c9002fdbbb012ac6571b44597be701f70e2087fbf87f561b179bbd78121": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\npatch_filter_property = ssm.CfnPatchBaseline.PatchFilterProperty(\n    key=\"key\",\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nPatchFilterProperty patchFilterProperty = new PatchFilterProperty {\n    Key = \"key\",\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nPatchFilterProperty patchFilterProperty = PatchFilterProperty.builder()\n        .key(\"key\")\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\npatchFilterProperty := &patchFilterProperty{\n\tkey: jsii.String(\"key\"),\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst patchFilterProperty: ssm.CfnPatchBaseline.PatchFilterProperty = {\n  key: 'key',\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnPatchBaseline.PatchFilterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnPatchBaseline.PatchFilterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst patchFilterProperty: ssm.CfnPatchBaseline.PatchFilterProperty = {\n  key: 'key',\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "f8c454db7623348792034545200cef40de7d1ef3223c8b21268654fc283696c6"
    },
    "0ba6da0871bfc01dfe2d2d25006256c492b51fdd975b15100a4db8b2ff12d48c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\npatch_source_property = ssm.CfnPatchBaseline.PatchSourceProperty(\n    configuration=\"configuration\",\n    name=\"name\",\n    products=[\"products\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nPatchSourceProperty patchSourceProperty = new PatchSourceProperty {\n    Configuration = \"configuration\",\n    Name = \"name\",\n    Products = new [] { \"products\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nPatchSourceProperty patchSourceProperty = PatchSourceProperty.builder()\n        .configuration(\"configuration\")\n        .name(\"name\")\n        .products(List.of(\"products\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\npatchSourceProperty := &patchSourceProperty{\n\tconfiguration: jsii.String(\"configuration\"),\n\tname: jsii.String(\"name\"),\n\tproducts: []*string{\n\t\tjsii.String(\"products\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst patchSourceProperty: ssm.CfnPatchBaseline.PatchSourceProperty = {\n  configuration: 'configuration',\n  name: 'name',\n  products: ['products'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnPatchBaseline.PatchSourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnPatchBaseline.PatchSourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst patchSourceProperty: ssm.CfnPatchBaseline.PatchSourceProperty = {\n  configuration: 'configuration',\n  name: 'name',\n  products: ['products'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "31a1004f505553de4a1ef399bf8db2440414387c5dcf5fdd8c50e2a077ebc0d3"
    },
    "9187e234911936ec5929266bdce02201a157b96b0d45ad88d89bfa4a34ae49b5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nrule_group_property = ssm.CfnPatchBaseline.RuleGroupProperty(\n    patch_rules=[ssm.CfnPatchBaseline.RuleProperty(\n        approve_after_days=123,\n        approve_until_date=\"approveUntilDate\",\n        compliance_level=\"complianceLevel\",\n        enable_non_security=False,\n        patch_filter_group=ssm.CfnPatchBaseline.PatchFilterGroupProperty(\n            patch_filters=[ssm.CfnPatchBaseline.PatchFilterProperty(\n                key=\"key\",\n                values=[\"values\"]\n            )]\n        )\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nRuleGroupProperty ruleGroupProperty = new RuleGroupProperty {\n    PatchRules = new [] { new RuleProperty {\n        ApproveAfterDays = 123,\n        ApproveUntilDate = \"approveUntilDate\",\n        ComplianceLevel = \"complianceLevel\",\n        EnableNonSecurity = false,\n        PatchFilterGroup = new PatchFilterGroupProperty {\n            PatchFilters = new [] { new PatchFilterProperty {\n                Key = \"key\",\n                Values = new [] { \"values\" }\n            } }\n        }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nRuleGroupProperty ruleGroupProperty = RuleGroupProperty.builder()\n        .patchRules(List.of(RuleProperty.builder()\n                .approveAfterDays(123)\n                .approveUntilDate(\"approveUntilDate\")\n                .complianceLevel(\"complianceLevel\")\n                .enableNonSecurity(false)\n                .patchFilterGroup(PatchFilterGroupProperty.builder()\n                        .patchFilters(List.of(PatchFilterProperty.builder()\n                                .key(\"key\")\n                                .values(List.of(\"values\"))\n                                .build()))\n                        .build())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nruleGroupProperty := &ruleGroupProperty{\n\tpatchRules: []interface{}{\n\t\t&ruleProperty{\n\t\t\tapproveAfterDays: jsii.Number(123),\n\t\t\tapproveUntilDate: jsii.String(\"approveUntilDate\"),\n\t\t\tcomplianceLevel: jsii.String(\"complianceLevel\"),\n\t\t\tenableNonSecurity: jsii.Boolean(false),\n\t\t\tpatchFilterGroup: &patchFilterGroupProperty{\n\t\t\t\tpatchFilters: []interface{}{\n\t\t\t\t\t&patchFilterProperty{\n\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\tvalues: []*string{\n\t\t\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst ruleGroupProperty: ssm.CfnPatchBaseline.RuleGroupProperty = {\n  patchRules: [{\n    approveAfterDays: 123,\n    approveUntilDate: 'approveUntilDate',\n    complianceLevel: 'complianceLevel',\n    enableNonSecurity: false,\n    patchFilterGroup: {\n      patchFilters: [{\n        key: 'key',\n        values: ['values'],\n      }],\n    },\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnPatchBaseline.RuleGroupProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnPatchBaseline.RuleGroupProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleGroupProperty: ssm.CfnPatchBaseline.RuleGroupProperty = {\n  patchRules: [{\n    approveAfterDays: 123,\n    approveUntilDate: 'approveUntilDate',\n    complianceLevel: 'complianceLevel',\n    enableNonSecurity: false,\n    patchFilterGroup: {\n      patchFilters: [{\n        key: 'key',\n        values: ['values'],\n      }],\n    },\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 14,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 3,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "c218a426655cf5311e222ca2008fc1dfea9c95715d835ceffa76ffee3e723319"
    },
    "cffe7983dfb2bfe30ff51966330595d6a0216375b44f4e2869261e6109c2934d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nrule_property = ssm.CfnPatchBaseline.RuleProperty(\n    approve_after_days=123,\n    approve_until_date=\"approveUntilDate\",\n    compliance_level=\"complianceLevel\",\n    enable_non_security=False,\n    patch_filter_group=ssm.CfnPatchBaseline.PatchFilterGroupProperty(\n        patch_filters=[ssm.CfnPatchBaseline.PatchFilterProperty(\n            key=\"key\",\n            values=[\"values\"]\n        )]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nRuleProperty ruleProperty = new RuleProperty {\n    ApproveAfterDays = 123,\n    ApproveUntilDate = \"approveUntilDate\",\n    ComplianceLevel = \"complianceLevel\",\n    EnableNonSecurity = false,\n    PatchFilterGroup = new PatchFilterGroupProperty {\n        PatchFilters = new [] { new PatchFilterProperty {\n            Key = \"key\",\n            Values = new [] { \"values\" }\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nRuleProperty ruleProperty = RuleProperty.builder()\n        .approveAfterDays(123)\n        .approveUntilDate(\"approveUntilDate\")\n        .complianceLevel(\"complianceLevel\")\n        .enableNonSecurity(false)\n        .patchFilterGroup(PatchFilterGroupProperty.builder()\n                .patchFilters(List.of(PatchFilterProperty.builder()\n                        .key(\"key\")\n                        .values(List.of(\"values\"))\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nruleProperty := &ruleProperty{\n\tapproveAfterDays: jsii.Number(123),\n\tapproveUntilDate: jsii.String(\"approveUntilDate\"),\n\tcomplianceLevel: jsii.String(\"complianceLevel\"),\n\tenableNonSecurity: jsii.Boolean(false),\n\tpatchFilterGroup: &patchFilterGroupProperty{\n\t\tpatchFilters: []interface{}{\n\t\t\t&patchFilterProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst ruleProperty: ssm.CfnPatchBaseline.RuleProperty = {\n  approveAfterDays: 123,\n  approveUntilDate: 'approveUntilDate',\n  complianceLevel: 'complianceLevel',\n  enableNonSecurity: false,\n  patchFilterGroup: {\n    patchFilters: [{\n      key: 'key',\n      values: ['values'],\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnPatchBaseline.RuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnPatchBaseline.RuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ruleProperty: ssm.CfnPatchBaseline.RuleProperty = {\n  approveAfterDays: 123,\n  approveUntilDate: 'approveUntilDate',\n  complianceLevel: 'complianceLevel',\n  enableNonSecurity: false,\n  patchFilterGroup: {\n    patchFilters: [{\n      key: 'key',\n      values: ['values'],\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 13,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "ad880198075cd3212270929df5c164d23f4af5b70d6105abfd773297f25c3d3f"
    },
    "917c37a35939ab97fb184dfa830d29fa1e9314fe116b437bf3532d65205405bc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncfn_patch_baseline_props = ssm.CfnPatchBaselineProps(\n    name=\"name\",\n\n    # the properties below are optional\n    approval_rules=ssm.CfnPatchBaseline.RuleGroupProperty(\n        patch_rules=[ssm.CfnPatchBaseline.RuleProperty(\n            approve_after_days=123,\n            approve_until_date=\"approveUntilDate\",\n            compliance_level=\"complianceLevel\",\n            enable_non_security=False,\n            patch_filter_group=ssm.CfnPatchBaseline.PatchFilterGroupProperty(\n                patch_filters=[ssm.CfnPatchBaseline.PatchFilterProperty(\n                    key=\"key\",\n                    values=[\"values\"]\n                )]\n            )\n        )]\n    ),\n    approved_patches=[\"approvedPatches\"],\n    approved_patches_compliance_level=\"approvedPatchesComplianceLevel\",\n    approved_patches_enable_non_security=False,\n    description=\"description\",\n    global_filters=ssm.CfnPatchBaseline.PatchFilterGroupProperty(\n        patch_filters=[ssm.CfnPatchBaseline.PatchFilterProperty(\n            key=\"key\",\n            values=[\"values\"]\n        )]\n    ),\n    operating_system=\"operatingSystem\",\n    patch_groups=[\"patchGroups\"],\n    rejected_patches=[\"rejectedPatches\"],\n    rejected_patches_action=\"rejectedPatchesAction\",\n    sources=[ssm.CfnPatchBaseline.PatchSourceProperty(\n        configuration=\"configuration\",\n        name=\"name\",\n        products=[\"products\"]\n    )],\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCfnPatchBaselineProps cfnPatchBaselineProps = new CfnPatchBaselineProps {\n    Name = \"name\",\n\n    // the properties below are optional\n    ApprovalRules = new RuleGroupProperty {\n        PatchRules = new [] { new RuleProperty {\n            ApproveAfterDays = 123,\n            ApproveUntilDate = \"approveUntilDate\",\n            ComplianceLevel = \"complianceLevel\",\n            EnableNonSecurity = false,\n            PatchFilterGroup = new PatchFilterGroupProperty {\n                PatchFilters = new [] { new PatchFilterProperty {\n                    Key = \"key\",\n                    Values = new [] { \"values\" }\n                } }\n            }\n        } }\n    },\n    ApprovedPatches = new [] { \"approvedPatches\" },\n    ApprovedPatchesComplianceLevel = \"approvedPatchesComplianceLevel\",\n    ApprovedPatchesEnableNonSecurity = false,\n    Description = \"description\",\n    GlobalFilters = new PatchFilterGroupProperty {\n        PatchFilters = new [] { new PatchFilterProperty {\n            Key = \"key\",\n            Values = new [] { \"values\" }\n        } }\n    },\n    OperatingSystem = \"operatingSystem\",\n    PatchGroups = new [] { \"patchGroups\" },\n    RejectedPatches = new [] { \"rejectedPatches\" },\n    RejectedPatchesAction = \"rejectedPatchesAction\",\n    Sources = new [] { new PatchSourceProperty {\n        Configuration = \"configuration\",\n        Name = \"name\",\n        Products = new [] { \"products\" }\n    } },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCfnPatchBaselineProps cfnPatchBaselineProps = CfnPatchBaselineProps.builder()\n        .name(\"name\")\n\n        // the properties below are optional\n        .approvalRules(RuleGroupProperty.builder()\n                .patchRules(List.of(RuleProperty.builder()\n                        .approveAfterDays(123)\n                        .approveUntilDate(\"approveUntilDate\")\n                        .complianceLevel(\"complianceLevel\")\n                        .enableNonSecurity(false)\n                        .patchFilterGroup(PatchFilterGroupProperty.builder()\n                                .patchFilters(List.of(PatchFilterProperty.builder()\n                                        .key(\"key\")\n                                        .values(List.of(\"values\"))\n                                        .build()))\n                                .build())\n                        .build()))\n                .build())\n        .approvedPatches(List.of(\"approvedPatches\"))\n        .approvedPatchesComplianceLevel(\"approvedPatchesComplianceLevel\")\n        .approvedPatchesEnableNonSecurity(false)\n        .description(\"description\")\n        .globalFilters(PatchFilterGroupProperty.builder()\n                .patchFilters(List.of(PatchFilterProperty.builder()\n                        .key(\"key\")\n                        .values(List.of(\"values\"))\n                        .build()))\n                .build())\n        .operatingSystem(\"operatingSystem\")\n        .patchGroups(List.of(\"patchGroups\"))\n        .rejectedPatches(List.of(\"rejectedPatches\"))\n        .rejectedPatchesAction(\"rejectedPatchesAction\")\n        .sources(List.of(PatchSourceProperty.builder()\n                .configuration(\"configuration\")\n                .name(\"name\")\n                .products(List.of(\"products\"))\n                .build()))\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncfnPatchBaselineProps := &cfnPatchBaselineProps{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tapprovalRules: &ruleGroupProperty{\n\t\tpatchRules: []interface{}{\n\t\t\t&ruleProperty{\n\t\t\t\tapproveAfterDays: jsii.Number(123),\n\t\t\t\tapproveUntilDate: jsii.String(\"approveUntilDate\"),\n\t\t\t\tcomplianceLevel: jsii.String(\"complianceLevel\"),\n\t\t\t\tenableNonSecurity: jsii.Boolean(false),\n\t\t\t\tpatchFilterGroup: &patchFilterGroupProperty{\n\t\t\t\t\tpatchFilters: []interface{}{\n\t\t\t\t\t\t&patchFilterProperty{\n\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\tvalues: []*string{\n\t\t\t\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tapprovedPatches: []*string{\n\t\tjsii.String(\"approvedPatches\"),\n\t},\n\tapprovedPatchesComplianceLevel: jsii.String(\"approvedPatchesComplianceLevel\"),\n\tapprovedPatchesEnableNonSecurity: jsii.Boolean(false),\n\tdescription: jsii.String(\"description\"),\n\tglobalFilters: &patchFilterGroupProperty{\n\t\tpatchFilters: []interface{}{\n\t\t\t&patchFilterProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tvalues: []*string{\n\t\t\t\t\tjsii.String(\"values\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\toperatingSystem: jsii.String(\"operatingSystem\"),\n\tpatchGroups: []*string{\n\t\tjsii.String(\"patchGroups\"),\n\t},\n\trejectedPatches: []*string{\n\t\tjsii.String(\"rejectedPatches\"),\n\t},\n\trejectedPatchesAction: jsii.String(\"rejectedPatchesAction\"),\n\tsources: []interface{}{\n\t\t&patchSourceProperty{\n\t\t\tconfiguration: jsii.String(\"configuration\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tproducts: []*string{\n\t\t\t\tjsii.String(\"products\"),\n\t\t\t},\n\t\t},\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cfnPatchBaselineProps: ssm.CfnPatchBaselineProps = {\n  name: 'name',\n\n  // the properties below are optional\n  approvalRules: {\n    patchRules: [{\n      approveAfterDays: 123,\n      approveUntilDate: 'approveUntilDate',\n      complianceLevel: 'complianceLevel',\n      enableNonSecurity: false,\n      patchFilterGroup: {\n        patchFilters: [{\n          key: 'key',\n          values: ['values'],\n        }],\n      },\n    }],\n  },\n  approvedPatches: ['approvedPatches'],\n  approvedPatchesComplianceLevel: 'approvedPatchesComplianceLevel',\n  approvedPatchesEnableNonSecurity: false,\n  description: 'description',\n  globalFilters: {\n    patchFilters: [{\n      key: 'key',\n      values: ['values'],\n    }],\n  },\n  operatingSystem: 'operatingSystem',\n  patchGroups: ['patchGroups'],\n  rejectedPatches: ['rejectedPatches'],\n  rejectedPatchesAction: 'rejectedPatchesAction',\n  sources: [{\n    configuration: 'configuration',\n    name: 'name',\n    products: ['products'],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnPatchBaselineProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnPatchBaselineProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPatchBaselineProps: ssm.CfnPatchBaselineProps = {\n  name: 'name',\n\n  // the properties below are optional\n  approvalRules: {\n    patchRules: [{\n      approveAfterDays: 123,\n      approveUntilDate: 'approveUntilDate',\n      complianceLevel: 'complianceLevel',\n      enableNonSecurity: false,\n      patchFilterGroup: {\n        patchFilters: [{\n          key: 'key',\n          values: ['values'],\n        }],\n      },\n    }],\n  },\n  approvedPatches: ['approvedPatches'],\n  approvedPatchesComplianceLevel: 'approvedPatchesComplianceLevel',\n  approvedPatchesEnableNonSecurity: false,\n  description: 'description',\n  globalFilters: {\n    patchFilters: [{\n      key: 'key',\n      values: ['values'],\n    }],\n  },\n  operatingSystem: 'operatingSystem',\n  patchGroups: ['patchGroups'],\n  rejectedPatches: ['rejectedPatches'],\n  rejectedPatchesAction: 'rejectedPatchesAction',\n  sources: [{\n    configuration: 'configuration',\n    name: 'name',\n    products: ['products'],\n  }],\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 20,
        "75": 34,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 11,
        "193": 9,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 30,
        "290": 1
      },
      "fqnsFingerprint": "be3f92b0f50bd0b93cc228a2d853a9bd3c06ef8ed4a1ab415d8fe41df6957059"
    },
    "804446c9362e61e02d00dc49b545fe343bc5bfc7270b180c90c035904ad81dc6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncfn_resource_data_sync = ssm.CfnResourceDataSync(self, \"MyCfnResourceDataSync\",\n    sync_name=\"syncName\",\n\n    # the properties below are optional\n    bucket_name=\"bucketName\",\n    bucket_prefix=\"bucketPrefix\",\n    bucket_region=\"bucketRegion\",\n    kms_key_arn=\"kmsKeyArn\",\n    s3_destination=ssm.CfnResourceDataSync.S3DestinationProperty(\n        bucket_name=\"bucketName\",\n        bucket_region=\"bucketRegion\",\n        sync_format=\"syncFormat\",\n\n        # the properties below are optional\n        bucket_prefix=\"bucketPrefix\",\n        kms_key_arn=\"kmsKeyArn\"\n    ),\n    sync_format=\"syncFormat\",\n    sync_source=ssm.CfnResourceDataSync.SyncSourceProperty(\n        source_regions=[\"sourceRegions\"],\n        source_type=\"sourceType\",\n\n        # the properties below are optional\n        aws_organizations_source=ssm.CfnResourceDataSync.AwsOrganizationsSourceProperty(\n            organization_source_type=\"organizationSourceType\",\n\n            # the properties below are optional\n            organizational_units=[\"organizationalUnits\"]\n        ),\n        include_future_regions=False\n    ),\n    sync_type=\"syncType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCfnResourceDataSync cfnResourceDataSync = new CfnResourceDataSync(this, \"MyCfnResourceDataSync\", new CfnResourceDataSyncProps {\n    SyncName = \"syncName\",\n\n    // the properties below are optional\n    BucketName = \"bucketName\",\n    BucketPrefix = \"bucketPrefix\",\n    BucketRegion = \"bucketRegion\",\n    KmsKeyArn = \"kmsKeyArn\",\n    S3Destination = new S3DestinationProperty {\n        BucketName = \"bucketName\",\n        BucketRegion = \"bucketRegion\",\n        SyncFormat = \"syncFormat\",\n\n        // the properties below are optional\n        BucketPrefix = \"bucketPrefix\",\n        KmsKeyArn = \"kmsKeyArn\"\n    },\n    SyncFormat = \"syncFormat\",\n    SyncSource = new SyncSourceProperty {\n        SourceRegions = new [] { \"sourceRegions\" },\n        SourceType = \"sourceType\",\n\n        // the properties below are optional\n        AwsOrganizationsSource = new AwsOrganizationsSourceProperty {\n            OrganizationSourceType = \"organizationSourceType\",\n\n            // the properties below are optional\n            OrganizationalUnits = new [] { \"organizationalUnits\" }\n        },\n        IncludeFutureRegions = false\n    },\n    SyncType = \"syncType\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCfnResourceDataSync cfnResourceDataSync = CfnResourceDataSync.Builder.create(this, \"MyCfnResourceDataSync\")\n        .syncName(\"syncName\")\n\n        // the properties below are optional\n        .bucketName(\"bucketName\")\n        .bucketPrefix(\"bucketPrefix\")\n        .bucketRegion(\"bucketRegion\")\n        .kmsKeyArn(\"kmsKeyArn\")\n        .s3Destination(S3DestinationProperty.builder()\n                .bucketName(\"bucketName\")\n                .bucketRegion(\"bucketRegion\")\n                .syncFormat(\"syncFormat\")\n\n                // the properties below are optional\n                .bucketPrefix(\"bucketPrefix\")\n                .kmsKeyArn(\"kmsKeyArn\")\n                .build())\n        .syncFormat(\"syncFormat\")\n        .syncSource(SyncSourceProperty.builder()\n                .sourceRegions(List.of(\"sourceRegions\"))\n                .sourceType(\"sourceType\")\n\n                // the properties below are optional\n                .awsOrganizationsSource(AwsOrganizationsSourceProperty.builder()\n                        .organizationSourceType(\"organizationSourceType\")\n\n                        // the properties below are optional\n                        .organizationalUnits(List.of(\"organizationalUnits\"))\n                        .build())\n                .includeFutureRegions(false)\n                .build())\n        .syncType(\"syncType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncfnResourceDataSync := ssm.NewCfnResourceDataSync(this, jsii.String(\"MyCfnResourceDataSync\"), &cfnResourceDataSyncProps{\n\tsyncName: jsii.String(\"syncName\"),\n\n\t// the properties below are optional\n\tbucketName: jsii.String(\"bucketName\"),\n\tbucketPrefix: jsii.String(\"bucketPrefix\"),\n\tbucketRegion: jsii.String(\"bucketRegion\"),\n\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\ts3Destination: &s3DestinationProperty{\n\t\tbucketName: jsii.String(\"bucketName\"),\n\t\tbucketRegion: jsii.String(\"bucketRegion\"),\n\t\tsyncFormat: jsii.String(\"syncFormat\"),\n\n\t\t// the properties below are optional\n\t\tbucketPrefix: jsii.String(\"bucketPrefix\"),\n\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t},\n\tsyncFormat: jsii.String(\"syncFormat\"),\n\tsyncSource: &syncSourceProperty{\n\t\tsourceRegions: []*string{\n\t\t\tjsii.String(\"sourceRegions\"),\n\t\t},\n\t\tsourceType: jsii.String(\"sourceType\"),\n\n\t\t// the properties below are optional\n\t\tawsOrganizationsSource: &awsOrganizationsSourceProperty{\n\t\t\torganizationSourceType: jsii.String(\"organizationSourceType\"),\n\n\t\t\t// the properties below are optional\n\t\t\torganizationalUnits: []*string{\n\t\t\t\tjsii.String(\"organizationalUnits\"),\n\t\t\t},\n\t\t},\n\t\tincludeFutureRegions: jsii.Boolean(false),\n\t},\n\tsyncType: jsii.String(\"syncType\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cfnResourceDataSync = new ssm.CfnResourceDataSync(this, 'MyCfnResourceDataSync', {\n  syncName: 'syncName',\n\n  // the properties below are optional\n  bucketName: 'bucketName',\n  bucketPrefix: 'bucketPrefix',\n  bucketRegion: 'bucketRegion',\n  kmsKeyArn: 'kmsKeyArn',\n  s3Destination: {\n    bucketName: 'bucketName',\n    bucketRegion: 'bucketRegion',\n    syncFormat: 'syncFormat',\n\n    // the properties below are optional\n    bucketPrefix: 'bucketPrefix',\n    kmsKeyArn: 'kmsKeyArn',\n  },\n  syncFormat: 'syncFormat',\n  syncSource: {\n    sourceRegions: ['sourceRegions'],\n    sourceType: 'sourceType',\n\n    // the properties below are optional\n    awsOrganizationsSource: {\n      organizationSourceType: 'organizationSourceType',\n\n      // the properties below are optional\n      organizationalUnits: ['organizationalUnits'],\n    },\n    includeFutureRegions: false,\n  },\n  syncType: 'syncType',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnResourceDataSync"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnResourceDataSync",
        "@aws-cdk/aws-ssm.CfnResourceDataSyncProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResourceDataSync = new ssm.CfnResourceDataSync(this, 'MyCfnResourceDataSync', {\n  syncName: 'syncName',\n\n  // the properties below are optional\n  bucketName: 'bucketName',\n  bucketPrefix: 'bucketPrefix',\n  bucketRegion: 'bucketRegion',\n  kmsKeyArn: 'kmsKeyArn',\n  s3Destination: {\n    bucketName: 'bucketName',\n    bucketRegion: 'bucketRegion',\n    syncFormat: 'syncFormat',\n\n    // the properties below are optional\n    bucketPrefix: 'bucketPrefix',\n    kmsKeyArn: 'kmsKeyArn',\n  },\n  syncFormat: 'syncFormat',\n  syncSource: {\n    sourceRegions: ['sourceRegions'],\n    sourceType: 'sourceType',\n\n    // the properties below are optional\n    awsOrganizationsSource: {\n      organizationSourceType: 'organizationSourceType',\n\n      // the properties below are optional\n      organizationalUnits: ['organizationalUnits'],\n    },\n    includeFutureRegions: false,\n  },\n  syncType: 'syncType',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 18,
        "75": 24,
        "91": 1,
        "104": 1,
        "192": 2,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "212ae9e75a2c018c3a765164908dc314706963bdc354e6d4a8d526fa7726e726"
    },
    "f2b8eed68763a1464bebc46b96836f5e54e8703328c4ba243af0c35cb952eff6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\naws_organizations_source_property = ssm.CfnResourceDataSync.AwsOrganizationsSourceProperty(\n    organization_source_type=\"organizationSourceType\",\n\n    # the properties below are optional\n    organizational_units=[\"organizationalUnits\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nAwsOrganizationsSourceProperty awsOrganizationsSourceProperty = new AwsOrganizationsSourceProperty {\n    OrganizationSourceType = \"organizationSourceType\",\n\n    // the properties below are optional\n    OrganizationalUnits = new [] { \"organizationalUnits\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nAwsOrganizationsSourceProperty awsOrganizationsSourceProperty = AwsOrganizationsSourceProperty.builder()\n        .organizationSourceType(\"organizationSourceType\")\n\n        // the properties below are optional\n        .organizationalUnits(List.of(\"organizationalUnits\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nawsOrganizationsSourceProperty := &awsOrganizationsSourceProperty{\n\torganizationSourceType: jsii.String(\"organizationSourceType\"),\n\n\t// the properties below are optional\n\torganizationalUnits: []*string{\n\t\tjsii.String(\"organizationalUnits\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst awsOrganizationsSourceProperty: ssm.CfnResourceDataSync.AwsOrganizationsSourceProperty = {\n  organizationSourceType: 'organizationSourceType',\n\n  // the properties below are optional\n  organizationalUnits: ['organizationalUnits'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnResourceDataSync.AwsOrganizationsSourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnResourceDataSync.AwsOrganizationsSourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst awsOrganizationsSourceProperty: ssm.CfnResourceDataSync.AwsOrganizationsSourceProperty = {\n  organizationSourceType: 'organizationSourceType',\n\n  // the properties below are optional\n  organizationalUnits: ['organizationalUnits'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "78616b7a7ef64f7004075d2ec3d9e51948efd6ceb46c2c1cb2468ee73280e841"
    },
    "2457eedde40ee62a2579605e860ceb3161e88a2cdb49be38e10c1030167f96ed": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ns3_destination_property = ssm.CfnResourceDataSync.S3DestinationProperty(\n    bucket_name=\"bucketName\",\n    bucket_region=\"bucketRegion\",\n    sync_format=\"syncFormat\",\n\n    # the properties below are optional\n    bucket_prefix=\"bucketPrefix\",\n    kms_key_arn=\"kmsKeyArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nS3DestinationProperty s3DestinationProperty = new S3DestinationProperty {\n    BucketName = \"bucketName\",\n    BucketRegion = \"bucketRegion\",\n    SyncFormat = \"syncFormat\",\n\n    // the properties below are optional\n    BucketPrefix = \"bucketPrefix\",\n    KmsKeyArn = \"kmsKeyArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nS3DestinationProperty s3DestinationProperty = S3DestinationProperty.builder()\n        .bucketName(\"bucketName\")\n        .bucketRegion(\"bucketRegion\")\n        .syncFormat(\"syncFormat\")\n\n        // the properties below are optional\n        .bucketPrefix(\"bucketPrefix\")\n        .kmsKeyArn(\"kmsKeyArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ns3DestinationProperty := &s3DestinationProperty{\n\tbucketName: jsii.String(\"bucketName\"),\n\tbucketRegion: jsii.String(\"bucketRegion\"),\n\tsyncFormat: jsii.String(\"syncFormat\"),\n\n\t// the properties below are optional\n\tbucketPrefix: jsii.String(\"bucketPrefix\"),\n\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst s3DestinationProperty: ssm.CfnResourceDataSync.S3DestinationProperty = {\n  bucketName: 'bucketName',\n  bucketRegion: 'bucketRegion',\n  syncFormat: 'syncFormat',\n\n  // the properties below are optional\n  bucketPrefix: 'bucketPrefix',\n  kmsKeyArn: 'kmsKeyArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnResourceDataSync.S3DestinationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnResourceDataSync.S3DestinationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3DestinationProperty: ssm.CfnResourceDataSync.S3DestinationProperty = {\n  bucketName: 'bucketName',\n  bucketRegion: 'bucketRegion',\n  syncFormat: 'syncFormat',\n\n  // the properties below are optional\n  bucketPrefix: 'bucketPrefix',\n  kmsKeyArn: 'kmsKeyArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "5a4fb61e1c3a37013ac589fd801f8241fa3accb0bb32ee4c7a5d70dd7cdf8e3f"
    },
    "9d9117f601e280bd2f513d25a1f4742d4108c84814335f03dc4fb4186a4c1dc8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nsync_source_property = ssm.CfnResourceDataSync.SyncSourceProperty(\n    source_regions=[\"sourceRegions\"],\n    source_type=\"sourceType\",\n\n    # the properties below are optional\n    aws_organizations_source=ssm.CfnResourceDataSync.AwsOrganizationsSourceProperty(\n        organization_source_type=\"organizationSourceType\",\n\n        # the properties below are optional\n        organizational_units=[\"organizationalUnits\"]\n    ),\n    include_future_regions=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nSyncSourceProperty syncSourceProperty = new SyncSourceProperty {\n    SourceRegions = new [] { \"sourceRegions\" },\n    SourceType = \"sourceType\",\n\n    // the properties below are optional\n    AwsOrganizationsSource = new AwsOrganizationsSourceProperty {\n        OrganizationSourceType = \"organizationSourceType\",\n\n        // the properties below are optional\n        OrganizationalUnits = new [] { \"organizationalUnits\" }\n    },\n    IncludeFutureRegions = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nSyncSourceProperty syncSourceProperty = SyncSourceProperty.builder()\n        .sourceRegions(List.of(\"sourceRegions\"))\n        .sourceType(\"sourceType\")\n\n        // the properties below are optional\n        .awsOrganizationsSource(AwsOrganizationsSourceProperty.builder()\n                .organizationSourceType(\"organizationSourceType\")\n\n                // the properties below are optional\n                .organizationalUnits(List.of(\"organizationalUnits\"))\n                .build())\n        .includeFutureRegions(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nsyncSourceProperty := &syncSourceProperty{\n\tsourceRegions: []*string{\n\t\tjsii.String(\"sourceRegions\"),\n\t},\n\tsourceType: jsii.String(\"sourceType\"),\n\n\t// the properties below are optional\n\tawsOrganizationsSource: &awsOrganizationsSourceProperty{\n\t\torganizationSourceType: jsii.String(\"organizationSourceType\"),\n\n\t\t// the properties below are optional\n\t\torganizationalUnits: []*string{\n\t\t\tjsii.String(\"organizationalUnits\"),\n\t\t},\n\t},\n\tincludeFutureRegions: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst syncSourceProperty: ssm.CfnResourceDataSync.SyncSourceProperty = {\n  sourceRegions: ['sourceRegions'],\n  sourceType: 'sourceType',\n\n  // the properties below are optional\n  awsOrganizationsSource: {\n    organizationSourceType: 'organizationSourceType',\n\n    // the properties below are optional\n    organizationalUnits: ['organizationalUnits'],\n  },\n  includeFutureRegions: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnResourceDataSync.SyncSourceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnResourceDataSync.SyncSourceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst syncSourceProperty: ssm.CfnResourceDataSync.SyncSourceProperty = {\n  sourceRegions: ['sourceRegions'],\n  sourceType: 'sourceType',\n\n  // the properties below are optional\n  awsOrganizationsSource: {\n    organizationSourceType: 'organizationSourceType',\n\n    // the properties below are optional\n    organizationalUnits: ['organizationalUnits'],\n  },\n  includeFutureRegions: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "534f98b6feb7138f344b3109d88623e26702f88e4e6b56bca449515c9100408a"
    },
    "c1de35eb81646744c5ec36e121def84fc72f323090237c7035a52c6e994485d1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncfn_resource_data_sync_props = ssm.CfnResourceDataSyncProps(\n    sync_name=\"syncName\",\n\n    # the properties below are optional\n    bucket_name=\"bucketName\",\n    bucket_prefix=\"bucketPrefix\",\n    bucket_region=\"bucketRegion\",\n    kms_key_arn=\"kmsKeyArn\",\n    s3_destination=ssm.CfnResourceDataSync.S3DestinationProperty(\n        bucket_name=\"bucketName\",\n        bucket_region=\"bucketRegion\",\n        sync_format=\"syncFormat\",\n\n        # the properties below are optional\n        bucket_prefix=\"bucketPrefix\",\n        kms_key_arn=\"kmsKeyArn\"\n    ),\n    sync_format=\"syncFormat\",\n    sync_source=ssm.CfnResourceDataSync.SyncSourceProperty(\n        source_regions=[\"sourceRegions\"],\n        source_type=\"sourceType\",\n\n        # the properties below are optional\n        aws_organizations_source=ssm.CfnResourceDataSync.AwsOrganizationsSourceProperty(\n            organization_source_type=\"organizationSourceType\",\n\n            # the properties below are optional\n            organizational_units=[\"organizationalUnits\"]\n        ),\n        include_future_regions=False\n    ),\n    sync_type=\"syncType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCfnResourceDataSyncProps cfnResourceDataSyncProps = new CfnResourceDataSyncProps {\n    SyncName = \"syncName\",\n\n    // the properties below are optional\n    BucketName = \"bucketName\",\n    BucketPrefix = \"bucketPrefix\",\n    BucketRegion = \"bucketRegion\",\n    KmsKeyArn = \"kmsKeyArn\",\n    S3Destination = new S3DestinationProperty {\n        BucketName = \"bucketName\",\n        BucketRegion = \"bucketRegion\",\n        SyncFormat = \"syncFormat\",\n\n        // the properties below are optional\n        BucketPrefix = \"bucketPrefix\",\n        KmsKeyArn = \"kmsKeyArn\"\n    },\n    SyncFormat = \"syncFormat\",\n    SyncSource = new SyncSourceProperty {\n        SourceRegions = new [] { \"sourceRegions\" },\n        SourceType = \"sourceType\",\n\n        // the properties below are optional\n        AwsOrganizationsSource = new AwsOrganizationsSourceProperty {\n            OrganizationSourceType = \"organizationSourceType\",\n\n            // the properties below are optional\n            OrganizationalUnits = new [] { \"organizationalUnits\" }\n        },\n        IncludeFutureRegions = false\n    },\n    SyncType = \"syncType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCfnResourceDataSyncProps cfnResourceDataSyncProps = CfnResourceDataSyncProps.builder()\n        .syncName(\"syncName\")\n\n        // the properties below are optional\n        .bucketName(\"bucketName\")\n        .bucketPrefix(\"bucketPrefix\")\n        .bucketRegion(\"bucketRegion\")\n        .kmsKeyArn(\"kmsKeyArn\")\n        .s3Destination(S3DestinationProperty.builder()\n                .bucketName(\"bucketName\")\n                .bucketRegion(\"bucketRegion\")\n                .syncFormat(\"syncFormat\")\n\n                // the properties below are optional\n                .bucketPrefix(\"bucketPrefix\")\n                .kmsKeyArn(\"kmsKeyArn\")\n                .build())\n        .syncFormat(\"syncFormat\")\n        .syncSource(SyncSourceProperty.builder()\n                .sourceRegions(List.of(\"sourceRegions\"))\n                .sourceType(\"sourceType\")\n\n                // the properties below are optional\n                .awsOrganizationsSource(AwsOrganizationsSourceProperty.builder()\n                        .organizationSourceType(\"organizationSourceType\")\n\n                        // the properties below are optional\n                        .organizationalUnits(List.of(\"organizationalUnits\"))\n                        .build())\n                .includeFutureRegions(false)\n                .build())\n        .syncType(\"syncType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncfnResourceDataSyncProps := &cfnResourceDataSyncProps{\n\tsyncName: jsii.String(\"syncName\"),\n\n\t// the properties below are optional\n\tbucketName: jsii.String(\"bucketName\"),\n\tbucketPrefix: jsii.String(\"bucketPrefix\"),\n\tbucketRegion: jsii.String(\"bucketRegion\"),\n\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\ts3Destination: &s3DestinationProperty{\n\t\tbucketName: jsii.String(\"bucketName\"),\n\t\tbucketRegion: jsii.String(\"bucketRegion\"),\n\t\tsyncFormat: jsii.String(\"syncFormat\"),\n\n\t\t// the properties below are optional\n\t\tbucketPrefix: jsii.String(\"bucketPrefix\"),\n\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t},\n\tsyncFormat: jsii.String(\"syncFormat\"),\n\tsyncSource: &syncSourceProperty{\n\t\tsourceRegions: []*string{\n\t\t\tjsii.String(\"sourceRegions\"),\n\t\t},\n\t\tsourceType: jsii.String(\"sourceType\"),\n\n\t\t// the properties below are optional\n\t\tawsOrganizationsSource: &awsOrganizationsSourceProperty{\n\t\t\torganizationSourceType: jsii.String(\"organizationSourceType\"),\n\n\t\t\t// the properties below are optional\n\t\t\torganizationalUnits: []*string{\n\t\t\t\tjsii.String(\"organizationalUnits\"),\n\t\t\t},\n\t\t},\n\t\tincludeFutureRegions: jsii.Boolean(false),\n\t},\n\tsyncType: jsii.String(\"syncType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst cfnResourceDataSyncProps: ssm.CfnResourceDataSyncProps = {\n  syncName: 'syncName',\n\n  // the properties below are optional\n  bucketName: 'bucketName',\n  bucketPrefix: 'bucketPrefix',\n  bucketRegion: 'bucketRegion',\n  kmsKeyArn: 'kmsKeyArn',\n  s3Destination: {\n    bucketName: 'bucketName',\n    bucketRegion: 'bucketRegion',\n    syncFormat: 'syncFormat',\n\n    // the properties below are optional\n    bucketPrefix: 'bucketPrefix',\n    kmsKeyArn: 'kmsKeyArn',\n  },\n  syncFormat: 'syncFormat',\n  syncSource: {\n    sourceRegions: ['sourceRegions'],\n    sourceType: 'sourceType',\n\n    // the properties below are optional\n    awsOrganizationsSource: {\n      organizationSourceType: 'organizationSourceType',\n\n      // the properties below are optional\n      organizationalUnits: ['organizationalUnits'],\n    },\n    includeFutureRegions: false,\n  },\n  syncType: 'syncType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CfnResourceDataSyncProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CfnResourceDataSyncProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResourceDataSyncProps: ssm.CfnResourceDataSyncProps = {\n  syncName: 'syncName',\n\n  // the properties below are optional\n  bucketName: 'bucketName',\n  bucketPrefix: 'bucketPrefix',\n  bucketRegion: 'bucketRegion',\n  kmsKeyArn: 'kmsKeyArn',\n  s3Destination: {\n    bucketName: 'bucketName',\n    bucketRegion: 'bucketRegion',\n    syncFormat: 'syncFormat',\n\n    // the properties below are optional\n    bucketPrefix: 'bucketPrefix',\n    kmsKeyArn: 'kmsKeyArn',\n  },\n  syncFormat: 'syncFormat',\n  syncSource: {\n    sourceRegions: ['sourceRegions'],\n    sourceType: 'sourceType',\n\n    // the properties below are optional\n    awsOrganizationsSource: {\n      organizationSourceType: 'organizationSourceType',\n\n      // the properties below are optional\n      organizationalUnits: ['organizationalUnits'],\n    },\n    includeFutureRegions: false,\n  },\n  syncType: 'syncType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 17,
        "75": 24,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "996a670db35170058dfa97948b346f67f7578039e16497457b6f01ac7da9cbeb"
    },
    "ddd2e3593b98407f01f8e905e0620ee6ab4a9cc37eb800ab8a4edc44e347b1e8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\ncommon_string_parameter_attributes = ssm.CommonStringParameterAttributes(\n    parameter_name=\"parameterName\",\n\n    # the properties below are optional\n    simple_name=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nCommonStringParameterAttributes commonStringParameterAttributes = new CommonStringParameterAttributes {\n    ParameterName = \"parameterName\",\n\n    // the properties below are optional\n    SimpleName = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nCommonStringParameterAttributes commonStringParameterAttributes = CommonStringParameterAttributes.builder()\n        .parameterName(\"parameterName\")\n\n        // the properties below are optional\n        .simpleName(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\ncommonStringParameterAttributes := &commonStringParameterAttributes{\n\tparameterName: jsii.String(\"parameterName\"),\n\n\t// the properties below are optional\n\tsimpleName: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst commonStringParameterAttributes: ssm.CommonStringParameterAttributes = {\n  parameterName: 'parameterName',\n\n  // the properties below are optional\n  simpleName: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.CommonStringParameterAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.CommonStringParameterAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst commonStringParameterAttributes: ssm.CommonStringParameterAttributes = {\n  parameterName: 'parameterName',\n\n  // the properties below are optional\n  simpleName: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "35717163196202797901b3cdbc737df197df0983107cb8c439d1ef5dc7b9beb6"
    },
    "3d826f1e093dfa254892931c1db48c58ce6193041824261d4b91de8be37199f8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ssm as ssm\n\nparameter_options = ssm.ParameterOptions(\n    allowed_pattern=\"allowedPattern\",\n    description=\"description\",\n    parameter_name=\"parameterName\",\n    simple_name=False,\n    tier=ssm.ParameterTier.ADVANCED\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.SSM;\n\nParameterOptions parameterOptions = new ParameterOptions {\n    AllowedPattern = \"allowedPattern\",\n    Description = \"description\",\n    ParameterName = \"parameterName\",\n    SimpleName = false,\n    Tier = ParameterTier.ADVANCED\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ssm.*;\n\nParameterOptions parameterOptions = ParameterOptions.builder()\n        .allowedPattern(\"allowedPattern\")\n        .description(\"description\")\n        .parameterName(\"parameterName\")\n        .simpleName(false)\n        .tier(ParameterTier.ADVANCED)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ssm \"github.com/aws-samples/dummy/awscdkawsssm\"\nparameterOptions := &parameterOptions{\n\tallowedPattern: jsii.String(\"allowedPattern\"),\n\tdescription: jsii.String(\"description\"),\n\tparameterName: jsii.String(\"parameterName\"),\n\tsimpleName: jsii.Boolean(false),\n\ttier: ssm.parameterTier_ADVANCED,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\nconst parameterOptions: ssm.ParameterOptions = {\n  allowedPattern: 'allowedPattern',\n  description: 'description',\n  parameterName: 'parameterName',\n  simpleName: false,\n  tier: ssm.ParameterTier.ADVANCED,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.ParameterOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.ParameterOptions",
        "@aws-cdk/aws-ssm.ParameterTier",
        "@aws-cdk/aws-ssm.ParameterTier#ADVANCED"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ssm from '@aws-cdk/aws-ssm';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst parameterOptions: ssm.ParameterOptions = {\n  allowedPattern: 'allowedPattern',\n  description: 'description',\n  parameterName: 'parameterName',\n  simpleName: false,\n  tier: ssm.ParameterTier.ADVANCED,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "08e41ce1d71fcf0b87dfb8aa8805d35316c9c00c496722a9e9f2db8ffa00f68e"
    },
    "e2505fa567af452b74b5bb94d0c6d6af9bdb8d318714cb2a02c450c2a7ff70be": {
      "translations": {
        "python": {
          "source": "ssm.StringParameter(self, \"Parameter\",\n    allowed_pattern=\".*\",\n    description=\"The value Foo\",\n    parameter_name=\"FooParameter\",\n    string_value=\"Foo\",\n    tier=ssm.ParameterTier.ADVANCED\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new StringParameter(this, \"Parameter\", new StringParameterProps {\n    AllowedPattern = \".*\",\n    Description = \"The value Foo\",\n    ParameterName = \"FooParameter\",\n    StringValue = \"Foo\",\n    Tier = ParameterTier.ADVANCED\n});",
          "version": "1"
        },
        "java": {
          "source": "StringParameter.Builder.create(this, \"Parameter\")\n        .allowedPattern(\".*\")\n        .description(\"The value Foo\")\n        .parameterName(\"FooParameter\")\n        .stringValue(\"Foo\")\n        .tier(ParameterTier.ADVANCED)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "ssm.NewStringParameter(this, jsii.String(\"Parameter\"), &stringParameterProps{\n\tallowedPattern: jsii.String(\".*\"),\n\tdescription: jsii.String(\"The value Foo\"),\n\tparameterName: jsii.String(\"FooParameter\"),\n\tstringValue: jsii.String(\"Foo\"),\n\ttier: ssm.parameterTier_ADVANCED,\n})",
          "version": "1"
        },
        "$": {
          "source": "new ssm.StringParameter(this, 'Parameter', {\n  allowedPattern: '.*',\n  description: 'The value Foo',\n  parameterName: 'FooParameter',\n  stringValue: 'Foo',\n  tier: ssm.ParameterTier.ADVANCED,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.ParameterTier"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.ParameterTier",
        "@aws-cdk/aws-ssm.ParameterTier#ADVANCED",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameterProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as ssm from '@aws-cdk/aws-ssm';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew ssm.StringParameter(this, 'Parameter', {\n  allowedPattern: '.*',\n  description: 'The value Foo',\n  parameterName: 'FooParameter',\n  stringValue: 'Foo',\n  tier: ssm.ParameterTier.ADVANCED,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "2f5992d9650d760f72e0a3f9259124f08389c855437e0cc8ffb6e73547ad756c"
    },
    "83d00b9c34fc5b7477c3d5caa5ae191d6ccf6a1e29a52611ba33ef294004c98d": {
      "translations": {
        "python": {
          "source": "# Retrieve the latest value of the non-secret parameter\n# with name \"/My/String/Parameter\".\nstring_value = ssm.StringParameter.from_string_parameter_attributes(self, \"MyValue\",\n    parameter_name=\"/My/Public/Parameter\"\n).string_value\nstring_value_version_from_token = ssm.StringParameter.from_string_parameter_attributes(self, \"MyValueVersionFromToken\",\n    parameter_name=\"/My/Public/Parameter\",\n    # parameter version from token\n    version=parameter_version\n).string_value\n\n# Retrieve a specific version of the secret (SecureString) parameter.\n# 'version' is always required.\nsecret_value = ssm.StringParameter.from_secure_string_parameter_attributes(self, \"MySecureValue\",\n    parameter_name=\"/My/Secret/Parameter\",\n    version=5\n)\nsecret_value_version_from_token = ssm.StringParameter.from_secure_string_parameter_attributes(self, \"MySecureValueVersionFromToken\",\n    parameter_name=\"/My/Secret/Parameter\",\n    # parameter version from token\n    version=parameter_version\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nstring stringValue = StringParameter.FromStringParameterAttributes(this, \"MyValue\", new StringParameterAttributes {\n    ParameterName = \"/My/Public/Parameter\"\n}).StringValue;\nstring stringValueVersionFromToken = StringParameter.FromStringParameterAttributes(this, \"MyValueVersionFromToken\", new StringParameterAttributes {\n    ParameterName = \"/My/Public/Parameter\",\n    // parameter version from token\n    Version = parameterVersion\n}).StringValue;\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nIStringParameter secretValue = StringParameter.FromSecureStringParameterAttributes(this, \"MySecureValue\", new SecureStringParameterAttributes {\n    ParameterName = \"/My/Secret/Parameter\",\n    Version = 5\n});\nIStringParameter secretValueVersionFromToken = StringParameter.FromSecureStringParameterAttributes(this, \"MySecureValueVersionFromToken\", new SecureStringParameterAttributes {\n    ParameterName = \"/My/Secret/Parameter\",\n    // parameter version from token\n    Version = parameterVersion\n});",
          "version": "1"
        },
        "java": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nString stringValue = StringParameter.fromStringParameterAttributes(this, \"MyValue\", StringParameterAttributes.builder()\n        .parameterName(\"/My/Public/Parameter\")\n        .build()).getStringValue();\nString stringValueVersionFromToken = StringParameter.fromStringParameterAttributes(this, \"MyValueVersionFromToken\", StringParameterAttributes.builder()\n        .parameterName(\"/My/Public/Parameter\")\n        // parameter version from token\n        .version(parameterVersion)\n        .build()).getStringValue();\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nIStringParameter secretValue = StringParameter.fromSecureStringParameterAttributes(this, \"MySecureValue\", SecureStringParameterAttributes.builder()\n        .parameterName(\"/My/Secret/Parameter\")\n        .version(5)\n        .build());\nIStringParameter secretValueVersionFromToken = StringParameter.fromSecureStringParameterAttributes(this, \"MySecureValueVersionFromToken\", SecureStringParameterAttributes.builder()\n        .parameterName(\"/My/Secret/Parameter\")\n        // parameter version from token\n        .version(parameterVersion)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nstringValue := ssm.stringParameter.fromStringParameterAttributes(this, jsii.String(\"MyValue\"), &stringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Public/Parameter\"),\n}).stringValue\nstringValueVersionFromToken := ssm.stringParameter.fromStringParameterAttributes(this, jsii.String(\"MyValueVersionFromToken\"), &stringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Public/Parameter\"),\n\t// parameter version from token\n\tversion: parameterVersion,\n}).stringValue\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nsecretValue := ssm.stringParameter.fromSecureStringParameterAttributes(this, jsii.String(\"MySecureValue\"), &secureStringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Secret/Parameter\"),\n\tversion: jsii.Number(5),\n})\nsecretValueVersionFromToken := ssm.stringParameter.fromSecureStringParameterAttributes(this, jsii.String(\"MySecureValueVersionFromToken\"), &secureStringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Secret/Parameter\"),\n\t// parameter version from token\n\tversion: parameterVersion,\n})",
          "version": "1"
        },
        "$": {
          "source": "    // Retrieve the latest value of the non-secret parameter\n    // with name \"/My/String/Parameter\".\n    const stringValue = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValue', {\n      parameterName: '/My/Public/Parameter',\n      // 'version' can be specified but is optional.\n    }).stringValue;\n    const stringValueVersionFromToken = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValueVersionFromToken', {\n      parameterName: '/My/Public/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    }).stringValue;\n\n    // Retrieve a specific version of the secret (SecureString) parameter.\n    // 'version' is always required.\n    const secretValue = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValue', {\n      parameterName: '/My/Secret/Parameter',\n      version: 5,\n    });\n    const secretValueVersionFromToken = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValueVersionFromToken', {\n      parameterName: '/My/Secret/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.SecureStringParameterAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.IStringParameter",
        "@aws-cdk/aws-ssm.IStringParameter#stringValue",
        "@aws-cdk/aws-ssm.SecureStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameter#fromSecureStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameter#fromStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameterAttributes",
        "constructs.Construct"
      ],
      "fullSource": "/// !cdk-integ *\nimport * as cdk from '@aws-cdk/core';\nimport * as ssm from '../lib';\n\nclass CreatingStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    new ssm.StringParameter(this, 'String', {\n      parameterName: '/My/Public/Parameter',\n      stringValue: 'abcdef',\n    });\n  }\n}\n\nclass UsingStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    // Parameter that contains version number, will be used to pass\n    // version value from token.\n    const parameterVersion = new cdk.CfnParameter(this, 'MyParameterVersion', {\n      type: 'Number',\n      default: 1,\n    }).valueAsNumber;\n\n    /// !show\n    // Retrieve the latest value of the non-secret parameter\n    // with name \"/My/String/Parameter\".\n    const stringValue = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValue', {\n      parameterName: '/My/Public/Parameter',\n      // 'version' can be specified but is optional.\n    }).stringValue;\n    const stringValueVersionFromToken = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValueVersionFromToken', {\n      parameterName: '/My/Public/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    }).stringValue;\n\n    // Retrieve a specific version of the secret (SecureString) parameter.\n    // 'version' is always required.\n    const secretValue = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValue', {\n      parameterName: '/My/Secret/Parameter',\n      version: 5,\n    });\n    const secretValueVersionFromToken = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValueVersionFromToken', {\n      parameterName: '/My/Secret/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    });\n\n    /// !hide\n\n    new cdk.CfnResource(this, 'Dummy', { type: 'AWS::SNS::Topic' });\n    new cdk.CfnOutput(this, 'TheValue', { value: stringValue });\n    new cdk.CfnOutput(this, 'TheValueVersionFromToken', { value: stringValueVersionFromToken });\n\n    // Cannot be provisioned so cannot be actually used\n    Array.isArray(secretValue);\n    Array.isArray(secretValueVersionFromToken);\n  }\n}\n\nconst app = new cdk.App();\n\nconst creating = new CreatingStack(app, 'sspms-creating');\nconst using = new UsingStack(app, 'sspms-using');\nusing.addDependency(creating);\n\napp.synth();\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 8,
        "75": 27,
        "104": 4,
        "193": 4,
        "194": 10,
        "196": 4,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 7
      },
      "fqnsFingerprint": "8adedf873bc2d262211dadeee067d235e0afeaaf8c7aced0d18de6ec41e27b75"
    },
    "bb23f441f698c012182d8fdf2ecb31f999c9357d849697c0359d6fc31e2f32a1": {
      "translations": {
        "python": {
          "source": "# Create a new SSM Parameter holding a String\nparam = ssm.StringParameter(stack, \"StringParameter\",\n    # description: 'Some user-friendly description',\n    # name: 'ParameterName',\n    string_value=\"Initial parameter value\"\n)\n\n# Grant read access to some Role\nparam.grant_read(role)\n\n# Create a new SSM Parameter holding a StringList\nlist_parameter = ssm.StringListParameter(stack, \"StringListParameter\",\n    # description: 'Some user-friendly description',\n    # name: 'ParameterName',\n    string_list_value=[\"Initial parameter value A\", \"Initial parameter value B\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Create a new SSM Parameter holding a String\nStringParameter param = new StringParameter(stack, \"StringParameter\", new StringParameterProps {\n    // description: 'Some user-friendly description',\n    // name: 'ParameterName',\n    StringValue = \"Initial parameter value\"\n});\n\n// Grant read access to some Role\nparam.GrantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nStringListParameter listParameter = new StringListParameter(stack, \"StringListParameter\", new StringListParameterProps {\n    // description: 'Some user-friendly description',\n    // name: 'ParameterName',\n    StringListValue = new [] { \"Initial parameter value A\", \"Initial parameter value B\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Create a new SSM Parameter holding a String\nStringParameter param = StringParameter.Builder.create(stack, \"StringParameter\")\n        // description: 'Some user-friendly description',\n        // name: 'ParameterName',\n        .stringValue(\"Initial parameter value\")\n        .build();\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nStringListParameter listParameter = StringListParameter.Builder.create(stack, \"StringListParameter\")\n        // description: 'Some user-friendly description',\n        // name: 'ParameterName',\n        .stringListValue(List.of(\"Initial parameter value A\", \"Initial parameter value B\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Create a new SSM Parameter holding a String\nparam := ssm.NewStringParameter(stack, jsii.String(\"StringParameter\"), &stringParameterProps{\n\t// description: 'Some user-friendly description',\n\t// name: 'ParameterName',\n\tstringValue: jsii.String(\"Initial parameter value\"),\n})\n\n// Grant read access to some Role\nparam.grantRead(role)\n\n// Create a new SSM Parameter holding a StringList\nlistParameter := ssm.NewStringListParameter(stack, jsii.String(\"StringListParameter\"), &stringListParameterProps{\n\t// description: 'Some user-friendly description',\n\t// name: 'ParameterName',\n\tstringListValue: []*string{\n\t\tjsii.String(\"Initial parameter value A\"),\n\t\tjsii.String(\"Initial parameter value B\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Create a new SSM Parameter holding a String\nconst param = new ssm.StringParameter(stack, 'StringParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringValue: 'Initial parameter value',\n  // allowedPattern: '.*',\n});\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nconst listParameter = new ssm.StringListParameter(stack, 'StringListParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringListValue: ['Initial parameter value A', 'Initial parameter value B'],\n  // allowedPattern: '.*',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.StringListParameter"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-ssm.StringListParameter",
        "@aws-cdk/aws-ssm.StringListParameterProps",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameterProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\nimport * as ssm from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'SSM-Parameter');\n\nconst role = new iam.Role(stack, 'UserRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\n/// !show\n// Create a new SSM Parameter holding a String\nconst param = new ssm.StringParameter(stack, 'StringParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringValue: 'Initial parameter value',\n  // allowedPattern: '.*',\n});\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nconst listParameter = new ssm.StringListParameter(stack, 'StringListParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringListValue: ['Initial parameter value A', 'Initial parameter value B'],\n  // allowedPattern: '.*',\n});\n/// !hide\n\nnew cdk.CfnOutput(stack, 'StringListOutput', {\n  value: cdk.Fn.join('+', listParameter.stringListValue),\n});\n\nnew cdk.CfnOutput(stack, 'ParamArn', {\n  value: param.parameterArn,\n});\n\napp.synth();\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "192": 1,
        "193": 2,
        "194": 3,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2
      },
      "fqnsFingerprint": "fbbfc417081875d059dc8f43ba235a72cabe8c26b42b3b9a7d25d846258b0685"
    },
    "c591d034490c4a4a54126fa49e58b33094b81787d1fc6bdfa3b9574de5f746bc": {
      "translations": {
        "python": {
          "source": "# Create a new SSM Parameter holding a String\nparam = ssm.StringParameter(stack, \"StringParameter\",\n    # description: 'Some user-friendly description',\n    # name: 'ParameterName',\n    string_value=\"Initial parameter value\"\n)\n\n# Grant read access to some Role\nparam.grant_read(role)\n\n# Create a new SSM Parameter holding a StringList\nlist_parameter = ssm.StringListParameter(stack, \"StringListParameter\",\n    # description: 'Some user-friendly description',\n    # name: 'ParameterName',\n    string_list_value=[\"Initial parameter value A\", \"Initial parameter value B\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Create a new SSM Parameter holding a String\nStringParameter param = new StringParameter(stack, \"StringParameter\", new StringParameterProps {\n    // description: 'Some user-friendly description',\n    // name: 'ParameterName',\n    StringValue = \"Initial parameter value\"\n});\n\n// Grant read access to some Role\nparam.GrantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nStringListParameter listParameter = new StringListParameter(stack, \"StringListParameter\", new StringListParameterProps {\n    // description: 'Some user-friendly description',\n    // name: 'ParameterName',\n    StringListValue = new [] { \"Initial parameter value A\", \"Initial parameter value B\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Create a new SSM Parameter holding a String\nStringParameter param = StringParameter.Builder.create(stack, \"StringParameter\")\n        // description: 'Some user-friendly description',\n        // name: 'ParameterName',\n        .stringValue(\"Initial parameter value\")\n        .build();\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nStringListParameter listParameter = StringListParameter.Builder.create(stack, \"StringListParameter\")\n        // description: 'Some user-friendly description',\n        // name: 'ParameterName',\n        .stringListValue(List.of(\"Initial parameter value A\", \"Initial parameter value B\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Create a new SSM Parameter holding a String\nparam := ssm.NewStringParameter(stack, jsii.String(\"StringParameter\"), &stringParameterProps{\n\t// description: 'Some user-friendly description',\n\t// name: 'ParameterName',\n\tstringValue: jsii.String(\"Initial parameter value\"),\n})\n\n// Grant read access to some Role\nparam.grantRead(role)\n\n// Create a new SSM Parameter holding a StringList\nlistParameter := ssm.NewStringListParameter(stack, jsii.String(\"StringListParameter\"), &stringListParameterProps{\n\t// description: 'Some user-friendly description',\n\t// name: 'ParameterName',\n\tstringListValue: []*string{\n\t\tjsii.String(\"Initial parameter value A\"),\n\t\tjsii.String(\"Initial parameter value B\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Create a new SSM Parameter holding a String\nconst param = new ssm.StringParameter(stack, 'StringParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringValue: 'Initial parameter value',\n  // allowedPattern: '.*',\n});\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nconst listParameter = new ssm.StringListParameter(stack, 'StringListParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringListValue: ['Initial parameter value A', 'Initial parameter value B'],\n  // allowedPattern: '.*',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.StringListParameterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-ssm.StringListParameter",
        "@aws-cdk/aws-ssm.StringListParameterProps",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameterProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\nimport * as ssm from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'SSM-Parameter');\n\nconst role = new iam.Role(stack, 'UserRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\n/// !show\n// Create a new SSM Parameter holding a String\nconst param = new ssm.StringParameter(stack, 'StringParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringValue: 'Initial parameter value',\n  // allowedPattern: '.*',\n});\n\n// Grant read access to some Role\nparam.grantRead(role);\n\n// Create a new SSM Parameter holding a StringList\nconst listParameter = new ssm.StringListParameter(stack, 'StringListParameter', {\n  // description: 'Some user-friendly description',\n  // name: 'ParameterName',\n  stringListValue: ['Initial parameter value A', 'Initial parameter value B'],\n  // allowedPattern: '.*',\n});\n/// !hide\n\nnew cdk.CfnOutput(stack, 'StringListOutput', {\n  value: cdk.Fn.join('+', listParameter.stringListValue),\n});\n\nnew cdk.CfnOutput(stack, 'ParamArn', {\n  value: param.parameterArn,\n});\n\napp.synth();\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 13,
        "192": 1,
        "193": 2,
        "194": 3,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2
      },
      "fqnsFingerprint": "fbbfc417081875d059dc8f43ba235a72cabe8c26b42b3b9a7d25d846258b0685"
    },
    "21b6c5e1a9b0165f77d7501d2a90ee001a8db5f1517001d86a9078d319d8b212": {
      "translations": {
        "python": {
          "source": "vpc = ec2.Vpc.from_vpc_attributes(self, \"VPC\",\n    vpc_id=\"vpc-1234\",\n    availability_zones=[\"us-east-1a\", \"us-east-1b\"],\n\n    # Either pass literals for all IDs\n    public_subnet_ids=[\"s-12345\", \"s-67890\"],\n\n    # OR: import a list of known length\n    private_subnet_ids=Fn.import_list_value(\"PrivateSubnetIds\", 2),\n\n    # OR: split an imported string to a list of known length\n    isolated_subnet_ids=Fn.split(\",\", ssm.StringParameter.value_for_string_parameter(self, \"MyParameter\"), 2)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IVpc vpc = Vpc.FromVpcAttributes(this, \"VPC\", new VpcAttributes {\n    VpcId = \"vpc-1234\",\n    AvailabilityZones = new [] { \"us-east-1a\", \"us-east-1b\" },\n\n    // Either pass literals for all IDs\n    PublicSubnetIds = new [] { \"s-12345\", \"s-67890\" },\n\n    // OR: import a list of known length\n    PrivateSubnetIds = Fn.ImportListValue(\"PrivateSubnetIds\", 2),\n\n    // OR: split an imported string to a list of known length\n    IsolatedSubnetIds = Fn.Split(\",\", StringParameter.ValueForStringParameter(this, \"MyParameter\"), 2)\n});",
          "version": "1"
        },
        "java": {
          "source": "IVpc vpc = Vpc.fromVpcAttributes(this, \"VPC\", VpcAttributes.builder()\n        .vpcId(\"vpc-1234\")\n        .availabilityZones(List.of(\"us-east-1a\", \"us-east-1b\"))\n\n        // Either pass literals for all IDs\n        .publicSubnetIds(List.of(\"s-12345\", \"s-67890\"))\n\n        // OR: import a list of known length\n        .privateSubnetIds(Fn.importListValue(\"PrivateSubnetIds\", 2))\n\n        // OR: split an imported string to a list of known length\n        .isolatedSubnetIds(Fn.split(\",\", StringParameter.valueForStringParameter(this, \"MyParameter\"), 2))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "vpc := ec2.vpc.fromVpcAttributes(this, jsii.String(\"VPC\"), &vpcAttributes{\n\tvpcId: jsii.String(\"vpc-1234\"),\n\tavailabilityZones: []*string{\n\t\tjsii.String(\"us-east-1a\"),\n\t\tjsii.String(\"us-east-1b\"),\n\t},\n\n\t// Either pass literals for all IDs\n\tpublicSubnetIds: []*string{\n\t\tjsii.String(\"s-12345\"),\n\t\tjsii.String(\"s-67890\"),\n\t},\n\n\t// OR: import a list of known length\n\tprivateSubnetIds: fn.importListValue(jsii.String(\"PrivateSubnetIds\"), jsii.Number(2)),\n\n\t// OR: split an imported string to a list of known length\n\tisolatedSubnetIds: *fn.split(jsii.String(\",\"), ssm.stringParameter.valueForStringParameter(this, jsii.String(\"MyParameter\")), jsii.Number(2)),\n})",
          "version": "1"
        },
        "$": {
          "source": "const vpc = ec2.Vpc.fromVpcAttributes(this, 'VPC', {\n  vpcId: 'vpc-1234',\n  availabilityZones: ['us-east-1a', 'us-east-1b'],\n\n  // Either pass literals for all IDs\n  publicSubnetIds: ['s-12345', 's-67890'],\n\n  // OR: import a list of known length\n  privateSubnetIds: Fn.importListValue('PrivateSubnetIds', 2),\n\n  // OR: split an imported string to a list of known length\n  isolatedSubnetIds: Fn.split(',', ssm.StringParameter.valueForStringParameter(this, `MyParameter`), 2),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.StringParameter"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-ec2.Vpc#fromVpcAttributes",
        "@aws-cdk/aws-ec2.VpcAttributes",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameter#valueForStringParameter",
        "@aws-cdk/core.Fn#importListValue",
        "@aws-cdk/core.Fn#split",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Aspects, Construct, Duration, Fn, Size, Stack, StackProps } from '@aws-cdk/core';\nimport ec2 = require('@aws-cdk/aws-ec2');\nimport s3 = require('@aws-cdk/aws-s3');\nimport iam = require('@aws-cdk/aws-iam');\nimport logs = require('@aws-cdk/aws-logs');\nimport ssm = require('@aws-cdk/aws-ssm');\nimport autoscaling = require('@aws-cdk/aws-autoscaling');\nimport elbv2 = require('@aws-cdk/aws-elasticloadbalancingv2');\nimport rds = require('@aws-cdk/aws-rds');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst vpc = ec2.Vpc.fromVpcAttributes(this, 'VPC', {\n  vpcId: 'vpc-1234',\n  availabilityZones: ['us-east-1a', 'us-east-1b'],\n\n  // Either pass literals for all IDs\n  publicSubnetIds: ['s-12345', 's-67890'],\n\n  // OR: import a list of known length\n  privateSubnetIds: Fn.importListValue('PrivateSubnetIds', 2),\n\n  // OR: split an imported string to a list of known length\n  isolatedSubnetIds: Fn.split(',', ssm.StringParameter.valueForStringParameter(this, `MyParameter`), 2),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 8,
        "14": 1,
        "75": 16,
        "104": 2,
        "192": 2,
        "193": 1,
        "194": 6,
        "196": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 5
      },
      "fqnsFingerprint": "0083befd0616fe1eba633993eda8be833195c435dc0c67e841616ff252e6ad4d"
    },
    "a241853db7439840c7e6324729d033b0e979a3d966ea49a321104f85f34c7021": {
      "translations": {
        "python": {
          "source": "# Retrieve the latest value of the non-secret parameter\n# with name \"/My/String/Parameter\".\nstring_value = ssm.StringParameter.from_string_parameter_attributes(self, \"MyValue\",\n    parameter_name=\"/My/Public/Parameter\"\n).string_value\nstring_value_version_from_token = ssm.StringParameter.from_string_parameter_attributes(self, \"MyValueVersionFromToken\",\n    parameter_name=\"/My/Public/Parameter\",\n    # parameter version from token\n    version=parameter_version\n).string_value\n\n# Retrieve a specific version of the secret (SecureString) parameter.\n# 'version' is always required.\nsecret_value = ssm.StringParameter.from_secure_string_parameter_attributes(self, \"MySecureValue\",\n    parameter_name=\"/My/Secret/Parameter\",\n    version=5\n)\nsecret_value_version_from_token = ssm.StringParameter.from_secure_string_parameter_attributes(self, \"MySecureValueVersionFromToken\",\n    parameter_name=\"/My/Secret/Parameter\",\n    # parameter version from token\n    version=parameter_version\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nstring stringValue = StringParameter.FromStringParameterAttributes(this, \"MyValue\", new StringParameterAttributes {\n    ParameterName = \"/My/Public/Parameter\"\n}).StringValue;\nstring stringValueVersionFromToken = StringParameter.FromStringParameterAttributes(this, \"MyValueVersionFromToken\", new StringParameterAttributes {\n    ParameterName = \"/My/Public/Parameter\",\n    // parameter version from token\n    Version = parameterVersion\n}).StringValue;\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nIStringParameter secretValue = StringParameter.FromSecureStringParameterAttributes(this, \"MySecureValue\", new SecureStringParameterAttributes {\n    ParameterName = \"/My/Secret/Parameter\",\n    Version = 5\n});\nIStringParameter secretValueVersionFromToken = StringParameter.FromSecureStringParameterAttributes(this, \"MySecureValueVersionFromToken\", new SecureStringParameterAttributes {\n    ParameterName = \"/My/Secret/Parameter\",\n    // parameter version from token\n    Version = parameterVersion\n});",
          "version": "1"
        },
        "java": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nString stringValue = StringParameter.fromStringParameterAttributes(this, \"MyValue\", StringParameterAttributes.builder()\n        .parameterName(\"/My/Public/Parameter\")\n        .build()).getStringValue();\nString stringValueVersionFromToken = StringParameter.fromStringParameterAttributes(this, \"MyValueVersionFromToken\", StringParameterAttributes.builder()\n        .parameterName(\"/My/Public/Parameter\")\n        // parameter version from token\n        .version(parameterVersion)\n        .build()).getStringValue();\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nIStringParameter secretValue = StringParameter.fromSecureStringParameterAttributes(this, \"MySecureValue\", SecureStringParameterAttributes.builder()\n        .parameterName(\"/My/Secret/Parameter\")\n        .version(5)\n        .build());\nIStringParameter secretValueVersionFromToken = StringParameter.fromSecureStringParameterAttributes(this, \"MySecureValueVersionFromToken\", SecureStringParameterAttributes.builder()\n        .parameterName(\"/My/Secret/Parameter\")\n        // parameter version from token\n        .version(parameterVersion)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Retrieve the latest value of the non-secret parameter\n// with name \"/My/String/Parameter\".\nstringValue := ssm.stringParameter.fromStringParameterAttributes(this, jsii.String(\"MyValue\"), &stringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Public/Parameter\"),\n}).stringValue\nstringValueVersionFromToken := ssm.stringParameter.fromStringParameterAttributes(this, jsii.String(\"MyValueVersionFromToken\"), &stringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Public/Parameter\"),\n\t// parameter version from token\n\tversion: parameterVersion,\n}).stringValue\n\n// Retrieve a specific version of the secret (SecureString) parameter.\n// 'version' is always required.\nsecretValue := ssm.stringParameter.fromSecureStringParameterAttributes(this, jsii.String(\"MySecureValue\"), &secureStringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Secret/Parameter\"),\n\tversion: jsii.Number(5),\n})\nsecretValueVersionFromToken := ssm.stringParameter.fromSecureStringParameterAttributes(this, jsii.String(\"MySecureValueVersionFromToken\"), &secureStringParameterAttributes{\n\tparameterName: jsii.String(\"/My/Secret/Parameter\"),\n\t// parameter version from token\n\tversion: parameterVersion,\n})",
          "version": "1"
        },
        "$": {
          "source": "    // Retrieve the latest value of the non-secret parameter\n    // with name \"/My/String/Parameter\".\n    const stringValue = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValue', {\n      parameterName: '/My/Public/Parameter',\n      // 'version' can be specified but is optional.\n    }).stringValue;\n    const stringValueVersionFromToken = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValueVersionFromToken', {\n      parameterName: '/My/Public/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    }).stringValue;\n\n    // Retrieve a specific version of the secret (SecureString) parameter.\n    // 'version' is always required.\n    const secretValue = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValue', {\n      parameterName: '/My/Secret/Parameter',\n      version: 5,\n    });\n    const secretValueVersionFromToken = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValueVersionFromToken', {\n      parameterName: '/My/Secret/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.StringParameterAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.IStringParameter",
        "@aws-cdk/aws-ssm.IStringParameter#stringValue",
        "@aws-cdk/aws-ssm.SecureStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameter#fromSecureStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameter#fromStringParameterAttributes",
        "@aws-cdk/aws-ssm.StringParameterAttributes",
        "constructs.Construct"
      ],
      "fullSource": "/// !cdk-integ *\nimport * as cdk from '@aws-cdk/core';\nimport * as ssm from '../lib';\n\nclass CreatingStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    new ssm.StringParameter(this, 'String', {\n      parameterName: '/My/Public/Parameter',\n      stringValue: 'abcdef',\n    });\n  }\n}\n\nclass UsingStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    // Parameter that contains version number, will be used to pass\n    // version value from token.\n    const parameterVersion = new cdk.CfnParameter(this, 'MyParameterVersion', {\n      type: 'Number',\n      default: 1,\n    }).valueAsNumber;\n\n    /// !show\n    // Retrieve the latest value of the non-secret parameter\n    // with name \"/My/String/Parameter\".\n    const stringValue = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValue', {\n      parameterName: '/My/Public/Parameter',\n      // 'version' can be specified but is optional.\n    }).stringValue;\n    const stringValueVersionFromToken = ssm.StringParameter.fromStringParameterAttributes(this, 'MyValueVersionFromToken', {\n      parameterName: '/My/Public/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    }).stringValue;\n\n    // Retrieve a specific version of the secret (SecureString) parameter.\n    // 'version' is always required.\n    const secretValue = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValue', {\n      parameterName: '/My/Secret/Parameter',\n      version: 5,\n    });\n    const secretValueVersionFromToken = ssm.StringParameter.fromSecureStringParameterAttributes(this, 'MySecureValueVersionFromToken', {\n      parameterName: '/My/Secret/Parameter',\n      // parameter version from token\n      version: parameterVersion,\n    });\n\n    /// !hide\n\n    new cdk.CfnResource(this, 'Dummy', { type: 'AWS::SNS::Topic' });\n    new cdk.CfnOutput(this, 'TheValue', { value: stringValue });\n    new cdk.CfnOutput(this, 'TheValueVersionFromToken', { value: stringValueVersionFromToken });\n\n    // Cannot be provisioned so cannot be actually used\n    Array.isArray(secretValue);\n    Array.isArray(secretValueVersionFromToken);\n  }\n}\n\nconst app = new cdk.App();\n\nconst creating = new CreatingStack(app, 'sspms-creating');\nconst using = new UsingStack(app, 'sspms-using');\nusing.addDependency(creating);\n\napp.synth();\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 8,
        "75": 27,
        "104": 4,
        "193": 4,
        "194": 10,
        "196": 4,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 7
      },
      "fqnsFingerprint": "8adedf873bc2d262211dadeee067d235e0afeaaf8c7aced0d18de6ec41e27b75"
    },
    "06ad36f7dc078dee3def8e1110c2892f4f68b844141611e1eeee4b227c87361f": {
      "translations": {
        "python": {
          "source": "ssm.StringParameter(self, \"Parameter\",\n    allowed_pattern=\".*\",\n    description=\"The value Foo\",\n    parameter_name=\"FooParameter\",\n    string_value=\"Foo\",\n    tier=ssm.ParameterTier.ADVANCED\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new StringParameter(this, \"Parameter\", new StringParameterProps {\n    AllowedPattern = \".*\",\n    Description = \"The value Foo\",\n    ParameterName = \"FooParameter\",\n    StringValue = \"Foo\",\n    Tier = ParameterTier.ADVANCED\n});",
          "version": "1"
        },
        "java": {
          "source": "StringParameter.Builder.create(this, \"Parameter\")\n        .allowedPattern(\".*\")\n        .description(\"The value Foo\")\n        .parameterName(\"FooParameter\")\n        .stringValue(\"Foo\")\n        .tier(ParameterTier.ADVANCED)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "ssm.NewStringParameter(this, jsii.String(\"Parameter\"), &stringParameterProps{\n\tallowedPattern: jsii.String(\".*\"),\n\tdescription: jsii.String(\"The value Foo\"),\n\tparameterName: jsii.String(\"FooParameter\"),\n\tstringValue: jsii.String(\"Foo\"),\n\ttier: ssm.parameterTier_ADVANCED,\n})",
          "version": "1"
        },
        "$": {
          "source": "new ssm.StringParameter(this, 'Parameter', {\n  allowedPattern: '.*',\n  description: 'The value Foo',\n  parameterName: 'FooParameter',\n  stringValue: 'Foo',\n  tier: ssm.ParameterTier.ADVANCED,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-ssm.StringParameterProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ssm.ParameterTier",
        "@aws-cdk/aws-ssm.ParameterTier#ADVANCED",
        "@aws-cdk/aws-ssm.StringParameter",
        "@aws-cdk/aws-ssm.StringParameterProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as ssm from '@aws-cdk/aws-ssm';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew ssm.StringParameter(this, 'Parameter', {\n  allowedPattern: '.*',\n  description: 'The value Foo',\n  parameterName: 'FooParameter',\n  stringValue: 'Foo',\n  tier: ssm.ParameterTier.ADVANCED,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "2f5992d9650d760f72e0a3f9259124f08389c855437e0cc8ffb6e73547ad756c"
    }
  }
}

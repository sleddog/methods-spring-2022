{
  "version": 3,
  "sources": ["function-url.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport { Duration, IResource, Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { IAlias } from './alias';\nimport { IFunction } from './function-base';\nimport { IVersion } from './lambda-version';\nimport { CfnUrl } from './lambda.generated';\n\n/**\n * The auth types for a function url\n */\nexport enum FunctionUrlAuthType {\n  /**\n   * Restrict access to authenticated IAM users only\n   */\n  AWS_IAM = 'AWS_IAM',\n\n  /**\n   * Bypass IAM authentication to create a public endpoint\n   */\n  NONE = 'NONE',\n}\n\n/**\n * All http request methods\n */\nexport enum HttpMethod {\n  /**\n   * The GET method requests a representation of the specified resource.\n   */\n  GET = 'GET',\n  /**\n   * The PUT method replaces all current representations of the target resource with the request payload.\n   */\n  PUT = 'PUT',\n  /**\n   * The HEAD method asks for a response identical to that of a GET request, but without the response body.\n   */\n  HEAD = 'HEAD',\n  /**\n   * The POST method is used to submit an entity to the specified resource, often causing a change in state or side effects on the server.\n   */\n  POST = 'POST',\n  /**\n   * The DELETE method deletes the specified resource.\n   */\n  DELETE = 'DELETE',\n  /**\n   * The PATCH method applies partial modifications to a resource.\n   */\n  PATCH = 'PATCH',\n  /**\n   * The OPTIONS method describes the communication options for the target resource.\n   */\n  OPTIONS = 'OPTIONS',\n  /**\n   * The wildcard entry to allow all methods.\n   */\n  ALL = '*',\n}\n\n/**\n * Specifies a cross-origin access property for a function URL\n */\nexport interface FunctionUrlCorsOptions {\n  /**\n   * Whether to allow cookies or other credentials in requests to your function URL.\n   *\n   * @default false\n   */\n  readonly allowCredentials?: boolean;\n\n  /**\n   * Headers that are specified in the Access-Control-Request-Headers header.\n   *\n   * @default - No headers allowed.\n   */\n  readonly allowedHeaders?: string[];\n\n  /**\n   * An HTTP method that you allow the origin to execute.\n   *\n   * @default - [HttpMethod.ALL]\n   */\n  readonly allowedMethods?: HttpMethod[];\n\n  /**\n   * One or more origins you want customers to be able to access the bucket from.\n   *\n   * @default - No origins allowed.\n   */\n  readonly allowedOrigins?: string[];\n\n  /**\n   * One or more headers in the response that you want customers to be able to access from their applications.\n   *\n   * @default - No headers exposed.\n   */\n  readonly exposedHeaders?: string[];\n\n  /**\n   * The time in seconds that your browser is to cache the preflight response for the specified resource.\n   *\n   * @default - Browser default of 5 seconds.\n   */\n  readonly maxAge?: Duration;\n}\n\n/**\n * A Lambda function Url\n */\nexport interface IFunctionUrl extends IResource {\n  /**\n   * The url of the Lambda function.\n   *\n   * @attribute FunctionUrl\n   */\n  readonly url: string;\n\n  /**\n   * The ARN of the function this URL refers to\n   *\n   * @attribute FunctionArn\n   */\n  readonly functionArn: string;\n\n  /**\n   * Grant the given identity permissions to invoke this Lambda Function URL\n   */\n  grantInvokeUrl(identity: iam.IGrantable): iam.Grant;\n}\n\n/**\n * Options to add a url to a Lambda function\n */\nexport interface FunctionUrlOptions {\n  /**\n   * The type of authentication that your function URL uses.\n   *\n   * @default FunctionUrlAuthType.AWS_IAM\n   */\n  readonly authType?: FunctionUrlAuthType;\n\n  /**\n   * The cross-origin resource sharing (CORS) settings for your function URL.\n   *\n   * @default - No CORS configuration.\n   */\n  readonly cors?: FunctionUrlCorsOptions;\n}\n\n/**\n * Properties for a FunctionUrl\n */\nexport interface FunctionUrlProps extends FunctionUrlOptions {\n  /**\n   * The function to which this url refers.\n   * It can also be an `Alias` but not a `Version`.\n   */\n  readonly function: IFunction;\n}\n\n/**\n * Defines a Lambda function url\n *\n * @resource AWS::Lambda::Url\n */\nexport class FunctionUrl extends Resource implements IFunctionUrl {\n  /**\n   * The url of the Lambda function.\n   */\n  public readonly url: string;\n\n  /**\n   * The ARN of the function this URL refers to\n   */\n  public readonly functionArn: string;\n\n  private readonly function: IFunction;\n\n  constructor(scope: Construct, id: string, props: FunctionUrlProps) {\n    super(scope, id);\n\n    if (this.instanceOfVersion(props.function)) {\n      throw new Error('FunctionUrl cannot be used with a Version');\n    }\n\n    const resource: CfnUrl = new CfnUrl(this, 'Resource', {\n      authType: props.authType ?? FunctionUrlAuthType.AWS_IAM,\n      targetFunctionArn: props.function.functionArn,\n      cors: props.cors ? this.renderCors(props.cors) : undefined,\n    });\n\n    this.url = resource.attrFunctionUrl;\n    this.functionArn = resource.attrFunctionArn;\n    this.function = props.function;\n\n    if (props.authType === FunctionUrlAuthType.NONE) {\n      props.function.addPermission('invoke-function-url', {\n        principal: new iam.AnyPrincipal(),\n        action: 'lambda:InvokeFunctionUrl',\n        functionUrlAuthType: props.authType,\n      });\n    }\n  }\n\n  public grantInvokeUrl(grantee: iam.IGrantable): iam.Grant {\n    return this.function.grantInvokeUrl(grantee);\n  }\n\n  private instanceOfVersion(fn: IFunction): fn is IVersion {\n    return 'version' in fn && !this.instanceOfAlias(fn);\n  }\n\n  private instanceOfAlias(fn: IFunction): fn is IAlias {\n    return 'aliasName' in fn;\n  }\n\n  private renderCors(cors: FunctionUrlCorsOptions): CfnUrl.CorsProperty {\n    return {\n      allowCredentials: cors.allowCredentials,\n      allowHeaders: cors.allowedHeaders,\n      allowMethods: cors.allowedMethods ?? [HttpMethod.ALL],\n      allowOrigins: cors.allowedOrigins,\n      exposeHeaders: cors.exposedHeaders,\n      maxAge: cors.maxAge?.toSeconds(),\n    };\n  }\n}\n"],
  "mappings": "iQAAA,IAAA,QAAA,eAAA,EACA,OAAA,QAAA,YAAA,EAKA,mBAAA,QAAA,oBAAA,EAKA,GAAY,qBAAZ,AAAA,UAAY,qBAAmB,CAI7B,qBAAA,QAAA,UAKA,qBAAA,KAAA,MACF,GAVY,oBAAA,QAAA,qBAAA,SAAA,oBAAmB,CAAA,EAAA,EAe/B,GAAY,YAAZ,AAAA,UAAY,YAAU,CAIpB,YAAA,IAAA,MAIA,YAAA,IAAA,MAIA,YAAA,KAAA,OAIA,YAAA,KAAA,OAIA,YAAA,OAAA,SAIA,YAAA,MAAA,QAIA,YAAA,QAAA,UAIA,YAAA,IAAA,GACF,GAjCY,WAAA,QAAA,YAAA,SAAA,WAAU,CAAA,EAAA,EA6ItB,MAAa,mBAAoB,QAAA,QAAQ,CAavC,YAAY,MAAkB,GAAY,MAAuB,QAC/D,MAAM,MAAO,EAAE,qNAEf,GAAI,KAAK,kBAAkB,MAAM,QAAQ,EACvC,KAAM,IAAI,OAAM,2CAA2C,EAG7D,KAAM,UAAmB,GAAI,oBAAA,OAAO,KAAM,WAAY,CACpD,SAAQ,IAAE,MAAM,YAAQ,MAAA,KAAA,OAAA,GAAI,oBAAoB,QAChD,kBAAmB,MAAM,SAAS,YAClC,KAAM,MAAM,KAAO,KAAK,WAAW,MAAM,IAAI,EAAI,OAClD,EAED,KAAK,IAAM,SAAS,gBACpB,KAAK,YAAc,SAAS,gBAC5B,KAAK,SAAW,MAAM,SAElB,MAAM,WAAa,oBAAoB,MACzC,MAAM,SAAS,cAAc,sBAAuB,CAClD,UAAW,GAAI,KAAI,aACnB,OAAQ,2BACR,oBAAqB,MAAM,SAC5B,EAIE,eAAe,QAAuB,gNAC3C,MAAO,MAAK,SAAS,eAAe,OAAO,EAGrC,kBAAkB,GAAa,CACrC,MAAO,WAAa,KAAM,CAAC,KAAK,gBAAgB,EAAE,EAG5C,gBAAgB,GAAa,CACnC,MAAO,aAAe,IAGhB,WAAW,KAA4B,WAC7C,MAAO,CACL,iBAAkB,KAAK,iBACvB,aAAc,KAAK,eACnB,aAAY,IAAE,KAAK,kBAAc,MAAA,KAAA,OAAA,GAAI,CAAC,WAAW,GAAG,EACpD,aAAc,KAAK,eACnB,cAAe,KAAK,eACpB,OAAM,IAAE,KAAK,UAAM,MAAA,KAAA,OAAA,OAAA,GAAE,UAAS,IA1DpC,QAAA,YAAA",
  "names": []
}
